[
    {
        "question": "Why is minimizing 2D SE important for SEGA?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "Under the federated framework described in Section 3.1, personalized global aggregation aims to provide clients with maximum external information by producing global models that can benefit individual clients more. The server needs an aggregation strategy that considers client heterogeneity and individual characteristics to maximize external knowledge for all clients. To achieve this objective, we construct a client graph Gclient based on clients’ similarity. By minimizing the two-dimensional Structural Entropy (2DSE) of Gclient, a graph capturing the internal similarities among clients is obtained, finalizing the Global Aggregation strategy for each client (SEGA).Gclient is an undirected, fully connected, weighted graph consisting of K nodes corresponding to K clients, with their similarities as edge weights. The similarity between client models can be estimated by providing them with the same input and measuring the similarity between their respective outputs. On this basis, the server first generates a random graph Grandom as input to all client models. With graph pooling, the server obtains different client models’ representations of the same graph."
        ],
        "final_answer": "Minimizing 2D structural entropy is important for global aggregation because it enables the creation of a client graph that captures the internal similarities among clients, which is used to finalize the Global Aggregation strategy, maximizing the external knowledge available to each client while considering client heterogeneity and individualcharacteristics.",
        "relevant_elements": [
            "Minimizing 2D SE",
            "SEGA"
        ],
        "id": 4001,
        "masked_question": "Why is [mask1] important for [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Minimizing 2D SE",
            "SEGA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2409.00614v1_figure_1.png",
        "paperid": "2409.00614v1",
        "paper_path": "./papers/2409.00614v1.json",
        "figure_id": "2409.00614v1_figure_1.png",
        "caption": "Figure 1. The overall framework of DAMe.",
        "qtype": "Design_Rationale",
        "response": "[mask1] (Minimizing 2D Structural Entropy) is important for [mask2] (SEGA: Structural Entropy-based Global Aggregation) because it directly leads to the formation of a partitioned client graph. This partitioned graph then serves as the fundamental basis for defining the global aggregation strategy within SEGA. By minimizing 2DSE, the system identifies and groups similar clients into partitions, allowing the server to aggregate information specifically within these groups. This targeted aggregation, based on client similarity expressed via the partitioned graph, is crucial for accommodating client heterogeneity and maximizing the transfer of external knowledge to individual clients, which is the core objective of SEGA."
    },
    {
        "question": "What is the motivation behind combining the content of common and private stream in this framework?",
        "relevant_section_ids": [
            "1.2"
        ],
        "relevant_context": [
            "Under the federated framework described in Section 3.1, personalized global aggregation aims to provide clients with maximum external information by producing global models that can benefit individual clients more. The server needs an aggregation strategy that considers client heterogeneity and individual characteristics to maximize external knowledge for all clients. To achieve this objective, we construct a client graph Gclient based on clients’ similarity. By minimizing the two-dimensional Structural Entropy (2DSE) of Gclient, a graph capturing the internal similarities among clients is obtained, finalizing the Global Aggregation strategy for each client (SEGA).Gclient is an undirected, fully connected, weighted graph consisting of K nodes corresponding to K clients, with their similarities as edge weights. The similarity between client models can be estimated by providing them with the same input and measuring the similarity between their respective outputs. On this basis, the server first generates a random graph Grandom as input to all client models. With graph pooling, the server obtains different client models’ representations of the same graph"
        ],
        "final_answer": "Minimizing 2D structural entropy is important for global aggregation because it enables the creation of a client graph that captures the internal similarities among clients, which is used to finalize the Global Aggregation strategy, maximizing the external knowledge available to each client while considering client heterogeneity and individual characteristics.",
        "relevant_elements": [
            "common and private stream"
        ],
        "id": 4002,
        "masked_question": "What is the motivation behind combining the content of [mask1] in this framework?",
        "masked_number": 1,
        "masked_elements": [
            "common and private stream"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2408.02872v1_figure_1.png",
        "paperid": "2408.02872v1",
        "paper_path": "./papers/2408.02872v1.json",
        "figure_id": "2408.02872v1_figure_1.png",
        "caption": "Figure 1. System model of the proposed RSMA-based NOUM transmission.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does MACL achieve real subject similarity using multi-view data processing?",
        "relevant_section_ids": [
            "3.3.2"
        ],
        "relevant_context": [
            "The key idea of Multi-scale Appearance Similarity Contrastive Learning (MACL) is to ensure that the distance relationships between multiscale features are consistent with those of real subjects. This means the features of the same subject with different situations should be as close as possible (intra-consistency), while the distances between different samples’ features should match those between real subjects (inter-distinctiveness). As shown in Fig. 2(b)(right), we achieve intra-consistency by pulling positive samples of the reference subject closer, and inter-distinctiveness by introducing scaling factors to align the feature distances with negative samples to real subject distances. In this section, we will introduce the S+Space and MACL in the S+Space. As shown in Fig. 2(b) (right), We select frames different from the reference images as MACL positive samples. By aligning images of the same subject, CustomContrast effectively decouples irrelevant features of the subject. The processing details of positive samples are in Appendix B."
        ],
        "final_answer": "MACL achieves real subject similarity using multiview data by ensuring that the distance relationships between multiscale features are consistent with those of real subjects. This is done by maintaining intra-consistency, where features of the same subject with different situations are as close as possible, and inter-distinctiveness, where the distances between different samples' features match those between real subjects. MACL preserves the multi-scale similarity structure, ensuring that the similarities of learned features are positively correlated with those of real subjects.",
        "relevant_elements": [
            "MACL",
            "multi-view data processing"
        ],
        "id": 4003,
        "masked_question": "How does [mask1] achieve real subject similarity using [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "MACL",
            "multi-view data processing"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2409.05606v2_figure_2.png",
        "paperid": "2409.05606v2",
        "paper_path": "./papers/2409.05606v2.json",
        "figure_id": "2409.05606v2_figure_2.png",
        "caption": "Overview of the proposed CustomContrast. (a) Training pipeline. The consistency between textual and visual features is accurately learned by the MFI-Encoder, which includes a Textual-Visual (TV) Fusion module to enhance feature consistency from visual and textual Qformers. (b) The MCL paradigm includes CSCL, aligning high-level semantics by contrasting visual and textual embeddings via CLS tokens, and MACL, which is applied to text embeddings from different cross-attention layers. MACL decouples redundant subject features by aligning positive samples (segmented images of the same subject from various views, positions, and sizes), while preserving relative distances by contrasting with other subjects.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "What role does energy scores play in seen and unseen categorie estimation for online models?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "In Figure 3, we found that the two-stage split of the CGCD struggled to identify both known and unknown categories in our proposed online learning scenario. Online learning with batch-wise data led to severe forgetting in the split network, resulting in poor detection of unknown samples. In contrast, energy-based discovery showed better performance in novel category discovery without extra parameters compared to CGCD. Moreover, as it does not require an additional learning phase, energy-based discovery enables end-to-end training. Inspired by this observation, we propose an energy-guided discovery approach for novel category discovery. To the best of our knowledge, this is the first work to utilize the energy score for novel category discovery. The process in the second stage is the same as the first stage, where we split the unknown data into seen and unseen categories based on their energy scores. For the initial batch of incremental sessions, the online model is identical to the offline model. Additionally, since the initial batch data is the first data of the incremental session, any data classified as unknown is assumed to be unseen data. The proposed energy-guided discovery splits unlabeled data into known, seen, and unseen categories effectively. Unlike prior methods which require sufficient data, it can identify novel categories with batch-wise data."
        ],
        "final_answer": "Energy scores are used to classify unlabeled data into known and unknown categories in the first stage, and then further split unknown data into seen and unseen categories in the second stage. This is done by calculating the energy scores using a Gaussian Mixture Model to identify which cluster a sample belongs to, ultimately facilitating the estimation of seen and unseen data in the online model.",
        "relevant_elements": [
            "energy scores",
            "seen and unseen categorie estimation"
        ],
        "id": 4004,
        "masked_question": "What role does [mask1] play in [mask2] estimation for online models?",
        "masked_number": 2,
        "masked_elements": [
            "energy scores",
            "seen and unseen categorie estimation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2408.13492v1_figure_2.png",
        "paperid": "2408.13492v1",
        "paper_path": "./papers/2408.13492v1.json",
        "figure_id": "2408.13492v1_figure_2.png",
        "caption": "Overall process of the proposed DEAN framework. The energy-guided discovery splits unlabeled data into known, seen, and unseen data for better novel category discovery, while variance-based feature augmentation enhances the clustering of unseen data. Lce facilitates better discriminative learning in the online continual learning.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "What is the relationship between Photonic Processing Unit and eDRAMs?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "The computation process of our R&B architecture contains three stages, as illustrated in Fig. 2(a). Initially, inputs are retrieved from eDRAMs, and corresponding weights are allocated to MRRs. Subsequently, following the PRM configuration, the weights are fixed and reused, allowing the inputs to pass through the MRRs to be optically weighted. The intermediate MVM results generated by the PPUs are then detected by BPDs, where they are converted into summed currents and digitized by ADCs. In the final stage, OBUs transform these outputs to generate the layer-wise results, which are then stored back in eDRAMs in preparation for the next computational layer.A critical aspect of this architecture is the role of the OBU during inference, mirroring its function during training and inference by executing essential shuffle and transpose operations. Subsequently, following the PRM configuration, the weights are fixed and reused. Along with PRM, these two technologies constitute the primary innovation of our R&B architecture. By leveraging one MRR array to represent multiple weight matrices, the architecture dramatically reduces the frequency of MRR writing operations, along with power consumption and latency, all while sustaining high performance."
        ],
        "final_answer": "The Photonic Processing Unit (PPU) plays a role in the R&B architecture's computation process where inputs are initially retrieved from eDRAMs to be processed by PPUs. After processing, the outputs are stored back into eDRAMs for the next layer computation.",
        "relevant_elements": [
            "Photonic Processing Unit",
            "eDRAMs"
        ],
        "id": 4005,
        "masked_question": "What is the relationship between [mask1] and [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Photonic Processing Unit",
            "eDRAMs"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2409.01836v3_figure_2.png",
        "paperid": "2409.01836v3",
        "paper_path": "./papers/2409.01836v3.json",
        "figure_id": "2409.01836v3_figure_2.png",
        "caption": "(a) Overview of the R & B architecture. Each PPU contains a photonic MVM unit and a sampling and hold (S&H) unit. (b) Photonic Reuse Method (PRM). Block-wise reuse allows weight sharing among blocks (a block typically contains multiple layers). Layer-wise reuse enables weight sharing between individual layers. (c) Opto-electronic Blend Unit (OBU). OBUs handle shuffle operations via the peripheral circuit and perform transpose operations directly in the optical domain. (d) Computing pipeline of our R&B architecture.",
        "qtype": "Literature_Background",
        "response": "The relationship between [mask1] (Photonic Reuse Method / Photonic Processing Unit) and [mask2] (eDRAM Write) is as follows:\n\n1.  **[mask1] (Photonic Reuse Method / Photonic Processing Unit):** This unit, specifically the Photonic Processing Unit (PPU) which operates under the Photonic Reuse Method (PRM) configuration, is responsible for performing the core optical matrix-vector multiplications (MVMs). The PRM dictates how weights are shared and reused across different layers or blocks to enhance efficiency and reduce reprogramming frequency. Input data is fed into this unit, processed optically, and intermediate results are generated.\n\n2.  **[mask2] (eDRAM Write):** This indicates the storage of the processed results. According to the \"Computing Pipeline\" section, \"The intermediate MVM results generated by the PPUs are then detected by BPDs, where they are converted into summed currents and digitized by ADCs. In the final stage, OBUs transform these outputs to generate the layer-wise results, which are then stored back in eDRAMs in preparation for the next computational layer.\"\n\nIn summary, the Photonic Reuse Method (within the Photonic Processing Unit) performs the optical computations that"
    },
    {
        "question": "How does the Verification Strategy ensure high-quality data output?",
        "relevant_section_ids": [
            "2.1",
            "3.1.1"
        ],
        "relevant_context": [
            "The first module in our framework is Quality Verification Agent, which ensures that the generated questions and answers meet a certain standard of quality. This component involves two main processes: \newline Verification Strategy:This includes additional heuristic strategies to judge which samples should be contained as high-quality data. This includes additional heuristic strategies to judge which samples should be contained as high-quality data. Specifically, we utilize two wide-used verification strategies:\newline • Scoring: We prompt LLMs to generate continuous scores, manually set a more reliable threshold score based on the validation set, and set those exceeding the threshold score as high-quality data.\newline • Classification: We prompt LLMs to generate binary classification and select those classified as high-quality data.Verification Condition:\newline Verification Condition:This involves setting specific conditions that both questions and answers must meet to be considered high-quality verification.The process includes:\newline • Criteria Perspectives: Criteria include relevance to the document, clarity, factual accuracy, logical coherence, and complexity of the question and answer.\newline • Auxiliary Context Information: We integrate additional contextual instructions to enhance the model’s accuracy and robustness, like guidelines. \newline • Auxiliary Generation Information: We enable the model to provide more reasoning rationale during output generation and observe whether this improves the robustness and accuracy of the verification process.",
            "Scoring is a Better Verification Strategy Compared with Classification. As shown in Figure 3 (a), the scoring strategy shows significantly higher kappa and precision scores compared to binary quality classification. This statistical improvement suggests that scoring better captures the nuances of human judgments. This observation aligns with findings in short-context scenarios (Fu et al., 2024a), reinforcing the generalizability of scoring strategies across different lengths of textual data."
        ],
        "final_answer": "The Verification Strategy ensures high-quality data output by employing scoring and classification strategies. Scoring involves prompting LLMs to generate continuous scores and setting a threshold to determine high-quality data. This strategy captures the nuances of human judgments better than binary classification, which simply classifies samples as high-quality or not. This process ensures consistency, precision, and alignment with human judgment, thus improving data quality.",
        "relevant_elements": [
            "Verification Strategy",
            "high-quality data output"
        ],
        "id": 4007,
        "masked_question": "How does the [mask1] ensure [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Verification Strategy",
            "high-quality data output"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2409.01893v1_figure_2.png",
        "paperid": "2409.01893v1",
        "paper_path": "./papers/2409.01893v1.json",
        "figure_id": "2409.01893v1_figure_2.png",
        "caption": "The overall process of our Multi-agent Interactive Multi-hop Generation (MIMG) data synthesis framework.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does the reinforcement learning algorithm contribute to the updates of policy group?",
        "relevant_section_ids": [
            "4",
            "4.1"
        ],
        "relevant_context": [
            "In Section 3, we introduce the concept of environment agent to realize the adversarial policy search by combining logic rules with reinforcement learning. However, due to the black-box nature of data-driven methods, while adversarial actions can be generated, the difficulty of generating adversarial actions is difficult to quantify accurately, which limits the rationality of adversarial scenario generation. In this section, a data generation method based on scenarios with varying difficulty is presented. The method uses the performance of different stages in the policy search convergence process as a reference to quantify the adversarial intensity, thereby achieving a quantitative representation of scenario difficulty. The model parameters of the environment agent trained on different stages are updated and saved, and then output to the constructed policy group. The policy group is used to generate data that forms the basis for training the scenario difficulty quantitative representation model",
            "A reinforcement learning training process with stable convergence can be divided into two phases, i.e., the performance improvement phase and the convergence stabilization phase. In the performance improvement phase, the average return is still continuously increasing, which indicates that the policy search is still ongoing and the model parameters are still being updated to peruse better performance. In the convergence stabilization phase, however, the average return remains basically unchanged, indicating that the policy search is basically over, and the obtained policy is already the optimal policy that the current algorithm can achieve."
        ],
        "final_answer": "The reinforcement learning algorithm contributes to policy group updates by providing a systematic approach to search for optimal policies through the performance improvement phase, where model parameters are updated to pursue better performance, and the convergence stabilization phase, where the optimal policy is obtained. The performance at different stages is used to update and save model parameters to the constructed policy group.",
        "relevant_elements": [
            "reinforcement learning algorithm",
            "policy group"
        ],
        "id": 4008,
        "masked_question": "How does the [mask1] contribute to the updates of [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "reinforcement learning algorithm",
            "policy group"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2408.14000v1_figure_1.png",
        "paperid": "2408.14000v1",
        "paper_path": "./papers/2408.14000v1.json",
        "figure_id": "2408.14000v1_figure_1.png",
        "caption": "Overall architecture of data driven quantitative representation method of scenario difficulty for autonomous driving based on environment agent policy search.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What are potential limitations of using Lipschitz optimization in neural subspace training?",
        "relevant_section_ids": [
            "5.4"
        ],
        "relevant_context": [
            "In this work, Lipschitz optimization is only applied to the elastic potential term of eq. 2. Since the nonlinear mapping is also involved in the inertia term, this may lower the convergence speed of the simulation involving dynamics. Considering that the inertia term is in quadratic form, the Hessian Lipschitz of the inertia term can be optimized by minimizing or bounding the Lipschitz constant of the network’s input-output Jacobian . This is a promising direction for future work to further accelerate the simulation with dynamics. Another limitation of our method is the extended training time introduced by incorporating Lipschitz optimization into the pipeline. As shown in Table 1, even with cubature acceleration, the training time is still increased by approximately five times compared to the conventional method. This issue can be addressed by employing fast approximate methods to estimate Lipschitz energy."
        ],
        "final_answer": "Potential limitations of using Lipschitz optimization in neural subspace training include the intractability of directly optimizing the Lipschitz constant due to the need to traverse all possible point pairs, sparse gradients that could damage Lipschitz characteristics in certain areas, increased memory usage, and potential memory shortages when training high-resolution meshes.",
        "relevant_elements": [
            "Lipschitz optimization"
        ],
        "id": 4009,
        "masked_question": "What are potential limitations of using [mask1] in neural subspace training?",
        "masked_number": 1,
        "masked_elements": [
            "Lipschitz optimization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2409.03807v1_figure_2.png",
        "paperid": "2409.03807v1",
        "paper_path": "./papers/2409.03807v1.json",
        "figure_id": "2409.03807v1_figure_2.png",
        "caption": "Network training settings for effective neural subspace construction. (a) The supervised setting. (b) The unsupervised setting. Conventional methods only consider the loss shown in blue but do not optimize the Lipschitz loss (shown in orange) to control the landscape of simulation objective in the subspace.",
        "qtype": "Others",
        "response": "The red box [mask1] highlights \"Lipschitz Loss\".\n\nBased on the \"5.4. Limitation\" section in the provided text, the potential limitations of using Lipschitz Loss (or Lipschitz optimization) in neural subspace training are:\n\n1.  **Limited Scope of Optimization:** Lipschitz optimization is currently only applied to the elastic potential term. Since the nonlinear mapping (f_theta) is also involved in the inertia term (especially in simulations involving dynamics), this non-optimized part of the Hessian's Lipschitz constant might lower the overall convergence speed of the simulation.\n2.  **Increased Training Time:** Incorporating Lipschitz optimization into the training pipeline significantly extends the training time. Even with acceleration techniques like cubature, the training duration is increased by approximately five times compared to conventional methods."
    },
    {
        "question": "What are the potential challenges of combining local SOP and global SOP in extracting meaningful image features?",
        "relevant_section_ids": [
            "2.1"
        ],
        "relevant_context": [
            "The state s is defined based on the ultrasound image. We have adopted an image quality classification network from our previous work , which used ResNet50 as a base network with multi-scale and higher-order processing of the image for conducting the holistic assessment of the image quality. The block diagram of this network is shown in Fig. 2. This classifier first extracts features at multiple scales to encode the inter-patient anatomical variations. Then, it uses second-order pooling (SoP) in the intermediate layers (local) and at the end of the network (global) to exploit the second-order statistical dependency of features. The local-to-global SoP will capture the higher-order relationships between different spatial locations and provide the seed for correlating local patches. This network encodes the image into a feature vector of size 2048, which represents the state of the policy."
        ],
        "final_answer": "Combining local and global second-order pooling (SoP) poses challenges such as increased computational complexity, potential feature redundancy, and the need for careful hyperparameter tuning. It demands substantial data to effectively handle multi-scale features while ensuring the model’s robustness. Additionally, balancing local and global information without conflicts can complicate optimization, particularly in real-time medical applications.",
        "relevant_elements": [
            "local SOP",
            "global SOP"
        ],
        "id": 4010,
        "masked_question": "What are the potential challenges of combining [mask1] and [mask2] in extracting meaningful image features?",
        "masked_number": 2,
        "masked_elements": [
            "local SOP",
            "global SOP"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2409.02337v1_figure_2.png",
        "paperid": "2409.02337v1",
        "paper_path": "./papers/2409.02337v1.json",
        "figure_id": "2409.02337v1_figure_2.png",
        "caption": "State space representation using a deep convolution neural network",
        "qtype": "Others",
        "response": "The provided text describes the *benefits* of combining Local SoP and Global SoP, stating that \"The local-to-global SoP will capture the higher-order relationships between different spatial locations and provide the seed for correlating local patches.\"\n\nHowever, the text *does not mention any potential challenges* associated with combining Local SoP and Global SoP in extracting meaningful image features. It only explains their role and the positive aspects of their integrated use within the network architecture."
    },
    {
        "question": "How does tree attention mask interact with merged sequence?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "The traditional causal attention masks are designed for linear sequences, where each token attends to all previous tokens, restricting speculative decoding to verifying one sequence at a time. However, as the sequence lengthens during draft token generation, the number of potential continuations increases. For example, in the draft tree in Figure 2, the token following 'guest' could be 'speaker' or 'speak', while both 'at' and 'for' could follow 'speaker'. This creates a need to verify multiple draft sequences simultaneously. Tree attention modifies the attention mask to address this by compressing multiple sequences into a single merged sequence, such as ['guest', 'speaker', 'speak', 'at', 'for', 'ings'], while preserving a tree structure in the tree attention mask. Each child node attends only to its parent nodes, preventing sibling tokens from interfering with each other. After the LLM processes the merged sequence, all possible sequences such as 'guest speaker', 'guest speaker at', 'guest speaker for', and 'guest speak', along with their corresponding output tokens, are extracted based on the tree structure and verified in parallel."
        ],
        "final_answer": "The tree attention mask compresses multiple sequences into a single merged sequence while preserving a tree structure. Within this structure, each child node attends only to its parent nodes, preventing sibling tokens from interfering with each other. This allows the LLM to process and verify all possible sequences in parallel.",
        "relevant_elements": [
            "tree attention mask",
            "merged sequence"
        ],
        "id": 4011,
        "masked_question": "How does [mask1] interact with [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "tree attention mask",
            "merged sequence"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2408.08696v1_figure_2.png",
        "paperid": "2408.08696v1",
        "paper_path": "./papers/2408.08696v1.json",
        "figure_id": "2408.08696v1_figure_2.png",
        "caption": "An overview of Token Recycling. The adjacency matrix, initialized by inheriting from the previous query, stores candidate tokens. Token Recycling first retrieves a draft tree from the matrix based on the last token of the current content. The tree is then compressed into a merged sequence with a corresponding tree attention mask and sent to the LLM for a forward pass. After processing, all possible draft sequences are extracted and verified. The longest correct sequence is selected and added to the content. Finally, the top-k candidate tokens are used to update the matrix for the next iteration.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "What are the benefits of using channel-wise concatenation in the processing of vision feature?",
        "relevant_section_ids": [
            "2.4"
        ],
        "relevant_context": [
            "We notice that existing popular fusion strategies, despite their variations in designs, can be broadly represented by the following several categories: (1) Sequence Append: directly appending the visual tokens from different backbones as a longer sequence; (2) Channel Concatenation: concatenating the visual tokens along the channel dimension without increasing the sequence length; (3) LLaVA-HR: injecting high-resolution features into low-resolution vision encoders using mixture-of-resolution adapter; (4) Mini-Gemini: using the CLIP tokens as the low resolution queries to cross-attend another high-resolution vision encoder in the co-located local windows.  Although sequence append shows comparable performance to channel concatenation, it faces the challenge to handle more vision encoders due to the increasing sequence length. Hence, we choose direct channel concatenation as our fusion strategy considering its performance, expandability, and efficiency."
        ],
        "final_answer": "The benefits of using channel-wise concatenation in vision feature processing include achieving the best average performance, maintaining better throughput compared to sequence append, and offering performance, expandability, and efficiency.",
        "relevant_elements": [
            "vision feature"
        ],
        "id": 4012,
        "masked_question": "What are the benefits of using channel-wise concatenation in the processing of [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "vision feature"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2408.15998v1_figure_2.png",
        "paperid": "2408.15998v1",
        "paper_path": "./papers/2408.15998v1.json",
        "figure_id": "2408.15998v1_figure_2.png",
        "caption": "Overview of the Eagle exploration pipeline.",
        "qtype": "Design_Rationale",
        "response": "To answer the question, let's break down the process:\n\n1.  **Identify [mask1]:** In the diagram, [mask1] refers to the \"Vision Feature\" block, which is the result of fusing features from different vision experts.\n2.  **Locate \"channel-wise concatenation\" in the text and diagram:** The text section \"Fusion strategy\" explicitly mentions \"Channel Concatenation: concatenating the visual tokens along the channel dimension without increasing the sequence length\". The diagram illustrates \"Channel-wise Concatenation\" as one of the fusion methods, showing low-resolution and high-resolution features being flattened, resized (for high-resolution), and then concatenated. This concatenated result would feed into the \"Vision Feature\" block.\n3.  **Find the benefits of \"channel-wise concatenation\" in the text:** The text states:\n    *   \"Channel Concatenation achieves the best average performance while maintaining better throughput compared to sequence append.\"\n    *   \"Although sequence append shows comparable performance to channel concatenation, it faces the challenge to handle more vision encoders due to the increasing sequence length.\"\n    *   \"Hence, we choose direct channel concatenation as our fusion strategy considering its performance, expandability, and efficiency.\"\n\nBased on this, the benefits of using channel-wise concatenation in the processing of the \"Vision Feature\" (which is [mask1]) are:\n\n*   It achieves the best average performance among the compared fusion strategies.\n*   It maintains better throughput compared to sequence append.\n*   It combines visual tokens along the channel dimension without increasing the sequence length, thus not facing the challenge of handling more vision encoders due to increasing sequence length (unlike sequence append).\n*   It is chosen for its overall performance, expandability, and efficiency."
    },
    {
        "question": "How does the tailored zero-shot score contribute to the efficiency of neural architecture search?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "To enable a more accurate assessment of our hybrid networks, we integrate two selected zero-shot metrics. Given the significant difference in score magnitudes between these metrics, as shown in Figures 3(b) and 3(c), we focus on relative rankings rather than score magnitudes. Specifically, for a group of networks, the score of our tailored zero-shot metric for a specific network is determined by the relative ranking of its Zen-Score within the group. For instance, if a network exhibits the highest Zen-Score, its term yields a value of 1. The effectiveness of our tailored metric is validated through Table II and Figure 3, which demonstrate the highest Kendall-Tau Correlation. Additionally, this metric contributes to enhanced search efficiency due to the swift computational speed of both NN-Degree and Zen-Score. For example, assessing accuracy for an individual hybrid model from our supernet takes an average of several seconds, whereas computing our tailored zero-shot metric requires less time, making it over X times faster when tested on CIFAR100 and profiled on an NVIDIA GeForce RTX 2080Ti."
        ],
        "final_answer": "The tailored zero-shot score contributes to neural architecture search efficiency by enabling faster assessment due to its swift computational speed. The computation of the tailored zero-shot metric is significantly faster than assessing the accuracy of individual hybrid models derived from the supernet, leading to enhanced search efficiency.",
        "relevant_elements": [
            "tailored zero-shot score",
            "neural architecture search"
        ],
        "id": 4013,
        "masked_question": "How does the [mask1] contribute to the efficiency of [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "tailored zero-shot score",
            "neural architecture search"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2409.04829v1_figure_2.png",
        "paperid": "2409.04829v1",
        "paper_path": "./papers/2409.04829v1.json",
        "figure_id": "2409.04829v1_figure_2.png",
        "caption": "The overview of our NASH framework, where we integrate both the neural architecture search (NAS) and coarse-to-fine accelerator search to directly obtain optimal pairing of models and accelerators. Specifically, the NAS consists of a tailored zero-shot metric to pre-identify promising multiplication-reduce hybrid models before supernet training. Besides, the accelerator search involves a novel coarse-to-fine search strategy to expedite the accelerator search process.",
        "qtype": "Experimental_Results",
        "response": "The \"Tailored Zero-Shot Score\" (mask1) contributes to the efficiency of the \"Neural Architecture Search\" (mask2) in several key ways:\n\n1.  **Pre-identification of Promising Sub-networks:** It serves as a metric to \"pre-identify promising sub-networks\" or \"high-quality sub-networks\" within the hybrid search space. This is done *before* the time-consuming supernet training, allowing the search to focus on more viable architectures.\n2.  **Expediting the Search Process:** By evaluating and ranking candidate networks using this tailored zero-shot score within an evolutionary algorithm, the search process for optimal architectures is significantly \"expedited.\"\n3.  **Alleviating Gradient Conflicts:** Identifying promising sub-networks upfront helps to \"alleviate gradient conflicts\" during the subsequent supernet training, which ultimately helps to \"boost accuracy\" of the selected networks.\n4.  **Enhanced Search Efficiency (Computational Speed):** The tailored zero-shot metric itself is computationally swift (combining NN-Degree"
    },
    {
        "question": "How does Recursive Token Merging interact with Self Attention module to enhance video consistency?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "TALO strategy perturbs each benign frame of video separately. This per-frame optimization makes the frames likely optimized along different adversarial directions resulting in motion discontinuity and temporal inconsistency. Furthermore, separately perturbing each benign frame reduces the monotonous gradients because the interactions among the frames are not exploited. To this end, we introduce a recursive token merging (ReToMe) strategy that recursively matches and merges similar tokens across frames together enabling the self-attention module to extract consistent features. In the following, we first provide the basic operation of token merging and token unmerging and then our recursive token merging algorithm.Token Merging (ToMe) is first applied to speed up diffusion models through several diffusion-specific improvements . Generally, tokens T are partitioned into a source (s⁢r⁢c) and destination (d⁢s⁢t) set. Then, tokens in s⁢r⁢c are matched to their most similar token in d⁢s⁢t, and r most similar edges are selected subsequently. Next, we merge the connected r most similar tokens in s⁢r⁢c to d⁢s⁢t by replacing them as the linked d⁢s⁢t tokens. To keep the token number unchanged, we divide merged tokens after self-attention by assigning their values to merged tokens in s⁢r⁢c.A self-attention module takes a sequence of input and output tokens across all frames. To partition tokens across frames into src and dst, we define stride as B. We randomly choose one out of the first B frames (e.g., the g-th frame), and select the subsequent frames every B interval into the dst set.Nevertheless, during the merging process expressed above, tokens in dst are not merged and compressed. To maximally fuse the inter-frame information, we recursively apply the above merging process to tokens in dst until they contain only one frame. Our ReToMe has three advantages. Firstly, ReToMe ensures that the most similar tokens share identical outputs, maximizing the compression of tokens. This approach fosters internal uniformity of features across frames and preserves temporal consistency, thereby effectively achieving temporal imperceptibility. Secondly, the merged tokens decrease interaction inside adversarial perturbations, effectively preventing overfitting on the surrogate model. Furthermore, the tokens linked to merged tokens facilitate inter-frame interaction in gradient calculation, which may induce more robust and diverse gradients. Therefore, ReToMe can effectively boost adversarial transferability."
        ],
        "final_answer": "Recursive Token Merging interacts with the Self Attention module by recursively matching and merging similar tokens across frames, enabling the Self Attention module to extract consistent features. This method ensures that the most similar tokens share identical outputs, which maximizes internal uniformity of features across frames and preserves temporal consistency, thereby enhancing video consistency.",
        "relevant_elements": [
            "Recursive Token Merging",
            "Self Attention module"
        ],
        "id": 4014,
        "masked_question": "How does [mask1] interact with [mask2] to enhance video consistency?",
        "masked_number": 2,
        "masked_elements": [
            "Recursive Token Merging",
            "Self Attention module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2408.05479v1_figure_2.png",
        "paperid": "2408.05479v1",
        "paper_path": "./papers/2408.05479v1.json",
        "figure_id": "2408.05479v1_figure_2.png",
        "caption": "Framework overview of the proposed ReToMe-VA. For a video clip, DDIM inversion is applied to map the benign frames into the latent space. Timestep-wise Adversarial Latent Optimization is employed during the DDIM sampling process to optimize the latents. Throughout the whole pipeline, Recursive Token Merging and Recursive Token Unmerging Modules are integrated into the diffusion model to enhance its effectiveness. Additionally, structure loss is utilized to maintain the structural consistency of video frames. Ultimately, the resulting adversarial video clip is capable of deceiving the target model.",
        "qtype": "Literature_Background",
        "response": "[mask1] refers to the \"Recursive Token Merging\" module, and [mask2] refers to the \"Self Attention\" module within the diffusion model.\n\nHere's how they interact to enhance video consistency:\n\n1.  **Recursive Token Merging ([mask1])**: Before tokens are fed into the self-attention module, the Recursive Token Merging strategy recursively matches and merges similar tokens **across different frames** of the video clip. This process ensures that visually or semantically similar features appearing in different frames are grouped together.\n2.  **Interaction with Self Attention ([mask2])**: After this merging operation, the processed (merged) tokens are then input into the **Self Attention module ([mask2])**.\n3.  "
    },
    {
        "question": "What is the importance of iterative parameter updating in retraining scheduling?",
        "relevant_section_ids": [
            "2"
        ],
        "relevant_context": [
            "It asynchronously reuses learned features from different subtasks and incorporates dynamic switching and incremental parameter updating to optimize the limited representation capacity of compressed mobile DNNs"
        ],
        "final_answer": "The importance of iterative parameter updating in retraining scheduling is to optimize the limited representation capacity of compressed mobile DNNs by incorporating dynamic switching and incremental parameter updating.",
        "relevant_elements": [
            "iterative parameter updating",
            "retraining scheduling"
        ],
        "id": 4015,
        "masked_question": "What is the importance of [mask1] in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "iterative parameter updating",
            "retraining scheduling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2407.00016v1_figure_1.png",
        "paperid": "2407.00016v1",
        "paper_path": "./papers/2407.00016v1.json",
        "figure_id": "2407.00016v1_figure_1.png",
        "caption": "Illustration of AdaBridge s system workflow.",
        "qtype": "Design_Rationale",
        "response": "The red-boxed area, labeled as \"Task module\" and \"Iterative parameter updating\", is a key component within the blue-boxed \"Asynchronous multi-task retraining computation scheduling\" module.\n\nBased on the context, the \"Asynchronous multi-task retraining computation scheduling\" module is designed to \"improve data reuse for multitask training, computation scheduling, and resource allocation\" on the edge server. Specifically, point \"i) Plug-and-Play Asynchronous Multi-task Computation Reusing\" states that this module \"asynchronously reuses learned features from different subtasks and incorporates dynamic switching and incremental parameter updating to optimize the limited representation capacity of compressed mobile DNNs.\"\n\nTherefore, the importance of the red-boxed \"Task module\" and \"Iterative parameter updating\" in the blue-boxed \"Asynchronous multi-task retraining computation scheduling\" is that it:\n1.  Enables the **iterative/incremental updating of parameters** for the compressed mobile DNNs.\n2.  Works in conjunction with asynchronous feature reuse and dynamic switching to **optimize the limited representation capacity** of these models.\n3.  Contributes to the overall goal of the module by allowing **flexible model retraining fusion and separation** for various subtasks.\n\nIn essence, the iterative parameter updating within the task module is crucial for adapting and improving the performance of the compressed mobile DNNs over time by continuously refining their parameters based on new data and learned features."
    },
    {
        "question": "What impact does incorporating physical constraint loss have on the predictions of LSTM block?",
        "relevant_section_ids": [
            "2.5"
        ],
        "relevant_context": [
            "Energy conservation asserts that in a conservative system, the total energy remains constant over time. This concept is particularly relevant in systems where external energy exchanges are absent. To quantify alignment with energy conservation principles, we define an energy conservation loss function,ℒenergy, which measures the discrepancy between the energy states of the input and output fields. This function is integrated into the overall loss function to enhance the adherence of the model to energy conservation."
        ],
        "final_answer": "The importance of iterative parameter updating in retraining scheduling is to optimize the limited representation capacity of compressed mobile DNNs by incorporating dynamic switching and incremental parameter updating.",
        "relevant_elements": [
            "physical constraint loss",
            "LSTM block"
        ],
        "id": 4016,
        "masked_question": "What impact does incorporating [mask1] have on the predictions of [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "physical constraint loss",
            "LSTM block"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2409.00458v1_figure_1.png",
        "paperid": "2409.00458v1",
        "paper_path": "./papers/2409.00458v1.json",
        "figure_id": "2409.00458v1_figure_1.png",
        "caption": "Schematic representation of physics-constrained CED-LSTM model employing Voronoi tessellation for enhanced state field mapping from sparse observations.",
        "qtype": "Literature_Background",
        "response": "To answer the question, let's break down the image and context:\n\n1.  **Identify [mask1]:** The red box highlights \"Physical Constraint Loss\". From the \"Physics Constraints\" section, this loss function is defined as \"energy conservation loss function, , which measures the discrepancy between the energy states of the input and output fields.\" Its purpose is \"to enhance the adherence of the model to energy conservation.\"\n\n2.  **Identify [mask2]:** The blue box highlights the \"LSTM Block\" components, which are part of the \"Physics-Constrained CED-LSTM Model\".\n\n3.  **Connect [mask1] and [mask2] using the text:**\n    *   Section \"2.5.1 Incorporating Energy Conservation Constraints in CED-LSTM Training\" explicitly states: \"To enhance the accuracy and physical consistency of our model, we integrate energy conservation constraints into the LSTM training process.\"\n    *   It further explains that the \"LSTM network leverages current parameters to predict latent spatial representations. These predictions... are subsequently decoded into predicted fields... These predictions are compared with the state fields to compute the energy conservation loss... in addition to the MSE loss.\"\n    *   A \"modified composite loss function\" is introduced, which includes the weighting coefficient for the energy conservation loss.\n    *   The text concludes: \"This approach ensures that the predictions conform to physical laws... By handling data at this early stage, the LSTM is better poised to enhance both the MSE and energy conservation loss assessments right from the beginning, leading to more effective and accurate predictions.\"\n\n**Impact:**\nIncorporating the **Physical Constraint Loss** (energy conservation loss) into the training process of the **LSTM Blocks** ("
    },
    {
        "question": "What are the specific functions of the RPN and the ROIHead in the Detector",
        "relevant_section_ids": [
            "2.2"
        ],
        "relevant_context": [
            "Similarly, Meta R-CNN combines a two-stage detector and reweights RoI features in the detection head. Attention-RPN exploits matching relationship between the few-shot support set and query set with a contrastive training scheme, which can then be applied to detect novel objects without retraining and fine-tuning."
        ],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "the RPN and the ROIHead",
            "Detector"
        ],
        "id": 4017,
        "masked_question": "What are the specific functions of the [mask1] in the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "the RPN and the ROIHead",
            "Detector"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2408.05674v1_figure_2.png",
        "paperid": "2408.05674v1",
        "paper_path": "./papers/2408.05674v1.json",
        "figure_id": "2408.05674v1_figure_2.png",
        "caption": "The overview of the proposed Prototype-based Soft-labels and Test-Time Learning (PS-TTL) framework for FSOD. Both the student and teacher networks are first initialized by the few-shot detector and then fine-tuned on test data. The teacher network takes test data as input to generate pseudo-labels, while the student model is trained using these pseudo-labels after post-processing with N-way K-shot data as supervision signals and updates the teacher net- work through EMA. A Prototype-based Soft-labels (PS) strategy is adopted to maintain class prototypes and compute the feature similarity between low-confidence pseudo-labels and class prototypes to replace them with soft-labels.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] refers to the **RPN (Region Proposal Network)**, which is a component within the [mask2] **Detector**.\n\nBased on the context provided in section \"2.1. Object Detection\", two-stage detectors \"usually first use a Region Proposal Network (RPN) to generate potential proposals and then refine them by other modules.\"\n\nTherefore, the specific function of the RPN in the Detector is to **generate potential proposals**."
    },
    {
        "question": "How are EEG and adversarial example integrated into the model training process?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "Adversarial perturbations are image transformations capable of fooling ANNs while remaining imperceptible for humans. To assess the adversarial robustness of our models, we employed Foolbox to create adversarial versions of the 1654 original validation images under different attack strengths."
        ],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "EEG",
            "adversarial example"
        ],
        "id": 4018,
        "masked_question": "How are [mask1] and [mask2] integrated into the model training process?",
        "masked_number": 2,
        "masked_elements": [
            "EEG",
            "adversarial example"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2409.03646v1_figure_1.png",
        "paperid": "2409.03646v1",
        "paper_path": "./papers/2409.03646v1.json",
        "figure_id": "2409.03646v1_figure_1.png",
        "caption": "Paradigm for improving adversarial robustness via co-training with human EEG: We first trained dual-task learning (DTL) models with original and shuffled EEG data and then evaluated their robustness against various adversarial attacks. We trained four clusters of ResNet50 backbone models, each incorporating a different independent EEG predictor: Dense Layers (CNN), Recurrent Neural Networks (RNN), Transformer, and Attention layers. Finally, we measured the relationship between adversarial robustness gain and EEG prediction accuracy.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How are MLP and attention mechanism utilized to process utterance and description embeddings?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "This architecture is designed with a straightforward target that injects the personality information of each speaker into their corresponding utterances by a multi-layer perceptron network.Through this mechanism, all the utterances from the same speaker are shared in the unified speaker vector representation, while the weights are updated in the training process. Finally, the utterance vector is fused with the speaker vector which supports emotional classification.We consider a variant of our BiosERC model, which is engineered to dynamically incorporate the speaker’s information into each utterance via the attention mechanism. The relationship between the current utterance and all individual speakers is integrated to enrich the utterance vector representation."
        ],
        "final_answer": "In BiosERC, a multi-layer perceptron (MLP) network injects personality information of speakers into their corresponding utterances, creating a unified speaker vector representation. The attention mechanism dynamically incorporates speaker information into each utterance, modeling the relationship between the utterance and all speakers in a conversation to enrich the utterance vector representation.",
        "relevant_elements": [
            "MLP",
            "attention mechanism"
        ],
        "id": 4019,
        "masked_question": "How are [mask1] and [mask2] utilized to process utterance and description embeddings?",
        "masked_number": 2,
        "masked_elements": [
            "MLP",
            "attention mechanism"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2407.04279v1_figure_2.png",
        "paperid": "2407.04279v1",
        "paper_path": "./papers/2407.04279v1.json",
        "figure_id": "2407.04279v1_figure_2.png",
        "caption": "Overview of our BiosERC model architecture.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "What role does FM play in shared decoder?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "Nevertheless, while multi-stage guidance proves beneficial in extracting valuable information from features at various levels, it is more challenging to maximize the mutual information between the conditional contrasts and the target MR contrast distributions. This is mainly due to intricate dependencies between multi-contrast imaging and finding more common and mutually adaptive feature representation.To overcome this challenge, we propose an adaptive feature maximize (FM) within the denoising network, unifying feature distributions as shown in Fig. 1(C).The distinction between local and global feature contrasts derived from the denoising and conditional feature distributions aids in adaptively assigning weights to more pertinent features. This adaptive weighting facilitates the selection of mutually dependent and highly effective shared representations within the latent distribution. Consequently, these representations can be leveraged to achieve more precise denoised target contrast."
        ],
        "final_answer": "The adaptive feature maximizer unifies feature distributions by utilizing encoded features from the Semantic Encoder and Diffusive Encoder, which undergo separate local and global feature extraction processes. It assigns weights based on feature relevance to facilitate the selection of mutually adaptive and effective shared representations, ultimately leading to more precise denoised target contrast.",
        "relevant_elements": [
            "FM",
            "shared decoderm"
        ],
        "id": 4020,
        "masked_question": "What role does [mask1] play in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "FM",
            "shared decoderm"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2409.00585v1_figure_1.png",
        "paperid": "2409.00585v1",
        "paper_path": "./papers/2409.00585v1.json",
        "figure_id": "2409.00585v1_figure_1.png",
        "caption": "Network architecture of McCaD. A: Overall Architecture, B: Multi-scale Feature Guided Denoising Network to incorporate feature characteristics from conditional MRI contrasts at various stages to guide the reverse diffusion process, C: Adaptive Feature Maximizer, to weights more pertinent features within the latent space D: Feature Attentive Loss to improve the perceptual quality of the synthetic results.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] (Adaptive Feature Maximizer (FM)) plays the role of processing and unifying the encoded features from both the Denoising Encoder (DE) and the Semantic Encoder (SE). It applies local and global feature extraction, followed by feature adaptive modules that weigh features based on their relevance. This process results in an \"aggregated feature distribution\" (denoted as Zl or Fw), which represents mutually dependent and highly effective shared representations within the latent space.\n\nThis optimized, weighted, and fused feature output from the [mask1"
    },
    {
        "question": "How does the self-attention module contribute to the global alignment loss based on the results?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Self-attention",
            "Global alignment loss"
        ],
        "id": 572,
        "masked_question": "How does the [mask1] module contribute to the global alignment loss based on the results?",
        "masked_number": 1,
        "masked_elements": [
            "Self-attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.00609v1_figure_1.png",
        "paperid": "2411.00609v1",
        "paper_path": "./papers/2411.00609v1.json",
        "figure_id": "2411.00609v1_figure_1.png",
        "caption": "Figure 1: The Proposed MRI-Report Contrastive Learning Framework",
        "qtype": "Experimental_Results",
        "response": "The [mask1] module is the \"Self-attention\" layer within the 3D ResNet.\n\nHere's how it contributes to the global alignment loss:\n1.  **Generates Global MRI Representation:** The text states, \"The global MRI representation is obtained by extracting the output of the self-attention layer, which is the weighted feature map of the last convolutional module with 512 channels.\" This means the Self-attention module processes the output of the preceding convolutional layers to produce the aggregated global representation of the MRI.\n2.  **Input to Global CL Loss Function:** The \"Global CL Loss Function\" section explains that its aim is to \"minimize the distance between similar global image and report embeddings, while maximizing that between dissimilar pairs.\" The \"Global MRI representation\" (which is the output of the Self-attention module) is directly fed into an MLP head, and then used in the Triplet Loss calculation alongside the global text representation.\n\nTherefore, the Self-attention module contributes to the global alignment loss by **processing the output of the last convolutional module to generate the Global MRI representation, which serves as a direct input to the global CL loss function, enabling the minimization of distance between semantically similar image and text representations.**"
    },
    {
        "question": "What motivates attention-based Modal Fusion for integrating diverse modal-specific representations?",
        "relevant_section_ids": [
            "3.2.2"
        ],
        "relevant_context": [
            "Specifically, for each entity, we measure the distinct importance of its modality information with attention mechanism, and employ the attention weights to integrate modal-specific feature variables (sampled from Eq. (6)) as follows:",
            "where α_m is the attention weight for modality m, taking the different nature of entities into consideration.",
            "In this way, we obtain modal-hybrid feature variables considering the distinct modality importance of the entity and leverage the IB-refined modal-specific feature variables."
        ],
        "final_answer": "Because different entities rely on their modalities to varying degrees, the model uses an attention mechanism to dynamically measure and weight each modality’s contribution. This attention-based fusion ensures that the modal-hybrid representation integrates modal-specific features in proportion to their importance for each entity.",
        "relevant_elements": [
            "Modal Fusion",
            "Modal-specific Features"
        ],
        "id": 601,
        "masked_question": "What motivates attention-based [mask1] for integrating diverse modal-specific representations?",
        "masked_number": 1,
        "masked_elements": [
            "Modal Fusion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.19302v1_figure_2.png",
        "paperid": "2407.19302v1",
        "paper_path": "./papers/2407.19302v1.json",
        "figure_id": "2407.19302v1_figure_2.png",
        "caption": "Figure 2. The framework of the proposed IBMEA for the multi-modal entity alignment task.",
        "qtype": "Design_Rationale",
        "response": "The red box in the image highlights the \"Modal Fusion\" component, where multiple \"Modal-specific Features\" are combined to form \"Modal-hybrid Features\". This step explicitly mentions \"Modal Fusion\" which corresponds to the integration of diverse modal-specific representations.\n\nReferring to the text, Section 3.2.2 \"Modal-hybrid Information Contrastive Regularizer\" states:\n\"We first generate modal-hybrid feature variables by integrating all the modal-specific feature variables. Specifically, for each entity, we measure the distinct importance of its modality information with attention mechanism, and employ the attention weights to integrate modal-specific feature variables (sampled from Eq. (6)) as follows:\n(...) where is the attention weight for modality , taking the different nature of entities into consideration. In this way, we obtain modal-hybrid feature variables considering the distinct modality importance of the entity and leverage the IB-refined modal-specific feature variables.\"\n\nThis paragraph clearly indicates that the attention mechanism is used to \"measure the distinct importance of its modality information\" and to integrate these features. The motivation for doing so is \"taking the different nature of entities into consideration\" and \"considering the distinct modality importance of the entity\".\n\nTherefore, the [mask1] is **modal fusion**. The motivation for using attention-based modal fusion is to account for the **distinct importance of its modality information** for each entity, thereby \"taking the different nature of entities into consideration.\""
    },
    {
        "question": "How does the Submodular function integrate Clue Score and Collaboration Score to rank sub-regions iteratively?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Clue Score: An essential aspect of interpretability is enabling the object-level foundation model to accurately locate and identify objects while using fewer regions. … Then, the clue score of sub-region s is defined as: (Equation for f_clue).",
            "Collaboration Score: Some regions may exhibit strong combination effects, meaning they contribute effectively to model decisions only when paired with multiple specific sub-regions. … Therefore, we introduce the collaboration score f_collab to assess sub-regions with high sensitivity to decision outcomes.",
            "Submodular Function: The scores above are combined to construct a submodular function f, as follows:",
            "Saliency Map Generation: Using the above submodular function, a greedy search algorithm is applied to sort all sub-regions in V, yielding an ordered subset S. Introducing the submodular function enables the search algorithm to more precisely identify key visual regions for interpretation.",
            "Since the saliency map requires all sub-regions to be ranked, k can be set to |V| to compute ordered subsets. When the set function f satisfies the properties of diminishing returns and monotonic non-negative, a greedy search guarantees an approximate optimal solution [7]."
        ],
        "final_answer": "The method first computes two scores per super-pixel: a Clue Score (how much that region alone supports detecting the target) and a Collaboration Score (how much removal of that region degrades detection in combination with others). It then defines a single submodular set function f by combining these two scores over any subset of regions. Because f is monotonic and has diminishing returns, a standard greedy algorithm can be used: at each iteration the region whose addition yields the largest marginal increase in f is selected next. Repeating this until all regions are chosen produces a ranked list of sub-regions by importance.",
        "relevant_elements": [
            "Submodular function",
            "Clue Score",
            "Colla. Score"
        ],
        "id": 604,
        "masked_question": "How does the [mask1] integrate [mask2] and Collaboration Score to rank sub-regions iteratively?",
        "masked_number": 2,
        "masked_elements": [
            "Submodular function",
            "Clue Score"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.16198v1_figure_2.png",
        "paperid": "2411.16198v1",
        "paper_path": "./papers/2411.16198v1.json",
        "figure_id": "2411.16198v1_figure_2.png",
        "caption": "Figure 2: Framework of the proposed Visual Precision Search method for interpreting an object-level foundation model. The input is first sparsified into a set of sub-regions and then interpreted across different instances. A submodular function guides the search for significant sub-regions, updating the ordered subset iteratively, and ultimately generating the instance-level attribution map.",
        "qtype": "Implementation_Details",
        "response": "The \"Submodular function\" (mask1) integrates the \"Clue Score\" (mask2) and the Collaboration Score by combining them into a weighted sum, formally defined as `f(S) = λs_c(S) + (1-λ)s_r(S)`. Here, `s_c(S)` represents the Clue Score, `s_r(S)` represents the Collaboration Score, and `λ` is a hyperparameter balancing their contributions.\n\nTo rank sub-regions iteratively, a greedy search algorithm is applied. This algorithm uses the formulated submodular function `f(S)` to iteratively select and add"
    },
    {
        "question": "How does the attribution score assessment compute marginal effects over the Ordered Subset to produce saliency weights?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Saliency Map Generation: Using the above submodular function, a greedy search algorithm is applied to sort all sub-regions in V, yielding an ordered subset S. ... We evaluate the salient difference between the two sub-regions by the marginal effect.",
            "The attribution score α(s_i) for each sub-region s_i in S is assessed by: α(s_i) = f(S_i) − f(S_{i−1}) (+ β for the first sub-region), where β represents a baseline attribution score for the first sub-region, and f denotes the set function.",
            "When a new sub-region is added, a small marginal increase suggests comparable importance to the previous sub-region. A negative marginal effect indicates a counterproductive impact, which can be assessed by its absolute value. Finally, α is normalized to obtain the saliency map of the sub-region."
        ],
        "final_answer": "The attribution score for each sub-region is computed as the marginal gain in the submodular scoring function when adding that region to the set of previously selected regions—i.e., α(s_i)=f(S_i)−f(S_{i−1}), with a small baseline β added for the very first region. These per‐region marginal gains are then normalized across the ordered subset to yield the final saliency weights.",
        "relevant_elements": [
            "Attribution score assessment",
            "Ordered Subset S"
        ],
        "id": 605,
        "masked_question": "How does the [mask1] compute marginal effects over the Ordered Subset to produce saliency weights?",
        "masked_number": 1,
        "masked_elements": [
            "Attribution score assessment"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.16198v1_figure_2.png",
        "paperid": "2411.16198v1",
        "paper_path": "./papers/2411.16198v1.json",
        "figure_id": "2411.16198v1_figure_2.png",
        "caption": "Figure 2: Framework of the proposed Visual Precision Search method for interpreting an object-level foundation model. The input is first sparsified into a set of sub-regions and then interpreted across different instances. A submodular function guides the search for significant sub-regions, updating the ordered subset iteratively, and ultimately generating the instance-level attribution map.",
        "qtype": "Implementation_Details",
        "response": "Based on the \"Saliency Map Generation\" section:\n\nThe [mask1"
    },
    {
        "question": "How does the submodular function integrate clue and collaboration scores during Visual Precision Search?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Clue Score: An essential aspect of interpretability is enabling the object-level foundation model to accurately locate and identify objects while using fewer regions. … Given a subregion r, the object-level model outputs T instances … Then, the clue score of sub-region r is defined as: (definition of clue score).",
            "Collaboration Score: Some regions may exhibit strong combination effects, meaning they contribute effectively to model decisions only when paired with multiple specific sub-regions. Therefore, we introduce the collaboration score S_collab(r) to assess sub-regions with high sensitivity to decision outcomes: (definition of collaboration score).",
            "Submodular Function: The scores above are combined to construct a submodular function f(S), as follows:"
        ],
        "final_answer": "The submodular function f(S) is formed by directly combining (i.e. summing) the per-region clue scores and collaboration scores. In other words, for any candidate set of superpixel sub-regions S, f(S) aggregates each region’s clue score (measuring how strongly it supports correct detection) together with its collaboration score (measuring how critical it is in combination with other regions), yielding a single submodular objective that balances both individual and joint contributions.",
        "relevant_elements": [
            "Submodular function",
            "Clue Score",
            "Collaboration Score"
        ],
        "id": 606,
        "masked_question": "How does the [mask1] integrate [mask2] and collaboration scores during Visual Precision Search?",
        "masked_number": 2,
        "masked_elements": [
            "Submodular function",
            "Clue Score"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.16198v1_figure_2.png",
        "paperid": "2411.16198v1",
        "paper_path": "./papers/2411.16198v1.json",
        "figure_id": "2411.16198v1_figure_2.png",
        "caption": "Figure 2: Framework of the proposed Visual Precision Search method for interpreting an object-level foundation model. The input is first sparsified into a set of sub-regions and then interpreted across different instances. A submodular function guides the search for significant sub-regions, updating the ordered subset iteratively, and ultimately generating the instance-level attribution map.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does sparse sub-region segmentation impact submodular function scoring in Visual Precision Search?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "We apply the SLICO superpixel segmentation algorithm [1] to divide the input into n sub-regions, V.",
            "The quality of the search space is determined by sparse division, meaning that both the method of partitioning the input and the number of sub-regions play a crucial role in the faithfulness of the Visual Precision Search."
        ],
        "final_answer": "By breaking the image into a sparse set of super-pixel sub-regions, we define the atomic elements over which our submodular scoring function (combining clue and collaboration scores) operates. The choice of segmentation method and the number of sub-regions directly controls the search space: finer or semantically appropriate sparsification leads to more faithful and accurate region scores under the greedy submodular optimization, whereas poor or overly coarse segmentation degrades the quality and faithfulness of the resulting saliency map.",
        "relevant_elements": [
            "Sparse Sub-region Set V",
            "Submodular function"
        ],
        "id": 607,
        "masked_question": "How does [mask1] segmentation impact submodular function scoring in Visual Precision Search?",
        "masked_number": 1,
        "masked_elements": [
            "Sparse Sub-region Set V"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.16198v1_figure_2.png",
        "paperid": "2411.16198v1",
        "paper_path": "./papers/2411.16198v1.json",
        "figure_id": "2411.16198v1_figure_2.png",
        "caption": "Figure 2: Framework of the proposed Visual Precision Search method for interpreting an object-level foundation model. The input is first sparsified into a set of sub-regions and then interpreted across different instances. A submodular function guides the search for significant sub-regions, updating the ordered subset iteratively, and ultimately generating the instance-level attribution map.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does conditioning on user-defined SCM impact denoising diffusion in the Semantic Conditional Module?",
        "relevant_section_ids": [
            "4.2.1"
        ],
        "relevant_context": [
            "In Semantic Conditional Module, the parameters θ_sem are composed of the object’s contact map parameters. We use a conditional generation model to infer probable contact maps ε_{θ_sem} based on user-specified or algorithmically predicted Semantic Contact Maps."
        ],
        "final_answer": "By feeding the user-defined Semantic Contact Map (SCM) into the diffusion model as a conditioning signal, each denoising step in the Semantic Conditional Module is guided to reconstruct contact-map samples that adhere to the user’s specified finger–object contact patterns. In other words, the SCM is concatenated as a condition at every noise level, steering the diffusion-based generator to output contact maps consistent with the fine-grained, user-defined semantics and thereby enabling controllable contact-map inference.",
        "relevant_elements": [
            "Semantic Conditional Module",
            "SCM"
        ],
        "id": 612,
        "masked_question": "How does conditioning on user-defined [mask1] impact denoising diffusion in the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "SCM",
            "Semantic Conditional Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.19370v1_figure_2.png",
        "paperid": "2407.19370v1",
        "paper_path": "./papers/2407.19370v1.json",
        "figure_id": "2407.19370v1_figure_2.png",
        "caption": "Figure 2. Overview of ClickDiff: The model initially takes an object s point cloud as input and predicts the contact map conditioned on the Semantic Contact Map within the Semantic Conditional Module. Subsequently, the predicted contact map is fed into the Contact Conditional Module, where grasping is generated under the guidance of TGC and contact map.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does enforcing Tactile-Guided Constraint within the Contact Conditional Module refine grasp alignment?",
        "relevant_section_ids": [
            "4.3",
            "5.3.3"
        ],
        "relevant_context": [
            "The Tactile-Guided Constraint loss (L_TGC) specifically targets the vertices within the finger sets proximal to the object's surface, ensuring that fingers accurately align with the designated ground-truth contact areas by accurately indexing the point pairs in the SCM and calculating the distance between the centroid of each finger’s predefined set of points and the contact point on the object.",
            "Applying the Tactile-Guided Constraint effectively ensures that the fingers align with the designated ground-truth contact regions. Notably, the introduction of L_TGC results in a significant reduction in joint displacement and improvements in contact metrics, exemplified by a 6.11 mm decrease in Contact Deviation (CDev). Experiments demonstrate that our TGC constrains the contact position of fingers in the Contact Conditional Module, which solves the contact ambiguity problem well."
        ],
        "final_answer": "By adding the Tactile-Guided Constraint during Contact Conditional Module training, the model explicitly pulls finger vertices near the object’s surface toward the SCM-specified contact points. This is done by computing L2 distances between finger-centroids (from pre-weighted finger point sets) and their corresponding object contact points, which 1) resolves the ambiguity of ‘‘which part of the hand’’ should touch, 2) forces the fingertips to align with the true contact regions, and 3) yields a measurable drop in contact deviation (over 6 mm) and joint displacement.",
        "relevant_elements": [
            "Contact Conditional Module",
            "Tactile-Guided Constraint"
        ],
        "id": 613,
        "masked_question": "How does enforcing [mask1] within the [mask2] refine grasp alignment?",
        "masked_number": 2,
        "masked_elements": [
            "Tactile-Guided Constraint",
            "Contact Conditional Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.19370v1_figure_2.png",
        "paperid": "2407.19370v1",
        "paper_path": "./papers/2407.19370v1.json",
        "figure_id": "2407.19370v1_figure_2.png",
        "caption": "Figure 2. Overview of ClickDiff: The model initially takes an object s point cloud as input and predicts the contact map conditioned on the Semantic Contact Map within the Semantic Conditional Module. Subsequently, the predicted contact map is fed into the Contact Conditional Module, where grasping is generated under the guidance of TGC and contact map.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What potential limitations arise when using user-specified Semantic Contact Map for diverse object geometries?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Semantic Contact Map"
        ],
        "id": 614,
        "masked_question": "What potential limitations arise when using user-specified [mask1] for diverse object geometries?",
        "masked_number": 1,
        "masked_elements": [
            "Semantic Contact Map"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.19370v1_figure_2.png",
        "paperid": "2407.19370v1",
        "paper_path": "./papers/2407.19370v1.json",
        "figure_id": "2407.19370v1_figure_2.png",
        "caption": "Figure 2. Overview of ClickDiff: The model initially takes an object s point cloud as input and predicts the contact map conditioned on the Semantic Contact Map within the Semantic Conditional Module. Subsequently, the predicted contact map is fed into the Contact Conditional Module, where grasping is generated under the guidance of TGC and contact map.",
        "qtype": "Others",
        "response": "The [mask1] refers to the **Semantic Contact Map**.\n\nBased on the provided context, the paper consistently highlights the advantages and benefits of using the user-specified Semantic Contact Map (SCM) for controllable grasp generation. It states:\n*   \"A significant advantage is that one can click to customize the Semantic Contact Map to achieve user-controlled interactive generation.\"\n*   \"We show that utilizing Semantic Contact Map can achieve more natural and precise generation results than conventional methods that rely solely on contact map.\"\n*   It improves performance even on \"unseen and out-of-domain objects\" and specifically for diverse objects in the GRAB and ARCTIC datasets, implying its robustness rather than limitations with diverse geometries.\n*   The ablation study on \"Impact of contact condition\" shows that \"the model utilizing SCM can perform better in both hand posture and contact position,\" verifying its effectiveness.\n\nThe text does not discuss any potential limitations or challenges that arise when using"
    },
    {
        "question": "What limitations arise from Hop Fuse’s reliance on content-aware dynamic sampling under sudden scene changes?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "Hop Fuse",
            "dynamic sampling"
        ],
        "id": 616,
        "masked_question": "What limitations arise from [mask1]’s reliance on content-aware [mask2] under sudden scene changes?",
        "masked_number": 2,
        "masked_elements": [
            "Hop Fuse",
            "dynamic sampling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.00608v1_figure_2.png",
        "paperid": "2411.00608v1",
        "paper_path": "./papers/2411.00608v1.json",
        "figure_id": "2411.00608v1_figure_2.png",
        "caption": "Figure 2: System overview of HopTrack. Hop Fuse associates active tracks with detections from dynamically sampled frames. Hop Update updates tracks’ positions and suppresses inaccurate tracks.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might discretized dynamic matching in Hop Update struggle with varying object textures or illumination shifts?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Hop Update",
            "dynamic matching"
        ],
        "id": 617,
        "masked_question": "How might discretized [mask1] in Hop Update struggle with varying object textures or illumination shifts?",
        "masked_number": 1,
        "masked_elements": [
            "dynamic matching"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.00608v1_figure_2.png",
        "paperid": "2411.00608v1",
        "paper_path": "./papers/2411.00608v1.json",
        "figure_id": "2411.00608v1_figure_2.png",
        "caption": "Figure 2: System overview of HopTrack. Hop Fuse associates active tracks with detections from dynamically sampled frames. Hop Update updates tracks’ positions and suppresses inaccurate tracks.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What drives using both static matching and dynamic matching for identity association?",
        "relevant_section_ids": [
            "3.4",
            "3.5"
        ],
        "relevant_context": [
            "Section 3.4: \"The discretized static and dynamic matching is meant to use appearance features that can be extracted efficiently with the CPU, in order to associate objects with large inter-frame displacement across multiple frames and to suppress inaccurate tracks.\"",
            "Section 3.5: \"The issue with static matching is that during the Hop Update phase, depending on the accuracy of the Kalman filter, the tracked objects might not be in the center of the bounding box or the bounding box might not be tight. Therefore, we propose a lightweight, dynamic discretized matching method to be run on each hopping frame, to check if the bounding boxes are accurately tracking the objects, and suppress tracks when occlusion happens.\""
        ],
        "final_answer": "Static matching is used at detection frames to efficiently associate objects that have large inter-frame displacements using CPU-friendly appearance cues, while dynamic matching is run on each hopping (non-detection) frame to correct for bounding‐box misalignments and occlusions when the Kalman filter’s predictions become inaccurate.",
        "relevant_elements": [
            "Static matching",
            "Dynamic matching",
            "Association"
        ],
        "id": 618,
        "masked_question": "What drives using both [mask1] and [mask2] for identity association?",
        "masked_number": 2,
        "masked_elements": [
            "Static matching",
            "Dynamic matching"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.00608v1_figure_2.png",
        "paperid": "2411.00608v1",
        "paper_path": "./papers/2411.00608v1.json",
        "figure_id": "2411.00608v1_figure_2.png",
        "caption": "Figure 2: System overview of HopTrack. Hop Fuse associates active tracks with detections from dynamically sampled frames. Hop Update updates tracks’ positions and suppresses inaccurate tracks.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates introducing community-level hetero-meta-path alongside node-level hetero-meta-path for dual-modal integration?",
        "relevant_section_ids": [
            "4.1.2"
        ],
        "relevant_context": [
            "In constructing node-level hetero-meta-path, we measure the similarity of connection patterns of cross-modal node pairs as the strength of their structure-function coupling.",
            "As for community-level hetero-meta-path, we suggest that brain regions with cooperative interactions may form a closed induced subgraph in both Gf and Gd."
        ],
        "final_answer": "While node-level hetero-meta-paths capture pairwise structure–function coupling between individual regions, community-level hetero-meta-paths are introduced to model higher-order, cooperative interactions among sets of brain regions that form closed subgraphs in both functional and structural networks.",
        "relevant_elements": [
            "node-level hetero-meta-path",
            "community-level hetero-meta-path"
        ],
        "id": 620,
        "masked_question": "What motivates introducing [mask1] alongside node-level hetero-meta-path for dual-modal integration?",
        "masked_number": 1,
        "masked_elements": [
            "community-level hetero-meta-path"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.08424v1_figure_1.png",
        "paperid": "2411.08424v1",
        "paper_path": "./papers/2411.08424v1.json",
        "figure_id": "2411.08424v1_figure_1.png",
        "caption": "Figure 1: Overview of our proposed method. a) We extract node features, Φ1subscriptΦ1\\Phi_{1}roman_Φ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT and Φ2subscriptΦ2\\Phi_{2}roman_Φ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT from each modality to establish Gf={𝒩f,Φ1}subscript𝐺𝑓subscript𝒩𝑓subscriptΦ1G_{f}=\\left\\{\\mathcal{N}_{f},\\Phi_{1}\\right\\}italic_G start_POSTSUBSCRIPT italic_f end_POSTSUBSCRIPT = { caligraphic_N start_POSTSUBSCRIPT italic_f end_POSTSUBSCRIPT , roman_Φ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT }, Gd={𝒩d,Φ2}subscript𝐺𝑑subscript𝒩𝑑subscriptΦ2G_{d}=\\left\\{\\mathcal{N}_{d},\\Phi_{2}\\right\\}italic_G start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT = { caligraphic_N start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT , roman_Φ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT }. b) Node-level and community-level hetero-meta-paths are combined as meta-path Φ3:𝒩f→𝒩d:subscriptΦ3→subscript𝒩𝑓subscript𝒩𝑑\\Phi_{3}:\\mathcal{N}_{f}\\rightarrow\\mathcal{N}_{d}roman_Φ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT : caligraphic_N start_POSTSUBSCRIPT italic_f end_POSTSUBSCRIPT → caligraphic_N start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT, and Φ4subscriptΦ4\\Phi_{4}roman_Φ start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT is a reversal of Φ3subscriptΦ3\\Phi_{3}roman_Φ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT. The subject-level HG is denoted as GH={(𝒩f,𝒩d),(Φ1,Φ2,Φ3,Φ4)}subscript𝐺𝐻subscript𝒩𝑓subscript𝒩𝑑subscriptΦ1subscriptΦ2subscriptΦ3subscriptΦ4G_{H}=\\left\\{\\left(\\mathcal{N}_{f},\\mathcal{N}_{d}\\right),\\left(\\Phi_{1},\\Phi_%\n{2},\\Phi_{3},\\Phi_{4}\\right)\\right\\}italic_G start_POSTSUBSCRIPT italic_H end_POSTSUBSCRIPT = { ( caligraphic_N start_POSTSUBSCRIPT italic_f end_POSTSUBSCRIPT , caligraphic_N start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT ) , ( roman_Φ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , roman_Φ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT , roman_Φ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , roman_Φ start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT ) },. c) We preserve Φ2subscriptΦ2\\Phi_{2}roman_Φ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT and dynamically reconstruct FC to obtain Φ^1subscript^Φ1\\hat{\\Phi}_{1}over^ start_ARG roman_Φ end_ARG start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT, then update Φ3subscriptΦ3\\Phi_{3}roman_Φ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT and Φ4subscriptΦ4\\Phi_{4}roman_Φ start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT to generate augmented G^Hsubscript^𝐺𝐻\\hat{G}_{H}over^ start_ARG italic_G end_ARG start_POSTSUBSCRIPT italic_H end_POSTSUBSCRIPT. d) Both GHsubscript𝐺𝐻G_{H}italic_G start_POSTSUBSCRIPT italic_H end_POSTSUBSCRIPT and G^Hsubscript^𝐺𝐻\\hat{G}_{H}over^ start_ARG italic_G end_ARG start_POSTSUBSCRIPT italic_H end_POSTSUBSCRIPT are fed into backbone consisted of HAN, HG pooling and readout layers to extract dual-modal features.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to the \"community-level hetero-meta-path.\"\n\nThe motivation for introducing the community-level hetero-meta-path alongside the node-level hetero-meta-path for dual-modal integration is explained in Section 4.1.2 \"Construction of hetero-meta-path\":\n\n\"As for community-level hetero-meta-path, we suggest that brain regions with cooperative interactions may form a closed induced subgraph in both Gf and Gd.\"\n\nIn essence, while the node-level hetero-meta-path captures the similarity of connection patterns between individual cross-modal node pairs (structure-function coupling at the node level), the **community-level hetero-meta-path aims to identify and integrate information about brain regions that exhibit cooperative interactions and form consistent \"closed induced subgraphs\" across *both* the functional (Gf) and structural (Gd) modalities.** This allows for a deeper and more comprehensive capture of structure-function relationships by considering higher-order topological patterns, rather than just individual node connections."
    },
    {
        "question": "How does structural constraint preserve Φ2 during augmented GH generation?",
        "relevant_section_ids": [
            "4",
            "4.2"
        ],
        "relevant_context": [
            "In present work, we propose a novel HGNN to fuse dual-modal information. We define meta-paths in the fused  as Φ1, Φ2, Φ3, and Φ4, where homo-meta-paths Φ1, Φ2 are edges of FC or SC, and hetero-meta-paths Φ3, Φ4 are edges between FC and SC.",
            "The abundant heterogeneity of the HG provides ample possibilities from the perspective of construction, which provides convenience for augmentation. Therefore, we propose to dynamically reconstruct FC to obtain , then ,  will naturally update along with . While  is fixed as structural constraint to maintain the semantic consistency of HGs before and after augmentation.",
            "Finally, we consider edges in  as  corresponding to Φ1. With  fixed, we can update  and  following (5)–(7). Then the augmented  can be constructed following (8)–(9). We sent  and  in pair into the backbone to avoid data leakage."
        ],
        "final_answer": "During augmentation only the functional‐connectivity meta-path Φ1 is re-estimated from sliding-window correlation, while the structural‐connectivity meta-path Φ2 is held fixed as a ‘‘structural constraint.’’ In other words, the adjacency matrix corresponding to Φ2 (SC) is not changed during augmentation, preserving Φ2 in the augmented heterogeneous graph.",
        "relevant_elements": [
            "structural constraint",
            "Φ2",
            "augmented GH"
        ],
        "id": 622,
        "masked_question": "How does [mask1] preserve [mask2] during augmented GH generation?",
        "masked_number": 2,
        "masked_elements": [
            "structural constraint",
            "Φ2"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.08424v1_figure_1.png",
        "paperid": "2411.08424v1",
        "paper_path": "./papers/2411.08424v1.json",
        "figure_id": "2411.08424v1_figure_1.png",
        "caption": "Figure 1: Overview of our proposed method. a) We extract node features, Φ1subscriptΦ1\\Phi_{1}roman_Φ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT and Φ2subscriptΦ2\\Phi_{2}roman_Φ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT from each modality to establish Gf={𝒩f,Φ1}subscript𝐺𝑓subscript𝒩𝑓subscriptΦ1G_{f}=\\left\\{\\mathcal{N}_{f},\\Phi_{1}\\right\\}italic_G start_POSTSUBSCRIPT italic_f end_POSTSUBSCRIPT = { caligraphic_N start_POSTSUBSCRIPT italic_f end_POSTSUBSCRIPT , roman_Φ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT }, Gd={𝒩d,Φ2}subscript𝐺𝑑subscript𝒩𝑑subscriptΦ2G_{d}=\\left\\{\\mathcal{N}_{d},\\Phi_{2}\\right\\}italic_G start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT = { caligraphic_N start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT , roman_Φ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT }. b) Node-level and community-level hetero-meta-paths are combined as meta-path Φ3:𝒩f→𝒩d:subscriptΦ3→subscript𝒩𝑓subscript𝒩𝑑\\Phi_{3}:\\mathcal{N}_{f}\\rightarrow\\mathcal{N}_{d}roman_Φ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT : caligraphic_N start_POSTSUBSCRIPT italic_f end_POSTSUBSCRIPT → caligraphic_N start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT, and Φ4subscriptΦ4\\Phi_{4}roman_Φ start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT is a reversal of Φ3subscriptΦ3\\Phi_{3}roman_Φ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT. The subject-level HG is denoted as GH={(𝒩f,𝒩d),(Φ1,Φ2,Φ3,Φ4)}subscript𝐺𝐻subscript𝒩𝑓subscript𝒩𝑑subscriptΦ1subscriptΦ2subscriptΦ3subscriptΦ4G_{H}=\\left\\{\\left(\\mathcal{N}_{f},\\mathcal{N}_{d}\\right),\\left(\\Phi_{1},\\Phi_%\n{2},\\Phi_{3},\\Phi_{4}\\right)\\right\\}italic_G start_POSTSUBSCRIPT italic_H end_POSTSUBSCRIPT = { ( caligraphic_N start_POSTSUBSCRIPT italic_f end_POSTSUBSCRIPT , caligraphic_N start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT ) , ( roman_Φ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , roman_Φ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT , roman_Φ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT , roman_Φ start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT ) },. c) We preserve Φ2subscriptΦ2\\Phi_{2}roman_Φ start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT and dynamically reconstruct FC to obtain Φ^1subscript^Φ1\\hat{\\Phi}_{1}over^ start_ARG roman_Φ end_ARG start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT, then update Φ3subscriptΦ3\\Phi_{3}roman_Φ start_POSTSUBSCRIPT 3 end_POSTSUBSCRIPT and Φ4subscriptΦ4\\Phi_{4}roman_Φ start_POSTSUBSCRIPT 4 end_POSTSUBSCRIPT to generate augmented G^Hsubscript^𝐺𝐻\\hat{G}_{H}over^ start_ARG italic_G end_ARG start_POSTSUBSCRIPT italic_H end_POSTSUBSCRIPT. d) Both GHsubscript𝐺𝐻G_{H}italic_G start_POSTSUBSCRIPT italic_H end_POSTSUBSCRIPT and G^Hsubscript^𝐺𝐻\\hat{G}_{H}over^ start_ARG italic_G end_ARG start_POSTSUBSCRIPT italic_H end_POSTSUBSCRIPT are fed into backbone consisted of HAN, HG pooling and readout layers to extract dual-modal features.",
        "qtype": "Implementation_Details",
        "response": "The 'structural constraint' (mask1) preserves $\\Phi_2$ (mask2) by fixing it to maintain the semantic consistency of Heterogeneous Graphs (HGs) before and after augmentation. This means $\\Phi_2$ (representing the structural connectivity, or SC, based on the context that $\\Phi_2$ corresponds to $G_d$ which is derived from DTI and SC) remains unchanged during the augmentation process, specifically when the functional connectivity (FC) is dynamically reconstructed to obtain $\\hat{\\Phi}_{1}$."
    },
    {
        "question": "How does instance normalization in latent map fusion remove style while preserving source content?",
        "relevant_section_ids": [
            "3.2.2"
        ],
        "relevant_context": [
            "In the top branch, an instance normalization (IN) layer standardizes Z_x across spatial dimensions using channel-wise mean and variance, producing Z^c_x. Previous studies show that channel-wise statistics in latent feature maps can encapsulate the style of images [40,41,42,43]. By standardizing each feature channel to zero mean and unit variance, the IN layer removes instance-specific style from an image while retaining essential content features in Z^c_x [44]."
        ],
        "final_answer": "Instance normalization (IN) computes the mean and variance of each latent feature channel across spatial locations and re-scales the channel to zero mean and unit variance. Because style information is largely encoded in these channel-wise statistics, IN effectively removes the original style, while the remaining normalized spatial patterns continue to carry the anatomical (content) information of the source MRI.",
        "relevant_elements": [
            "Instance Normalization",
            "Latent Map Fusion"
        ],
        "id": 624,
        "masked_question": "How does [mask1] in [mask2] remove style while preserving source content?",
        "masked_number": 2,
        "masked_elements": [
            "Instance Normalization",
            "Latent Map Fusion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.09315v1_figure_1.png",
        "paperid": "2408.09315v1",
        "paper_path": "./papers/2408.09315v1.json",
        "figure_id": "2408.09315v1_figure_1.png",
        "caption": "Figure 1: Illustration of the proposed\nHCLD framework.\nDuring training, it extracts latent feature maps from source and target MRIs using an encoder 𝑬𝑬\\bm{E}bold_italic_E, fuses latent representations, and trains a conditional latent diffusion model (cLDM) to estimate the translated latent maps.\nDuring inference, it applies the trained cLDM to generate the final translated latent map by iterative denoising Tssubscript𝑇𝑠T_{s}italic_T start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT steps and then utilizes a decoder 𝑫𝑫\\bm{D}bold_italic_D to reconstruct the translated MRI.\nBoth 𝑬𝑬\\bm{E}bold_italic_E and 𝑫𝑫\\bm{D}bold_italic_D are derived from an autoencoder pre-trained on 3,500 T1-weighted brain\nMRIs.",
        "qtype": "Implementation_Details",
        "response": "The \"IN\" (Instance Normalization) layer in the Latent Map Fusion module removes style while preserving source content by:\n\n1.  **Removing style:** It standardizes the source latent map (`Zx`) across spatial dimensions by setting its channel-wise mean to zero and its channel-wise variance to unity. The text states that \"channel-wise statistics in latent feature maps can encapsulate the style of images,\" so by removing these instance-specific channel-wise statistics, the IN layer effectively removes the instance-specific style from the source MRI.\n2.  **Preserving source content:** While removing the style information through normalization, the IN layer is designed to retain \"essential content features\" in the resulting latent representation (`Zxc`), thereby preserving the anatomical content from the source MRI."
    },
    {
        "question": "How are timestep encodings integrated into ResBlock and AttnBlock within the cLDM?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "ResBlock",
            "AttnBlock",
            "cLDM"
        ],
        "id": 625,
        "masked_question": "How are timestep encodings integrated into [mask1] and AttnBlock within the cLDM?",
        "masked_number": 1,
        "masked_elements": [
            "ResBlock"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.09315v1_figure_1.png",
        "paperid": "2408.09315v1",
        "paper_path": "./papers/2408.09315v1.json",
        "figure_id": "2408.09315v1_figure_1.png",
        "caption": "Figure 1: Illustration of the proposed\nHCLD framework.\nDuring training, it extracts latent feature maps from source and target MRIs using an encoder 𝑬𝑬\\bm{E}bold_italic_E, fuses latent representations, and trains a conditional latent diffusion model (cLDM) to estimate the translated latent maps.\nDuring inference, it applies the trained cLDM to generate the final translated latent map by iterative denoising Tssubscript𝑇𝑠T_{s}italic_T start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT steps and then utilizes a decoder 𝑫𝑫\\bm{D}bold_italic_D to reconstruct the translated MRI.\nBoth 𝑬𝑬\\bm{E}bold_italic_E and 𝑫𝑫\\bm{D}bold_italic_D are derived from an autoencoder pre-trained on 3,500 T1-weighted brain\nMRIs.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does latent map fusion's IN branch repurpose instance normalization to differentiate content from style?",
        "relevant_section_ids": [
            "3.2.2"
        ],
        "relevant_context": [
            "In the top branch, an instance normalization (IN) layer standardizes z_x across spatial dimensions using channel-wise mean and variance, producing z^c_x.",
            "Previous studies show that channel-wise statistics in latent feature maps can encapsulate the style of images [40, 41, 42, 43]. By standardizing each feature channel to zero mean and unit variance, the IN layer removes instance-specific style from an image while retaining essential content features in z^c_x."
        ],
        "final_answer": "The IN branch applies instance normalization to the source latent map by normalizing each channel to zero mean and unit variance. Since channel-wise mean and variance encode style, this procedure strips away instance-specific style information, yielding a latent map that retains content features while discarding style.",
        "relevant_elements": [
            "Latent Map Fusion",
            "IN"
        ],
        "id": 626,
        "masked_question": "How does [mask1]'s [mask2] branch repurpose instance normalization to differentiate content from style?",
        "masked_number": 2,
        "masked_elements": [
            "Latent Map Fusion",
            "IN"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.09315v1_figure_1.png",
        "paperid": "2408.09315v1",
        "paper_path": "./papers/2408.09315v1.json",
        "figure_id": "2408.09315v1_figure_1.png",
        "caption": "Figure 1: Illustration of the proposed\nHCLD framework.\nDuring training, it extracts latent feature maps from source and target MRIs using an encoder 𝑬𝑬\\bm{E}bold_italic_E, fuses latent representations, and trains a conditional latent diffusion model (cLDM) to estimate the translated latent maps.\nDuring inference, it applies the trained cLDM to generate the final translated latent map by iterative denoising Tssubscript𝑇𝑠T_{s}italic_T start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT steps and then utilizes a decoder 𝑫𝑫\\bm{D}bold_italic_D to reconstruct the translated MRI.\nBoth 𝑬𝑬\\bm{E}bold_italic_E and 𝑫𝑫\\bm{D}bold_italic_D are derived from an autoencoder pre-trained on 3,500 T1-weighted brain\nMRIs.",
        "qtype": "Literature_Background",
        "response": "The Latent Map Fusion module's \"IN\" (Instance Normalization) branch repurposes instance normalization to differentiate content from style by standardizing each feature channel of the source latent map (Z_x) to zero mean and unit variance. This process explicitly *removes instance-specific style* through the normalization of channel-wise statistics (which are known to encapsulate image style), thereby *retaining essential content features* in the resulting latent representation (Z_x^c). This effectively provides a latent representation of the source MRI's content information, reducing the influence of its inherent style."
    },
    {
        "question": "How does pre-trained encoder reuse enable cLDM's efficient two-stage latent diffusion optimization?",
        "relevant_section_ids": [
            "3.2",
            "3.4"
        ],
        "relevant_context": [
            "Notably, only the cLDM undergoes updates during the training stage.",
            "In the second training stage, the pre-trained autoencoder networks E and D are reused with their network parameters frozen. Only the cLDM is updated to reconstruct the translated source latent map with the target domain style, which is computationally efficient as it operates in low-dimensional latent space."
        ],
        "final_answer": "By first training a 3D autoencoder (encoder E and decoder D) to compress MRIs into a low-dimensional latent space, then freezing its weights in the second stage, the framework only needs to update the conditional latent diffusion model (cLDM). This two-stage training—autoencoder pre-training followed by cLDM optimization in latent space—dramatically reduces computational cost (because diffusion operates in low-dimensional space), avoids the instability of jointly updating multiple networks, and improves generalizability on unseen data.",
        "relevant_elements": [
            "Encoder E",
            "Conditional Latent Diffusion Model (cLDM)"
        ],
        "id": 627,
        "masked_question": "How does pre-trained [mask1] reuse enable cLDM's efficient two-stage latent diffusion optimization?",
        "masked_number": 1,
        "masked_elements": [
            "Encoder E"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.09315v1_figure_1.png",
        "paperid": "2408.09315v1",
        "paper_path": "./papers/2408.09315v1.json",
        "figure_id": "2408.09315v1_figure_1.png",
        "caption": "Figure 1: Illustration of the proposed\nHCLD framework.\nDuring training, it extracts latent feature maps from source and target MRIs using an encoder 𝑬𝑬\\bm{E}bold_italic_E, fuses latent representations, and trains a conditional latent diffusion model (cLDM) to estimate the translated latent maps.\nDuring inference, it applies the trained cLDM to generate the final translated latent map by iterative denoising Tssubscript𝑇𝑠T_{s}italic_T start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT steps and then utilizes a decoder 𝑫𝑫\\bm{D}bold_italic_D to reconstruct the translated MRI.\nBoth 𝑬𝑬\\bm{E}bold_italic_E and 𝑫𝑫\\bm{D}bold_italic_D are derived from an autoencoder pre-trained on 3,500 T1-weighted brain\nMRIs.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does feature extraction inform multi-relational text graph construction differently than single-view construction?",
        "relevant_section_ids": [
            "1",
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "Existing methods treat words and documents as nodes and construct a heterogeneous text graph based on the point-wise mutual information (PMI) relationships between words and the TF-IDF relationships between words and documents. Despite such methods having achieved promising results, they neglect the rich and deep semantics, which is pivotal for capturing the core intent of the text. (Section 1)",
            "To forge links between texts that are otherwise unconnected, we extract various core features: titles, keywords, and events. Each of these is embedded via a pre-trained encoder to yield vector representations that will later define semantic relations. (Section 3.1)",
            "Rather than relying on a single, undifferentiated graph, we calculate the semantic similarity between the extracted features to construct multiple semantic relationships between document nodes, corresponding to title relationships, keyword relationships, and event relationships. Based on the rich features inherent in the text, the constructed text graph can maximize the connections between similar documents. (Section 3.2)"
        ],
        "final_answer": "Traditional single-view graph construction builds one graph—typically using PMI for word–word edges and TF-IDF for word–document edges—thus ignoring deeper semantics. In contrast, ConNHS’s feature extraction first pulls out titles, keywords, and events and embeds each via a pre-trained encoder. Then, in multi-relational graph construction, these distinct features are used to compute separate similarity scores, producing three parallel subgraphs (title-based, keyword-based, event-based). This multi-view approach captures richer semantic connections than a single undifferentiated graph.",
        "relevant_elements": [
            "Feature extraction",
            "Multi-relational text graph construction"
        ],
        "id": 628,
        "masked_question": "How does [mask1] inform [mask2] differently than single-view construction?",
        "masked_number": 2,
        "masked_elements": [
            "Feature extraction",
            "Multi-relational text graph construction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.16787v1_figure_1.png",
        "paperid": "2411.16787v1",
        "paper_path": "./papers/2411.16787v1.json",
        "figure_id": "2411.16787v1_figure_1.png",
        "caption": "Figure 1: Flow chart of the proposed ConNHS. Initially, we construct a multi-relational text graph by leveraging inherent core features (titles, keywords, events) to establish semantic connections among texts while encoding textual content as initial node representations. Subsequently, relational separation yields distinct subgraphs, upon which intra-graph and inter-graph propagation are performed to obtain contrastive samples and similarity score matrix. During Contrastive learning with NHS, negative selection is optimized to encourage more explicit cluster boundaries (minimizing intra-class distances while maximizing inter-class distances; distinct colors indicate different clusters). Ultimately, predicted labels are assigned to document nodes via a logical classifier.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does inter-graph propagation improve upon equal-weight fusion in earlier multi-graph frameworks?",
        "relevant_section_ids": [
            "1",
            "3.3"
        ],
        "relevant_context": [
            "Secondly, they assign equal weights to different features during the inter-graph propagation, ignoring the intrinsic differences inherent in these features.",
            "After intra-graph propagation, each document node learns unique feature information under different semantic relationships. Therefore, we design a cross-graph attention network to coordinate and integrate diverse feature information."
        ],
        "final_answer": "Inter-graph propagation improves upon equal-weight fusion by introducing a cross-graph attention network (CGAN) that learns attention weights for each semantic subgraph’s node representations, rather than averaging them equally. This attention mechanism harmonizes and coordinates diverse feature information across graphs, capturing their intrinsic differences and leading to more nuanced fused representations.",
        "relevant_elements": [
            "Inter-Graph propagation"
        ],
        "id": 629,
        "masked_question": "How does [mask1] improve upon equal-weight fusion in earlier multi-graph frameworks?",
        "masked_number": 1,
        "masked_elements": [
            "Inter-Graph propagation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.16787v1_figure_1.png",
        "paperid": "2411.16787v1",
        "paper_path": "./papers/2411.16787v1.json",
        "figure_id": "2411.16787v1_figure_1.png",
        "caption": "Figure 1: Flow chart of the proposed ConNHS. Initially, we construct a multi-relational text graph by leveraging inherent core features (titles, keywords, events) to establish semantic connections among texts while encoding textual content as initial node representations. Subsequently, relational separation yields distinct subgraphs, upon which intra-graph and inter-graph propagation are performed to obtain contrastive samples and similarity score matrix. During Contrastive learning with NHS, negative selection is optimized to encourage more explicit cluster boundaries (minimizing intra-class distances while maximizing inter-class distances; distinct colors indicate different clusters). Ultimately, predicted labels are assigned to document nodes via a logical classifier.",
        "qtype": "Literature_Background",
        "response": "The \"Multi-graph learning\" stage in ConNHS (corresponding to [mask1] in the image), specifically through its **Cross-Graph Attention Network (CGAN)**, improves upon equal-weight fusion in earlier multi-graph frameworks by:\n\n1.  **Considering Feature Differences:** Earlier methods assign equal weights to different features during inter-graph propagation, ignoring the intrinsic differences inherent in these features.\n2."
    },
    {
        "question": "How does regressing post-D rewards on binary features quantify feature imprint methodology?",
        "relevant_section_ids": [
            "2.1"
        ],
        "relevant_context": [
            "We can now quantify the extent to which target and spoiler features imprint on the RMs by regressing rewards (or reward shifts) against the boolean feature indicators:",
            "… The coefficient β_j estimates the point increase in reward between an entry t_i (or t_i′) containing feature j compared to an entry without it, holding all other features constant. We refer to this as the post-D imprint for value j."
        ],
        "final_answer": "By performing a linear regression of the post-D reward scores on binary feature indicators, the method assigns each feature j a coefficient β_j. This coefficient directly measures the point increase in the reward model’s score when that feature is present (versus absent), thereby quantifying the strength of the feature’s imprint on the trained reward model.",
        "relevant_elements": [
            "post-D reward vectors",
            "feature imprint"
        ],
        "id": 632,
        "masked_question": "How does regressing [mask1] on binary features quantify feature imprint methodology?",
        "masked_number": 1,
        "masked_elements": [
            "post-D reward vectors"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.10270v1_figure_1.png",
        "paperid": "2408.10270v1",
        "paper_path": "./papers/2408.10270v1.json",
        "figure_id": "2408.10270v1_figure_1.png",
        "caption": "Figure 1: Summary of the paper s background, setup and contributions. [1] AI Alignment Pipeline: This section illustrates the sequence of events during RLHF, highlighting the interactions between the alignment dataset, human preferences, the RM and the base-model being aligned. [2] Alignment Dataset Taxonomization: The alignment dataset 𝒟𝒟\\mathcal{D}caligraphic_D comprises pairs of text (tic,tirsuperscriptsubscript𝑡𝑖𝑐superscriptsubscript𝑡𝑖𝑟t_{i}^{c},t_{i}^{r}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT , italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT) where ticsuperscriptsubscript𝑡𝑖𝑐t_{i}^{c}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT is preferred by the human over tirsuperscriptsubscript𝑡𝑖𝑟t_{i}^{r}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT presumably because it is more aligned with a set of defined target values. (Top) The alignment dataset is featurized using an LM-labeler based on a set of target features (intended for alignment, in black) and spoiler features (learned inadvertently, in grey). (Bottom) The alignment dataset is rewritten and re-featurized accordingly. [3] Reward Models (RMs): (Top) An RM maps a user input-model output pair t𝑡titalic_t to a score r (t).𝑟𝑡r(t).italic_r ( italic_t ) . We compare the RM before (pre-𝒟𝒟\\mathcal{D}caligraphic_D model ℛ¯¯ℛ\\underline{\\mathcal{R}}under¯ start_ARG caligraphic_R end_ARG) and after (post-𝒟𝒟\\mathcal{D}caligraphic_D model ℛℛ\\mathcal{R}caligraphic_R) it is trained on the alignment dataset. (Bottom) The pair of rewards awarded by ℛℛ\\mathcal{R}caligraphic_R (r (tic),r (tir))𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟({\\color[rgb]{0,.5,.5}r}(t_{i}^{c}),{\\color[rgb]{0,.5,.5}r}(t_{i}^{r}))( italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) , italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) ) is interpreted as vectors. The sign of r (tic)−r (tir)𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{0,.5,.5}r}(t_{i}^{c})-{\\color[rgb]{0,.5,.5}r}(t_{i}^{r})italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) - italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) indicates whether the RM s scores are aligned or not with human preferences in the dataset. (r¯ (tic),r¯ (tir))¯𝑟superscriptsubscript𝑡𝑖𝑐¯𝑟superscriptsubscript𝑡𝑖𝑟({\\color[rgb]{.75,.5,.25}\\underline{r}}(t_{i}^{c}),{\\color[rgb]{.75,.5,.25}%\n\\underline{r}}(t_{i}^{r}))( under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) , under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) ) denotes the reward vectors assigned by ℛ¯¯ℛ\\underline{\\mathcal{R}}under¯ start_ARG caligraphic_R end_ARG. [4] Evaluation Report for Anthropic/hh Alignment Dataset x OpenAssistant RM Alignment Pipeline: Results of the SEAL methodology applied to an open-source alignment pipeline purposed to render base models more helpful and harmless. (Feature Imprint) By regressing rewards against binary features indicators, we estimate that top features driving rewards are harmlessness, privacy-preserving, helpfulness, eloquence and sentiment. A feature imprint of β (harmlessness)=2.09𝛽harmlessness2.09\\beta(\\text{harmlessness})=2.09italic_β ( harmlessness ) = 2.09 implies that harmless text has a reward 2.092.092.092.09 points higher than harmful text. (Alignment Resistance) More than one out of four pairs in the alignment dataset have r (tic)<r (tir),𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{0,.5,.5}r}(t_{i}^{c})<{\\color[rgb]{0,.5,.5}r}(t_{i}^{r}),italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) < italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) , indicating that ℛℛ\\mathcal{R}caligraphic_R rewards the entry least preferred by the human (the teal arrow is in the misaligned space). Additionally, ℛℛ\\mathcal{R}caligraphic_R reverses alignment 8%percent88\\%8 % of the time (r¯ (tic)>r¯ (tir)¯𝑟superscriptsubscript𝑡𝑖𝑐¯𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{.75,.5,.25}\\underline{r}}(t_{i}^{c})>{\\color[rgb]{.75,.5,.25}%\n\\underline{r}}(t_{i}^{r})under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) > under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) and r (tic)<r (tir)𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{0,.5,.5}r}(t_{i}^{c})<{\\color[rgb]{0,.5,.5}r}(t_{i}^{r})italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) < italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT )). (Robustness Scores) Rewriting entries to sound more positive increases the risks of misalignment.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does label-flip logistic regression isolate robustness scores using rewritten alignment dataset methodology?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "The robustness score is computed as the coefficient of a logistic regression that measures the impact of label flipping on misalignment incidence.",
            "The indicator variable Δ_i equals 1 when the RM was aligned with human preferences before rewriting and not after.",
            "We set 0 (the absence of label flip) as the baseline, resulting in two coefficients R_{f,chosen} and R_{f,rejected}.",
            "Thus, R_{f,k} measures the extent to which alignment is robust to rewriting, isolating the effects of each feature and each event type."
        ],
        "final_answer": "They fit a logistic regression predicting whether a pair flips from aligned to misaligned after rewriting (Δ_i=1), with categorical indicators for each feature flip event (e.g. feature f flipped in the chosen or rejected entry). By using “no flip” as the baseline, the model yields two coefficients per feature—R_{f,chosen} and R_{f,rejected}—whose sizes (or exponentials) are the odds-multipliers for misalignment caused by that specific flip. These coefficients therefore isolate each feature’s robustness score to mild perturbations in the rewritten dataset.",
        "relevant_elements": [
            "rewritten alignment dataset",
            "robustness scores"
        ],
        "id": 633,
        "masked_question": "How does label-flip logistic regression isolate [mask1] using rewritten alignment dataset methodology?",
        "masked_number": 1,
        "masked_elements": [
            "robustness scores"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.10270v1_figure_1.png",
        "paperid": "2408.10270v1",
        "paper_path": "./papers/2408.10270v1.json",
        "figure_id": "2408.10270v1_figure_1.png",
        "caption": "Figure 1: Summary of the paper s background, setup and contributions. [1] AI Alignment Pipeline: This section illustrates the sequence of events during RLHF, highlighting the interactions between the alignment dataset, human preferences, the RM and the base-model being aligned. [2] Alignment Dataset Taxonomization: The alignment dataset 𝒟𝒟\\mathcal{D}caligraphic_D comprises pairs of text (tic,tirsuperscriptsubscript𝑡𝑖𝑐superscriptsubscript𝑡𝑖𝑟t_{i}^{c},t_{i}^{r}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT , italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT) where ticsuperscriptsubscript𝑡𝑖𝑐t_{i}^{c}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT is preferred by the human over tirsuperscriptsubscript𝑡𝑖𝑟t_{i}^{r}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT presumably because it is more aligned with a set of defined target values. (Top) The alignment dataset is featurized using an LM-labeler based on a set of target features (intended for alignment, in black) and spoiler features (learned inadvertently, in grey). (Bottom) The alignment dataset is rewritten and re-featurized accordingly. [3] Reward Models (RMs): (Top) An RM maps a user input-model output pair t𝑡titalic_t to a score r (t).𝑟𝑡r(t).italic_r ( italic_t ) . We compare the RM before (pre-𝒟𝒟\\mathcal{D}caligraphic_D model ℛ¯¯ℛ\\underline{\\mathcal{R}}under¯ start_ARG caligraphic_R end_ARG) and after (post-𝒟𝒟\\mathcal{D}caligraphic_D model ℛℛ\\mathcal{R}caligraphic_R) it is trained on the alignment dataset. (Bottom) The pair of rewards awarded by ℛℛ\\mathcal{R}caligraphic_R (r (tic),r (tir))𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟({\\color[rgb]{0,.5,.5}r}(t_{i}^{c}),{\\color[rgb]{0,.5,.5}r}(t_{i}^{r}))( italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) , italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) ) is interpreted as vectors. The sign of r (tic)−r (tir)𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{0,.5,.5}r}(t_{i}^{c})-{\\color[rgb]{0,.5,.5}r}(t_{i}^{r})italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) - italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) indicates whether the RM s scores are aligned or not with human preferences in the dataset. (r¯ (tic),r¯ (tir))¯𝑟superscriptsubscript𝑡𝑖𝑐¯𝑟superscriptsubscript𝑡𝑖𝑟({\\color[rgb]{.75,.5,.25}\\underline{r}}(t_{i}^{c}),{\\color[rgb]{.75,.5,.25}%\n\\underline{r}}(t_{i}^{r}))( under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) , under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) ) denotes the reward vectors assigned by ℛ¯¯ℛ\\underline{\\mathcal{R}}under¯ start_ARG caligraphic_R end_ARG. [4] Evaluation Report for Anthropic/hh Alignment Dataset x OpenAssistant RM Alignment Pipeline: Results of the SEAL methodology applied to an open-source alignment pipeline purposed to render base models more helpful and harmless. (Feature Imprint) By regressing rewards against binary features indicators, we estimate that top features driving rewards are harmlessness, privacy-preserving, helpfulness, eloquence and sentiment. A feature imprint of β (harmlessness)=2.09𝛽harmlessness2.09\\beta(\\text{harmlessness})=2.09italic_β ( harmlessness ) = 2.09 implies that harmless text has a reward 2.092.092.092.09 points higher than harmful text. (Alignment Resistance) More than one out of four pairs in the alignment dataset have r (tic)<r (tir),𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{0,.5,.5}r}(t_{i}^{c})<{\\color[rgb]{0,.5,.5}r}(t_{i}^{r}),italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) < italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) , indicating that ℛℛ\\mathcal{R}caligraphic_R rewards the entry least preferred by the human (the teal arrow is in the misaligned space). Additionally, ℛℛ\\mathcal{R}caligraphic_R reverses alignment 8%percent88\\%8 % of the time (r¯ (tic)>r¯ (tir)¯𝑟superscriptsubscript𝑡𝑖𝑐¯𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{.75,.5,.25}\\underline{r}}(t_{i}^{c})>{\\color[rgb]{.75,.5,.25}%\n\\underline{r}}(t_{i}^{r})under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) > under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) and r (tic)<r (tir)𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{0,.5,.5}r}(t_{i}^{c})<{\\color[rgb]{0,.5,.5}r}(t_{i}^{r})italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) < italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT )). (Robustness Scores) Rewriting entries to sound more positive increases the risks of misalignment.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What ethical concerns arise from using an LM-labeler for dataset featurization in Alignment Dataset Taxonomization?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Alignment Dataset Taxonomization",
            "LM-labeler"
        ],
        "id": 634,
        "masked_question": "What ethical concerns arise from using an LM-labeler for dataset featurization in [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "Alignment Dataset Taxonomization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.10270v1_figure_1.png",
        "paperid": "2408.10270v1",
        "paper_path": "./papers/2408.10270v1.json",
        "figure_id": "2408.10270v1_figure_1.png",
        "caption": "Figure 1: Summary of the paper s background, setup and contributions. [1] AI Alignment Pipeline: This section illustrates the sequence of events during RLHF, highlighting the interactions between the alignment dataset, human preferences, the RM and the base-model being aligned. [2] Alignment Dataset Taxonomization: The alignment dataset 𝒟𝒟\\mathcal{D}caligraphic_D comprises pairs of text (tic,tirsuperscriptsubscript𝑡𝑖𝑐superscriptsubscript𝑡𝑖𝑟t_{i}^{c},t_{i}^{r}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT , italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT) where ticsuperscriptsubscript𝑡𝑖𝑐t_{i}^{c}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT is preferred by the human over tirsuperscriptsubscript𝑡𝑖𝑟t_{i}^{r}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT presumably because it is more aligned with a set of defined target values. (Top) The alignment dataset is featurized using an LM-labeler based on a set of target features (intended for alignment, in black) and spoiler features (learned inadvertently, in grey). (Bottom) The alignment dataset is rewritten and re-featurized accordingly. [3] Reward Models (RMs): (Top) An RM maps a user input-model output pair t𝑡titalic_t to a score r (t).𝑟𝑡r(t).italic_r ( italic_t ) . We compare the RM before (pre-𝒟𝒟\\mathcal{D}caligraphic_D model ℛ¯¯ℛ\\underline{\\mathcal{R}}under¯ start_ARG caligraphic_R end_ARG) and after (post-𝒟𝒟\\mathcal{D}caligraphic_D model ℛℛ\\mathcal{R}caligraphic_R) it is trained on the alignment dataset. (Bottom) The pair of rewards awarded by ℛℛ\\mathcal{R}caligraphic_R (r (tic),r (tir))𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟({\\color[rgb]{0,.5,.5}r}(t_{i}^{c}),{\\color[rgb]{0,.5,.5}r}(t_{i}^{r}))( italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) , italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) ) is interpreted as vectors. The sign of r (tic)−r (tir)𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{0,.5,.5}r}(t_{i}^{c})-{\\color[rgb]{0,.5,.5}r}(t_{i}^{r})italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) - italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) indicates whether the RM s scores are aligned or not with human preferences in the dataset. (r¯ (tic),r¯ (tir))¯𝑟superscriptsubscript𝑡𝑖𝑐¯𝑟superscriptsubscript𝑡𝑖𝑟({\\color[rgb]{.75,.5,.25}\\underline{r}}(t_{i}^{c}),{\\color[rgb]{.75,.5,.25}%\n\\underline{r}}(t_{i}^{r}))( under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) , under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) ) denotes the reward vectors assigned by ℛ¯¯ℛ\\underline{\\mathcal{R}}under¯ start_ARG caligraphic_R end_ARG. [4] Evaluation Report for Anthropic/hh Alignment Dataset x OpenAssistant RM Alignment Pipeline: Results of the SEAL methodology applied to an open-source alignment pipeline purposed to render base models more helpful and harmless. (Feature Imprint) By regressing rewards against binary features indicators, we estimate that top features driving rewards are harmlessness, privacy-preserving, helpfulness, eloquence and sentiment. A feature imprint of β (harmlessness)=2.09𝛽harmlessness2.09\\beta(\\text{harmlessness})=2.09italic_β ( harmlessness ) = 2.09 implies that harmless text has a reward 2.092.092.092.09 points higher than harmful text. (Alignment Resistance) More than one out of four pairs in the alignment dataset have r (tic)<r (tir),𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{0,.5,.5}r}(t_{i}^{c})<{\\color[rgb]{0,.5,.5}r}(t_{i}^{r}),italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) < italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) , indicating that ℛℛ\\mathcal{R}caligraphic_R rewards the entry least preferred by the human (the teal arrow is in the misaligned space). Additionally, ℛℛ\\mathcal{R}caligraphic_R reverses alignment 8%percent88\\%8 % of the time (r¯ (tic)>r¯ (tir)¯𝑟superscriptsubscript𝑡𝑖𝑐¯𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{.75,.5,.25}\\underline{r}}(t_{i}^{c})>{\\color[rgb]{.75,.5,.25}%\n\\underline{r}}(t_{i}^{r})under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) > under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) and r (tic)<r (tir)𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{0,.5,.5}r}(t_{i}^{c})<{\\color[rgb]{0,.5,.5}r}(t_{i}^{r})italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) < italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT )). (Robustness Scores) Rewriting entries to sound more positive increases the risks of misalignment.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations arise from relying on Pre- and Post-D Reward Vectors to interpret nuanced human preferences?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Pre- and Post-D Reward Vectors"
        ],
        "id": 635,
        "masked_question": "What limitations arise from relying on [mask1] to interpret nuanced human preferences?",
        "masked_number": 1,
        "masked_elements": [
            "Pre- and Post-D Reward Vectors"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.10270v1_figure_1.png",
        "paperid": "2408.10270v1",
        "paper_path": "./papers/2408.10270v1.json",
        "figure_id": "2408.10270v1_figure_1.png",
        "caption": "Figure 1: Summary of the paper s background, setup and contributions. [1] AI Alignment Pipeline: This section illustrates the sequence of events during RLHF, highlighting the interactions between the alignment dataset, human preferences, the RM and the base-model being aligned. [2] Alignment Dataset Taxonomization: The alignment dataset 𝒟𝒟\\mathcal{D}caligraphic_D comprises pairs of text (tic,tirsuperscriptsubscript𝑡𝑖𝑐superscriptsubscript𝑡𝑖𝑟t_{i}^{c},t_{i}^{r}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT , italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT) where ticsuperscriptsubscript𝑡𝑖𝑐t_{i}^{c}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT is preferred by the human over tirsuperscriptsubscript𝑡𝑖𝑟t_{i}^{r}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT presumably because it is more aligned with a set of defined target values. (Top) The alignment dataset is featurized using an LM-labeler based on a set of target features (intended for alignment, in black) and spoiler features (learned inadvertently, in grey). (Bottom) The alignment dataset is rewritten and re-featurized accordingly. [3] Reward Models (RMs): (Top) An RM maps a user input-model output pair t𝑡titalic_t to a score r (t).𝑟𝑡r(t).italic_r ( italic_t ) . We compare the RM before (pre-𝒟𝒟\\mathcal{D}caligraphic_D model ℛ¯¯ℛ\\underline{\\mathcal{R}}under¯ start_ARG caligraphic_R end_ARG) and after (post-𝒟𝒟\\mathcal{D}caligraphic_D model ℛℛ\\mathcal{R}caligraphic_R) it is trained on the alignment dataset. (Bottom) The pair of rewards awarded by ℛℛ\\mathcal{R}caligraphic_R (r (tic),r (tir))𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟({\\color[rgb]{0,.5,.5}r}(t_{i}^{c}),{\\color[rgb]{0,.5,.5}r}(t_{i}^{r}))( italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) , italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) ) is interpreted as vectors. The sign of r (tic)−r (tir)𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{0,.5,.5}r}(t_{i}^{c})-{\\color[rgb]{0,.5,.5}r}(t_{i}^{r})italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) - italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) indicates whether the RM s scores are aligned or not with human preferences in the dataset. (r¯ (tic),r¯ (tir))¯𝑟superscriptsubscript𝑡𝑖𝑐¯𝑟superscriptsubscript𝑡𝑖𝑟({\\color[rgb]{.75,.5,.25}\\underline{r}}(t_{i}^{c}),{\\color[rgb]{.75,.5,.25}%\n\\underline{r}}(t_{i}^{r}))( under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) , under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) ) denotes the reward vectors assigned by ℛ¯¯ℛ\\underline{\\mathcal{R}}under¯ start_ARG caligraphic_R end_ARG. [4] Evaluation Report for Anthropic/hh Alignment Dataset x OpenAssistant RM Alignment Pipeline: Results of the SEAL methodology applied to an open-source alignment pipeline purposed to render base models more helpful and harmless. (Feature Imprint) By regressing rewards against binary features indicators, we estimate that top features driving rewards are harmlessness, privacy-preserving, helpfulness, eloquence and sentiment. A feature imprint of β (harmlessness)=2.09𝛽harmlessness2.09\\beta(\\text{harmlessness})=2.09italic_β ( harmlessness ) = 2.09 implies that harmless text has a reward 2.092.092.092.09 points higher than harmful text. (Alignment Resistance) More than one out of four pairs in the alignment dataset have r (tic)<r (tir),𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{0,.5,.5}r}(t_{i}^{c})<{\\color[rgb]{0,.5,.5}r}(t_{i}^{r}),italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) < italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) , indicating that ℛℛ\\mathcal{R}caligraphic_R rewards the entry least preferred by the human (the teal arrow is in the misaligned space). Additionally, ℛℛ\\mathcal{R}caligraphic_R reverses alignment 8%percent88\\%8 % of the time (r¯ (tic)>r¯ (tir)¯𝑟superscriptsubscript𝑡𝑖𝑐¯𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{.75,.5,.25}\\underline{r}}(t_{i}^{c})>{\\color[rgb]{.75,.5,.25}%\n\\underline{r}}(t_{i}^{r})under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) > under¯ start_ARG italic_r end_ARG ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT ) and r (tic)<r (tir)𝑟superscriptsubscript𝑡𝑖𝑐𝑟superscriptsubscript𝑡𝑖𝑟{\\color[rgb]{0,.5,.5}r}(t_{i}^{c})<{\\color[rgb]{0,.5,.5}r}(t_{i}^{r})italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT ) < italic_r ( italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT )). (Robustness Scores) Rewriting entries to sound more positive increases the risks of misalignment.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations arise in CAP when compounding a fixed normal prompt with multiple abnormal prompts?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "One issue in ZSAD is that the fine-grained abnormality patterns can be very different from the auxiliary dataset to test datasets. In addition to the learning of a set of complementary fine-grained abnormality prompts, it is important to ensure that the learned fine-grained abnormality patterns are generalized to target testing datasets."
        ],
        "final_answer": "Because CAP compounds a fixed normal prompt with a static set of abnormal prompts, the resulting fine-grained abnormality semantics remain fixed and do not adapt to new test domains. In other words, CAP alone may fail to generalize its learned abnormal prompts when the target dataset exhibits different fine-grained anomaly patterns.",
        "relevant_elements": [
            "Compound Abnormality Prompting (CAP)"
        ],
        "id": 636,
        "masked_question": "What limitations arise in [mask1] when compounding a fixed normal prompt with multiple abnormal prompts?",
        "masked_number": 1,
        "masked_elements": [
            "Compound Abnormality Prompting (CAP)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.10289v1_figure_2.png",
        "paperid": "2410.10289v1",
        "paper_path": "./papers/2410.10289v1.json",
        "figure_id": "2410.10289v1_figure_2.png",
        "caption": "Figure 2: Overview of FAPrompt. It consists of two novel modules, including the Compound Abnormality Prompting (CAP) module and the Data-dependent Abnormality Prior (DAP) module detailed in the top-right and bottom-right corners respectively. CAP is devised to learn fine-grained abnormality semantics without relying on detailed human annotations or text descriptions, while DAP is designed to adaptively select the most abnormal features from each query/test image as a sample-wise abnormality prior to enhance the cross-dataset generalizability of the abnormality prompts in CAP.",
        "qtype": "Others",
        "response": "The [mask1] in the diagram refers to the \"Compound Abnormality Prompting (CAP)\" module.\n\nBased on the \"Compound Abnormality Prompt Learning\" section, specifically under \"Learning Complementary Abnormality Prompts\", the text discusses a challenge related to compounding multiple abnormal prompts:\n\n1.  **Challenge**: \"To capture complementary fine-grained abnormalities and reduce redundant information captured by the abnormality prompts, it is essential to maximize the diversity among the fine-grained abnormalities.\"\n\nThe text then describes a \"straightforward approach\" to achieve this diversity and its limitation:\n2.  **Straightforward Approach's Limitation**: Training distinct abnormal prompts on separate, annotated subsets with samples from different anomalous types \"would require extensive human annotations.\"\n\nThis implies that a key limitation when compounding multiple abnormal prompts is ensuring that these prompts capture **diverse and complementary fine-grained abnormality semantics** rather than redundant information, especially without the availability of extensive human annotations to train them on distinct anomaly types. The paper addresses this limitation by introducing an orthogonal constraint loss, but the necessity for such a mechanism highlights the inherent difficulty.\n\nTherefore, the limitation that arises is the challenge of ensuring that the multiple"
    },
    {
        "question": "What alternative strategies could enhance DAP’s sample-wise abnormality prior beyond top M patch selection?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Data-dependent Abnormality Prior (DAP)",
            "sample-wise abnormality prior"
        ],
        "id": 637,
        "masked_question": "What alternative strategies could enhance DAP’s [mask1] beyond top M patch selection?",
        "masked_number": 1,
        "masked_elements": [
            "sample-wise abnormality prior"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.10289v1_figure_2.png",
        "paperid": "2410.10289v1",
        "paper_path": "./papers/2410.10289v1.json",
        "figure_id": "2410.10289v1_figure_2.png",
        "caption": "Figure 2: Overview of FAPrompt. It consists of two novel modules, including the Compound Abnormality Prompting (CAP) module and the Data-dependent Abnormality Prior (DAP) module detailed in the top-right and bottom-right corners respectively. CAP is devised to learn fine-grained abnormality semantics without relying on detailed human annotations or text descriptions, while DAP is designed to adaptively select the most abnormal features from each query/test image as a sample-wise abnormality prior to enhance the cross-dataset generalizability of the abnormality prompts in CAP.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What reasoning underlies applying an orthogonal constraint among abnormality prompts in CAP?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "To capture complementary fine-grained abnormalities and reduce redundant information captured by the abnormality prompts, it is essential to maximize the diversity among the fine-grained abnormalities.",
            "A straightforward approach would be to train distinct abnormal prompts on separate, annotated subsets with samples from different anomalous types. However, this would require extensive human annotations. To address this issue, we propose to add an orthogonal constraint loss L_oc into the abnormality prompts in CAP as a alternative method to encourage this diversity."
        ],
        "final_answer": "The orthogonal constraint is applied to encourage maximum diversity among the fine-grained abnormality prompts. By enforcing orthogonality, the prompts capture complementary, non-redundant abnormal semantics without requiring separate annotations for each anomaly type.",
        "relevant_elements": [
            "Compound Abnormality Prompting (CAP)",
            "orthogonal constraint"
        ],
        "id": 638,
        "masked_question": "What reasoning underlies applying an orthogonal constraint among abnormality prompts in [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "Compound Abnormality Prompting (CAP)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.10289v1_figure_2.png",
        "paperid": "2410.10289v1",
        "paper_path": "./papers/2410.10289v1.json",
        "figure_id": "2410.10289v1_figure_2.png",
        "caption": "Figure 2: Overview of FAPrompt. It consists of two novel modules, including the Compound Abnormality Prompting (CAP) module and the Data-dependent Abnormality Prior (DAP) module detailed in the top-right and bottom-right corners respectively. CAP is devised to learn fine-grained abnormality semantics without relying on detailed human annotations or text descriptions, while DAP is designed to adaptively select the most abnormal features from each query/test image as a sample-wise abnormality prior to enhance the cross-dataset generalizability of the abnormality prompts in CAP.",
        "qtype": "Design_Rationale",
        "response": "The reasoning behind applying an orthogonal constraint among abnormality prompts in the Compound Abnormality Prompting (CAP) module, as highlighted by [mask1], is to:\n\n1.  **Capture complementary fine-grained abnormalities:** The constraint helps ensure that the different abnormality prompts represent distinct aspects of abnormality.\n2.  **Reduce redundant information:** By encouraging orthogonality, the model avoids learning overlapping or similar abnormality semantics across different prompts.\n3.  **Maximize diversity among fine-grained abnormalities:** This is the overarching goal, enabling the system to cover a broader range of anomaly types effectively.\n4.  **Avoid extensive human annotations:** This orthogonal constraint serves as an alternative method to achieve diversity without requiring separate, annotated subsets for different anomalous types, which would otherwise demand significant human effort."
    },
    {
        "question": "What is the motivation for deriving a sample-wise abnormality prior in DAP for prompt adaptation?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "One issue in ZSAD is that the fine-grained abnormality patterns can be very different from the auxiliary dataset to test datasets.",
            "In addition to the learning of a set of complementary fine-grained abnormality prompts, it is important to ensure that the learned fine-grained abnormality patterns are generalized to target testing datasets.",
            "Inspired by the instance-conditional information design in CoCoOp (Zhou et al., 2022a ###reference_b62###), we introduce the DAP module to enhance the cross-dataset generalizability of the abnormal tokens in CAP by adaptively selecting the embeddings of the most abnormal regions to serve as a sample-wise abnormality prior for each image input."
        ],
        "final_answer": "Because fine-grained abnormality patterns can differ substantially between the auxiliary (training) data and a new test dataset, DAP derives a sample-wise abnormality prior (by selecting the most anomalous patches in each image) so that the learned abnormality prompts can dynamically adapt to the specific characteristics of each target image and thus generalize better across datasets.",
        "relevant_elements": [
            "Data-dependent Abnormality Prior (DAP)",
            "sample-wise abnormality prior"
        ],
        "id": 639,
        "masked_question": "What is the motivation for deriving a [mask1] in DAP for prompt adaptation?",
        "masked_number": 1,
        "masked_elements": [
            "sample-wise abnormality prior"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.10289v1_figure_2.png",
        "paperid": "2410.10289v1",
        "paper_path": "./papers/2410.10289v1.json",
        "figure_id": "2410.10289v1_figure_2.png",
        "caption": "Figure 2: Overview of FAPrompt. It consists of two novel modules, including the Compound Abnormality Prompting (CAP) module and the Data-dependent Abnormality Prior (DAP) module detailed in the top-right and bottom-right corners respectively. CAP is devised to learn fine-grained abnormality semantics without relying on detailed human annotations or text descriptions, while DAP is designed to adaptively select the most abnormal features from each query/test image as a sample-wise abnormality prior to enhance the cross-dataset generalizability of the abnormality prompts in CAP.",
        "qtype": "Design_Rationale",
        "response": "The motivation for deriving a \"Sample-wise Abnormality Prior\" (DAP) is to **improve the cross-dataset generalization capability of the fine-grained abnormality prompts** learned by the Compound Abnormality Prompting (CAP) module.\n\nSpecifically, the \"Sample-wise Abnormality Prior\" is derived from the **Data-dependent Abnormality Prior (DAP) module** to:\n1.  **Dynamically adapt the abnormality prompts in CAP** to the specific characteristics of a given target dataset.\n2.  **Introduce sample-wise abnormality information** by selecting the most relevant abnormality features (i.e., most abnormal image patches) based on the input query/test image, thereby assisting the abnormality prompt learning and ensuring that the learned fine-grained abnormality patterns generalize effectively to diverse test datasets."
    },
    {
        "question": "What motivates incorporating MoE routing into MLP modules rather than using dense MLP processing?",
        "relevant_section_ids": [
            "3",
            "4.1"
        ],
        "relevant_context": [
            "Skipping a small number of heads or layers has negligible impact on model performance, with faster performance deterioration observed when skipping more MLP layers than removing attention heads. Importantly, the performance scaling differ between GSM8K and HumanEval datasets, indicating that the redundancy in the pretrained LLM is data-dependent. These results motivated us to explore learned, data-dependent routing modules that not only skip MLP layers and attention heads in a learnable manner, but also skip attention layers and subsets of MLP weights.",
            "As many pre-trained transformer models have dense MLP layers (no experts), ElastiFormer converts a dense MLP module to a MoE counterpart losslessly by breaking parameters into block matrices."
        ],
        "final_answer": "The empirical finding that dense MLP layers exhibit significant, data-dependent redundancy motivates converting them into Mixture-of-Experts modules. By decomposing a dense MLP into expert sub-networks, ElastiFormer can learn to route each input through only a subset of experts—thereby reducing the number of active parameters and computation without degrading model performance.",
        "relevant_elements": [
            "MLP",
            "MoE"
        ],
        "id": 640,
        "masked_question": "What motivates incorporating [mask1] routing into MLP modules rather than using dense MLP processing?",
        "masked_number": 1,
        "masked_elements": [
            "MoE"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15281v1_figure_1.png",
        "paperid": "2411.15281v1",
        "paper_path": "./papers/2411.15281v1.json",
        "figure_id": "2411.15281v1_figure_1.png",
        "caption": "Figure 1: \nOverview of ElastiFormer for language, visual, and multi-modal transformers.\n(Left) Illustration of learned routing modules around Multi-Head Attention (MHA) and Multi-layer Perceptron (MLP) modules of a pretrained transformer model.\n(Middle) Illustration of learned routing modules inside MLP and MHA modules, and learned routing that selects a subset of image tokens that provide multi-modal input to language decoder in VLMs.\n(Right) Illustration of self-distillation training objectives across modalities. Note that for Visual Transformers (ViT), the example provided here is from Masked Auto Encoding (MAE) ViT.",
        "qtype": "Design_Rationale",
        "response": "The `[mask1]` in the image refers to the \"Elasti-MLP / MoE\" module, which implements a form of parameter subset selection routing within the Multi-Layer Perceptron (MLP) module.\n\nThe motivation for incorporating this type of routing into MLP modules rather than using dense MLP processing is rooted in the observation of **data-dependent redundancies** within pretrained Transformer models, specifically in their MLP modules.\n\nAs stated in the \"Redundancy in Transformer Architecture\" section:\n1.  \"We first demonstrate that pretrained transformer models have data-dependent redundancies in both their multi-head attention (MHA) and multi-layer perceptron (MLP) modules.\"\n2.  Experiments showed that \"skipping a small number of heads or layers has negligible impact on model performance\".\n3.  The text explicitly says: \"These results motivated us to explore"
    },
    {
        "question": "What reasoning supports selecting only certain visual encoder tokens for language decoder input?",
        "relevant_section_ids": [
            "1",
            "4"
        ],
        "relevant_context": [
            "Applying ElastiFormer to visual-language models, we show that 40% of image tokens can be dropped before being decoded by the language decoder without significantly impacting performance.",
            "Input Subset Selection: For this type of subset selection, given a sequence of N tokens, we select k to be processed by a given module (e.g. MHA, MLP). This routing scheme saves computational cost by reducing the total number of input tokens processed. Examples of routing in ElastiFormer that employ this scheme are routing around MHA, around MLP (Figure 1 (Left)), and visual token selection in VLM (Figure 1 (Mid-Bottom))."
        ],
        "final_answer": "Since many visual‐encoder tokens are redundant for generating the language output, ElastiFormer’s learned input-subset routing drops a fraction of image tokens—only the most informative k of N are sent to the language decoder—thereby cutting compute by not processing tokens that contribute little to performance.",
        "relevant_elements": [
            "Visual Encoder",
            "Language Decoder"
        ],
        "id": 641,
        "masked_question": "What reasoning supports selecting only certain [mask1] tokens for [mask2] input?",
        "masked_number": 2,
        "masked_elements": [
            "Visual Encoder",
            "Language Decoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15281v1_figure_1.png",
        "paperid": "2411.15281v1",
        "paper_path": "./papers/2411.15281v1.json",
        "figure_id": "2411.15281v1_figure_1.png",
        "caption": "Figure 1: \nOverview of ElastiFormer for language, visual, and multi-modal transformers.\n(Left) Illustration of learned routing modules around Multi-Head Attention (MHA) and Multi-layer Perceptron (MLP) modules of a pretrained transformer model.\n(Middle) Illustration of learned routing modules inside MLP and MHA modules, and learned routing that selects a subset of image tokens that provide multi-modal input to language decoder in VLMs.\n(Right) Illustration of self-distillation training objectives across modalities. Note that for Visual Transformers (ViT), the example provided here is from Masked Auto Encoding (MAE) ViT.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does Route compute and apply its scalar weight to modulate Multihead Self-Attention outputs?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Route",
            "Multihead Self-Attention (MHA)"
        ],
        "id": 642,
        "masked_question": "How does [mask1] compute and apply its scalar weight to modulate Multihead Self-Attention outputs?",
        "masked_number": 1,
        "masked_elements": [
            "Route"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15281v1_figure_1.png",
        "paperid": "2411.15281v1",
        "paper_path": "./papers/2411.15281v1.json",
        "figure_id": "2411.15281v1_figure_1.png",
        "caption": "Figure 1: \nOverview of ElastiFormer for language, visual, and multi-modal transformers.\n(Left) Illustration of learned routing modules around Multi-Head Attention (MHA) and Multi-layer Perceptron (MLP) modules of a pretrained transformer model.\n(Middle) Illustration of learned routing modules inside MLP and MHA modules, and learned routing that selects a subset of image tokens that provide multi-modal input to language decoder in VLMs.\n(Right) Illustration of self-distillation training objectives across modalities. Note that for Visual Transformers (ViT), the example provided here is from Masked Auto Encoding (MAE) ViT.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Route operate on Projector outputs to select image tokens for the Language Decoder?",
        "relevant_section_ids": [
            "4",
            "4.1"
        ],
        "relevant_context": [
            "Input Subset Selection: For this type of subset selection, given a sequence of n tokens, we select k to be processed by a given module (e.g. MHA, MLP). This routing scheme saves computational cost by reducing the total number of input tokens processed. Examples of routing in ElastiFormer that employ this scheme are routing around MHA, around MLP (Figure 1 (Left)), and visual token selection in VLM (Figure 1 (Mid-Bottom)).",
            "As opposed to parameter subset selection where the router outputs a m-dimensional logits for m sub-networks, the routers in input subset selection output scalar-valued logits for each input token. The top-k input tokens are then processed by the subsequent module (MHA or MLP), and the output is added to a zero-initialized output tensor with the same shape as the un-selected input x."
        ],
        "final_answer": "Route takes the Projector’s sequence of image token embeddings, computes a scalar logit for each token, ranks them, and then selects the top-k tokens (highest logits) to pass into the Language Decoder. All other tokens are dropped (i.e., contribute zeros), so only the chosen subset of image tokens is decoded.",
        "relevant_elements": [
            "Route",
            "Projector"
        ],
        "id": 643,
        "masked_question": "How does [mask1] operate on [mask2] outputs to select image tokens for the Language Decoder?",
        "masked_number": 2,
        "masked_elements": [
            "Route",
            "Projector"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.15281v1_figure_1.png",
        "paperid": "2411.15281v1",
        "paper_path": "./papers/2411.15281v1.json",
        "figure_id": "2411.15281v1_figure_1.png",
        "caption": "Figure 1: \nOverview of ElastiFormer for language, visual, and multi-modal transformers.\n(Left) Illustration of learned routing modules around Multi-Head Attention (MHA) and Multi-layer Perceptron (MLP) modules of a pretrained transformer model.\n(Middle) Illustration of learned routing modules inside MLP and MHA modules, and learned routing that selects a subset of image tokens that provide multi-modal input to language decoder in VLMs.\n(Right) Illustration of self-distillation training objectives across modalities. Note that for Visual Transformers (ViT), the example provided here is from Masked Auto Encoding (MAE) ViT.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does probability quantization preserve relative likelihood magnitudes when assigning discrete FeFET I_DS states?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "We initially convert the original probabilities into logarithmic values, then truncate very small probabilities to manage quantization precision efficiently.",
            "After quantization, we apply column normalization to the likelihoods corresponding to the same evidence value (i.e., the likelihoods stored in the same column) and priors: where each column of the normalized probabilities is added with a constant, with their maximum values scaled to 1. This normalization enhances the differences among posteriors of multiple events without altering their order of magnitude, thus mitigating the accuracy degradation after quantization.",
            "Finally, the normalized logarithmic probabilities are linearly mapped to discrete FeFET states with corresponding I_DS values and respective FeFET write configuration."
        ],
        "final_answer": "By first converting probabilities to logarithmic values and truncating very small ones, then normalizing each column so its maximum is scaled to 1 (preserving the order of magnitudes), and finally linearly mapping those normalized log-probabilities to discrete FeFET I_DS levels, the quantization process maintains the relative differences among likelihoods while assigning specific current states.",
        "relevant_elements": [
            "Probability Quantization",
            "Discrete FeFET I_DS"
        ],
        "id": 644,
        "masked_question": "How does [mask1] preserve relative likelihood magnitudes when assigning [mask2] states?",
        "masked_number": 2,
        "masked_elements": [
            "Probability Quantization",
            "Discrete FeFET I_DS"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.19356v1_figure_2.png",
        "paperid": "2410.19356v1",
        "paper_path": "./papers/2410.19356v1.json",
        "figure_id": "2410.19356v1_figure_2.png",
        "caption": "Figure 2. \nThe overall workflow of FeBiM.\nTrained probabilities of the Bayesian model are quantized and mapped to discrete FeFET states.\nGiven observed evidence values, the FeFET-based crossbar outputs maximum posterior.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How are activated quantized likelihood columns aggregated into row currents for posterior determination?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "During the inference, discretized evidence values of the test samples activate corresponding crossbar columns. The stored likelihoods are accumulated along each row, as shown in Fig. 2(c). In this way, the posterior probabilities for each event are yielded as the crossbar outputs without extra calculation circuitry.",
            "One column of each likelihood block is activated according to the input evidence value on BLs, and other unselected columns are inhibited with V_READ = –0.5 V. The activated FeFET cells’ I_DS accumulate along each sourceline as I_SL, representing the calculated posteriors (denoted in green)."
        ],
        "final_answer": "During inference, one quantized likelihood column per evidence node is driven ON; each FeFET in those activated columns sources a current proportional to its stored log-likelihood, and these currents sum along each row (sourceline). The resulting total row current (I_SL) directly encodes the posterior probability for each event.",
        "relevant_elements": [
            "Quantized Likelihoods",
            "Row currents"
        ],
        "id": 645,
        "masked_question": "How are activated [mask1] columns aggregated into row currents for posterior determination?",
        "masked_number": 1,
        "masked_elements": [
            "Quantized Likelihoods"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.19356v1_figure_2.png",
        "paperid": "2410.19356v1",
        "paper_path": "./papers/2410.19356v1.json",
        "figure_id": "2410.19356v1_figure_2.png",
        "caption": "Figure 2. \nThe overall workflow of FeBiM.\nTrained probabilities of the Bayesian model are quantized and mapped to discrete FeFET states.\nGiven observed evidence values, the FeFET-based crossbar outputs maximum posterior.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How do discrete FeFET I_DS outputs emulate posterior accumulation in in-memory Bayesian inference?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "During inference, the prior column is activated with 0.5 V on SL. One column of each likelihood block is activated according to the input evidence value on WLs, and other unselected columns are inhibited with −0.5 V. The activated FeFET cells’ I_DS accumulate along each SL as I_SL, representing the calculated posteriors (denoted in green).",
            "Finally, the normalized logarithmic probabilities L are linearly mapped to discrete FeFET states with corresponding I_DS values and respective FeFET write configuration."
        ],
        "final_answer": "Each FeFET cell is programmed to one of several discrete I_DS levels that encode quantized logarithmic priors and likelihoods. During inference, only the columns corresponding to the observed evidence are driven, so the cells whose I_DS represent the chosen likelihoods (and the prior column) turn on. Their drain currents then sum along each sourceline, effectively performing a sum of log-probabilities (i.e., the log of the product of prior and likelihoods). The total current on each line therefore directly maps to the posterior for each event, with higher accumulated I_DS indicating a larger posterior probability.",
        "relevant_elements": [
            "Discrete FeFET I_DS",
            "In-Memory Bayesian Inference"
        ],
        "id": 647,
        "masked_question": "How do [mask1] outputs emulate posterior accumulation in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Discrete FeFET I_DS",
            "In-Memory Bayesian Inference"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.19356v1_figure_2.png",
        "paperid": "2410.19356v1",
        "paper_path": "./papers/2410.19356v1.json",
        "figure_id": "2410.19356v1_figure_2.png",
        "caption": "Figure 2. \nThe overall workflow of FeBiM.\nTrained probabilities of the Bayesian model are quantized and mapped to discrete FeFET states.\nGiven observed evidence values, the FeFET-based crossbar outputs maximum posterior.",
        "qtype": "Literature_Background",
        "response": "The discrete FeFET I_DS values ([mask1]), which represent the quantized logarithmic likelihoods (and priors) of the Bayesian model, are stored in the FeFET crossbar array ([mask2]). During inference, when evidence values (b1, b2) activate specific columns of the crossbar, the individual FeFET currents (I_DS) in those activated columns are implicitly summed (accumulated"
    },
    {
        "question": "How do multi-scale feature maps influence cost volume formation in depth estimation from sparse views?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "These two views are then fed into a shared image encoder ε_img to generate multiscale image features f_l^s and f_r^s where s is the feature scale.",
            "From the feature maps f_l^s of each source view, a cost volume C is generated by correlating the two feature maps."
        ],
        "final_answer": "The method first encodes each sparse source view into a set of multi-scale feature maps. It then constructs the cost volume by correlating the corresponding feature maps at each scale between the two views, thereby allowing the depth estimator to leverage matching cues across multiple resolutions.",
        "relevant_elements": [
            "Multi Scale Feature Maps",
            "Cost Volume"
        ],
        "id": 648,
        "masked_question": "How do [mask1] influence cost volume formation in depth estimation from sparse views?",
        "masked_number": 1,
        "masked_elements": [
            "Multi Scale Feature Maps"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.03086v1_figure_1.png",
        "paperid": "2411.03086v1",
        "paper_path": "./papers/2411.03086v1.json",
        "figure_id": "2411.03086v1_figure_1.png",
        "caption": "Figure 1: \nThe HFGaussian pipeline: Given a target view, the nearest source views Ilsubscript𝐼𝑙I_{l}italic_I start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT and Irsubscript𝐼𝑟I_{r}italic_I start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT are selected, and passed through an image encoder ϵi⁢m⁢gsubscriptitalic-ϵ𝑖𝑚𝑔\\epsilon_{img}italic_ϵ start_POSTSUBSCRIPT italic_i italic_m italic_g end_POSTSUBSCRIPT to generate feature maps flssuperscriptsubscript𝑓𝑙𝑠f_{l}^{s}italic_f start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_s end_POSTSUPERSCRIPT and frssuperscriptsubscript𝑓𝑟𝑠f_{r}^{s}italic_f start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_s end_POSTSUPERSCRIPT for depth maps Dlsubscript𝐷𝑙D_{l}italic_D start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT and Drsubscript𝐷𝑟D_{r}italic_D start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT estimation.\nThe depth maps are then encoded using a ϵd⁢e⁢p⁢t⁢hsubscriptitalic-ϵ𝑑𝑒𝑝𝑡ℎ\\epsilon_{depth}italic_ϵ start_POSTSUBSCRIPT italic_d italic_e italic_p italic_t italic_h end_POSTSUBSCRIPT encoder and combined with the image features before passing through a U-Net based decoder ϵp⁢a⁢r⁢a⁢m⁢ssubscriptitalic-ϵ𝑝𝑎𝑟𝑎𝑚𝑠\\epsilon_{params}italic_ϵ start_POSTSUBSCRIPT italic_p italic_a italic_r italic_a italic_m italic_s end_POSTSUBSCRIPT to predict Gaussian feature maps ℳrsubscriptℳ𝑟\\mathcal{M}_{r}caligraphic_M start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT, ℳssubscriptℳ𝑠\\mathcal{M}_{s}caligraphic_M start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT, ℳαsubscriptℳ𝛼\\mathcal{M}_{\\alpha}caligraphic_M start_POSTSUBSCRIPT italic_α end_POSTSUBSCRIPT, and ℳfsubscriptℳ𝑓\\mathcal{M}_{f}caligraphic_M start_POSTSUBSCRIPT italic_f end_POSTSUBSCRIPT.\nFinally, the predicted Gaussians are splatted and rasterized to generate the novel view and human features, which are further processed by a smaller MLP ϵf⁢e⁢a⁢t⁢u⁢r⁢esubscriptitalic-ϵ𝑓𝑒𝑎𝑡𝑢𝑟𝑒\\epsilon_{feature}italic_ϵ start_POSTSUBSCRIPT italic_f italic_e italic_a italic_t italic_u italic_r italic_e end_POSTSUBSCRIPT to obtain the final human features.",
        "qtype": "Literature_Background",
        "response": "The [mask1] in the image refers to \"Multi Scale Feature Maps {f_l^s, f_r^s}\".\n\nAccording to the \"Learning human feature with 3DGS\" section of the context:\n1.  \"Given a target view, we select the two nearest source views, I_l and I_r, which are RGB images...\"\n2.  \"These two views are then fed into a shared image encoder E_img to generate multiscale image features f_l^s and f_r^s where s is the feature scale.\" (This matches the content of [mask1]).\n3.  \"From the feature maps f_l^s and f_r^s of each source view, a cost volume is generated by correlating the two feature maps.\"\n\nTherefore, the \"Multi Scale Feature Maps {f_l^s, f_r^s}\" influence cost volume formation by being *correlated* to generate the 3D correlation volume. This correlation volume is then used to iteratively estimate depth maps.\n\nThe final answer is $\\boxed{\\text{The Multi Scale Feature Maps are correlated to generate the 3D correlation volume, which is subsequently used for depth estimation.}}$."
    },
    {
        "question": "How does MLP ε_feature extend Gaussian rasterizer outputs using feature splatting concepts?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "Inspired by feature splatting [36], we apply a similar technique that estimates human feature vectors h by splatting Gaussian features f in the image plane, and then blending the feature vectors using alpha composition:",
            "The blended feature vectors h are decoded by a MLP consisting of two linear layers with ReLU activation functions, followed by a final layer with a sigmoid activation function, to render the continuous surface embeddings."
        ],
        "final_answer": "MLP ε_feature takes the per‐Gaussian feature maps produced by the Gaussian rasterizer, which have been 'splat' onto the image plane and alpha-blended, and decodes these composite feature vectors through two ReLU‐activated linear layers plus a final sigmoid layer. In this way, it extends the raw rasterizer outputs into smooth, continuous surface embeddings (e.g. dense-pose features) using the principle of feature splatting.",
        "relevant_elements": [
            "Gaussian Rasterizer",
            "MLP ε_feature"
        ],
        "id": 649,
        "masked_question": "How does [mask1] extend Gaussian rasterizer outputs using feature splatting concepts?",
        "masked_number": 1,
        "masked_elements": [
            "MLP ε_feature"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.03086v1_figure_1.png",
        "paperid": "2411.03086v1",
        "paper_path": "./papers/2411.03086v1.json",
        "figure_id": "2411.03086v1_figure_1.png",
        "caption": "Figure 1: \nThe HFGaussian pipeline: Given a target view, the nearest source views Ilsubscript𝐼𝑙I_{l}italic_I start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT and Irsubscript𝐼𝑟I_{r}italic_I start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT are selected, and passed through an image encoder ϵi⁢m⁢gsubscriptitalic-ϵ𝑖𝑚𝑔\\epsilon_{img}italic_ϵ start_POSTSUBSCRIPT italic_i italic_m italic_g end_POSTSUBSCRIPT to generate feature maps flssuperscriptsubscript𝑓𝑙𝑠f_{l}^{s}italic_f start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_s end_POSTSUPERSCRIPT and frssuperscriptsubscript𝑓𝑟𝑠f_{r}^{s}italic_f start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_s end_POSTSUPERSCRIPT for depth maps Dlsubscript𝐷𝑙D_{l}italic_D start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT and Drsubscript𝐷𝑟D_{r}italic_D start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT estimation.\nThe depth maps are then encoded using a ϵd⁢e⁢p⁢t⁢hsubscriptitalic-ϵ𝑑𝑒𝑝𝑡ℎ\\epsilon_{depth}italic_ϵ start_POSTSUBSCRIPT italic_d italic_e italic_p italic_t italic_h end_POSTSUBSCRIPT encoder and combined with the image features before passing through a U-Net based decoder ϵp⁢a⁢r⁢a⁢m⁢ssubscriptitalic-ϵ𝑝𝑎𝑟𝑎𝑚𝑠\\epsilon_{params}italic_ϵ start_POSTSUBSCRIPT italic_p italic_a italic_r italic_a italic_m italic_s end_POSTSUBSCRIPT to predict Gaussian feature maps ℳrsubscriptℳ𝑟\\mathcal{M}_{r}caligraphic_M start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT, ℳssubscriptℳ𝑠\\mathcal{M}_{s}caligraphic_M start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT, ℳαsubscriptℳ𝛼\\mathcal{M}_{\\alpha}caligraphic_M start_POSTSUBSCRIPT italic_α end_POSTSUBSCRIPT, and ℳfsubscriptℳ𝑓\\mathcal{M}_{f}caligraphic_M start_POSTSUBSCRIPT italic_f end_POSTSUBSCRIPT.\nFinally, the predicted Gaussians are splatted and rasterized to generate the novel view and human features, which are further processed by a smaller MLP ϵf⁢e⁢a⁢t⁢u⁢r⁢esubscriptitalic-ϵ𝑓𝑒𝑎𝑡𝑢𝑟𝑒\\epsilon_{feature}italic_ϵ start_POSTSUBSCRIPT italic_f italic_e italic_a italic_t italic_u italic_r italic_e end_POSTSUBSCRIPT to obtain the final human features.",
        "qtype": "Literature_Background",
        "response": "The `MLP 𝜖_feature` component (highlighted by [mask1]) extends the Gaussian rasterizer outputs using feature splatting concepts in the following way:\n\n1.  **Feature Splatting and Blending**: First, the `Gaussian Parameter Estimator` predicts `Feature Maps {M_f}` which encode human features for each Gaussian. Similar to how colors and opacities are splatted and blended by the Gaussian Rasterizer to form a rendered image, these `Gaussian features` (`f_i`) are \"splatted\" into the image plane.\n2.  **Alpha Composition**: These splatted Gaussian features are then \"blended\" using alpha composition to form `blended feature vectors` (`F_feature_blended`). This blending process is analogous to the final rendering step performed by the Gaussian Rasterizer for pixel colors, but applied to feature vectors instead.\n3.  **MLP Decoding**: The `MLP 𝜖_feature` then takes these `blended feature vectors` as input. It acts as a decoder, consisting of two linear layers with ReLU activation functions, followed by a final layer with a sigmoid activation function.\n4.  **Output**: The output of this `MLP 𝜖_feature` is the \"continuous surface embeddings\", which represent the final estimated human features, effectively extending the raw splatted Gaussian features into a meaningful representation of human characteristics.\n\nIn essence, the"
    },
    {
        "question": "How does the cost volume inform depth refinement within the depth estimator to generate D_l and D_r?",
        "relevant_section_ids": [
            "3.2",
            "3.1"
        ],
        "relevant_context": [
            "From the feature maps f^l and f^r of each source view, a cost volume C is generated by correlating the two feature maps. Then, an iterative update mechanism is used to estimate depth maps D_l and D_r corresponding to each source view.",
            "Using the feature maps from each source view (f_i, f_j), a 3D correlation volume C_ij is generated. This correlation volume along with the corresponding camera parameters (P_i, P_j) is used to iteratively estimate depth maps. It can be formulated as: where f_update represents the depth estimation module."
        ],
        "final_answer": "The cost volume is built by correlating the left and right image feature maps to encode pixel‐wise matching costs. This volume is then fed into the depth estimator’s iterative update mechanism (f_update), which uses those matching cues to progressively refine and output the per‐view depth maps D_l and D_r.",
        "relevant_elements": [
            "Cost Volume",
            "Depth Estimator",
            "Depth Maps D_l and D_r"
        ],
        "id": 651,
        "masked_question": "How does the [mask1] inform depth refinement within the [mask2] to generate D_l and D_r?",
        "masked_number": 2,
        "masked_elements": [
            "Cost Volume",
            "Depth Estimator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.03086v1_figure_1.png",
        "paperid": "2411.03086v1",
        "paper_path": "./papers/2411.03086v1.json",
        "figure_id": "2411.03086v1_figure_1.png",
        "caption": "Figure 1: \nThe HFGaussian pipeline: Given a target view, the nearest source views Ilsubscript𝐼𝑙I_{l}italic_I start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT and Irsubscript𝐼𝑟I_{r}italic_I start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT are selected, and passed through an image encoder ϵi⁢m⁢gsubscriptitalic-ϵ𝑖𝑚𝑔\\epsilon_{img}italic_ϵ start_POSTSUBSCRIPT italic_i italic_m italic_g end_POSTSUBSCRIPT to generate feature maps flssuperscriptsubscript𝑓𝑙𝑠f_{l}^{s}italic_f start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_s end_POSTSUPERSCRIPT and frssuperscriptsubscript𝑓𝑟𝑠f_{r}^{s}italic_f start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_s end_POSTSUPERSCRIPT for depth maps Dlsubscript𝐷𝑙D_{l}italic_D start_POSTSUBSCRIPT italic_l end_POSTSUBSCRIPT and Drsubscript𝐷𝑟D_{r}italic_D start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT estimation.\nThe depth maps are then encoded using a ϵd⁢e⁢p⁢t⁢hsubscriptitalic-ϵ𝑑𝑒𝑝𝑡ℎ\\epsilon_{depth}italic_ϵ start_POSTSUBSCRIPT italic_d italic_e italic_p italic_t italic_h end_POSTSUBSCRIPT encoder and combined with the image features before passing through a U-Net based decoder ϵp⁢a⁢r⁢a⁢m⁢ssubscriptitalic-ϵ𝑝𝑎𝑟𝑎𝑚𝑠\\epsilon_{params}italic_ϵ start_POSTSUBSCRIPT italic_p italic_a italic_r italic_a italic_m italic_s end_POSTSUBSCRIPT to predict Gaussian feature maps ℳrsubscriptℳ𝑟\\mathcal{M}_{r}caligraphic_M start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT, ℳssubscriptℳ𝑠\\mathcal{M}_{s}caligraphic_M start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT, ℳαsubscriptℳ𝛼\\mathcal{M}_{\\alpha}caligraphic_M start_POSTSUBSCRIPT italic_α end_POSTSUBSCRIPT, and ℳfsubscriptℳ𝑓\\mathcal{M}_{f}caligraphic_M start_POSTSUBSCRIPT italic_f end_POSTSUBSCRIPT.\nFinally, the predicted Gaussians are splatted and rasterized to generate the novel view and human features, which are further processed by a smaller MLP ϵf⁢e⁢a⁢t⁢u⁢r⁢esubscriptitalic-ϵ𝑓𝑒𝑎𝑡𝑢𝑟𝑒\\epsilon_{feature}italic_ϵ start_POSTSUBSCRIPT italic_f italic_e italic_a italic_t italic_u italic_r italic_e end_POSTSUBSCRIPT to obtain the final human features.",
        "qtype": "Experimental_Results",
        "response": "The Cost Volume ([mask1]) is generated by correlating the multi-scale feature maps (`fls` and `frs`) from the two source views (`Il` and `Ir`). Within the Depth Estimator ([mask2]), this Cost Volume then informs the depth refinement process by being used in an iterative update mechanism to estimate the depth maps `Dl` and `Dr` corresponding to each source view. Essentially, the Cost Volume provides information about the likelihood or confidence of different depth values based on feature similarities between the views."
    },
    {
        "question": "How does the transition from Image Latents to Noisy Latents influence subsequent denoising in the 2D Diffusion model?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Image Latents",
            "Noisy Latents",
            "2D Diffusion model"
        ],
        "id": 652,
        "masked_question": "How does the transition from [mask1] to [mask2] influence subsequent denoising in the 2D Diffusion model?",
        "masked_number": 2,
        "masked_elements": [
            "Image Latents",
            "Noisy Latents"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.06693v1_figure_2.png",
        "paperid": "2408.06693v1",
        "paper_path": "./papers/2408.06693v1.json",
        "figure_id": "2408.06693v1_figure_2.png",
        "caption": "Figure 2:  Methods comparison. We extended the Diffusion Classifier [18] paper to a multi-view [40] settings and we compare with our DC3DO model, based on [54]",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What limitations stem from using PVCNN Shape Latent Encoder for shape latent extraction in DC3DO?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "PVCNN",
            "Shape latent"
        ],
        "id": 654,
        "masked_question": "What limitations stem from using [mask1] Shape Latent Encoder for shape latent extraction in DC3DO?",
        "masked_number": 1,
        "masked_elements": [
            "PVCNN"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.06693v1_figure_2.png",
        "paperid": "2408.06693v1",
        "paper_path": "./papers/2408.06693v1.json",
        "figure_id": "2408.06693v1_figure_2.png",
        "caption": "Figure 2:  Methods comparison. We extended the Diffusion Classifier [18] paper to a multi-view [40] settings and we compare with our DC3DO model, based on [54]",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What biases might Identity Embedding introduce in Inter-Atlas Message-Passing, affecting cross-atlas fusion equity?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Identity Embedding",
            "Inter-Atlas Message-Passing"
        ],
        "id": 656,
        "masked_question": "What biases might [mask1] introduce in Inter-Atlas Message-Passing, affecting cross-atlas fusion equity?",
        "masked_number": 1,
        "masked_elements": [
            "Identity Embedding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.08228v1_figure_1.png",
        "paperid": "2410.08228v1",
        "paper_path": "./papers/2410.08228v1.json",
        "figure_id": "2410.08228v1_figure_1.png",
        "caption": "Figure 1: The framework of AIDFusion for multi-atlas brain network classification.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "Why apply identity embedding prior to the disentangle transformer?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "Correlation-based brain networks already contain sufficient positional information for ROIs, making general positional embeddings both costly and redundant.",
            "Instead, we propose a learnable identity embedding that adaptively learns a unique identity for each ROI, aligning nodes in the same ROI across the same atlas.",
            "This embedding assigns the same identity to nodes within the same ROI."
        ],
        "final_answer": "Identity embedding is applied before the disentangle transformer because in fully connected fMRI brain networks general positional embeddings are expensive and unnecessary; instead, a learnable identity embedding gives each ROI a unique, consistent identity (aligning nodes within the same ROI) so that the transformer can distinguish and properly process each region.",
        "relevant_elements": [
            "Identity Embedding",
            "Disentangle Transformer"
        ],
        "id": 658,
        "masked_question": "Why apply [mask1] prior to the disentangle transformer?",
        "masked_number": 1,
        "masked_elements": [
            "Identity Embedding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.08228v1_figure_1.png",
        "paperid": "2410.08228v1",
        "paper_path": "./papers/2410.08228v1.json",
        "figure_id": "2410.08228v1_figure_1.png",
        "caption": "Figure 1: The framework of AIDFusion for multi-atlas brain network classification.",
        "qtype": "Design_Rationale",
        "response": "The \"Identity Embedding\" is applied prior to the \"Disentangle Transformer\" for the following reasons:\n\n1.  **To encode ROI identities:** The text states, \"we propose a learnable identity embedding that adaptively learns a unique identity for each ROI, aligning nodes in the same ROI across the same atlas. This embedding assigns the same identity to nodes within the same ROI.\" This step prepares the input graph features by embedding consistent identity information for each Region of Interest (ROI).\n2.  **To provide structured input for the Disentangle Transformer:** The Disentangle Transformer, described subsequently, expects an \"identity-encoded graph feature matrix\" as its input. This matrix, generated by the Identity Embedding, combines the original node features with their learned identities.\n3.  **To facilitate removal of inconsistent information:** By first aligning nodes within the same ROI across an atlas with their identities, the Disentangle Transformer is better equipped to then \"filter out inconsistent atlas-specific information\" by introducing and processing learnable incompatible nodes. The identity information is foundational for the transformer to effectively disentangle and process atlas-specific features."
    },
    {
        "question": "How does inter-atlas message-passing interact with population-level consistency preservation?",
        "relevant_section_ids": [
            "4.2",
            "4.3"
        ],
        "relevant_context": [
            "Our proposed AIDFusion enables inter-atlas message-passing between neighboring regions in different atlases by considering spatial information. Specifically, we use the spatial distance between the centroids of ROIs in different atlases to construct inter-atlas connections. As shown in Figure 1c, we utilize the k-nearest-neighbor (NN) algorithm to connect each ROI to k ROIs from the other atlas. ... Afterwards, an adjacency matrix A_inter is obtained and used for graph convolution [22]:\nZ = σ(D^{-1/2} A_inter D^{-1/2} H W),\nwhere σ is the activation function, D is the degree matrix of A_inter, H is the combined node representation matrix for the two atlases, and W is the learnable weight matrix of the GCN layer.",
            "Population-level Consistency. The readout function R is an essential component of learning the graph-level representations M for brain network analysis (e.g., classification), which maps a set of learned node-level embeddings to a graph-level embedding. To further constrain the consistency for graph representations across different atlases, we introduce a mean squared error (MSE) loss on the population level. As shown in Figure 1e, a population graph G_pop is constructed by computing the similarity of each two subjects’ graph representations in the same atlas. The intuition here is we aim to maintain the relationship of subjects across atlases, instead of directly enforcing graph representations of two atlases to be the same. Such loss is formulated as follows:\nL_pop = ‖S(M^a) – S(M^b)‖_F^2,\nwhere S(·) computes the pairwise similarity matrix of the graph representations in a batch."
        ],
        "final_answer": "Inter-atlas message-passing first fuses ROI-level features across atlases via spatially grounded connections and GCN updates, producing node embeddings that incorporate complementary information from both parcellations. These enhanced node embeddings are then pooled by a readout function into graph-level representations, whose inter-subject similarity structure is constrained by the population-level MSE loss. In this way, after performing inter-atlas message-passing, the model preserves the relative relationships among subjects’ graph representations across different atlases.",
        "relevant_elements": [
            "Inter-Atlas Message-Passing",
            "Population-level Consistency"
        ],
        "id": 659,
        "masked_question": "How does [mask1] interact with [mask2] preservation?",
        "masked_number": 2,
        "masked_elements": [
            "Inter-Atlas Message-Passing",
            "Population-level Consistency"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.08228v1_figure_1.png",
        "paperid": "2410.08228v1",
        "paper_path": "./papers/2410.08228v1.json",
        "figure_id": "2410.08228v1_figure_1.png",
        "caption": "Figure 1: The framework of AIDFusion for multi-atlas brain network classification.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What justifies optimizing only learnable tokens rather than entire text embeddings during Prompt Optimization?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Furthermore, to preserve the semantic meaning of the original prompt, rather than optimizing the entire text embedding , we follow the approach introduced in um2024minorityprompt, attaching learnable token embeddings to the end of the prompt and optimizing only these embeddings.",
            "By preserving the other token embeddings in the original text prompt, we ensure that essential text information is retained without loss and ensure the diffusion sampling trajectory on the correct manifold."
        ],
        "final_answer": "Optimizing only the appended learnable tokens preserves the semantic meaning of the user’s original prompt—by keeping the original token embeddings fixed, essential content is retained and the diffusion sampling stays on the correct data manifold.",
        "relevant_elements": [
            "learnable tokens",
            "Prompt Optimization"
        ],
        "id": 660,
        "masked_question": "What justifies optimizing only learnable tokens rather than entire text embeddings during [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "Prompt Optimization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15540v1_figure_2.png",
        "paperid": "2411.15540v1",
        "paper_path": "./papers/2411.15540v1.json",
        "figure_id": "2411.15540v1_figure_2.png",
        "caption": "Figure 2: Overall pipeline of MotionPrompt. MotionPrompt enhances temporal consistency in text-to-video diffusion models by combining prompt optimization with an optical flow-based discriminator. Leveraging gradients from a subset of frames and aligning optical flow with real-world motion patterns, MotionPrompt efficiently generates videos with smooth, realistic motion and strong contextual coherence.",
        "qtype": "Design_Rationale",
        "response": "The red box in the image corresponds to the \"Prompt Optimization\" component of the MotionPrompt pipeline.\n\nAccording to the \"Prompt Optimization for Video Guidance\" section in the provided context, the justification for optimizing only learnable tokens rather than the entire text embedding is:\n\n\"Furthermore, **to preserve the semantic meaning of the original prompt**, rather than optimizing the entire text embedding $\\mathcal{T}$, we follow the approach introduced in um2024minorityprompt, attaching learnable token embeddings to the end of the prompt and optimizing only these embeddings... By preserving the other token embeddings in the original text prompt, **we ensure that essential text information is retained without loss and ensure the diffusion sampling trajectory on the correct manifold.**\"\n\nTherefore, optimizing only learnable tokens during **Prompt Optimization** is done to preserve the semantic meaning of the original prompt, retain essential text information without loss, and ensure the diffusion sampling trajectory stays on the correct manifold."
    },
    {
        "question": "What advantage arises from leveraging Optical Flow Discriminator feedback within Prompt Optimization over full-frame gradient guidance?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "Specifically, calculating the gradient of all frames is computationally expensive. Providing guidance for only selected frames may reduce memory usage, but this can disrupt frame-to-frame consistency, resulting in inconsistencies in appearance, motion, and coherence throughout the video.",
            "To address this, we employ the prompt optimization method and extend it to capitalize the text prompt’s influence across the entire video. This approach enables indirect control of the latent video representation by using gradients derived from only a subset of frames, rather than necessitating gradients for every frame.",
            "Note that by optimizing the prompt rather than the latent representation directly, we can design the optical flow discriminator to take a single flow as input, rather than requiring flow from entire video sequences."
        ],
        "final_answer": "By using optical flow discriminator feedback within prompt optimization, MotionPrompt avoids the prohibitive cost of computing gradients over every frame and instead relies on discriminator judgments of single-pair optical flows. This yields computational efficiency and preserves temporal consistency without the need for full‐frame gradient guidance.",
        "relevant_elements": [
            "Optical Flow Discriminator",
            "Prompt Optimization"
        ],
        "id": 661,
        "masked_question": "What advantage arises from leveraging Optical Flow Discriminator feedback within [mask1] over full-frame gradient guidance?",
        "masked_number": 1,
        "masked_elements": [
            "Prompt Optimization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15540v1_figure_2.png",
        "paperid": "2411.15540v1",
        "paper_path": "./papers/2411.15540v1.json",
        "figure_id": "2411.15540v1_figure_2.png",
        "caption": "Figure 2: Overall pipeline of MotionPrompt. MotionPrompt enhances temporal consistency in text-to-video diffusion models by combining prompt optimization with an optical flow-based discriminator. Leveraging gradients from a subset of frames and aligning optical flow with real-world motion patterns, MotionPrompt efficiently generates videos with smooth, realistic motion and strong contextual coherence.",
        "qtype": "Design_Rationale",
        "response": "Leveraging Optical Flow Discriminator feedback within **Prompt Optimization** offers several advantages over full-frame gradient guidance:\n\n1.  **Computational Efficiency**:\n    *   **Reduced Gradient Calculation Cost**: Calculating gradients for *all frames* in the video domain is computationally expensive. Prompt optimization addresses this by enabling indirect control of the latent video representation using gradients derived from only a *subset of frames*, rather than necessitating gradients for every single frame.\n    *   **Discriminator Input Flexibility**: By optimizing the prompt rather than the latent representation directly, the optical flow discriminator can be designed to take a *single flow* as input, eliminating the need to process flow from *entire video sequences*. This further reduces computational"
    },
    {
        "question": "How does Text Transformer integrate learnable tokens S into c(J*) for inference-time prompt optimization?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Furthermore, to preserve the semantic meaning of the original prompt, rather than optimizing the entire text embedding c, we follow the approach introduced in um2024minorityprompt, attaching learnable token embeddings to the end of the prompt and optimizing only these embeddings.",
            "Specifically, we first add new text tokens S to the tokenizer vocabulary and initialize their embeddings with words that can help improve video quality, such as \"authentic\" and \"real\".",
            "We then append these learnable tokens to the end of the given text prompt (e.g., \"White fox on the rock.\" → \"White fox on the rock  …\"). We denote this modified prompt as Ŝ.",
            "This leads to the following modified optimization problem: where e_S denotes the embeddings of tokens S, and c(Ŝ) varies with each timestep."
        ],
        "final_answer": "Text Transformer incorporates the learnable tokens S by first adding them to the tokenizer vocabulary and initializing their embeddings, then appending these tokens to the end of the original prompt to form a modified prompt Ŝ. During inference, the Text Transformer encodes this combined prompt (original tokens plus S) to produce the conditioning vector c(Ŝ), in which only the embeddings of S are updated over time for prompt optimization.",
        "relevant_elements": [
            "Text Transformer",
            "learnable tokens S"
        ],
        "id": 662,
        "masked_question": "How does [mask1] integrate [mask2] into c(J*) for inference-time prompt optimization?",
        "masked_number": 2,
        "masked_elements": [
            "Text Transformer",
            "learnable tokens S"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15540v1_figure_2.png",
        "paperid": "2411.15540v1",
        "paper_path": "./papers/2411.15540v1.json",
        "figure_id": "2411.15540v1_figure_2.png",
        "caption": "Figure 2: Overall pipeline of MotionPrompt. MotionPrompt enhances temporal consistency in text-to-video diffusion models by combining prompt optimization with an optical flow-based discriminator. Leveraging gradients from a subset of frames and aligning optical flow with real-world motion patterns, MotionPrompt efficiently generates videos with smooth, realistic motion and strong contextual coherence.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does f(e) parameterize T(e) to differentiate treatment assignments across encouragement policies?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "In our designs, the large observational data  can optionally serve as a special dataset with no-encouragement , to increase the number of encouragements and samples in the overall dataset .",
            "Within each dataset , the variables  and  are respectively the observable and unmeasured confounders, potentially confounding the analysis of the causal effect of the treatment variables  on the outcome variables .",
            "Therefore, we apply  different encouragement policies to promote treatment adoption without directly manipulating the treatment in certain candidate groups:\n\n    T_i(e) = f(e; X_i(e), U_i(e)),\n\nwhere  denotes different treatment assignment mechanisms, with unknown parameters  for various encouragements  ,  depicts the heterogeneous treatment effect with unknown parameters  , and  embeds the unmeasured confounding effects from  as additive noise that is a common assumption used in causality."
        ],
        "final_answer": "The function f(e) specifies a separate treatment-assignment mechanism for each encouragement policy e.  Concretely, under encouragement e the treatment T(e) is generated as T_i(e)=f(e;X_i(e),U_i(e)), so that f(e) parameterizes how the observed covariates X and unobserved confounders U are mapped into a treatment level differently for each encouragement.",
        "relevant_elements": [
            "f(e)",
            "T(e)",
            "encouragement policies"
        ],
        "id": 664,
        "masked_question": "How does [mask1] parameterize [mask2] to differentiate treatment assignments across encouragement policies?",
        "masked_number": 2,
        "masked_elements": [
            "f(e)",
            "T(e)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.05428v1_figure_1.png",
        "paperid": "2408.05428v1",
        "paper_path": "./papers/2408.05428v1.json",
        "figure_id": "2408.05428v1_figure_1.png",
        "caption": "Figure 1: Overview of the Encouragement Design Framework. For example, in online course platforms like Coursera, edX, and Udacity, using only observational data to control observed confounders X(0)superscript𝑋0X^{(0)}italic_X start_POSTSUPERSCRIPT ( 0 ) end_POSTSUPERSCRIPT, we can not consistently estimate the causal effects of forum engagement duration T(0)superscript𝑇0T^{(0)}italic_T start_POSTSUPERSCRIPT ( 0 ) end_POSTSUPERSCRIPT on exam scores Y(0)superscript𝑌0Y^{(0)}italic_Y start_POSTSUPERSCRIPT ( 0 ) end_POSTSUPERSCRIPT due to the presence of unmeasured confounders U(0)superscript𝑈0U^{(0)}italic_U start_POSTSUPERSCRIPT ( 0 ) end_POSTSUPERSCRIPT. Therefore, we use varied encouragement policies (Class A: eA=Nonesubscript𝑒ANone{e}_{\\text{A}}=\\text{None}italic_e start_POSTSUBSCRIPT A end_POSTSUBSCRIPT = None, Class B: eB=Praisesubscript𝑒BPraise{e}_{\\text{B}}=\\text{Praise}italic_e start_POSTSUBSCRIPT B end_POSTSUBSCRIPT = Praise, Class C: eC=Pointssubscript𝑒CPoints{e}_{\\text{C}}=\\text{Points}italic_e start_POSTSUBSCRIPT C end_POSTSUBSCRIPT = Points) to encourage longer forum engagement duration (i.e., treatments T(e)superscript𝑇𝑒T^{(e)}italic_T start_POSTSUPERSCRIPT ( italic_e ) end_POSTSUPERSCRIPT), while these policies do not have a direct impact on exam scores (i.e., outcomes Y(e)superscript𝑌𝑒Y^{(e)}italic_Y start_POSTSUPERSCRIPT ( italic_e ) end_POSTSUPERSCRIPT), which offers new opportunities to identify causal effects.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How are U(e) accounted for in T(e) generation under f(e) mappings?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "Therefore, we apply m different encouragement policies to promote treatment adoption without directly manipulating the treatment in certain candidate groups: where f^{(e)} denotes different treatment assignment mechanisms, with unknown parameters θ_e for various encouragements e, g depicts the heterogeneous treatment effect with unknown parameters ϕ, and U embeds the unmeasured confounding effects from X as additive noise that is a common assumption used in causality (Newey and Powell 2003; Imbens, Rubin et al. 2015; Hartford et al. 2017)."
        ],
        "final_answer": "Under each encouragement mapping f^{(e)}, the latent confounder U^{(e)} is fed into the treatment assignment mechanism as an additive noise term. In other words, the treatment T^{(e)} is generated via T^{(e)} = f^{(e)}(X^{(e)}, U^{(e)}; θ_e), so that U^{(e)} directly influences T^{(e)} through the f^{(e)} mapping.",
        "relevant_elements": [
            "U(e)",
            "T(e)",
            "f(e)"
        ],
        "id": 665,
        "masked_question": "How are [mask1] accounted for in T(e) generation under f(e) mappings?",
        "masked_number": 1,
        "masked_elements": [
            "U(e)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.05428v1_figure_1.png",
        "paperid": "2408.05428v1",
        "paper_path": "./papers/2408.05428v1.json",
        "figure_id": "2408.05428v1_figure_1.png",
        "caption": "Figure 1: Overview of the Encouragement Design Framework. For example, in online course platforms like Coursera, edX, and Udacity, using only observational data to control observed confounders X(0)superscript𝑋0X^{(0)}italic_X start_POSTSUPERSCRIPT ( 0 ) end_POSTSUPERSCRIPT, we can not consistently estimate the causal effects of forum engagement duration T(0)superscript𝑇0T^{(0)}italic_T start_POSTSUPERSCRIPT ( 0 ) end_POSTSUPERSCRIPT on exam scores Y(0)superscript𝑌0Y^{(0)}italic_Y start_POSTSUPERSCRIPT ( 0 ) end_POSTSUPERSCRIPT due to the presence of unmeasured confounders U(0)superscript𝑈0U^{(0)}italic_U start_POSTSUPERSCRIPT ( 0 ) end_POSTSUPERSCRIPT. Therefore, we use varied encouragement policies (Class A: eA=Nonesubscript𝑒ANone{e}_{\\text{A}}=\\text{None}italic_e start_POSTSUBSCRIPT A end_POSTSUBSCRIPT = None, Class B: eB=Praisesubscript𝑒BPraise{e}_{\\text{B}}=\\text{Praise}italic_e start_POSTSUBSCRIPT B end_POSTSUBSCRIPT = Praise, Class C: eC=Pointssubscript𝑒CPoints{e}_{\\text{C}}=\\text{Points}italic_e start_POSTSUBSCRIPT C end_POSTSUBSCRIPT = Points) to encourage longer forum engagement duration (i.e., treatments T(e)superscript𝑇𝑒T^{(e)}italic_T start_POSTSUPERSCRIPT ( italic_e ) end_POSTSUPERSCRIPT), while these policies do not have a direct impact on exam scores (i.e., outcomes Y(e)superscript𝑌𝑒Y^{(e)}italic_Y start_POSTSUPERSCRIPT ( italic_e ) end_POSTSUPERSCRIPT), which offers new opportunities to identify causal effects.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does f(e)-driven variation in T(e) align with non-compliance frameworks for unbiased Y(e) estimation?",
        "relevant_section_ids": [
            "1",
            "3.1",
            "3.2.x"
        ],
        "relevant_context": [
            {
                "section_id": "3.1",
                "sentence": "we adopt various encouragement policies (e₁, e₂, …, eₖ) to motivate longer forum engagement (i.e., treatments T), which changes the distribution of T given e, in other words, increases time spent on the forum to varying encouragements."
            },
            {
                "section_id": "1",
                "sentence": "As shown in Figure 1, these random encouragements serve as instrumental variables (IVs), which only positively motivate the choice of treatment, while the outcome response remains unaffected by encouragements."
            },
            {
                "section_id": "3.2.x",
                "sentence": "The adopted encouragement policies serve as IVs, which only positively motivate the choice of treatments, without directly affecting the outcome response, which satisfies the following three IV conditions: (a) Relevance: IVs directly affect T; (b) Exclusion: IVs do not directly affect Y; (c) Independence: IVs are conditional independent of the error."
            }
        ],
        "final_answer": "By letting f(e) govern how encouragements shift the distribution of T, the model creates exogenous variation in T(e) exactly as in non-compliance settings.  In other words, each encouragement e induces a predictable change in treatment adoption via f(e), yet does not directly affect the outcome Y(e).  This mirrors the instrumental-variable (non-compliance) framework—where encouragements are ‘instruments’ that satisfy relevance (they change T), exclusion (they don’t change Y except through T), and independence (they’re exogenous).  As a result, f(e)-driven variation in T(e) aligns directly with non-compliance approaches and yields unbiased estimation of Y(e).",
        "relevant_elements": [
            "f(e)",
            "T(e)",
            "Y(e)"
        ],
        "id": 666,
        "masked_question": "How does [mask1]-driven variation in T(e) align with non-compliance frameworks for unbiased Y(e) estimation?",
        "masked_number": 1,
        "masked_elements": [
            "f(e)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.05428v1_figure_1.png",
        "paperid": "2408.05428v1",
        "paper_path": "./papers/2408.05428v1.json",
        "figure_id": "2408.05428v1_figure_1.png",
        "caption": "Figure 1: Overview of the Encouragement Design Framework. For example, in online course platforms like Coursera, edX, and Udacity, using only observational data to control observed confounders X(0)superscript𝑋0X^{(0)}italic_X start_POSTSUPERSCRIPT ( 0 ) end_POSTSUPERSCRIPT, we can not consistently estimate the causal effects of forum engagement duration T(0)superscript𝑇0T^{(0)}italic_T start_POSTSUPERSCRIPT ( 0 ) end_POSTSUPERSCRIPT on exam scores Y(0)superscript𝑌0Y^{(0)}italic_Y start_POSTSUPERSCRIPT ( 0 ) end_POSTSUPERSCRIPT due to the presence of unmeasured confounders U(0)superscript𝑈0U^{(0)}italic_U start_POSTSUPERSCRIPT ( 0 ) end_POSTSUPERSCRIPT. Therefore, we use varied encouragement policies (Class A: eA=Nonesubscript𝑒ANone{e}_{\\text{A}}=\\text{None}italic_e start_POSTSUBSCRIPT A end_POSTSUBSCRIPT = None, Class B: eB=Praisesubscript𝑒BPraise{e}_{\\text{B}}=\\text{Praise}italic_e start_POSTSUBSCRIPT B end_POSTSUBSCRIPT = Praise, Class C: eC=Pointssubscript𝑒CPoints{e}_{\\text{C}}=\\text{Points}italic_e start_POSTSUBSCRIPT C end_POSTSUBSCRIPT = Points) to encourage longer forum engagement duration (i.e., treatments T(e)superscript𝑇𝑒T^{(e)}italic_T start_POSTSUPERSCRIPT ( italic_e ) end_POSTSUPERSCRIPT), while these policies do not have a direct impact on exam scores (i.e., outcomes Y(e)superscript𝑌𝑒Y^{(e)}italic_Y start_POSTSUPERSCRIPT ( italic_e ) end_POSTSUPERSCRIPT), which offers new opportunities to identify causal effects.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does F-PET leverage SSF to maintain stability-plasticity balance?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "F-PET",
            "SSF"
        ],
        "id": 668,
        "masked_question": "How does [mask1] leverage [mask2] to maintain stability-plasticity balance?",
        "masked_number": 2,
        "masked_elements": [
            "F-PET",
            "SSF"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.02175v1_figure_1.png",
        "paperid": "2411.02175v1",
        "paper_path": "./papers/2411.02175v1.json",
        "figure_id": "2411.02175v1_figure_1.png",
        "caption": "Figure 1: \nComparisons of (a) prevailing PTM-based CL methods [52, 23, 2] and our Slow And Fast parameter-Efficient tuning (SAFE).\nThe right part (b) illustrates several parameter-efficient tuning (PET) blocks: Adapter [6], Scale & Shift (SSF) [21], and Visual Prompt Tuning (VPT) [16].",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does transferring PTM knowledge to S-PET calibration enhance feature generalizability for subsequent sessions?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "In the first session, the slow learner is tuned to inherit the general knowledge from PTM and is frozen afterward.",
            "For the slow learner, W₁ is learned in the first session and expanded using feature centroids of training samples within the same classes [28] afterward to preserve learned general knowledge.",
            "Intuitively, the joint optimization of three losses makes the adapted model simultaneously acquire distribution-specific knowledge based on D₁ and inherit general knowledge of the PTM using L_corr and L_orth.",
            "As a result, the slow model can better generalize to incoming classes even unseen in the first training session."
        ],
        "final_answer": "By explicitly aligning the S-PET features with PTM features via correlation and orthogonality losses in the first session, and then freezing those parameters—while only expanding its classification head using imprinted class centroids—S-PET inherits PTM’s invariant feature components. This retained general knowledge enables the slow learner to produce representations that generalize well to novel classes in all subsequent sessions.",
        "relevant_elements": [
            "PTM",
            "S-PET"
        ],
        "id": 669,
        "masked_question": "How does transferring [mask1] knowledge to S-PET calibration enhance feature generalizability for subsequent sessions?",
        "masked_number": 1,
        "masked_elements": [
            "PTM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.02175v1_figure_1.png",
        "paperid": "2411.02175v1",
        "paper_path": "./papers/2411.02175v1.json",
        "figure_id": "2411.02175v1_figure_1.png",
        "caption": "Figure 1: \nComparisons of (a) prevailing PTM-based CL methods [52, 23, 2] and our Slow And Fast parameter-Efficient tuning (SAFE).\nThe right part (b) illustrates several parameter-efficient tuning (PET) blocks: Adapter [6], Scale & Shift (SSF) [21], and Visual Prompt Tuning (VPT) [16].",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How do structural variations among Adapter, SSF, and VPT influence parameter placement within transformer layers?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Adapter",
            "SSF",
            "VPT"
        ],
        "id": 670,
        "masked_question": "How do structural variations among [mask1], SSF, and VPT influence parameter placement within transformer layers?",
        "masked_number": 1,
        "masked_elements": [
            "Adapter"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.02175v1_figure_1.png",
        "paperid": "2411.02175v1",
        "paper_path": "./papers/2411.02175v1.json",
        "figure_id": "2411.02175v1_figure_1.png",
        "caption": "Figure 1: \nComparisons of (a) prevailing PTM-based CL methods [52, 23, 2] and our Slow And Fast parameter-Efficient tuning (SAFE).\nThe right part (b) illustrates several parameter-efficient tuning (PET) blocks: Adapter [6], Scale & Shift (SSF) [21], and Visual Prompt Tuning (VPT) [16].",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Sparse Signal Reconstruction influence Data Stratification effectiveness in integrating continuous event-based features?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "By converting meal and insulin events into continuous values, we aim to capture the dynamic relationships between these factors and blood glucose levels to improve the accuracy of our prediction model.",
            "Both X_low and X_high are then combined with effective carbs intake (X_ic) and insulin dosage (X_ins), which are computed in our SSR module (Section 3.2), to create two new datasets."
        ],
        "final_answer": "The Sparse Signal Reconstruction module transforms the inherently sparse, event-based carbohydrate and insulin inputs into continuous time-series representations that capture their physiological onset, peak, and decay. When Data Stratification then combines these continuous event-based features with the decomposed low- and high-frequency glucose signals, it can more effectively integrate the dynamic influence of meals and insulin into each stratified dataset, improving the coherence and predictive power of both the low- and high-frequency forecasting branches.",
        "relevant_elements": [
            "Sparse Signal Reconstruction",
            "Data Stratification"
        ],
        "id": 671,
        "masked_question": "How does [mask1] influence Data Stratification effectiveness in integrating continuous event-based features?",
        "masked_number": 1,
        "masked_elements": [
            "Sparse Signal Reconstruction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.10703v1_figure_2.png",
        "paperid": "2411.10703v1",
        "paper_path": "./papers/2411.10703v1.json",
        "figure_id": "2411.10703v1_figure_2.png",
        "caption": "Figure 2. An Overview of GlucoNet includes sensing to measure variables, Sparse signal construction to extract the effective variables, Feature decomposition using the VMD method, Data stratification to combine various variables, and a forecasting module using LSTM and Knowledge Distillation Framework.",
        "qtype": "Experimental_Results",
        "response": "The Sparse Signal Reconstruction (SSR) module, highlighted by the red box as [mask1], directly influences the Data Stratification effectiveness by transforming raw, sparse, event-based features (such as carbohydrate intake `X_c` and insulin dosage `X_ins`) into **continuous time-series data**.\n\nHere's the step-by-step reasoning:\n1.  **Sparse Signal Reconstruction (SSR) Module (Section 3.2):** This module's primary function is to convert event-based features (e.g., discrete meal timings and insulin injections) into continuous, \"effective carbohydrate\" (`X_ic`) and \"active insulin\" (`X_ic`) features over time. This transformation accounts for the physiological onset, peak, and decay of these events, aiming to \"better represent the physiological effects... and decrease the effect of sampling irregularities.\"\n2.  **Feature Decomposition Module (Section 3.3):** This module decomposes"
    },
    {
        "question": "How does Knowledge Distillation affect the Transformer component's compactness in the Forecasting Module for high-frequency signals?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "Therefore, we extended Knowledge Distillation (KD) to compact the large Transformer (Teacher model) to the small Transformer (Student model) to achieve more accurate forecasting of blood glucose levels for high-frequency features.",
            "Also, the high-frequency model of the proposed GlucoNet offers multiple implementation configurations. It can be deployed with or without knowledge distillation (KD) and implemented with the large Transformer (teacher Transformer) or the small transformer (student Transformer). These options provide flexibility in adapting GlucoNet to various accuracy requirements and computational constraints."
        ],
        "final_answer": "By applying Knowledge Distillation, the original large Transformer (teacher) is converted into a much smaller student Transformer. This distilled student model has fewer parameters (e.g. reduced input dimensions, fewer attention heads and feed-forward units) while retaining the teacher’s predictive performance, thus making the high-frequency forecasting Transformer more compact and efficient.",
        "relevant_elements": [
            "Knowledge Distillation",
            "Transformer",
            "Forecasting Module"
        ],
        "id": 672,
        "masked_question": "How does [mask1] affect the Transformer component's compactness in the Forecasting Module for high-frequency signals?",
        "masked_number": 1,
        "masked_elements": [
            "Knowledge Distillation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.10703v1_figure_2.png",
        "paperid": "2411.10703v1",
        "paper_path": "./papers/2411.10703v1.json",
        "figure_id": "2411.10703v1_figure_2.png",
        "caption": "Figure 2. An Overview of GlucoNet includes sensing to measure variables, Sparse signal construction to extract the effective variables, Feature decomposition using the VMD method, Data stratification to combine various variables, and a forecasting module using LSTM and Knowledge Distillation Framework.",
        "qtype": "Experimental_Results",
        "response": "Knowledge Distillation. According to the text in section 3.4, \"We extended Knowledge Distillation (KD) to compact the large Transformer (Teacher model) to the small Transformer (Student model) to achieve more accurate forecasting of blood glucose levels for high-frequency features.\" This indicates that Knowledge Distillation is employed to reduce the complexity and size of the Transformer model, making it more compact, particularly for handling high-frequency blood glucose signals."
    },
    {
        "question": "What limitations does VMD-based feature decomposition impose on computational efficiency for real-time forecasting?",
        "relevant_section_ids": [
            "2"
        ],
        "relevant_context": [
            "Despite the advancements, these approaches face key limitations: VMD models struggle with computational demands, hybrid neural networks require high resource use, and enhanced methods depend on extensive preprocessing."
        ],
        "final_answer": "VMD-based feature decomposition is computationally intensive, requiring significant processing resources that can impede real-time forecasting on resource-constrained devices.",
        "relevant_elements": [
            "Feature Decomposition",
            "Forecasting"
        ],
        "id": 674,
        "masked_question": "What limitations does VMD-based feature decomposition impose on computational efficiency for real-time [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "Forecasting"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.10703v1_figure_2.png",
        "paperid": "2411.10703v1",
        "paper_path": "./papers/2411.10703v1.json",
        "figure_id": "2411.10703v1_figure_2.png",
        "caption": "Figure 2. An Overview of GlucoNet includes sensing to measure variables, Sparse signal construction to extract the effective variables, Feature decomposition using the VMD method, Data stratification to combine various variables, and a forecasting module using LSTM and Knowledge Distillation Framework.",
        "qtype": "Others",
        "response": "VMD-based feature decomposition imposes limitations on computational efficiency for real-time **forecasting** because **VMD models struggle with computational demands, which can increase preprocessing requirements and computational costs, hindering real-time deployment on resource-limited devices.**"
    },
    {
        "question": "What alternative approaches could mitigate hallucinations under distribution shifts during deployment & inference?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Distribution shifts",
            "Deployment & inference"
        ],
        "id": 675,
        "masked_question": "What alternative approaches could mitigate hallucinations under [mask1] during deployment & inference?",
        "masked_number": 1,
        "masked_elements": [
            "Distribution shifts"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15060v1_figure_2.png",
        "paperid": "2411.15060v1",
        "paper_path": "./papers/2411.15060v1.json",
        "figure_id": "2411.15060v1_figure_2.png",
        "caption": "Figure 2: Hallucination causes. We confirm each factor by ablating specific components (bottom row) in the VS pipeline and observing the resultant drop in MS-SSIM. The adopted experiment is from §5: VS of HE (target) from 4 SRS bands (source), trained by Pix2PixHD [30] and evaluated over an ID test set. OOD and adversarial example details in §5.3. Similar results were seen with PSNR and LPIPS.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What is the rationale behind reducing SRS bands to assess insufficient content's effect on hallucination?",
        "relevant_section_ids": [
            "3.2",
            "figure_2"
        ],
        "relevant_context": [
            "This includes randomness in the generating process (e.g., measurement noise) or insufficient source domain content (e.g., low resolution). Such intrinsic ill-posedness leads to one-to-many translations for φ*, where plausible translations may not match true observations, causing hallucinations.",
            "Insufficient content (Reduce 4 bands to 2)"
        ],
        "final_answer": "By halving the number of SRS spectral bands from 4 to 2, the experiment artificially removes source‐domain information. This simulates an “insufficient content” scenario—making the translation problem more ill‐posed and thus more prone to hallucinations—so that the effect of lacking input content on hallucination can be directly measured.",
        "relevant_elements": [
            "Insufficient content",
            "SRS bands"
        ],
        "id": 677,
        "masked_question": "What is the rationale behind reducing [mask1] to assess insufficient content's effect on hallucination?",
        "masked_number": 1,
        "masked_elements": [
            "SRS bands"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15060v1_figure_2.png",
        "paperid": "2411.15060v1",
        "paper_path": "./papers/2411.15060v1.json",
        "figure_id": "2411.15060v1_figure_2.png",
        "caption": "Figure 2: Hallucination causes. We confirm each factor by ablating specific components (bottom row) in the VS pipeline and observing the resultant drop in MS-SSIM. The adopted experiment is from §5: VS of HE (target) from 4 SRS bands (source), trained by Pix2PixHD [30] and evaluated over an ID test set. OOD and adversarial example details in §5.3. Similar results were seen with PSNR and LPIPS.",
        "qtype": "Design_Rationale",
        "response": "The rationale behind reducing the 4 SRS bands to 2 to assess insufficient content's effect on hallucination is directly linked to the definition of \"insufficient source domain content\" as a cause of hallucinations.\n\nHere's the breakdown:\n\n1.  **Hallucination Cause:** The context states that one cause of hallucinations is from data, specifically \"insufficient source domain content (e.g., low resolution).\" This \"intrinsic ill-posedness leads to one-to-many translations for , where plausible translations may not match true observations, causing hallucinations.\"\n2.  **VS Pipeline Baseline:** The standard Virtual Staining (VS) pipeline described uses \"4 SRS bands\" as the source input for the image-to-image translation.\n3.  **Simulating Insufficient Content:** To empirically demonstrate and quantify the effect of \"insufficient content,\" the experiment deliberately reduces the amount of input information available to the model. By switching from 4 SRS bands to 2, the model is provided with less source domain data than it was originally designed to process, thus"
    },
    {
        "question": "What motivates applying adversarial examples to probe attack-induced hallucination in VS inference?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "In addition, cybersecurity is highly relevant for digital pathology [54]. Unfortunately, I2IT models lack adversarial robustness, with research showing that injecting imperceptible noise disrupts malicious applications like deepfake [55, 56] and watermark removers [57]. This hints that VS models too can be attacked with hallucination intent."
        ],
        "final_answer": "The motivation comes from cybersecurity concerns: I2IT (virtual staining) models are known to lack adversarial robustness, and prior work has shown that imperceptible noise can be used to disrupt related applications (e.g., deepfakes, watermark removers). This suggests that VS models could similarly be attacked to induce hallucinations, motivating the use of adversarial examples to probe such vulnerabilities.",
        "relevant_elements": [
            "Attacks",
            "adversarial examples"
        ],
        "id": 678,
        "masked_question": "What motivates applying [mask1] to probe attack-induced hallucination in VS inference?",
        "masked_number": 1,
        "masked_elements": [
            "adversarial examples"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15060v1_figure_2.png",
        "paperid": "2411.15060v1",
        "paper_path": "./papers/2411.15060v1.json",
        "figure_id": "2411.15060v1_figure_2.png",
        "caption": "Figure 2: Hallucination causes. We confirm each factor by ablating specific components (bottom row) in the VS pipeline and observing the resultant drop in MS-SSIM. The adopted experiment is from §5: VS of HE (target) from 4 SRS bands (source), trained by Pix2PixHD [30] and evaluated over an ID test set. OOD and adversarial example details in §5.3. Similar results were seen with PSNR and LPIPS.",
        "qtype": "Design_Rationale",
        "response": "The motivation for applying \"Attacks (Apply over adv. ex.)\" to probe attack-induced hallucination in VS inference stems from the understanding that:\n\n1.  **I2IT models lack adversarial robustness**: As stated in the text, \"Unfortunately, I2IT models lack adversarial robustness, with research showing that injecting imperceptible noise disrupts malicious applications...\"\n2.  **Potential for hallucination intent**: This lack of robustness \"hints that VS models too can be attacked with hallucination intent.\" Adversarial examples introduce imperceptible noise that can force a model to generate incorrect or \"hallucinated\" outputs.\n3.  **Empirical demonstration of impact**: Figure 2 visually confirms this by showing that applying attacks (over adversarial examples) drastically reduces the average MS-SSIM to 0.299 (compared to the baseline of 0.464), indicating a significant increase in hallucination magnitude and a clear shift in the MS-SSIM PDF towards lower similarity, demonstrating that adversarial attacks are a potent cause of hallucinations in VS."
    },
    {
        "question": "What is the motivation behind complementing the global image-text objective with a fine-grained region-aware objective?",
        "relevant_section_ids": [
            "1",
            "4.1"
        ],
        "relevant_context": [
            "However, recent works have suggested that such global image-level strategies (i) discover spurious correlations that align poorly with human-interpretable attributes and (ii) may not effectively enable models to ignore spurious correlations during training. (Section 1)",
            "Our key insight is that utilizing region-level information during VLM training can enable models to focus on relevant image-text relationships and ignore spurious correlations. (Section 4.1)"
        ],
        "final_answer": "Global image–text objectives alone often discover spurious correlations that do not align with human‐interpretable features and fail to teach the model to ignore those spurious signals. By adding a fine‐grained region‐aware objective, the model is explicitly guided to pay attention to the correct local regions (and to push away spurious regions), thereby reinforcing the true image–text relationships and improving robustness.",
        "relevant_elements": [
            "global image-text objective",
            "region-aware objective"
        ],
        "id": 680,
        "masked_question": "What is the motivation behind complementing the [mask1] with a fine-grained [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "global image-text objective",
            "region-aware objective"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.04097v1_figure_1.png",
        "paperid": "2411.04097v1",
        "paper_path": "./papers/2411.04097v1.json",
        "figure_id": "2411.04097v1_figure_1.png",
        "caption": "Figure 1: Region-aware Vision-Language learning (RaVL). RaVL takes a fine-grained perspective on VLM robustness by discovering and mitigating spurious correlations using local image features.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How do the vision and text encoders synchronize embedding spaces to support region-level zero-shot classification?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "RaVL first utilizes the zero-shot classification dataset U to identify candidate image features. To this end, we use the fine-tuned VLM M to extract an image embedding for each image x_i in U and a text embedding for each class c_j. Zero-shot classification is performed using the computed embeddings; this results in a softmax-normalized image score distribution vector s^I.",
            "We then apply RoIAlign [16,63] to the image encoder of M to extract embeddings for each region. Zero-shot classification is performed using the computed region embeddings, resulting in a softmax-normalized region score distribution matrix S^R."
        ],
        "final_answer": "The vision and text encoders are trained to produce representations in a shared embedding space. At evaluation time, region‐level embeddings are extracted via RoIAlign on the vision encoder, and class labels are encoded via the text encoder; region‐level zero-shot classification is then carried out by computing cosine similarities between these region embeddings and text embeddings and applying a softmax to yield region score distributions.",
        "relevant_elements": [
            "Vision Encoder",
            "Text Encoder"
        ],
        "id": 681,
        "masked_question": "How do the [mask1] and text encoders synchronize embedding spaces to support region-level zero-shot classification?",
        "masked_number": 1,
        "masked_elements": [
            "Vision Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.04097v1_figure_1.png",
        "paperid": "2411.04097v1",
        "paper_path": "./papers/2411.04097v1.json",
        "figure_id": "2411.04097v1_figure_1.png",
        "caption": "Figure 1: Region-aware Vision-Language learning (RaVL). RaVL takes a fine-grained perspective on VLM robustness by discovering and mitigating spurious correlations using local image features.",
        "qtype": "Implementation_Details",
        "response": "The Vision Encoder and Text Encoder are components of a fine-tuned Vision-Language Model (VLM) `M`. They synchronize their embedding spaces to support region-level zero-shot classification through the following process:\n\n1.  **Unified Embedding Space:** The VLM `M` is fine-tuned such that its Vision Encoder and Text Encoder project visual inputs (images and regions) and textual inputs (class labels/attributes) into a shared, synchronized embedding space.\n2.  **Global Zero-Shot Classification:** Initially, for global image-level zero-shot classification, the Vision Encoder extracts an \"image embedding\" for each image, and the Text Encoder extracts a \"text embedding\" for each class label. Zero-shot classification is performed by comparing the similarity (e.g., cosine similarity) between these computed embeddings.\n3.  **Region-Level Embedding Extraction:** For region-level zero-shot classification, the RaVL approach first decomposes each image into a set of candidate regions. It then applies **RoIAlign** to the Vision Encoder of the fine-tuned VLM `M` to extract **embeddings specifically for each of these candidate regions**.\n4.  **Region-Text Similarity:** Because the Vision Encoder and Text Encoder operate within the same synchronized embedding space, these extracted region embeddings can be directly compared with the text embeddings (representing class labels or attributes) generated by the Text Encoder. This comparison allows for \"zero-shot classification\" to be performed *at the region level*, determining which regions are most similar to which textual concepts, leading to a softmax-normalized region score distribution.\n\nIn essence, the fine-tuning process ensures that both encoders output vectors in the same conceptual space, making region-level embeddings directly comparable to textual attribute embeddings, enabling classification without explicit region-level annotations."
    },
    {
        "question": "How does the fine-grained region-aware objective complement the global image-text objective during mitigation?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "We now introduce a novel region-aware contrastive loss function for training VLM M.",
            "For image x, the first loss component L_{r–txt} encourages high embedding similarity between non-spurious regions R^+ and assigned class label y when compared to other class labels. … The term L_{neg} is a penalty that enforces embedding-level dissimilarity between spurious regions and correlated class labels.",
            "The second loss component L_{r–r} encourages high embedding similarity between non-spurious regions R^+ and assigned class label y when compared to other regions.",
            "The final loss is expressed as L = L_{reg} + λ L_{orig}. Here, λ is a hyperparameter and L_{orig} takes the form of the original loss function used for training M; in our experiments, L_{orig} is the CLIP objective."
        ],
        "final_answer": "During mitigation, RaVL combines a global image–text contrastive loss (the CLIP objective) with a fine-grained region-aware loss. The region-aware loss adds two contrastive terms over image subregions—one that pulls non-spurious regions close to the correct class text and another that discriminates them from other regions—while simultaneously pushing spurious regions away from their (incorrectly) correlated class labels. By weighting and summing this region-level loss with the standard global image-text loss (via the hyperparameter λ), RaVL preserves overall vision–language alignment at the image level while explicitly steering the model’s attention toward relevant local features and away from spurious ones.",
        "relevant_elements": [
            "Fine-Grained Region-Aware Objective",
            "Global Image-Text Objective"
        ],
        "id": 682,
        "masked_question": "How does the [mask1] complement the global image-text objective during mitigation?",
        "masked_number": 1,
        "masked_elements": [
            "Fine-Grained Region-Aware Objective"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.04097v1_figure_1.png",
        "paperid": "2411.04097v1",
        "paper_path": "./papers/2411.04097v1.json",
        "figure_id": "2411.04097v1_figure_1.png",
        "caption": "Figure 1: Region-aware Vision-Language learning (RaVL). RaVL takes a fine-grained perspective on VLM robustness by discovering and mitigating spurious correlations using local image features.",
        "qtype": "Implementation_Details",
        "response": "The [mask1], labeled as \"Fine-Grained Region-Aware Objective\", complements the global image-text objective during mitigation by introducing a specific focus on region-level information to address spurious correlations.\n\nHere's"
    },
    {
        "question": "How do the visual encoder and text encoder outputs integrate to compute individual concept similarity scores?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "To estimate the presence of clinical concepts from an input image, we utilize a pretrained VLM and calculate the cosine similarity between the image features and a set of clinical concepts in the concept set (see Section 3.1).",
            "Following previous work [17], we adopt a pretrained VLM and determine the presence of a dermoscopic concept c in the input image by assessing the similarity between the image feature embedding, v, and the feature embedding of each concept t. Formally, the similarity scores are given by: s_i = sim(v, t_i) where sim is a similarity metric (e.g., cosine similarity), f_v is the visual encoder, and f_t is the text encoder."
        ],
        "final_answer": "For each concept, the image is encoded by the visual encoder into an embedding v, the concept name is encoded by the text encoder into an embedding t_i, and their pairwise similarity (e.g., cosine similarity) sim(v, t_i) yields the concept’s score.",
        "relevant_elements": [
            "Visual Encoder",
            "Text Encoder"
        ],
        "id": 683,
        "masked_question": "How do the [mask1] and [mask2] outputs integrate to compute individual concept similarity scores?",
        "masked_number": 2,
        "masked_elements": [
            "Visual Encoder",
            "Text Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.05609v1_figure_1.png",
        "paperid": "2411.05609v1",
        "paper_path": "./papers/2411.05609v1.json",
        "figure_id": "2411.05609v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed framework. The linear classifier layer (left) is replaced by a Large Language Model (LLM) (right), which grounds its responses on clinical concepts predicted by a pretrained vision-language model (VLM). This approach is training-free and not restricted by predefined labels, allowing the LLM to generate diverse diagnostic possibilities for different diseases.",
        "qtype": "Implementation_Details",
        "response": "The outputs of the [mask1] (Visual Encoder) and the [mask2] (Text Encoder) integrate to compute individual concept similarity scores as follows:\n\n1.  **Visual Encoder Output:** The [mask1] (Visual Encoder) takes the input image and outputs a visual feature embedding, denoted as .\n2.  **Text Encoder Output:** The [mask2] (Text Encoder) takes the textual diagnosis criteria (representing individual concepts) and outputs a feature embedding for each concept, denoted as , , ..., .\n3.  **Similarity Calculation:** To compute the individual concept similarity scores, a similarity metric (e.g., cosine similarity, implied by the dot product operation shown in the diagram) is applied between the visual feature embedding () and the feature embedding of each individual concept ().\n\nFormally, as stated in the context, the similarity scores for each concept () are given by:\n, where `sim` is a similarity metric, is the visual feature embedding from the Visual Encoder, and is the feature embedding of a specific concept from the Text Encoder. This process is repeated for each concept to yield a set of `n` concept similarity scores (, , ..., )."
    },
    {
        "question": "How does the prompt integrate predicted concept phrases into the LLM input to enable flexible disease outputs?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Using the concept scores generated in the first stage (Equation 1), we binarize them using a threshold and map them to their respective concept names.",
            "These concepts are then incorporated into the designed prompt. An example of this prompt is provided on the right side of Figure 1. This method ensures that the diagnosis is based on the dermoscopic concepts, improving the interpretability and transparency of the model’s output, and eliminates the need for training a linear layer, allowing for more flexible and varied diagnostic output formats."
        ],
        "final_answer": "After predicting and thresholding the concept scores, the model maps each positive concept score to its corresponding phrase and slots those phrases directly into a pre-designed LLM prompt (see Figure 1). By embedding the list of concept names into the \"Question\" portion of the prompt, the LLM is asked to produce a diagnosis grounded on those concepts—eliminating any fixed linear classifier and enabling flexible, varied disease outputs.",
        "relevant_elements": [
            "Prompt",
            "LLM"
        ],
        "id": 684,
        "masked_question": "How does the [mask1] integrate predicted concept phrases into the [mask2] input to enable flexible disease outputs?",
        "masked_number": 2,
        "masked_elements": [
            "Prompt",
            "LLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.05609v1_figure_1.png",
        "paperid": "2411.05609v1",
        "paper_path": "./papers/2411.05609v1.json",
        "figure_id": "2411.05609v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed framework. The linear classifier layer (left) is replaced by a Large Language Model (LLM) (right), which grounds its responses on clinical concepts predicted by a pretrained vision-language model (VLM). This approach is training-free and not restricted by predefined labels, allowing the LLM to generate diverse diagnostic possibilities for different diseases.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] (Prompt) integrates predicted concept phrases by taking the binarized and named dermoscopic concepts (like \"uniformly tan, brown, or black\" and \"sharp and well-defined\") derived from the visual and text encoders. These concept names are then directly appended or embedded into the \"Question\" part of the prompt, as shown by the green arrow pointing into the prompt's question section. This structured prompt, containing the predicted concepts along with instructions and options, is then fed as input to the [mask2] (LLM). This methodology enables flexible disease outputs because the LLM grounds its response directly on these variable clinical concepts, allowing it to generate diverse diagnostic possibilities without being restricted to a predefined, limited set of labels or requiring additional training for new labels, as explained in the \"Disease Classification\" section."
    },
    {
        "question": "How do Visual Encoder and Text Encoder interactions compare to traditional CBM bottleneck for concept mapping?",
        "relevant_section_ids": [
            "3",
            "3.1"
        ],
        "relevant_context": [
            "Given the task of predicting a target disease y from input x, let D represent a batch of training samples, where c is a vector of m clinical concepts. CBMs first map the input x into a set of interpretable concepts c (the “bottleneck”) by learning a function f: X → C, and use these concepts to predict the target y through g: C → Y. As a result, the final prediction ŷ is entirely based on the predicted concepts c.",
            "To estimate the presence of clinical concepts from an input image, we utilize a pretrained VLM and calculate the cosine similarity between the image features and a set of clinical concepts in the concept set C (see Section 3.1).",
            "Following previous work [17], we adopt a pretrained VLM and determine the presence of a dermoscopic concept cᵢ in the input image by assessing the similarity between the image feature embedding, v = E_v(x), and the feature embedding of each concept tᵢ = E_t(cᵢ). Formally, the similarity scores are given by sᵢ = sim(v, tᵢ), where E_v is a visual encoder and E_t is a text encoder."
        ],
        "final_answer": "Instead of learning an explicit bottleneck mapping f from images to concepts as in traditional CBMs, the proposed method uses a fixed pretrained visual encoder (E_v) and text encoder (E_t) to compute cosine similarity scores between image embeddings and concept text embeddings. This interaction replaces the learned bottleneck with a zero-shot similarity comparison for concept detection, removing the need to train a separate concept prediction layer.",
        "relevant_elements": [
            "Visual Encoder",
            "Text Encoder"
        ],
        "id": 685,
        "masked_question": "How do [mask1] and [mask2] interactions compare to traditional CBM bottleneck for concept mapping?",
        "masked_number": 2,
        "masked_elements": [
            "Visual Encoder",
            "Text Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.05609v1_figure_1.png",
        "paperid": "2411.05609v1",
        "paper_path": "./papers/2411.05609v1.json",
        "figure_id": "2411.05609v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed framework. The linear classifier layer (left) is replaced by a Large Language Model (LLM) (right), which grounds its responses on clinical concepts predicted by a pretrained vision-language model (VLM). This approach is training-free and not restricted by predefined labels, allowing the LLM to generate diverse diagnostic possibilities for different diseases.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does replacing the linear classifier with an LLM affect training demands in disease classification pipelines?",
        "relevant_section_ids": [
            "1",
            "2.2",
            "3.2"
        ],
        "relevant_context": [
            "In this work, we address the limitations of CBMs by proposing a novel two-step approach that provides concept-based explanations and generates disease diagnoses grounded in predicted concepts, all without the need for additional training. … However, unlike CBMs, our approach does not require training to provide the final diagnosis class and can be easily adapted to incorporate new concepts.",
            "Despite these improvements, most models still rely on a linear classifier to predict the final diagnostic label, whether based on concepts or visual features. Our approach overcomes this by prompting an LLM to directly predict the diagnosis using a tailored prompt that incorporates the concepts extracted by a pretrained VLM. This eliminates the fixed label constraint, improving scalability and removing the need for retraining when new diagnostic categories or concepts are introduced.",
            "This method ensures that the diagnosis is based on the dermoscopic concepts, improving the interpretability and transparency of the model’s output, and eliminates the need for training a linear layer, allowing for more flexible and varied diagnostic output formats."
        ],
        "final_answer": "By replacing the linear classifier with an LLM, the pipeline no longer requires training or retraining of a downstream classification layer, making the disease classification step effectively training-free and easily extensible to new diagnostic categories.",
        "relevant_elements": [
            "linear classifier",
            "LLM"
        ],
        "id": 686,
        "masked_question": "How does replacing the [mask1] with an [mask2] affect training demands in disease classification pipelines?",
        "masked_number": 2,
        "masked_elements": [
            "linear classifier",
            "LLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.05609v1_figure_1.png",
        "paperid": "2411.05609v1",
        "paper_path": "./papers/2411.05609v1.json",
        "figure_id": "2411.05609v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed framework. The linear classifier layer (left) is replaced by a Large Language Model (LLM) (right), which grounds its responses on clinical concepts predicted by a pretrained vision-language model (VLM). This approach is training-free and not restricted by predefined labels, allowing the LLM to generate diverse diagnostic possibilities for different diseases.",
        "qtype": "Literature_Background",
        "response": "Replacing the **Linear classifier** (mask1), which \"Requires training\" in the \"Existing Disease Classification Pipeline\", with an **LLM** (mask2) in the \"Proposed Disease Classification\" makes the final diagnosis classification step \"Training-free\".\n\nThe text confirms this:\n*   For the linear layer (mask1): \"traditional approach where a linear layer is trained to predict the final target class.\"\n*   For the LLM (mask2): \"all without the need for additional training.\" and \"eliminates the need for training a linear layer.\"\n\nThus, replacing the linear classifier with an LLM eliminates the need for training for the final diagnosis classification step."
    },
    {
        "question": "How does RTFA's token clustering refine attention compared to vanilla self-attention token selection?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Due to the intrinsic similarity between the camouflaged objects and background surroundings, directly using the self-attention mechanism to establish long-range dependency will inevitably introduce irrelevant interference by the background distractions, resulting in inferior segmentation outputs for camouflaged object discrimination.",
            "To address this issue, we propose a region-aware token focusing attention (RTFA) module, allowing the model to excavate the potentially distinguishable tokens using a dynamic token clustering strategy.",
            "Then we utilize a dynamic token clustering method based on DPC-KNN [58] to discard the token redundancy.",
            "The cluster centers with the top k scores are selected to construct the discriminative clustered token vc, which is further concatenated with the key-value pairs for token enhancement.",
            "Finally, we apply multi-head self-attention within those enhanced tokens."
        ],
        "final_answer": "Unlike vanilla self-attention, which attends over all tokens (and can be distracted by background regions), RTFA first computes a region-aware affinity matrix and applies a dynamic clustering (via DPC-KNN) to score and select only the most informative tokens. It discards redundant or irrelevant tokens, concatenates the selected cluster-center tokens with the key/value pairs, and then performs self-attention on this refined subset—thereby focusing the attention on discriminative regions and suppressing background interference.",
        "relevant_elements": [
            "RTFA",
            "token clustering",
            "self-attention"
        ],
        "id": 687,
        "masked_question": "How does [mask1]'s token clustering refine attention compared to vanilla self-attention token selection?",
        "masked_number": 1,
        "masked_elements": [
            "RTFA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.15020v2_figure_2.png",
        "paperid": "2408.15020v2",
        "paper_path": "./papers/2408.15020v2.json",
        "figure_id": "2408.15020v2_figure_2.png",
        "caption": "Figure 2: The overall architecture of the proposed HGINet. It mainly consists of a transformer backbone with multiple RTFA blocks, a hierarchical graph interaction transformer (HGIT), and a decoder network with confidence aggregated feature fusion (CAFF) modules. (a) illustrates our RTFA, i.e., region-aware token focusing module, which consists of a pooling and dynamic token clustering strategy to excavate the most distinguishable tokens. (b) demonstrates our graph projection and reprojection strategy in latent space.",
        "qtype": "Literature_Background",
        "response": "Vanilla self-attention computes attention and establishes long-range dependencies by considering all query-key pairs. However, for camouflaged objects, this \"inevitably introduce[s] irrelevant interference by the background distractions,\" leading to inferior segmentation.\n\n[mask1]'s token clustering, part of the Region-aware Token Focusing Attention (RTFA) module, refines attention by dynamically selecting and focusing on the most distinguishable and semantically relevant tokens, effectively discarding irrelevant ones.\n\nHere's how it refines attention:\n1.  **Semantic Association Measurement:** It first computes an affinity matrix `A` by multiplying pooled query and key tokens, which measures the semantic associations between them.\n2.  **Dynamic Token Clustering:** It then"
    },
    {
        "question": "How does HGIT's bi-directional graph interaction differ from classic non-local attention message passing?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "After obtaining graph representations via latent space graph projection, we apply a simple yet effective interaction approach to create the local alignment and communications between the graphs in hierarchical transformer blocks. Specifically, for the graph nodes \\(\\widetilde{v}_i\\) in i-th stage and \\(\\widetilde{v}_j\\) in j-th stage, we use the non-local operation [59] with softmax to perform bi-directional interaction:",
            "The functions \\(\\phi,\\psi,\\theta,\\omega\\) are learnable transformations on the graph nodes. \\(S_{i\\to j}\\) and \\(S_{j\\to i}\\) can be regarded as the alignment matrices measuring the correlation between the nodes in dual graphs, which hint the complementary visual semantics corresponding to the hierarchical feature maps.",
            "Meanwhile, we concatenate the graph nodes and squeeze the feature channel to combine both graph information. Then we perform graph interaction by multiplying \\(S_{i\\to j}\\) with one graph’s nodes and \\(S_{j\\to i}\\) with the other:",
            "By performing such interaction, the latent graph nodes \\(\\hat{V}_i\\) and \\(\\hat{V}_j\\) are simultaneously enhanced, leading to more powerful visual semantic mining of the camouflaged objects."
        ],
        "final_answer": "Classic non-local attention performs self-attention message passing within a single set of nodes (or one feature map), aggregating information from all other locations back into itself. In contrast, HGIT’s bi-directional graph interaction first constructs two separate graph representations from adjacent transformer stages, then uses two cross-graph non-local operations (with learned softmax alignment matrices \\(S_{i→j}\\) and \\(S_{j→i}\\)) to exchange messages in both directions between these two graphs. In other words, instead of only attending within one graph, HGIT aligns and propagates complementary semantics across hierarchical graphs by passing messages both ways between them.",
        "relevant_elements": [
            "HGIT",
            "graph interaction",
            "non-local attention"
        ],
        "id": 688,
        "masked_question": "How does [mask1]'s bi-directional [mask2] differ from classic non-local attention message passing?",
        "masked_number": 2,
        "masked_elements": [
            "HGIT",
            "graph interaction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.15020v2_figure_2.png",
        "paperid": "2408.15020v2",
        "paper_path": "./papers/2408.15020v2.json",
        "figure_id": "2408.15020v2_figure_2.png",
        "caption": "Figure 2: The overall architecture of the proposed HGINet. It mainly consists of a transformer backbone with multiple RTFA blocks, a hierarchical graph interaction transformer (HGIT), and a decoder network with confidence aggregated feature fusion (CAFF) modules. (a) illustrates our RTFA, i.e., region-aware token focusing module, which consists of a pooling and dynamic token clustering strategy to excavate the most distinguishable tokens. (b) demonstrates our graph projection and reprojection strategy in latent space.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does dynamic token clustering within RTFA suppress irrelevant tokens effectively?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Then we utilize a dynamic token clustering method based on DPC-KNN [58] to discard the token redundancy.",
            "For each token, a distance indicator δ_i is utilized to measure the closeness between this token and the surrounding tokens as follows: ... We calculate the score of each token by γ_i = δ_i × ρ_i. The higher scores indicate that the token i presents informative visual semantics for camouflaged object discrimination. The cluster centers with the top m scores are selected to construct the discriminative clustered token C, which is further concatenated with the key-value pairs for token enhancement:"
        ],
        "final_answer": "Within RTFA, dynamic token clustering first builds a region-aware affinity matrix and then measures for each token its local density (ρ_i) and its distance to higher-density neighbors (δ_i). By scoring tokens as γ_i = δ_i × ρ_i and selecting only the top-scoring tokens as cluster centers—discarding the rest—the module effectively suppresses redundant or irrelevant tokens (e.g., background distractions) and preserves only the most informative tokens for downstream attention.",
        "relevant_elements": [
            "RTFA",
            "dynamic token clustering"
        ],
        "id": 689,
        "masked_question": "How does [mask1] within [mask2] suppress irrelevant tokens effectively?",
        "masked_number": 2,
        "masked_elements": [
            "dynamic token clustering",
            "RTFA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.15020v2_figure_2.png",
        "paperid": "2408.15020v2",
        "paper_path": "./papers/2408.15020v2.json",
        "figure_id": "2408.15020v2_figure_2.png",
        "caption": "Figure 2: The overall architecture of the proposed HGINet. It mainly consists of a transformer backbone with multiple RTFA blocks, a hierarchical graph interaction transformer (HGIT), and a decoder network with confidence aggregated feature fusion (CAFF) modules. (a) illustrates our RTFA, i.e., region-aware token focusing module, which consists of a pooling and dynamic token clustering strategy to excavate the most distinguishable tokens. (b) demonstrates our graph projection and reprojection strategy in latent space.",
        "qtype": "Experimental_Results",
        "response": "The \"Clustering\" (mask1) within the \"RTFA\" (Region-aware Token Focusing Attention) module (mask2) suppresses irrelevant tokens effectively through a dynamic token clustering strategy based on DPC-KNN. Here's how it works:\n\n1.  **Calculate Local Density and Distance Indicator:** For each visual token, its local density (ρi) is calculated based on its k-nearest neighbors in the region-aware affinity matrix. A distance indicator (δi) is also computed, measuring the closeness of the token to the nearest region with a higher local density.\n2.  **Score Calculation:** A score (γi = ρi · δi) is then calculated for each token. Tokens with higher scores are considered to present more informative visual semantics for camouflaged object discrimination.\n3.  **Discriminative Token Selection:** Based on these scores, the cluster centers with the **top K scores** are selected. These selected tokens form the \"discriminative clustered token\" (Ĉ).\n4.  **Token Enhancement and Attention:** This Ĉ is then concatenated with the key-value pairs, effectively enhancing the key-value pairs with only the most discriminative and informative tokens. By doing so, tokens deemed less informative (those with lower scores) are discarded or suppressed, preventing them from introducing irrelevant interference from background distractions during the subsequent multi-head self-attention mechanism.\n\nIn essence, the clustering mechanism identifies and focuses on the most distinguishable tokens, discarding token redundancy and ensuring that the self-attention operates on a pruned set of semantically rich features."
    },
    {
        "question": "How does Data Selection balance instruction sample confidence and diversity during finetuning efficiency?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "We design a sampling method to select representative samples to reduce instruction data. The main idea is to opt for high-confidence samples indicated by f, thereby empowering T to acquire intrinsic semantic knowledge of G efficiently.",
            "Specifically, we assess the confidence of s from both global and local perspectives. The global confidence α_g is computed as α_g = 1 – rank(t)/|E|, where rank(t) is the position of the true tail among all entities. The local confidence α_l is computed as the model score f(q, t) of that fact. The final confidence α = λ·α_g + (1–λ)·α_l. Subsequently, we introduce a threshold β and keep the samples with confidence greater than β as the final instruction data."
        ],
        "final_answer": "Data Selection applies a truncated-sampling strategy in which each candidate instruction is scored by a combined confidence metric—α = λ·(1 − rank/|E|) + (1−λ)·f(q,t)—so that both its global standing in the embedding model’s ranking and its local score are taken into account. Only those samples whose combined confidence exceeds a preset threshold β are retained. In this way, the framework dramatically shrinks the training set to high-quality (high-confidence), yet still semantically varied, examples, achieving efficient finetuning without sacrificing diversity.",
        "relevant_elements": [
            "Data Selection"
        ],
        "id": 691,
        "masked_question": "How does [mask1] balance instruction sample confidence and diversity during finetuning efficiency?",
        "masked_number": 1,
        "masked_elements": [
            "Data Selection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.16127v1_figure_1.png",
        "paperid": "2407.16127v1",
        "paper_path": "./papers/2407.16127v1.json",
        "figure_id": "2407.16127v1_figure_1.png",
        "caption": "Figure 1: Illustration of the proposed DIFT framework.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Knowledge Adaption utilize embeddings from embedding-based models to improve LLM predictions?",
        "relevant_section_ids": [
            "3.5"
        ],
        "relevant_context": [
            "The facts provided in P are presented in the text format, losing the global structure information of KGs. Therefore, we propose to inject the embeddings learned from E with KG structure into L to further improve its graph reasoning ability.",
            "We align the embeddings from E with the semantic space of L, to get the knowledge representations:",
            "Considering that E scores a fact based on the embeddings of the query Q and the candidate entity t, we inject the knowledge representations of Q and all candidate entities in C into L.",
            "Specifically, we place a “[QUERY]” after the missing entity in P and an “[ENTITY]” after each entity name in C."
        ],
        "final_answer": "Knowledge Adaption first takes the query and candidate-entity embeddings produced by the pre-trained KG embedding model and passes them through a trainable linear projection (with SwiGLU activation) to align them with the LLM’s semantic space. It then inserts these projected embeddings—called \"knowledge representations\"—directly into the LLM’s input stream at special placeholder tokens ([QUERY] following the missing head/tail in the prompt, and [ENTITY] following each candidate name). By doing so, the LLM receives both the natural-language prompt and structured KG information, which enhances its graph reasoning capability and leads to more accurate entity predictions.",
        "relevant_elements": [
            "Knowledge Adaption",
            "Embedding-based models"
        ],
        "id": 692,
        "masked_question": "How does [mask1] utilize embeddings from [mask2] to improve LLM predictions?",
        "masked_number": 2,
        "masked_elements": [
            "Knowledge Adaption",
            "Embedding-based models"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.16127v1_figure_1.png",
        "paperid": "2407.16127v1",
        "paper_path": "./papers/2407.16127v1.json",
        "figure_id": "2407.16127v1_figure_1.png",
        "caption": "Figure 1: Illustration of the proposed DIFT framework.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] (Knowledge Adaption module) utilizes embeddings from [mask2] (Embedding-based models) by:\n\n1.  **Obtaining Embeddings**: It takes the embeddings of the query and candidate entities, which were initially generated by the [mask2] (embedding-based models) – such as TransE, SimKGC, or CoLE – from the Knowledge Graph structure.\n2.  **Transforming Embeddings**: These raw embeddings are then transformed into \"knowledge representations\" by aligning them with the semantic space of the LLM using trainable weights and an activation function (SwiGLU), as described by the formula: `knowledge_representation = SwiGLU(embedding * W_1) * W_2 + embedding * W_3 * W_4`.\n3.  **Injecting into LLM**: These derived knowledge representations are then injected into the LLM's input prompt using special placeholders. Specifically, a \"[QUERY]\" placeholder is placed after the missing entity in the"
    },
    {
        "question": "What challenges arise in distillation loss when aligning LLM-based and online query tower embeddings?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "In the first stage, our model measures distance using cosine similarity, which effectively captures the directional alignment of embeddings but overlooks the importance of magnitude.",
            "To address this limitation, we also use MSE (Wang and Hong, 2023) to align the representations of the teacher and student models more comprehensively, considering both direction and magnitude."
        ],
        "final_answer": "When distilling from the LLM-based query tower to the online query tower, using only a cosine‐similarity loss aligns embedding directions but ignores their magnitudes. This necessitates adding an MSE term to the distillation loss so that both direction and magnitude of the embeddings are matched.",
        "relevant_elements": [
            "Distillation Loss",
            "LLM-based Query Tower",
            "Online Query Tower"
        ],
        "id": 696,
        "masked_question": "What challenges arise in [mask1] when aligning LLM-based and online query tower embeddings?",
        "masked_number": 1,
        "masked_elements": [
            "Distillation Loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15766v1_figure_2.png",
        "paperid": "2411.15766v1",
        "paper_path": "./papers/2411.15766v1.json",
        "figure_id": "2411.15766v1_figure_2.png",
        "caption": "Figure 2. The framework of ScalingNote. The first stage is fully scaling the dual-tower using scaled training data, which learns through cross-device contrastive learning and hard negative mining.\nThe second stage is query-based knowledge distillation (QKD), which transfers the scaled query knowledge from the LLM-based query tower to the faster online query tower.",
        "qtype": "Others",
        "response": "The challenge that arises when aligning LLM-based and online query tower embeddings, as implicitly addressed by the Distillation Loss in [mask1], is that **cosine similarity, used in the first stage, effectively captures the directional alignment of embeddings but overlooks the importance of magnitude.**\n\nTo overcome this limitation and align the representations more comprehensively, considering both direction and magnitude, the Distillation Loss in Stage II incorporates both Mean Squared Error (MSE) and cosine similarity, as expressed in the formula `||qi - q_i^stu||^2 - λsim(qi, q_i^stu)`."
    },
    {
        "question": "What rationale drives integrating cross-device contrastive learning with MRL alongside Hard Negative Mining with MRL?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "To facilitate the future use of our representations by downstream applications with varying resource constraints, we adopt efficient MRL (Kusupati et al., 2022). We set the target vector dimension as d_max, and the least dimension as d_min. Then, we obtain the candidate available vector dimensions {d_min, ..., d_max}. These embeddings are transformed into lower dimensions to reduce memory cost. We can select any dimension d_i and truncate these embeddings to form shorter representations, such as e_i.",
            "Upon completion of encoding by each GPU device, we utilize cross-device contrastive learning to expand the number of in-batch negatives. Through the all-gather operation, each device obtains all query and document representations from other devices. We denote the batch of all-gathered query representations as Q̃, and the batch of all-gathered document representations of three types as D̃_title, D̃_topic, and D̃_content. For any i, we conduct contrastive learning for queries and three types of document embeddings, aggregating the losses across different embedding dimensions.",
            "Hard negatives are crucial for model performance, especially for top-position ranking (Xiong et al., [n. d.]; Zhan et al., 2021). Therefore, we mine the hard negatives using margin loss. We compute a margin-based loss for each dimension of the document embeddings and then aggregate these losses across all dimensions to form the final hard-negative loss."
        ],
        "final_answer": "The model combines cross-device contrastive learning with MRL and hard-negative mining with MRL so that it can both (1) leverage a large, diverse pool of in-batch negatives—gathered across multiple GPUs—to improve overall discriminative power, and (2) focus specifically on the most challenging (hard) negatives to boost top‐rank retrieval performance. At the same time, MRL (multi-resolution learning) lets the system flexibly truncate or expand embedding dimensions for different downstream resource constraints, enabling memory-efficient yet high-quality representations throughout both contrastive and hard-negative training.",
        "relevant_elements": [
            "Cross-device Contrastive Learning with MRL",
            "Hard Negative Mining with MRL"
        ],
        "id": 697,
        "masked_question": "What rationale drives integrating [mask1] alongside [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Cross-device Contrastive Learning with MRL",
            "Hard Negative Mining with MRL"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15766v1_figure_2.png",
        "paperid": "2411.15766v1",
        "paper_path": "./papers/2411.15766v1.json",
        "figure_id": "2411.15766v1_figure_2.png",
        "caption": "Figure 2. The framework of ScalingNote. The first stage is fully scaling the dual-tower using scaled training data, which learns through cross-device contrastive learning and hard negative mining.\nThe second stage is query-based knowledge distillation (QKD), which transfers the scaled query knowledge from the LLM-based query tower to the faster online query tower.",
        "qtype": "Design_Rationale",
        "response": "The rationale for integrating \"Cross-device Contrastive Learning with MRL\" (red box) alongside \"Hard Negative Mining with MRL\" (blue box) is to **comprehensively enhance the LLM’s retrieval capabilities** by combining two complementary strategies.\n\n1.  **Cross-device Contrastive Learning with MRL ([mask1])**: This technique is"
    },
    {
        "question": "What challenges motivate transferring knowledge from LLM-based Query Tower to Online Query Tower via Query-based Knowledge Distillation?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "In the first stage, we simultaneously optimize the query tower and the document tower. However, the LLM-based query tower significantly impacts online query latency.",
            "Therefore, it is necessary to reduce the online inference time by minimizing the model size.",
            "Compared to documents, queries are shorter and contain less information. This makes knowledge transfer based on queries easier and more efficient."
        ],
        "final_answer": "Because the full LLM-based query tower is too large and slow for real-time use—leading to high online latency—and queries themselves are short (making them good candidates for lightweight distillation), the authors transfer knowledge via Query-based Knowledge Distillation to produce a much smaller, faster online query encoder.",
        "relevant_elements": [
            "LLM-based Query Tower",
            "Online Query Tower",
            "Query-based Knowledge Distillation"
        ],
        "id": 698,
        "masked_question": "What challenges motivate transferring knowledge from [mask1] to [mask2] via Query-based Knowledge Distillation?",
        "masked_number": 2,
        "masked_elements": [
            "LLM-based Query Tower",
            "Online Query Tower"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15766v1_figure_2.png",
        "paperid": "2411.15766v1",
        "paper_path": "./papers/2411.15766v1.json",
        "figure_id": "2411.15766v1_figure_2.png",
        "caption": "Figure 2. The framework of ScalingNote. The first stage is fully scaling the dual-tower using scaled training data, which learns through cross-device contrastive learning and hard negative mining.\nThe second stage is query-based knowledge distillation (QKD), which transfers the scaled query knowledge from the LLM-based query tower to the faster online query tower.",
        "qtype": "Design_Rationale",
        "response": "**Step 1: Identify [mask1] and [mask2]**\n*   The red box ([mask1]) in the image highlights the \"LLM-based Query Tower\".\n*   The blue box ([mask2]) in the image highlights the \"Online Query Tower\".\n\n**Step 2: Locate relevant information in the text**\nThe question asks about \"Query-based Knowledge Distillation\" and the challenges motivating it. I'll refer to Section 3.3, titled \"Stage II: Query-based Knowledge Distillation.\"\n\n**Step 3: Extract the challenges/motivations from Section 3.3**\nThe first paragraph of Section 3.3 states: \"In the first stage, we simultaneously optimize the query tower and the document tower. **However, the LLM-based query tower significantly impacts online query latency.** Therefore, it is necessary to reduce the online inference time by minimizing the model size.\"\n\nThis directly answers the question. The LLM-based query tower (mask1) is large and complex, leading to high online query latency, making it unsuitable for efficient online serving. The knowledge distillation aims to transfer this knowledge to a smaller, faster model, the Online Query Tower (mask2), to overcome this latency issue.\n\n**Answer:**\nThe challenge that motivates transferring knowledge from the [mask1] (LLM-based Query Tower) to the [mask2] (Online Query Tower) via Query-based Knowledge Distillation is that the **LLM-based query tower significantly impacts online query latency**, making it too slow and expensive for online inference. The knowledge transfer aims to **reduce the online inference time by minimizing the model size** and achieving online query efficiency."
    },
    {
        "question": "What rationale supports splitting long-horizon tasks into subgoal segments for stable dynamical policy learning?",
        "relevant_section_ids": [
            "1",
            "2.4",
            "3.1"
        ],
        "relevant_context": [
            "However, these methods are designed to learn from a single primitive. Even the most expressive dynamical policies struggle to learn long-horizon tasks [15, 17], as ensuring global stability becomes increasingly difficult over extended time horizons.",
            "The prior work on data-driven methods for learning stable policies (such as the one in Sec. II-B) was designed for solving a single task. In our work, we will adapt the same network architecture for each subtask of a long-horizon problem.",
            "Our first step is to identify key states in the trajectory where major stages of the overall task take place, thereby breaking down complex trajectories into more manageable segments for learning.",
            "By defining these actions as subgoals, we can divide the demonstrations into sub-demos, where each segment can be easily described by a single dynamical policy.",
            "Our insight is that the most important requirement of manipulation tasks lies in achieving the subgoal, while precise imitation may not be essential."
        ],
        "final_answer": "Long-horizon tasks are difficult to learn as a single globally stable dynamical policy, since ensuring stability over long horizons leads to compounding errors and theoretical challenges. By splitting demonstrations into segments at meaningful subgoals (e.g., gripper open/close), each segment becomes a simpler motion that a single stable dynamical system can learn with rigorous stability guarantees. This segmentation reduces uncertainty, limits compounding errors, and focuses each policy on reaching just one subgoal, making reliable one-shot learning feasible.",
        "relevant_elements": [
            "Subgoal Identification",
            "Learning Dynamical Systems"
        ],
        "id": 699,
        "masked_question": "What rationale supports splitting long-horizon tasks into [mask1] segments for stable [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Subgoal Identification",
            "Learning Dynamical Systems"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.01033v2_figure_1.png",
        "paperid": "2410.01033v2",
        "paper_path": "./papers/2410.01033v2.json",
        "figure_id": "2410.01033v2_figure_1.png",
        "caption": "Figure 1: Overview of our approach: Long-horizon demonstrations (1) are first segmented into subgoals (2). Low-level stable dynamical policies are then learned to robustly reach each subgoal, even in the presence of perturbations (3). Finally, a high-level policy orchestrates a cascade of these stable policies for each segment, replicating the long-horizon expert demonstrations (4).",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What benefits emerge from cascading stable dynamical systems under a high-level policy for task reproduction?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "The high-level policy outlined in Eq. 6 is globally stable at the last subgoal.",
            "This architecture ensures resilience against noise and external perturbations.",
            "This allows the system to quickly return to the original path and avoid collisions in cluttered environments."
        ],
        "final_answer": "By cascading stable dynamical systems under a high-level policy, the overall controller becomes globally stable at the final subgoal, is robust to noise and external disturbances, can rapidly recover the intended trajectory, and safely avoids collisions in cluttered settings.",
        "relevant_elements": [
            "Learning Dynamical Systems",
            "Stable Task Reproduction"
        ],
        "id": 700,
        "masked_question": "What benefits emerge from cascading [mask1] under a high-level policy for [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Learning Dynamical Systems",
            "Stable Task Reproduction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.01033v2_figure_1.png",
        "paperid": "2410.01033v2",
        "paper_path": "./papers/2410.01033v2.json",
        "figure_id": "2410.01033v2_figure_1.png",
        "caption": "Figure 1: Overview of our approach: Long-horizon demonstrations (1) are first segmented into subgoals (2). Low-level stable dynamical policies are then learned to robustly reach each subgoal, even in the presence of perturbations (3). Finally, a high-level policy orchestrates a cascade of these stable policies for each segment, replicating the long-horizon expert demonstrations (4).",
        "qtype": "Design_Rationale",
        "response": "The benefits that emerge from cascading the **learned dynamical systems** (mask1) under a high-level policy for **stable task reproduction** (mask2) are:\n\n1.  **Resilience against noise and external perturbations:** The combined system ensures that even if disturbances occur, the robot can maintain its path and successfully complete the task.\n2.  **Ability to quickly return to the original path:** Due to the global stability enforced by each low-level dynamical system, the high-level orchestration allows the robot to recover and get back on track after deviations.\n3.  **Collision avoidance in cluttered environments:** The robustness provided by this cascading approach helps the system navigate and avoid unexpected obstacles.\n\nThis is explicitly stated in the \"III-C Stable Task Reproduction\" section: \"This architecture ensures resilience against noise and external perturbations. This allows the system to quickly return to the original path and avoid collisions in cluttered environments.\" The caption of Figure 1 also highlights that the high-level policy \"orchestrates a cascade of these stable policies for each segment, replicating the long-horizon expert demonstrations.\""
    },
    {
        "question": "How does Stable Task Reproduction orchestrate multiple dynamical policies during segment transitions?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Having learned a unique dynamical system for each segment, what remains is to define a high-level controller C to imitate the task by returning desired velocities at each state during execution.",
            "The high-level controller C takes as input the set of subgoals (from Sec. III-A) and learned dynamical systems (from Sec. III-B).",
            "At each time step, the high-level controller evaluates the current state x_t and determines which subgoal should be the target and whether the current subgoal was achieved, based on a distance threshold ε. Then, the high-level controller applies policy π_i and executes the predicted velocity v_t during the execution of segment i of the trajectory."
        ],
        "final_answer": "Stable Task Reproduction uses a high-level controller that, at each time step, checks the robot’s current state against segment-specific subgoals with a distance threshold ε. When the controller judges that the current subgoal is reached, it switches to the next segment’s learned dynamical policy π_i and uses that policy to generate the desired velocity for the new segment.",
        "relevant_elements": [
            "Learning Dynamical Systems",
            "Stable Task Reproduction"
        ],
        "id": 701,
        "masked_question": "How does [mask1] orchestrate multiple dynamical policies during segment transitions?",
        "masked_number": 1,
        "masked_elements": [
            "Stable Task Reproduction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.01033v2_figure_1.png",
        "paperid": "2410.01033v2",
        "paper_path": "./papers/2410.01033v2.json",
        "figure_id": "2410.01033v2_figure_1.png",
        "caption": "Figure 1: Overview of our approach: Long-horizon demonstrations (1) are first segmented into subgoals (2). Low-level stable dynamical policies are then learned to robustly reach each subgoal, even in the presence of perturbations (3). Finally, a high-level policy orchestrates a cascade of these stable policies for each segment, replicating the long-horizon expert demonstrations (4).",
        "qtype": "Implementation_Details",
        "response": "The element referred to as `[mask1]` (Stable Task Reproduction) orchestrates multiple dynamical policies during segment transitions through a high-level controller. This controller, at each time step, evaluates the robot's current state and determines if the current segment's subgoal has been achieved, using a predefined distance threshold.\n\nIf the current subgoal has been reached, and it's not the final overall task goal, the high-level controller switches to the next subgoal and applies the corresponding dynamical policy learned for that next segment. If the current subgoal has not yet been reached, it continues to apply the current segment's policy. This creates a cascade of stable policies, with transitions occurring precisely at the achievement of each sequential subgoal, enabling the system to replicate the long-horizon task."
    },
    {
        "question": "How does Subgoal Identification define termination criteria for each segment before Learning Dynamical Systems training?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "We opt for a straightforward method, defining a subgoal as the activation of the gripper.",
            "We perform a forward pass in the trajectory to find indices {i_k} such that i_k denotes the K occasions where the gripper opens or closes.",
            "Based on the selected indices, we divided the trajectory X into K segments, and define the subgoal for each segment as g_k."
        ],
        "final_answer": "Subgoal Identification segments the demonstration by detecting gripper activations (open or close). Each segment terminates at the frame where the gripper changes state, and that frame’s robot state is taken as the subgoal for the segment.",
        "relevant_elements": [
            "Subgoal Identification",
            "Learning Dynamical Systems"
        ],
        "id": 702,
        "masked_question": "How does [mask1] define termination criteria for each segment before [mask2] training?",
        "masked_number": 2,
        "masked_elements": [
            "Subgoal Identification",
            "Learning Dynamical Systems"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.01033v2_figure_1.png",
        "paperid": "2410.01033v2",
        "paper_path": "./papers/2410.01033v2.json",
        "figure_id": "2410.01033v2_figure_1.png",
        "caption": "Figure 1: Overview of our approach: Long-horizon demonstrations (1) are first segmented into subgoals (2). Low-level stable dynamical policies are then learned to robustly reach each subgoal, even in the presence of perturbations (3). Finally, a high-level policy orchestrates a cascade of these stable policies for each segment, replicating the long-horizon expert demonstrations (4).",
        "qtype": "Implementation_Details",
        "response": "\"2. Subgoal Identification\" defines the termination criteria for each segment by identifying key states in the original long-horizon demonstration where the gripper activates (either opens or closes). These gripper activation points are formally defined as subgoals, and they serve as the division points for the entire trajectory into individual segments. For each segment, the identified subgoal at the end of the segment is set as its \"last waypoint\". This means each segment naturally terminates when the corresponding subgoal (a gripper action) is reached. During \"3. Learning Dynamical Systems\" training, this identified subgoal is then used as the stable equilibrium for the dynamical system learned for that specific segment."
    },
    {
        "question": "How does the exit criterion monitor action prediction consistency across sequential MLLM exits?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "In our case, where the goal is action prediction and SoftMax output is not readily available, we adopt a different approach by leveraging the consistency of action predictions from adjacent intermediate features as our criterion.",
            "The underlying intuition is that if the action predictions from two differently sized MLLMs remain consistent, it suggests that the computational model may have reached saturation, and further processing is unlikely to yield any further improvements.",
            "For a given timestep t, we identify the smallest l within the range 1 to L that satisfies the following action consistency condition as termination exit: ||a_t^{l} – a_t^{l–1}||₂ ≤ ε, where we disregard the hidden state outputs of the LSTM and focus solely on comparing the L₂ norm of the difference in predicted actions against a predefined threshold ε."
        ],
        "final_answer": "The exit criterion computes the L₂ norm of the difference between the actions predicted at two consecutive exits. As soon as this norm falls below a preset threshold ε—indicating that the predictions have become sufficiently consistent—it triggers an early exit and stops further MLLM layers.",
        "relevant_elements": [
            "Exit Criterion",
            "MLLM"
        ],
        "id": 703,
        "masked_question": "How does the [mask1] monitor action prediction consistency across sequential [mask2] exits?",
        "masked_number": 2,
        "masked_elements": [
            "Exit Criterion",
            "MLLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.02359v1_figure_1.png",
        "paperid": "2411.02359v1",
        "paper_path": "./papers/2411.02359v1.json",
        "figure_id": "2411.02359v1_figure_1.png",
        "caption": "Figure 1: \nLeft: Dynamic inference of DeeR. For inference, we adaptively activate an appropriate size of MLLM based on an exit criterion c𝑐citalic_c, which accounts for the current situation (including task instruction l𝑙litalic_l and observation otsubscript𝑜𝑡o_{t}italic_o start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT) and predefined computational and GPU memory budgets.\nThe language instruction and gripper camera image, not shown in this figure, are also inputs to the MLLM.\nAn action is then obtained using the intermediate feature x~tc⁢(t)subscriptsuperscript~𝑥𝑐𝑡𝑡\\tilde{x}^{c(t)}_{t}over~ start_ARG italic_x end_ARG start_POSTSUPERSCRIPT italic_c ( italic_t ) end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT and historical information.\nRight: Training of DeeR.We randomly sample features from all exits during training. This strategy helps minimize the discrepancy between training and dynamic inference. Moreover, we employ several auxiliary action heads (AuxH) to better optimize the MLLM.",
        "qtype": "Implementation_Details",
        "response": "The **Exit Criterion** ([mask1]) monitors action prediction consistency across sequential **MLLM** ([mask2]) exits by comparing the L2 norm of the difference between action predictions from adjacent intermediate features. Specifically, for a given timestep `t`, it identifies the smallest exit `c` where the L2 norm of the difference between the action predicted from the current exit (`a_t^(c)`) and the action predicted from the previous exit (`a_t^(c-1)`) falls below a predefined threshold `ε`. If this condition (`||a_t^(c) - a_t^(c-1)||₂ < ε`) is met, it suggests that the action predictions are consistent, and the model can exit at that MLLM depth."
    },
    {
        "question": "How do sampling strategies determine AuxH inputs across multiple exit features during training?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "As depicted by the “winding” curves on the right side of Figure 1, our approach involves sampling an exit index from 1 to N at each timestep. We implement two types of sampling strategies.",
            "The first strategy, denoted as s^u, is to uniformly sample an exit index from 1 to N at each step. This ensures that features from all possible exits are effectively captured in the action head during training. It simulates scenarios where the action head might encounter features from all exits within a given time window, thus accommodating an arbitrary inference pattern and reducing the training–inference discrepancy.",
            "Moreover, we observe that in practice, the dynamic model often terminates at the same exit for multiple consecutive timesteps, as the neighboring observations tend to be quite similar. The model then switches to another exit for a sequence of subsequent timesteps. To better emulate this pattern during training, we adopt a second sampling strategy denoted as s^c. Specifically, we split the time window H into two consecutive segments H1 and H2, with H1 chosen randomly. In each segment, a single uniformly sampled index is assigned and shared across all timesteps."
        ],
        "final_answer": "During training, the model uses two sampling strategies to decide which intermediate-exit features are fed into each auxiliary head (AuxH). Under the uniform strategy (s^u), at every timestep an exit index is drawn uniformly from 1 to N, so AuxH sees features from all exits over time. Under the chunked strategy (s^c), the history window is split into two random segments and a single exit index is sampled per segment and reused for all timesteps in that segment, mirroring the temporal clustering of exit decisions seen at inference.",
        "relevant_elements": [
            "Sampling strategy",
            "AuxH"
        ],
        "id": 704,
        "masked_question": "How do sampling strategies determine [mask1] inputs across multiple exit features during training?",
        "masked_number": 1,
        "masked_elements": [
            "AuxH"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.02359v1_figure_1.png",
        "paperid": "2411.02359v1",
        "paper_path": "./papers/2411.02359v1.json",
        "figure_id": "2411.02359v1_figure_1.png",
        "caption": "Figure 1: \nLeft: Dynamic inference of DeeR. For inference, we adaptively activate an appropriate size of MLLM based on an exit criterion c𝑐citalic_c, which accounts for the current situation (including task instruction l𝑙litalic_l and observation otsubscript𝑜𝑡o_{t}italic_o start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT) and predefined computational and GPU memory budgets.\nThe language instruction and gripper camera image, not shown in this figure, are also inputs to the MLLM.\nAn action is then obtained using the intermediate feature x~tc⁢(t)subscriptsuperscript~𝑥𝑐𝑡𝑡\\tilde{x}^{c(t)}_{t}over~ start_ARG italic_x end_ARG start_POSTSUPERSCRIPT italic_c ( italic_t ) end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT and historical information.\nRight: Training of DeeR.We randomly sample features from all exits during training. This strategy helps minimize the discrepancy between training and dynamic inference. Moreover, we employ several auxiliary action heads (AuxH) to better optimize the MLLM.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the exit criterion leverage action head outputs to decide early-termination?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "In our case, where the goal is action prediction and SoftMax output is not readily available, we adopt a different approach by leveraging the consistency of action predictions from adjacent intermediate features as our criterion.",
            "The underlying intuition is that if the action predictions from two differently sized MLLMs remain consistent, it suggests that the computational model may have reached saturation, and further processing is unlikely to yield any further improvements.",
            "For a given timestep t, we identify the smallest l within the range [1, N] that satisfies the following action consistency condition as termination exit: ‖a_t^l − a_t^{l−1}‖₂ ≤ τ.",
            "We disregard the hidden state outputs of the LSTM and focus solely on comparing the L2 norm of the difference in predicted actions against a predefined threshold τ."
        ],
        "final_answer": "The exit criterion computes the actions predicted by the action head at each intermediate exit and measures the L₂ distance between consecutive predictions. As soon as the difference between the predictions from two successive exits falls below a predefined threshold τ, the model stops processing further layers and exits early.",
        "relevant_elements": [
            "exit criterion",
            "action head"
        ],
        "id": 705,
        "masked_question": "How does the [mask1] leverage [mask2] outputs to decide early-termination?",
        "masked_number": 2,
        "masked_elements": [
            "exit criterion",
            "action head"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.02359v1_figure_1.png",
        "paperid": "2411.02359v1",
        "paper_path": "./papers/2411.02359v1.json",
        "figure_id": "2411.02359v1_figure_1.png",
        "caption": "Figure 1: \nLeft: Dynamic inference of DeeR. For inference, we adaptively activate an appropriate size of MLLM based on an exit criterion c𝑐citalic_c, which accounts for the current situation (including task instruction l𝑙litalic_l and observation otsubscript𝑜𝑡o_{t}italic_o start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT) and predefined computational and GPU memory budgets.\nThe language instruction and gripper camera image, not shown in this figure, are also inputs to the MLLM.\nAn action is then obtained using the intermediate feature x~tc⁢(t)subscriptsuperscript~𝑥𝑐𝑡𝑡\\tilde{x}^{c(t)}_{t}over~ start_ARG italic_x end_ARG start_POSTSUPERSCRIPT italic_c ( italic_t ) end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT and historical information.\nRight: Training of DeeR.We randomly sample features from all exits during training. This strategy helps minimize the discrepancy between training and dynamic inference. Moreover, we employ several auxiliary action heads (AuxH) to better optimize the MLLM.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does the sampling strategy complement auxiliary action heads to emulate inference dynamics?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "To reduce the aforementioned discrepancy, we propose a simple yet effective random sampling strategy during training. As depicted by the “winding” curves on the right side of Figure 1, our approach involves sampling an exit index from 1 to N at each timestep. We implement two types of sampling strategies. The first strategy, denoted as T, is to uniformly sample an exit index from 1 to N at each step. This ensures that features from all possible exits are effectively captured in the action head during training. It simulates scenarios where the action head might encounter features from all exits within a given time window, thus accommodating an arbitrary inference pattern and reducing the training–inference discrepancy.",
            "To ensure that each activated size of the MLLM in our framework produces features suitable for predicting actions, we introduce auxiliary losses. Specifically, we attach N auxiliary action heads (denoted as UAH in Figure 1) at the exits. The i-th auxiliary head processes temporal features from the i-th exit and predicts the action a_i^t. We jointly train the auxiliary heads and the MLLM using the loss function: ... These auxiliary heads are employed only during training and are not used for inference."
        ],
        "final_answer": "During training, a random sampling strategy picks exit depths (either independently at each timestep or in consecutive blocks) to mirror the variable early-exit behavior at inference time. Auxiliary action heads are attached at each of these exits and trained to predict actions from their respective intermediate features. Together, the sampling strategy exposes the action heads to features from all possible exits in realistic temporal patterns, while the auxiliary heads supply exit-specific supervision, thereby emulating the inference dynamics of the early-exit MLLM.",
        "relevant_elements": [
            "sampling strategy",
            "auxiliary action heads"
        ],
        "id": 706,
        "masked_question": "How does the [mask1] complement auxiliary action heads to emulate inference dynamics?",
        "masked_number": 1,
        "masked_elements": [
            "sampling strategy"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.02359v1_figure_1.png",
        "paperid": "2411.02359v1",
        "paper_path": "./papers/2411.02359v1.json",
        "figure_id": "2411.02359v1_figure_1.png",
        "caption": "Figure 1: \nLeft: Dynamic inference of DeeR. For inference, we adaptively activate an appropriate size of MLLM based on an exit criterion c𝑐citalic_c, which accounts for the current situation (including task instruction l𝑙litalic_l and observation otsubscript𝑜𝑡o_{t}italic_o start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT) and predefined computational and GPU memory budgets.\nThe language instruction and gripper camera image, not shown in this figure, are also inputs to the MLLM.\nAn action is then obtained using the intermediate feature x~tc⁢(t)subscriptsuperscript~𝑥𝑐𝑡𝑡\\tilde{x}^{c(t)}_{t}over~ start_ARG italic_x end_ARG start_POSTSUPERSCRIPT italic_c ( italic_t ) end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT and historical information.\nRight: Training of DeeR.We randomly sample features from all exits during training. This strategy helps minimize the discrepancy between training and dynamic inference. Moreover, we employ several auxiliary action heads (AuxH) to better optimize the MLLM.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does three-stage training integrate realistic dataset and synthetic dataset to tune spatial and temporal layers?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Considering both the two-style paired datasets and the long temporal context requirement, we design a three-stage training strategy to harvest the variety of video content, the precise depth details, as well as the support for long and variable sequences.",
            "We first train it on our large realistic dataset to adapt the model to the video-to-depth generation task. The sequence length in this stage is randomly sampled from  frames, such that the model can learn to generate depth sequences with variable lengths.",
            "In the second stage, we only fine-tune the temporal layers of the model still on our large realistic dataset, with the sequence length randomly sampled from  frames. The reason why we only fine-tune the temporal layers is that the temporal layers are more sensitive to the sequence length while the spatial layers are already adapted to the video-to-depth generation task in the first stage, and doing so significantly reduces memory consumption compared to fine-tuning the full model. The long temporal context in this stage enables the model to precisely arrange the entire depth distributions for long and variable sequences.",
            "In the third stage, we fine-tune the spatial layers of the model on our small synthetic dataset, with a fixed sequence length of 45 frames since the model has already learned to generate depth sequences with variable lengths in the first two stages and tuning the spatial layers would not affect the temporal context. As the depth annotations in the synthetic dataset are more accurate and fine-grained, the model can learn more precise depth details in this stage."
        ],
        "final_answer": "The three-stage training first uses the large realistic dataset to adapt all layers of the pre‐trained video diffusion model to the depth‐generation task with variable short sequences. Then, still on the realistic data but with longer sequences, only the temporal U‐Net layers are fine‐tuned to learn long‐range consistency. Finally, using the small but highly accurate synthetic dataset, only the spatial layers of the U‐Net are fine‐tuned (with a fixed length) to inject fine‐grained depth detail without disturbing the learned temporal context.",
        "relevant_elements": [
            "three-stage training",
            "realistic dataset",
            "synthetic dataset"
        ],
        "id": 707,
        "masked_question": "How does [mask1] integrate realistic dataset and synthetic dataset to tune spatial and temporal layers?",
        "masked_number": 1,
        "masked_elements": [
            "three-stage training"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.02095v1_figure_2.png",
        "paperid": "2409.02095v1",
        "paper_path": "./papers/2409.02095v1.json",
        "figure_id": "2409.02095v1_figure_2.png",
        "caption": "Figure 2: \nOverview of our DepthCrafter. It is a conditional diffusion model that models the distribution p (𝐝|𝐯)𝑝conditional𝐝𝐯p(\\mathbf{d}\\,|\\,\\mathbf{v})italic_p ( bold_d | bold_v ) over the depth sequence 𝐝𝐝\\mathbf{d}bold_d conditioned on the input video 𝐯𝐯\\mathbf{v}bold_v.\nWe train the model in three stages, where the spatial or temporal layers of the diffusion model are progressively learned on our compiled realistic or synthetic datasets with variable lengths T𝑇Titalic_T.\nDuring inference, given an open-world video, it can generate temporally consistent long depth sequences with fine-grained details for the entire video from initialized Gaussian noise, without requiring any supplementary information, such as camera poses or optical flow.",
        "qtype": "Literature_Background",
        "response": "The three-stage training"
    },
    {
        "question": "How does VAE enc./dec. latent transformation impact Diffusion U-Net denoising relative to standard latent diffusion methods?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "To generate high-resolution depth sequences without sacrificing computational efficiency, we adopt the framework of Latent Diffusion Models (LDMs) that perform in a low-dimensional latent space, rather than the original data space.",
            "The transformation between the latent and data spaces is achieved by a Variational Autoencoder (VAE), which was originally designed for encoding and decoding video frames in SVD [3].",
            "Fortunately, we found it can be directly used for depth sequences with only a negligible reconstruction error, which is similar to the observation in Marigold [32] for image depth estimation.",
            "For the depth sequence, we replicate it three times to meet the 3-channel input format of the encoder in VAE and average the three channels of the decoder output to obtain the final latent of the depth sequence."
        ],
        "final_answer": "DepthCrafter follows the standard Latent Diffusion Model design by running all diffusion steps in a VAE’s low-dimensional latent space rather than in pixel space.  Crucially, the off-the-shelf SVD VAE used to compress RGB videos works out of the box on depth sequences with only negligible reconstruction error.  As a result, the Diffusion U-Net denoiser sees very similar latent statistics to a conventional RGB latent model and can be used without any architectural changes.  The only adaptation is to replicate single-channel depth maps into three channels before encoding (and then average the decoder’s three-channel output back into one).  This latent transform thus preserves high-resolution detail and lets the U-Net operate exactly as in a standard LDM.",
        "relevant_elements": [
            "VAE enc./dec.",
            "Diffusion U-Net"
        ],
        "id": 708,
        "masked_question": "How does [mask1] latent transformation impact [mask2] denoising relative to standard latent diffusion methods?",
        "masked_number": 2,
        "masked_elements": [
            "VAE enc./dec.",
            "Diffusion U-Net"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.02095v1_figure_2.png",
        "paperid": "2409.02095v1",
        "paper_path": "./papers/2409.02095v1.json",
        "figure_id": "2409.02095v1_figure_2.png",
        "caption": "Figure 2: \nOverview of our DepthCrafter. It is a conditional diffusion model that models the distribution p (𝐝|𝐯)𝑝conditional𝐝𝐯p(\\mathbf{d}\\,|\\,\\mathbf{v})italic_p ( bold_d | bold_v ) over the depth sequence 𝐝𝐝\\mathbf{d}bold_d conditioned on the input video 𝐯𝐯\\mathbf{v}bold_v.\nWe train the model in three stages, where the spatial or temporal layers of the diffusion model are progressively learned on our compiled realistic or synthetic datasets with variable lengths T𝑇Titalic_T.\nDuring inference, given an open-world video, it can generate temporally consistent long depth sequences with fine-grained details for the entire video from initialized Gaussian noise, without requiring any supplementary information, such as camera poses or optical flow.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does frame-wise concatenation of video latents to the diffusion U-Net inputs affect temporal consistency?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "As shown in Fig. 2, given the encoded latent of depth sequence z₀^(d) and video frames z^(v) from Eq. (4), we concatenate the video latent to the input noisy depth latent frame-wisely, rather than only the first frame, to condition the denoiser for generating the depth sequence.",
            "Compared to the original conditioning mechanism, our adapted conditioning provides more comprehensive information from the video frames to the denoiser, which significantly improves the alignment between the generated depth sequences and the video content, as well as the temporal consistency."
        ],
        "final_answer": "Frame-wise concatenation of video latents to the diffusion U-Net inputs provides more comprehensive conditioning information from each frame, which significantly improves the temporal consistency of the generated depth sequences.",
        "relevant_elements": [
            "frame-wise concatenation",
            "Diffusion U-Net"
        ],
        "id": 709,
        "masked_question": "How does frame-wise concatenation of video latents to the [mask1] inputs affect temporal consistency?",
        "masked_number": 1,
        "masked_elements": [
            "Diffusion U-Net"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.02095v1_figure_2.png",
        "paperid": "2409.02095v1",
        "paper_path": "./papers/2409.02095v1.json",
        "figure_id": "2409.02095v1_figure_2.png",
        "caption": "Figure 2: \nOverview of our DepthCrafter. It is a conditional diffusion model that models the distribution p (𝐝|𝐯)𝑝conditional𝐝𝐯p(\\mathbf{d}\\,|\\,\\mathbf{v})italic_p ( bold_d | bold_v ) over the depth sequence 𝐝𝐝\\mathbf{d}bold_d conditioned on the input video 𝐯𝐯\\mathbf{v}bold_v.\nWe train the model in three stages, where the spatial or temporal layers of the diffusion model are progressively learned on our compiled realistic or synthetic datasets with variable lengths T𝑇Titalic_T.\nDuring inference, given an open-world video, it can generate temporally consistent long depth sequences with fine-grained details for the entire video from initialized Gaussian noise, without requiring any supplementary information, such as camera poses or optical flow.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] refers to the \"Diffusion U-Net\".\n\nBased on the \"Conditioning on the video.\" section in the context:\n\"Given the encoded latent of depth sequence `z_0^(d)` and video frames `v` from Eq. (4), we concatenate the video latent to the input noisy depth latent frame-wisely, rather than only the first frame, to condition the denoiser for generating the depth sequence.\"\nAnd regarding its effect:\n\"Compared to the original conditioning mechanism, our adapted conditioning provides more comprehensive information from the video frames to the denoiser, which significantly improves the alignment between the generated depth sequences and the video content, as well as the temporal consistency.\"\n\nTherefore, frame-wise concatenation provides more comprehensive information from the video frames to the denoiser, which significantly improves temporal consistency."
    },
    {
        "question": "How does fine-tuning only temporal layers in stage two facilitate variable-length sequence learning?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "In the second stage, we only fine-tune the temporal layers of the model still on our large realistic dataset, with the sequence length randomly sampled from frames.",
            "The reason why we only fine-tune the temporal layers is that the temporal layers are more sensitive to the sequence length while the spatial layers are already adapted to the video-to-depth generation task in the first stage, and doing so significantly reduces memory consumption compared to fine-tuning the full model.",
            "The long temporal context in this stage enables the model to precisely arrange the entire depth distributions for long and variable sequences."
        ],
        "final_answer": "By freezing the spatial layers and fine-tuning only the temporal layers on randomly sampled (and progressively longer) video clips, the model focuses its capacity on learning how to model inter-frame dependencies over varying lengths. Because the temporal layers are the parts of the network most sensitive to sequence length, this targeted fine-tuning both reduces memory consumption (compared to full fine-tuning) and lets the model adapt to long, variable-length sequences, ensuring that depth distributions are arranged consistently across any length of video.",
        "relevant_elements": [
            "three-stage training",
            "temporal layers"
        ],
        "id": 710,
        "masked_question": "How does fine-tuning only [mask1] in stage two facilitate variable-length sequence learning?",
        "masked_number": 1,
        "masked_elements": [
            "temporal layers"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.02095v1_figure_2.png",
        "paperid": "2409.02095v1",
        "paper_path": "./papers/2409.02095v1.json",
        "figure_id": "2409.02095v1_figure_2.png",
        "caption": "Figure 2: \nOverview of our DepthCrafter. It is a conditional diffusion model that models the distribution p (𝐝|𝐯)𝑝conditional𝐝𝐯p(\\mathbf{d}\\,|\\,\\mathbf{v})italic_p ( bold_d | bold_v ) over the depth sequence 𝐝𝐝\\mathbf{d}bold_d conditioned on the input video 𝐯𝐯\\mathbf{v}bold_v.\nWe train the model in three stages, where the spatial or temporal layers of the diffusion model are progressively learned on our compiled realistic or synthetic datasets with variable lengths T𝑇Titalic_T.\nDuring inference, given an open-world video, it can generate temporally consistent long depth sequences with fine-grained details for the entire video from initialized Gaussian noise, without requiring any supplementary information, such as camera poses or optical flow.",
        "qtype": "Experimental_Results",
        "response": "The masked component refers to the **U-Net temporal layers**.\n\nHere's how fine-tuning only the U-Net temporal layers in stage two facilitates variable-length sequence learning:\n\n1.  **Targeted Sensitivity:** The text states that \"the temporal layers are more sensitive to the sequence length.\" This means these layers are primarily responsible for understanding and processing the temporal relationships and variations within a video sequence.\n2.  **Variable Length Data:** In Stage 2, the model is fine-tuned on the large realistic dataset with sequence lengths randomly sampled from T ∈ [1, 110] frames. This exposes the temporal layers to a wide range of sequence lengths.\n3.  **Memory Efficiency:** By freezing the spatial layers and only fine-tuning the temporal layers, the memory consumption is significantly reduced. This makes it feasible to train with longer sequences (up to 110 frames) than would be possible if fine-tuning the entire model.\n4.  **Long Temporal Context:** \"The long temporal context in this stage enables the model to precisely arrange the entire depth distributions for long and variable sequences.\" By training these sensitive temporal layers on longer and variable-length sequences, the model effectively learns to generalize to different sequence durations and maintain temporal consistency over extended periods.\n\nIn essence, selectively fine-tuning only the temporal layers with variable-length input sequences leverages their inherent sensitivity to sequence length, allowing the model to adapt efficiently to diverse durations without the computational burden of training the entire network."
    },
    {
        "question": "How does the BERT-based data labeling module interact with GPT-4 filtering to refine the sample dataset for evaluation?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "We finally collected more than 6,000 entries, and we fine-tune a bert-base-uncased [21] as text classifier to label new data.",
            "Then we built a filter based on prompting gpt-4-turbo [5], to remove the harmless ones, resulting in 1,525 entries (See the Appendix 9.2 for the classifier and filter details), ensuring both the consistency and the relevance of the enhanced dataset for comprehensive evaluation."
        ],
        "final_answer": "The pipeline first fine-tunes a BERT-base-uncased classifier to automatically label the raw pool of over 6,000 collected queries. That labeled output is then passed through a GPT-4-turbo prompt-based filter which removes any queries judged to be harmless, producing a final curated set of 1,525 malicious queries for the evaluation.",
        "relevant_elements": [
            "Data Labeling",
            "Filtering"
        ],
        "id": 711,
        "masked_question": "How does the [mask1]-based data labeling module interact with GPT-4 [mask2] to refine the sample dataset for evaluation?",
        "masked_number": 2,
        "masked_elements": [
            "Data Labeling",
            "Filtering"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.09326v1_figure_2.png",
        "paperid": "2408.09326v1",
        "paper_path": "./papers/2408.09326v1.json",
        "figure_id": "2408.09326v1_figure_2.png",
        "caption": "Figure 2: Workflow of the evaluation framework",
        "qtype": "Experimental_Results",
        "response": "The [mask1] (fine-tuned BERT as a text classifier) is used to **label new data** in the collected entries. After this initial labeling, [mask2] (GPT-4) is utilized to **filter out the harmless ones** from the labeled data, thereby refining the sample dataset for evaluation. Essentially, BERT labels the data, and then GPT-4 acts as a subsequent filtering step to remove irrelevant (harmless) entries."
    },
    {
        "question": "How does the normalization procedure reconcile metrics like ASR and Token Length during the aggregation into a unified reliability score?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "For metrics that improve with minimization (e.g., ASR, Toxicity Score, Grammatical Errors, and Fluency), a higher value indicates decreased reliability. Conversely, for the metric that benefits from maximization (i.e., Token Length), a higher value implies enhanced reliability.",
            "We normalize each metric to a range between 0 and 1, whereby a higher value consistently denotes increased reliability.",
            "For metrics to be minimized (M−), such as ASR, Toxicity Score, Grammatical Errors, Fluency, we define a normalization function f′(x) = (max – x) / (max – min).",
            "For the metric to be maximized (M+), such as Token Length, we define a normalization function f+(x) = (x – min) / (max – min).",
            "To derive a reliability score for each model, we amalgamate all the normalized values ... R = ∑ (1/n) W_i f_i(M_i), where each f_i is the appropriate normalization function and W_i the user‐assigned weight."
        ],
        "final_answer": "The procedure first maps every metric onto a common [0,1] scale so that larger normalized values always imply higher model reliability. Metrics to be minimized (like ASR) use f′(x) = (max − x)/(max − min), while metrics to be maximized (like Token Length) use f+(x) = (x − min)/(max − min). These normalized scores are then combined (via a weighted average) into a single reliability score.",
        "relevant_elements": [
            "Normalization",
            "Aggregation"
        ],
        "id": 712,
        "masked_question": "How does the [mask1] procedure reconcile metrics like ASR and Token Length during the [mask2] into a unified reliability score?",
        "masked_number": 2,
        "masked_elements": [
            "Normalization",
            "Aggregation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.09326v1_figure_2.png",
        "paperid": "2408.09326v1",
        "paper_path": "./papers/2408.09326v1.json",
        "figure_id": "2408.09326v1_figure_2.png",
        "caption": "Figure 2: Workflow of the evaluation framework",
        "qtype": "Experimental_Results",
        "response": "The `Normalization` procedure reconciles metrics like ASR (Attack Success Rate) and Token Length during the `[0,1]` process by transforming their raw values into a consistent scale where a higher value uniformly indicates increased reliability.\n\nFor metrics like ASR (where a lower value is better for reliability), the normalization function inverts the scale: a low ASR raw value will be mapped to a higher normalized value (closer to 1), while a high ASR raw value will be mapped to a lower normalized value (closer to 0).\n\nConversely, for metrics like Token Length (where a higher value is better for reliability), the normalization function directly maps the raw values to the [0,1] range: a higher Token Length raw value will result in a higher normalized value (closer to 1), and a lower raw value will result in a lower normalized value (closer to 0).\n\nBy applying these specific normalization formulas, all raw metric values, regardless of their original scale or direction of improvement, are converted into a standardized `[0,1]` range. This allows them to be directly comparable and subsequently combined into a single, unified reliability score using a weighted average."
    },
    {
        "question": "What ethical risks emerge from automated filtering during dataset construction?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Dataset Construction",
            "Filtering"
        ],
        "id": 713,
        "masked_question": "What ethical risks emerge from automated [mask1] during dataset construction?",
        "masked_number": 1,
        "masked_elements": [
            "Filtering"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.09326v1_figure_2.png",
        "paperid": "2408.09326v1",
        "paper_path": "./papers/2408.09326v1.json",
        "figure_id": "2408.09326v1_figure_2.png",
        "caption": "Figure 2: Workflow of the evaluation framework",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations arise from normalizing metrics during aggregation of model reliability?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Normalization",
            "Aggregation"
        ],
        "id": 714,
        "masked_question": "What limitations arise from [mask1] metrics during [mask2] of model reliability?",
        "masked_number": 2,
        "masked_elements": [
            "Normalization",
            "Aggregation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.09326v1_figure_2.png",
        "paperid": "2408.09326v1",
        "paper_path": "./papers/2408.09326v1.json",
        "figure_id": "2408.09326v1_figure_2.png",
        "caption": "Figure 2: Workflow of the evaluation framework",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations could arise when relying solely on RPSN for chassis position sampling in novel environments?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "RPSN",
            "chassis position sampling"
        ],
        "id": 715,
        "masked_question": "What limitations could arise when relying solely on [mask1] for [mask2] in novel environments?",
        "masked_number": 2,
        "masked_elements": [
            "RPSN",
            "chassis position sampling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.06590v1_figure_1.png",
        "paperid": "2407.06590v1",
        "paper_path": "./papers/2407.06590v1.json",
        "figure_id": "2407.06590v1_figure_1.png",
        "caption": "Figure 1: System architecture of our BEAM-1. According to different functions, it can be categorized into (a) body composition-Hardware level, (b) intuition-guided motion sampling algorithm-Motion level, (c) predicate and primitive-based high precision control-Execution level, and (d) LLM-heuristic tree-searching task planning-Task level.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What is the rationale behind integrating neural predicates with action primitives for high-precision control?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Most current robotic systems heavily rely on high-precision sensors to perceive their environment. These systems execute predefined programs to perform corresponding robot operations under specific conditions, such as distance parameters. However, this approach fails to address the uncertainty during the battery disassembly process in highly dynamic environments. Different batteries, various bolts, and diverse disassembly scenarios cannot be universally dismantled using a standardized predefined method.",
            "To achieve a more intelligent system, we introduce neural predicates to help BEAM-1 for environment state recognition based on the NeuralSymbolic AI. Each neural predicate can be regarded as a neural network, which maps the multi-sensor perception information of the environment to the quasi-symbolic space to complete the characterization of the state.",
            "Having accomplished the precise perception of the environment state, we realize high-precision control based on action primitives at the execution level. We subdivided the disassembly process and defined 12 action primitives such as Approach, Mate, Push, Insert, and so on. Each primitive is defined by PDDL with execution pre-requirements and execution target effects in symbol space, which will be used for searching during task planning.",
            "The definition of primitives ensures that BEAM-1 can autonomously plan appropriate action sequences in dynamic and complex environments to cope with various environmental states and accomplish various tasks.",
            "The accuracy of current popular control methods failed to meet the millimeter-level requirements in the disassembly environment [15, 28], and this study uses manually implemented primitives to achieve high-precision accurate control while adding a layer of detection and verification at the primitive level."
        ],
        "final_answer": "Because battery disassembly involves unpredictable and unstructured scenarios—different battery types, bolt shapes, corrosion states, and environmental conditions—a purely predefined, sensor-threshold based approach cannot reliably locate and manipulate each bolt to millimeter accuracy. By first using neural predicates (neural networks mapping multi-sensor data into symbolic state representations), BEAM-1 gains a robust understanding of the current environment. It then executes tightly defined action primitives (each with symbolic preconditions, precise motion logic, and verification checks) to achieve the required high-precision control. The integration ensures that perception and execution remain tightly coupled and calibrated, enabling both flexible decision-making in novel situations and millimeter-level accuracy in the disassembly process.",
        "relevant_elements": [
            "neural predicates",
            "action primitives"
        ],
        "id": 717,
        "masked_question": "What is the rationale behind integrating [mask1] with action primitives for high-precision control?",
        "masked_number": 1,
        "masked_elements": [
            "neural predicates"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.06590v1_figure_1.png",
        "paperid": "2407.06590v1",
        "paper_path": "./papers/2407.06590v1.json",
        "figure_id": "2407.06590v1_figure_1.png",
        "caption": "Figure 1: System architecture of our BEAM-1. According to different functions, it can be categorized into (a) body composition-Hardware level, (b) intuition-guided motion sampling algorithm-Motion level, (c) predicate and primitive-based high precision control-Execution level, and (d) LLM-heuristic tree-searching task planning-Task level.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What is the rationale behind combining breadth-first tree search with LLM-heuristic tree search for efficient task planning?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "At the task level, BEAM-1 generates the optimal sequence of action primitives from the current state to the goal state in the symbol space using the pre-requirements of the primitives and the current state given by the neural predicates, by using BFS tree search (Figure1(d)).",
            "In scenarios with complex tasks, the problem of exploding search space arises during the search for feasible solutions, leading to excessively long computation times.",
            "To tackle this issue, we introduce the LLM heuristic search, further enhancing the efficiency of task planning in unstructured environments."
        ],
        "final_answer": "Breadth-first tree search provides a systematic, complete way to explore all action-primitive sequences, but it can explode combinatorially in complex disassembly tasks. By integrating an LLM-based heuristic search—where the LLM predicts the most promising next primitives, checks their feasibility, and evaluates their likely effects—the combined approach prunes infeasible or low-value branches and steers the BFS toward high-value paths, greatly speeding up planning without sacrificing completeness.",
        "relevant_elements": [
            "breadth-first tree search",
            "LLM-heuristic tree search"
        ],
        "id": 718,
        "masked_question": "What is the rationale behind combining [mask1] with [mask2] for efficient task planning?",
        "masked_number": 2,
        "masked_elements": [
            "breadth-first tree search",
            "LLM-heuristic tree search"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.06590v1_figure_1.png",
        "paperid": "2407.06590v1",
        "paper_path": "./papers/2407.06590v1.json",
        "figure_id": "2407.06590v1_figure_1.png",
        "caption": "Figure 1: System architecture of our BEAM-1. According to different functions, it can be categorized into (a) body composition-Hardware level, (b) intuition-guided motion sampling algorithm-Motion level, (c) predicate and primitive-based high precision control-Execution level, and (d) LLM-heuristic tree-searching task planning-Task level.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates freezing the image encoder weight instead of jointly fine-tuning it with the transformer?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "image encoder",
            "transformer"
        ],
        "id": 719,
        "masked_question": "What motivates freezing the [mask1] weight instead of jointly fine-tuning it with the transformer?",
        "masked_number": 1,
        "masked_elements": [
            "image encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.17820v1_figure_2.png",
        "paperid": "2411.17820v1",
        "paper_path": "./papers/2411.17820v1.json",
        "figure_id": "2411.17820v1_figure_2.png",
        "caption": "Figure 2: Overall Illustration of CityWalker. Our training pipeline starts with internet-sourced videos, using visual odometry to obtain relative poses between frames. At each time step, the model receives past observations, past trajectory, and target location as input. They are encoded via a frozen image encoder and a trainable coordinate encoder. A transformer processes these inputs to generate future tokens. An action head and an arrival head decode these tokens into action and arrival status predictions. During training, future frame tokens from future frames guide the transformer to hallucinate future tokens.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does the coordinate MLP normalize and encode relative poses with target coordinates into the input coordinate token?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Past Traj.",
            "Target Coord.",
            "MLP"
        ],
        "id": 721,
        "masked_question": "How does the coordinate [mask1] normalize and encode relative poses with target coordinates into the input coordinate token?",
        "masked_number": 1,
        "masked_elements": [
            "MLP"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.17820v1_figure_2.png",
        "paperid": "2411.17820v1",
        "paper_path": "./papers/2411.17820v1.json",
        "figure_id": "2411.17820v1_figure_2.png",
        "caption": "Figure 2: Overall Illustration of CityWalker. Our training pipeline starts with internet-sourced videos, using visual odometry to obtain relative poses between frames. At each time step, the model receives past observations, past trajectory, and target location as input. They are encoded via a frozen image encoder and a trainable coordinate encoder. A transformer processes these inputs to generate future tokens. An action head and an arrival head decode these tokens into action and arrival status predictions. During training, future frame tokens from future frames guide the transformer to hallucinate future tokens.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does RCA leverage the importance sampling ratio between current and previous πθ during optimization?",
        "relevant_section_ids": [
            "4.4"
        ],
        "relevant_context": [
            "Inspired by TRPO (Schulman et al., 2015  ###reference_b35###), we employ importance sampling, which enables the network to incorporate historical data into its updates, thereby enhancing the overall efficiency of the optimization process.",
            "We reformulate Eq.7 ###reference_### to a loss function as follows:\n\n    L(θ) = – E_{a ∼ πθ_old}[r(a) · (πθ(a) / πθ_old(a))]\n\nwhere πθ_old is the policy of the previous step.",
            "Specifically, we define the ratio of new policy and old policy as ratio = πθ(a) / πθ_old(a). When the new policy is equal to the old policy, ratio is equal to 1. To limit the magnitude of updates to the new policy, we set a margin ε, ensuring that ratio falls within the range of [1–ε, 1+ε]."
        ],
        "final_answer": "RCA incorporates an importance sampling correction by weighting each sampled reward with the ratio πθ(a)/πθ_old(a) between the current and previous policies. It then clips this ratio to lie within [1–ε, 1+ε] to prevent overly large updates and thus stabilizes the optimization of the initial noise distribution.",
        "relevant_elements": [
            "RCA",
            "πθ"
        ],
        "id": 723,
        "masked_question": "How does [mask1] leverage the importance sampling ratio between current and previous πθ during optimization?",
        "masked_number": 1,
        "masked_elements": [
            "RCA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.19453v1_figure_2.png",
        "paperid": "2407.19453v1",
        "paper_path": "./papers/2407.19453v1.json",
        "figure_id": "2407.19453v1_figure_2.png",
        "caption": "Figure 2. The optimization iteration of our FIND. Firstly, we sample 𝐳T∼πθsimilar-tosubscript𝐳𝑇subscript𝜋𝜃\\mathbf{z}_{T}\\sim\\pi_{\\theta}bold_z start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT ∼ italic_π start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT, then generate an image through a T-step denoising process. Next, we optimize the reward prediction network g𝑔gitalic_g by ℒg∗subscriptsuperscriptℒ𝑔\\mathcal{L}^{*}_{g}caligraphic_L start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_g end_POSTSUBSCRIPT. Subsequently, we update the initial distribution πθsubscript𝜋𝜃\\pi_{\\theta}italic_π start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT using the policy gradient by ℒp∗subscriptsuperscriptℒ𝑝\\mathcal{L}^{*}_{p}caligraphic_L start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does DRCM train its MLP to predict expected reward for πθ using L_g* calibration?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "We propose a Dynamic Reward Calibration Module (DRCM) to predict the expected reward \\bar{r} of the current initial distribution by a simple 3-layer MLP network g defined as \\bar{r} = g(z_T; φ).",
            "The loss function of g is formulated as: L_g = E[(g(z_T) - r)^2].",
            "Considering the K times multiple optimization steps involved in the entire process, we optimize g using the rewards r corresponding to the sampled z_T at each optimization step, as well as the initial distribution, as shown in the left part of Fig.3.",
            "We reformulate the loss function of g as follows: L_g = \\frac{1}{N} \\sum_{i=1}^N (g(z_T^i) - r^i)^2. Considering the efficiency of optimization, here N is set to 1."
        ],
        "final_answer": "DRCM trains its 3-layer MLP g by minimizing a squared-error calibration loss L_g between g’s prediction and the actual reward observed for each sampled initial noise z_T.  Since no ground-truth expected reward is available, g is updated online at each optimization step using the current sample’s reward as the target: L_g = (1/N) Σ_i (g(z_T^i) – r^i)^2 (with N=1 for efficiency).  Over iterations, g learns to approximate the true expected reward of πθ.",
        "relevant_elements": [
            "DRCM",
            "L_g*",
            "πθ"
        ],
        "id": 724,
        "masked_question": "How does [mask1] train its MLP to predict expected reward for [mask2] using L_g* calibration?",
        "masked_number": 2,
        "masked_elements": [
            "DRCM",
            "πθ"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.19453v1_figure_2.png",
        "paperid": "2407.19453v1",
        "paper_path": "./papers/2407.19453v1.json",
        "figure_id": "2407.19453v1_figure_2.png",
        "caption": "Figure 2. The optimization iteration of our FIND. Firstly, we sample 𝐳T∼πθsimilar-tosubscript𝐳𝑇subscript𝜋𝜃\\mathbf{z}_{T}\\sim\\pi_{\\theta}bold_z start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT ∼ italic_π start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT, then generate an image through a T-step denoising process. Next, we optimize the reward prediction network g𝑔gitalic_g by ℒg∗subscriptsuperscriptℒ𝑔\\mathcal{L}^{*}_{g}caligraphic_L start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_g end_POSTSUBSCRIPT. Subsequently, we update the initial distribution πθsubscript𝜋𝜃\\pi_{\\theta}italic_π start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT using the policy gradient by ℒp∗subscriptsuperscriptℒ𝑝\\mathcal{L}^{*}_{p}caligraphic_L start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does g’s calibrated baseline reflect classical reward baseline subtraction in policy gradient?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "We propose a Dynamic Reward Calibration Module (DRCM) to predict r̄ of z_T by a simple 3-layer MLP network g_φ defined as g_φ: z_T → ℝ.",
            "We define the optimized reward for our current sample as r* = r – g_φ(z_T), as the difference between the reward obtained from sampling and the reward predicted by the network."
        ],
        "final_answer": "The network g_φ learns to predict the expected reward (the baseline) for a given initial noise z_T, and this baseline is then subtracted from the actual reward r to form r* = r – g_φ(z_T). This exactly mirrors the classical policy‐gradient practice of subtracting a learned reward baseline from sampled rewards to compute an advantage signal and reduce gradient variance.",
        "relevant_elements": [
            "g",
            "reward"
        ],
        "id": 725,
        "masked_question": "How does [mask1]’s calibrated baseline reflect classical [mask2] baseline subtraction in policy gradient?",
        "masked_number": 2,
        "masked_elements": [
            "g",
            "reward"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.19453v1_figure_2.png",
        "paperid": "2407.19453v1",
        "paper_path": "./papers/2407.19453v1.json",
        "figure_id": "2407.19453v1_figure_2.png",
        "caption": "Figure 2. The optimization iteration of our FIND. Firstly, we sample 𝐳T∼πθsimilar-tosubscript𝐳𝑇subscript𝜋𝜃\\mathbf{z}_{T}\\sim\\pi_{\\theta}bold_z start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT ∼ italic_π start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT, then generate an image through a T-step denoising process. Next, we optimize the reward prediction network g𝑔gitalic_g by ℒg∗subscriptsuperscriptℒ𝑔\\mathcal{L}^{*}_{g}caligraphic_L start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_g end_POSTSUBSCRIPT. Subsequently, we update the initial distribution πθsubscript𝜋𝜃\\pi_{\\theta}italic_π start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT using the policy gradient by ℒp∗subscriptsuperscriptℒ𝑝\\mathcal{L}^{*}_{p}caligraphic_L start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_p end_POSTSUBSCRIPT.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does the RNN/CNN/GNN/Transformer encoder module build on SL-based next-item prediction frameworks?",
        "relevant_section_ids": [
            "3.1.2",
            "3.1.3"
        ],
        "relevant_context": [
            "With embedding vectors of items until timestep t, supervised learning methods [3,4,6,5,7,32] dwell in constructing an effective encoder f in order to model the user preference as another dense vector h_t, i.e.,\nGenerally, we do not expect any dimensional alignment between user preference and item embedding spaces here.",
            "In supervised learning methods, the continuous version is preferred where the major idea is to obtain an effective projection mapping g from H to R^d. With this g at hand, h_t is converted into h_t' in order to match m s. Then, decided jointly by h_t' and the item embedding matrix E, the ranking order is up to the utility scores where the concrete form is often chosen as the inner product. Consequently, the final top item for recommendation is\nwhere e_j denotes the j-th row of E, which is actually e_j."
        ],
        "final_answer": "In SL-based next-item prediction, an encoder module (RNN/CNN/GNN/Transformer) f is trained to consume the sequence of past item embeddings and produce a single dense user–preference vector h_t. A lightweight projection g then maps h_t into the same latent space as the item embeddings. Finally, the model ranks all candidate items by taking inner products between the projected user vector and each item embedding to predict the next item.",
        "relevant_elements": [
            "RNN/CNN/GNN/Transformer",
            "user preference"
        ],
        "id": 727,
        "masked_question": "How does the [mask1] encoder module build on SL-based next-item prediction frameworks?",
        "masked_number": 1,
        "masked_elements": [
            "RNN/CNN/GNN/Transformer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.08047v1_figure_1.png",
        "paperid": "2408.08047v1",
        "paper_path": "./papers/2408.08047v1.json",
        "figure_id": "2408.08047v1_figure_1.png",
        "caption": "Figure 1: Two implementation manners for sequential recommendation. The discrete version is presented in the dashed box on the left-hand side whereas the continuous version is illustrated in the dashed box on the right-hand side.",
        "qtype": "Literature_Background",
        "response": "The encoder module, represented by \"RNN / CNN / GNN / Transformer\" and highlighted by the red box, builds on Supervised Learning (SL)-based next-item prediction frameworks by serving as the **effective encoder (F)**.\n\nSpecifically, as described in Section 3.1.2 \"Preference Inferring,\" SL methods focus on constructing such an encoder. This encoder takes the embedding vectors of historical items up to a certain timestep (`s_1, ..., s_t`) as input and processes them to model the user's preference as a dense vector (`h_u`). This `h_u` then becomes the user's latent preference representation, which is crucial for the subsequent decision process (e.g., projecting it to match item embeddings and calculate utility scores for recommendation). In essence, the encoder module is the core component that extracts meaningful user preference features from sequential interaction data within SL-based recommendation systems."
    },
    {
        "question": "How does projection mapping transform inferred preferences into utility scores for discrete recommendation?",
        "relevant_section_ids": [
            "3.1.3"
        ],
        "relevant_context": [
            "In supervised learning methods, the continuous version is preferred where the major idea is to obtain an effective projection mapping P from P to E. With this P at hand, \\tilde{p} is converted into u in order to match e's.",
            "Then, decided jointly by \\tilde{p} and the item embedding matrix E, the ranking order is up to the utility scores where the concrete form is often chosen as the inner product [51]. Consequently, the final top item for recommendation is argmax_i u^T e_i, where e_i denotes the i-th row of E."
        ],
        "final_answer": "Projection mapping P is applied to the inferred preference vector p̃ to produce a projected vector u in the same space as item embeddings, and then each item’s utility score is computed as the inner product between u and the item’s embedding e_i; items are ranked by these utility scores.",
        "relevant_elements": [
            "projection mapping",
            "preference inferring"
        ],
        "id": 729,
        "masked_question": "How does [mask1] transform inferred preferences into utility scores for discrete recommendation?",
        "masked_number": 1,
        "masked_elements": [
            "projection mapping"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.08047v1_figure_1.png",
        "paperid": "2408.08047v1",
        "paper_path": "./papers/2408.08047v1.json",
        "figure_id": "2408.08047v1_figure_1.png",
        "caption": "Figure 1: Two implementation manners for sequential recommendation. The discrete version is presented in the dashed box on the left-hand side whereas the continuous version is illustrated in the dashed box on the right-hand side.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Query-centered Expanding Ripple complement Webpage-centered Shrinking Ripple in graph construction?",
        "relevant_section_ids": [
            "2",
            "2.1"
        ],
        "relevant_context": [
            "Specifically, MPGraf first conducts high-quality pseudo-label links for each unlabeled query-webpage pair by annotating all unlabeled pairs with pseudo-ranking scores, and then assigns every query webpages with high-ranking scores and also webpages with low scores to conduct Query-centered Expanding Ripple from training data. Next, MPGraf links every webpage to irrelevant queries with poor relevance scores to conduct Webpage-centered Shrinking Ripple.",
            "Query-centered Expanding Ripple. Given the set of queries and the set of webpages, MPGraf first obtains each possible query-webpage pair ... MPGraf further takes a self-tuning approach ... to propagate labels from annotated query-webpage pairs to unlabeled ones.",
            "Webpage-centered Shrinking Ripple. Though Query-centered Expanding Ripple algorithm could generate ranking scores for every query-webpage pair in training data, it is still difficult to construct webpage-centered graphs using predicted scores at full-scale. ... To conduct webpage-centered graphs for a webpage, MPGraf leverages a Webpage-centered Shrinking Ripple approach. Given a webpage, MPGraf retrieves all query-webpage pairs and builds a webpage-centered graph for every query-webpage with relevance scores higher than 1-fair ... MPGraf randomly picks up a query that does not connect to the webpage as the irrelevant query ..."
        ],
        "final_answer": "Query-centered Expanding Ripple first uses high- and low-scoring pseudo-labels to grow a query-centric subgraph around each query (adding both relevant and irrelevant webpages). Since webpages typically connect to only a few queries, Webpage-centered Shrinking Ripple then complements this by focusing on each webpage in turn, randomly sampling queries that were not linked (i.e., poor relevance) to build balanced webpage-centric graphs. Together, they ensure that both query-side expansions and webpage-side negative samples are included in the final graph.",
        "relevant_elements": [
            "Query-centered Expanding Ripple",
            "Webpage-centered Shrinking Ripple"
        ],
        "id": 731,
        "masked_question": "How does [mask1] complement [mask2] in graph construction?",
        "masked_number": 2,
        "masked_elements": [
            "Query-centered Expanding Ripple",
            "Webpage-centered Shrinking Ripple"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.16590v1_figure_1.png",
        "paperid": "2409.16590v1",
        "paper_path": "./papers/2409.16590v1.json",
        "figure_id": "2409.16590v1_figure_1.png",
        "caption": "Figure 1: The framework of the proposed MPGraf.",
        "qtype": "Experimental_Results",
        "response": "The Query-centered Expanding Ripple, highlighted by the red box, focuses on constructing graphs from the perspective of a query. It assigns pseudo-ranking"
    },
    {
        "question": "How does Parallelizing Graphformer integrate GNN and Transformer representations before regression?",
        "relevant_section_ids": [
            "2.2"
        ],
        "relevant_context": [
            "Given the learned representation z_g and z_t, MPGraf concatenates two items as z and performs a linear projection to transform z into a low-dimensional vector space as z'.",
            "Given the learned generalizable representation z' (or z), MPGraf adopts an MLP-based regressor to compute the ranking score."
        ],
        "final_answer": "Parallelizing Graphformer takes the GNN output representation and the Transformer output representation, concatenates them into one vector, applies a linear projection to reduce it to a low-dimensional space, and then feeds this combined vector into an MLP regressor to produce the final ranking score.",
        "relevant_elements": [
            "Parallelizing Graphformer",
            "GNN module",
            "Transformer module"
        ],
        "id": 732,
        "masked_question": "How does [mask1] integrate GNN and Transformer representations before regression?",
        "masked_number": 1,
        "masked_elements": [
            "Parallelizing Graphformer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.16590v1_figure_1.png",
        "paperid": "2409.16590v1",
        "paper_path": "./papers/2409.16590v1.json",
        "figure_id": "2409.16590v1_figure_1.png",
        "caption": "Figure 1: The framework of the proposed MPGraf.",
        "qtype": "Experimental_Results",
        "response": "The \"Parallelizing Graphformer\" integrates the GNN and Transformer representations by concatenating their respective learned representations. Specifically, it takes the GNN's learned query-webpage pair representation ($h_G$) and the Transformer's learned representation ($h'_T$), concatenates them as $[h_G, h'_T]$, and then performs a linear projection to transform this combined vector into a low-dimensional vector space ($r_P$) before feeding it to the regressor."
    },
    {
        "question": "What biases could arise from Webpage-centered Shrinking Ripple when generating negative samples for relevance graphs?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Webpage-centered Shrinking Ripple"
        ],
        "id": 733,
        "masked_question": "What biases could arise from [mask1] when generating negative samples for relevance graphs?",
        "masked_number": 1,
        "masked_elements": [
            "Webpage-centered Shrinking Ripple"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.16590v1_figure_1.png",
        "paperid": "2409.16590v1",
        "paper_path": "./papers/2409.16590v1.json",
        "figure_id": "2409.16590v1_figure_1.png",
        "caption": "Figure 1: The framework of the proposed MPGraf.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What trade-offs exist between Parallelizing Graphformer and Stacking Graphformer regarding computational efficiency versus representation richness?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Parallelizing Graphformer",
            "Stacking Graphformer"
        ],
        "id": 734,
        "masked_question": "What trade-offs exist between [mask1] and [mask2] regarding computational efficiency versus representation richness?",
        "masked_number": 2,
        "masked_elements": [
            "Parallelizing Graphformer",
            "Stacking Graphformer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.16590v1_figure_1.png",
        "paperid": "2409.16590v1",
        "paper_path": "./papers/2409.16590v1.json",
        "figure_id": "2409.16590v1_figure_1.png",
        "caption": "Figure 1: The framework of the proposed MPGraf.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations might embedding and rounding process introduce into Diffusion SR including discrete item z?",
        "relevant_section_ids": [
            "1",
            "4.1"
        ],
        "relevant_context": [
            "As illustrated in Figure 1 (a), the traditional methods overlook a critical step: mapping the reversed target item representation into the discrete item index space. These methods often determine the recommended item by calculating the similarity (e.g., inner product) between the reversed target item representation and candidate item embeddings, selecting the item with the highest similarity score. While this method works for item ranking, it does not align with the core principles of diffusion models. Diffusion models are inherently probabilistic and continuous, but this step—based on a direct inner product comparison—introduces a deterministic, discrete decision process that breaks the continuous generative flow of diffusion. This inconsistency creates a gap between the optimization directions of the ranking loss for the recommendation task and the denoising loss for the diffusion model, resulting in suboptimal recommendation performance.",
            "As for the reverse process, we define the predicted distribution of \\(\\tilde z_0\\) as: \\(p_\\phi(\\tilde z_0\\mid e_0)\\propto\\exp\\bigl(\\cos(e_0, E_j)\\bigr)\\). However, the transition distribution \\(p_\\phi(\\tilde z_0\\mid e_0)\\) lacks a direct analytical formula."
        ],
        "final_answer": "Embedding the discrete item into a continuous space and then rounding (or selecting) back into a discrete index can introduce two key limitations:  (1) it breaks the purely probabilistic, continuous nature of the diffusion process by inserting a hard, deterministic decision, creating a mismatch between the diffusion’s denoising objective and the ranking loss used for recommendation, and (2) the reverse mapping from continuous embeddings back to discrete items (i.e., the rounding or categorical distribution) has no closed‐form expression, forcing practitioners to resort to ad‐hoc approximations that can further degrade performance.",
        "relevant_elements": [
            "Embedding and rounding process",
            "Diffusion SR including discrete item z"
        ],
        "id": 735,
        "masked_question": "What limitations might [mask1] introduce into Diffusion SR including discrete item z?",
        "masked_number": 1,
        "masked_elements": [
            "Embedding and rounding process"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.21967v1_figure_1.png",
        "paperid": "2410.21967v1",
        "paper_path": "./papers/2410.21967v1.json",
        "figure_id": "2410.21967v1_figure_1.png",
        "caption": "Figure 1. Figures (a) and (b) illustrate the differences between previous methods and our proposed approach in Markov modeling, while Figures (c) and (d) highlight the contrast between implicit and explicit conditional diffusion models for SR.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How could implicit conditional diffusion SR and explicit conditional diffusion SR be combined to reduce sampling complexity?",
        "relevant_section_ids": [
            "1",
            "4.2",
            "4.3"
        ],
        "relevant_context": [
            "Based on our sequential recommendation diffusion framework, we introduce the Dual Conditional Diffusion Transformer (DCDT). This model concatenates historical information as an implicit condition while leveraging a cross-attention mechanism to incorporate explicit control signals throughout the diffusion process. By embedding dual conditions into both the forward and reverse diffusion stages, our approach ensures more precise and contextually relevant recommendations. In addition, the dual conditional mechanism leads to improved model performance, allowing the inference process to achieve optimal results with only a few sampling steps. This reduction in sampling steps significantly lowers computational overhead, making our model more efficient and better suited for real-time applications.",
            "To tackle these limitations, we propose the Dual Conditioned Diffusion Transformer (DCDT), a novel approach that integrates both implicit and explicit conditioning strategies. By combining the representation of the user’s global preferences with the direct utilization of detailed historical behaviors, DCDT leverages the strengths of both methods.",
            "A natural idea for acceleration is that, if the approximation at the early is accurate enough with no need for adjustment, DCRec can directly skip several intermediate steps. Here, we define the number of skipping steps as k. For our DCRec, we observe that DCDT is robust enough to fulfill the early approximation, which significantly reduces time overhead."
        ],
        "final_answer": "By building a single diffusion model (DCDT) that uses an implicit condition in the forward process (concatenating noisy history) and an explicit condition in the reverse process (cross-attention to full history), the denoising trajectory is guided more accurately toward the target. This dual conditioning lets the model reach a good approximation in far fewer steps, so it can skip intermediate iterations and thus dramatically reduce sampling complexity.",
        "relevant_elements": [
            "Implicit conditional diffusion SR",
            "Explicit conditional diffusion SR"
        ],
        "id": 736,
        "masked_question": "How could [mask1] and [mask2] be combined to reduce sampling complexity?",
        "masked_number": 2,
        "masked_elements": [
            "Implicit conditional diffusion SR",
            "Explicit conditional diffusion SR"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.21967v1_figure_1.png",
        "paperid": "2410.21967v1",
        "paper_path": "./papers/2410.21967v1.json",
        "figure_id": "2410.21967v1_figure_1.png",
        "caption": "Figure 1. Figures (a) and (b) illustrate the differences between previous methods and our proposed approach in Markov modeling, while Figures (c) and (d) highlight the contrast between implicit and explicit conditional diffusion models for SR.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates embedding and rounding process integration for discrete item z in diffusion chain?",
        "relevant_section_ids": [
            "1",
            "4.1"
        ],
        "relevant_context": [
            "However, they do not explicitly model the diffusion process for the discrete target item itself (Gap 1). As illustrated in Figure 1 (a), the traditional methods overlook a critical step: mapping the reversed target item representation into the discrete item index space. While this method works for item ranking, it does not align with the core principles of diffusion models. Diffusion models are inherently probabilistic and continuous, but this step—based on a direct inner product comparison—introduces a deterministic, discrete decision process that breaks the continuous generative flow of diffusion. This inconsistency creates a gap between the optimization directions of the ranking loss for the recommendation task and the denoising loss for the diffusion model, resulting in suboptimal recommendation performance.",
            "To address this issue and motivated by diffusion models in text domains (Li et al., 2022), we explicitly extend continuous diffusion models to discrete item domains as shown in Figure 2 (a). As for discrete target item z from the item pool V, the Markov chain in the forward and reverse processes are extending as q(e_T|z) and p(z|e_0). Specifically, to map the discrete variables into continuous domains, we define a learnable embedding function g. As for the reverse process, we define the predicted distribution of z as p_φ(z|e_0), but this rounding step has no closed‐form and must be integrated into the diffusion chain."
        ],
        "final_answer": "Because standard diffusion‐based recommenders break the continuous, probabilistic Markov chain when they deterministically pick a discrete item by nearest-neighbor ranking, the authors are motivated to embed the discrete item z into the continuous diffusion process (via a learnable embedding) and then round back (via a probabilistic softmax over embeddings) so as to restore a fully coherent, end-to-end diffusion model that unifies the denoising and ranking objectives.",
        "relevant_elements": [
            "embedding and rounding process",
            "discrete item z"
        ],
        "id": 737,
        "masked_question": "What motivates [mask1] integration for discrete item z in diffusion chain?",
        "masked_number": 1,
        "masked_elements": [
            "embedding and rounding process"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.21967v1_figure_1.png",
        "paperid": "2410.21967v1",
        "paper_path": "./papers/2410.21967v1.json",
        "figure_id": "2410.21967v1_figure_1.png",
        "caption": "Figure 1. Figures (a) and (b) illustrate the differences between previous methods and our proposed approach in Markov modeling, while Figures (c) and (d) highlight the contrast between implicit and explicit conditional diffusion models for SR.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates integrating hierarchical perturbation with statistical tests to address biased response styles?",
        "relevant_section_ids": [
            "3",
            "4",
            "4.3.1"
        ],
        "relevant_context": [
            "Section 3: \"The variance in the response distributions indicates the presence of bias that can significantly affect alignment (ρ), illustrating that alignment is not a direct or credible metric for assessing the ability of LLMs as NLG evaluators. It is crucial to develop a new metric and measurement for evaluation that is not influenced by the evaluators’ biased response styles, ensuring a more accurate and fair assessment of LLM capabilities.\"",
            "Section 4: \"The fundamental principle of our assessment is that a qualified LLM evaluator should be able to independently identify issues in perturbed data (which contains some quality issues) and assign relatively lower scores compared to the original reference data during two separate evaluations. This approach does not rely on human scores, thus eliminating the influence of human response styles.\"",
            "Section 4.3.1: \"Because the W-Test does not assume any specific distribution for the scores and does not focus on their absolute values, the resulting p-values solely reflect whether the LLMs are able to detect the quality issues and assign lower scores to the perturbed data compared to the original data. Consequently, this testing approach inherently avoids the influence of response styles, instead focusing on the relative quality assessment.\""
        ],
        "final_answer": "Because LLMs exhibit individual response-style biases that distort absolute score alignment, the authors introduce hierarchical perturbations (to create controlled quality differences) plus statistical testing (Wilcoxon Signed-Rank Test focusing on relative score changes) to eliminate the influence of those biased response styles and obtain a fair, content-oriented measure of evaluators’ discernment.",
        "relevant_elements": [
            "Hierarchical Perturbation",
            "Statistical Test",
            "Biased Response Styles"
        ],
        "id": 739,
        "masked_question": "What motivates integrating [mask1] with statistical tests to address biased response styles?",
        "masked_number": 1,
        "masked_elements": [
            "Hierarchical Perturbation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.13704v1_figure_1.png",
        "paperid": "2408.13704v1",
        "paper_path": "./papers/2408.13704v1.json",
        "figure_id": "2408.13704v1_figure_1.png",
        "caption": "Figure 1: Challenges in Assessing LLMs as NLG Evaluators: Biased Response Styles and Multiple Evaluation Metrics. Our DHP Framework employs hierarchical perturbation and statistical tests to address these challenges, offering quantitative discernment scores for effective comparison.",
        "qtype": "Design_Rationale",
        "response": "The integration of Hierarchical Perturbation with statistical tests is motivated by the need to address and minimize the influence of \"biased response styles\" in evaluating LLMs as NLG evaluators.\n\nHere's a step-by-step breakdown from the context:\n\n1.  **Problem of Biased Response Styles:** Previous methods of evaluating LLMs for NLG tasks often overlooked \"Response Styles,\" which refer to an evaluator's consistent manner of answering survey questions, regardless of the content. Both human annotators and LLMs exhibit these biases (e.g., consistently assigning higher or lower scores). This means direct alignment or correlation metrics based on absolute scores can be misleading, as they might favor models that coincidentally share similar response styles with a few expert annotators. The context explicitly states, \"It is crucial to develop a new metric and measurement for evaluation that is not influenced by the evaluators' biased response styles.\"\n\n2.  **Solution with Hierarchical Perturbation:** To overcome this, the DHP framework proposes that a qualified LLM evaluator should be able to \"independently identify issues in perturbed data (which contains some quality issues) and assign relatively lower scores compared to the original reference data.\" Hier"
    },
    {
        "question": "How does Hierarchical Perturbation structure minor versus major character, word, and sentence perturbations?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "our approach encompasses three levels of perturbation content: character, word, and sentence levels; two methods of perturbation: rule-based and LLM-based; and two degrees of perturbation: minor and major as illustrated in Figure 3.",
            "First, at the character level, we alter some characters or letters in the given original texts independently. At the word and sentence levels, we degrade the text by processing entire words or sentences, respectively.",
            "Additionally, if the text data is sufficiently long for more perturbation, we implement two degrees of perturbation – minor and major – for each method."
        ],
        "final_answer": "Hierarchical Perturbation works in three content levels (character, word, sentence).  For each level it applies either rule-based or LLM-based methods, and—when the text is long enough—each method is applied in two severity degrees: “minor” perturbations introduce slight changes (e.g. a few characters or words), while “major” perturbations introduce more extensive alterations (e.g. many characters, whole words, or full sentences).",
        "relevant_elements": [
            "Hierarchical Perturbation"
        ],
        "id": 741,
        "masked_question": "How does [mask1] structure minor versus major character, word, and sentence perturbations?",
        "masked_number": 1,
        "masked_elements": [
            "Hierarchical Perturbation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.13704v1_figure_1.png",
        "paperid": "2408.13704v1",
        "paper_path": "./papers/2408.13704v1.json",
        "figure_id": "2408.13704v1_figure_1.png",
        "caption": "Figure 1: Challenges in Assessing LLMs as NLG Evaluators: Biased Response Styles and Multiple Evaluation Metrics. Our DHP Framework employs hierarchical perturbation and statistical tests to address these challenges, offering quantitative discernment scores for effective comparison.",
        "qtype": "Implementation_Details",
        "response": "The DHP framework's \"Hierarchical Perturbation\" structures minor versus major character, word, and sentence perturbations by applying two degrees of perturbation—minor and major—at each of these three levels. Specifically, the approach first operates at the **character level** (altering individual characters), **word level** (degrading entire words), and **sentence level** (processing entire sentences). For each of these content levels, and for each chosen perturbation *method* (either rule-based or LLM-based), if the original text data is sufficiently long, the framework then implements both **minor** and **major** degrees of perturbation. These different degrees introduce varying levels of difficulty for LLMs in detecting the introduced quality issues."
    },
    {
        "question": "How does Evaluation + Statistical Test determine significance using p-value thresholds before computing discernment scores?",
        "relevant_section_ids": [
            "4.3.1",
            "4.3.3"
        ],
        "relevant_context": [
            "In our analysis, we adopt a one-sided alternative hypothesis. The resulting p-value indicates the confidence level at which we can reject the null hypothesis—that the original and perturbed score distributions have the same distribution—and accept the alternative hypothesis—that the original scores are greater than the perturbed scores. We consider a difference to be statistically significant if p < 0.05. A lower p-value represents a more significant score difference between the original data and perturbed data.",
            "Here, S_R and S_M are positive values and the higher the better. A value of 1 for S_R and S_M is a threshold corresponding to a p-value of 0.05, indicating statistical significance. If S_R or S_M is less than 1, it means that the LLM evaluators do not assign significantly lower scores to the perturbed data compared to the original data, suggesting a lack of discernment for specific quality issues during the NLG evaluation."
        ],
        "final_answer": "The framework runs a one-sided Wilcoxon Signed-Rank Test on the original versus perturbed scores and treats any test with p < 0.05 as a statistically significant difference. These p-values are then combined (via harmonic mean, optionally weighted by expert votes) and transformed into discernment scores such that a combined p-value of 0.05 maps to a score of 1—scores below that indicate non-significance.",
        "relevant_elements": [
            "Evaluation + Statistical Test",
            "Discernment Score"
        ],
        "id": 742,
        "masked_question": "How does [mask1] determine significance using p-value thresholds before computing discernment scores?",
        "masked_number": 1,
        "masked_elements": [
            "Evaluation + Statistical Test"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.13704v1_figure_1.png",
        "paperid": "2408.13704v1",
        "paper_path": "./papers/2408.13704v1.json",
        "figure_id": "2408.13704v1_figure_1.png",
        "caption": "Figure 1: Challenges in Assessing LLMs as NLG Evaluators: Biased Response Styles and Multiple Evaluation Metrics. Our DHP Framework employs hierarchical perturbation and statistical tests to address these challenges, offering quantitative discernment scores for effective comparison.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the VAE integrate random noise into latent vectors to ensure semantic diversity of synthetic images?",
        "relevant_section_ids": [
            "2.2"
        ],
        "relevant_context": [
            "To generate the synthetic images X, we add some random noise z to the latent vector, where μ and σ are the mean and standard deviation towards the learned representation of the encoder.",
            "The input of our decoder model can be generated by randomly sampling from each latent representation, and the reconstructed output of the decoder D(X) is, where θ is the training parameter of the decoder D."
        ],
        "final_answer": "The VAE injects semantic diversity by sampling noise into its latent codes: the encoder produces a mean μ and standard deviation σ for each dimension, then a random noise vector z is drawn (typically from a standard normal) and combined with μ and σ (i.e. latent = μ + σ·z). This noisy latent vector is then passed through the decoder to yield varied but semantically meaningful synthetic images.",
        "relevant_elements": [
            "VAE",
            "Noise",
            "Latent Vectors"
        ],
        "id": 743,
        "masked_question": "How does the [mask1] integrate random [mask2] into latent vectors to ensure semantic diversity of synthetic images?",
        "masked_number": 2,
        "masked_elements": [
            "VAE",
            "Noise"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.13137v1_figure_2.png",
        "paperid": "2409.13137v1",
        "paper_path": "./papers/2409.13137v1.json",
        "figure_id": "2409.13137v1_figure_2.png",
        "caption": "Fig. 2: Overview of our approach. For a given image, we first use a pre-trained VAE to generate some synthetic images by perturbing the latent vector with random noise. Then, we re-label these synthetic images through a pre-trained CNN into one of two classed by identifying whether their predictions shift.\nFinally, we train a two-class linear model by distilling the soft logits from CNN with these re-labeled synthetic images.\nTherefore, the weights of the trained linear model can mark the location of the important features contributed to its prediction, which could generate a saliency map to interpret the prediction of the image.",
        "qtype": "Implementation_Details",
        "response": "The \"Self-supervised Image Synthesis\" model utilizes a Variational Autoencoder (VAE) to integrate random \"Noise\" into latent vectors.\n\nHere's how it ensures semantic diversity:\n1.  **Encoder Output:** The VAE's **Encoder** learns a latent representation of the input image, outputting two parameters: a mean (**μ**) and a standard deviation (**Σ**). These parameters define a probabilistic distribution (typically a Gaussian distribution) in the latent space.\n2.  **Noise Integration:** To generate the latent vectors for synthesis, random **Noise** (sampled from a prior distribution, often a standard normal distribution) is added. Specifically, the standard deviation (**Σ**) is multiplied by this random noise, and the result is then added to the mean (**μ**). This effectively samples a point from the probabilistic latent space defined by **μ** and **Σ**.\n3.  **Decoder Input and Diversity:** These sampled latent vectors (which now incorporate the random noise) serve as input to"
    },
    {
        "question": "How are the classification loss and distillation loss balanced when training the two-class linear model?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "The loss of our proposed re-label distillation to train the student model S can be defined as,  where W denotes the weights of the linear model, α and β are the weight coefficients, and ŷS denotes the prediction of the student model."
        ],
        "final_answer": "When training the two-class linear (student) model, the total loss is formed as a weighted sum of the classification loss and the distillation loss.  Specifically, the classification term is multiplied by a coefficient α and the distillation term by a coefficient β, and the student is trained to minimize α·(classification loss) + β·(distillation loss).",
        "relevant_elements": [
            "Classification Loss",
            "Distillation Loss",
            "Two-class Linear Model"
        ],
        "id": 744,
        "masked_question": "How are the classification loss and distillation loss balanced when training the [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "Two-class Linear Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.13137v1_figure_2.png",
        "paperid": "2409.13137v1",
        "paper_path": "./papers/2409.13137v1.json",
        "figure_id": "2409.13137v1_figure_2.png",
        "caption": "Fig. 2: Overview of our approach. For a given image, we first use a pre-trained VAE to generate some synthetic images by perturbing the latent vector with random noise. Then, we re-label these synthetic images through a pre-trained CNN into one of two classed by identifying whether their predictions shift.\nFinally, we train a two-class linear model by distilling the soft logits from CNN with these re-labeled synthetic images.\nTherefore, the weights of the trained linear model can mark the location of the important features contributed to its prediction, which could generate a saliency map to interpret the prediction of the image.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does distillation loss guide the two-class linear model to mimic CNN logits for interpretable explanations?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "Then, we train a two-class linear model with these re-labeled synthetic images by distilling the soft knowledge of the deep network.",
            "The loss of our proposed re-label distillation to train the student model \\(S\\) can be defined as, where \\(w\\) denotes the weights of the linear model, \\(\\alpha\\) and \\(\\beta\\) are the weight coefficients, and \\(\\hat y=S(x;w)\\) denotes the prediction of the student model.",
            "The trained linear model establishes an interpretable relation between the prediction and the input. The weights \\(w\\) could measure the significance of different pixels contributed to its prediction."
        ],
        "final_answer": "The distillation loss term forces the two-class linear student model to match its output distribution on re-labeled synthetic samples to the pre-trained CNN’s logits. By minimizing this loss, the student’s linear weights are adjusted so that its predictions align with the teacher’s soft outputs around the decision boundary. As a result, the learned weight vector approximates the CNN’s logit responses and can be directly interpreted as a saliency map highlighting the features that drove the CNN’s decision.",
        "relevant_elements": [
            "distillation loss",
            "CNN logits",
            "two-class linear model"
        ],
        "id": 745,
        "masked_question": "How does [mask1] guide the two-class linear model to mimic CNN logits for interpretable explanations?",
        "masked_number": 1,
        "masked_elements": [
            "distillation loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.13137v1_figure_2.png",
        "paperid": "2409.13137v1",
        "paper_path": "./papers/2409.13137v1.json",
        "figure_id": "2409.13137v1_figure_2.png",
        "caption": "Fig. 2: Overview of our approach. For a given image, we first use a pre-trained VAE to generate some synthetic images by perturbing the latent vector with random noise. Then, we re-label these synthetic images through a pre-trained CNN into one of two classed by identifying whether their predictions shift.\nFinally, we train a two-class linear model by distilling the soft logits from CNN with these re-labeled synthetic images.\nTherefore, the weights of the trained linear model can mark the location of the important features contributed to its prediction, which could generate a saliency map to interpret the prediction of the image.",
        "qtype": "Literature_Background",
        "response": "The [mask1], which represents the **Distillation Loss**, guides the two-class linear model to mimic CNN logits by acting as a critical component of the objective function during the training of the student model (the two-class linear model).\n\nHere's a step-by-step explanation:\n1.  **Objective of Distillation:** The primary goal is to \"distill the soft knowledge\" or \"match the probability distributions and the outputs\" from a complex, pre-trained Convolutional Neural Network (CNN) (the teacher model) into a simpler, interpretable two-class linear model (the student model).\n2.  **Synthetic Images:** The process uses synthetic images (generated by a VAE by perturbing latent vectors) as input for both the CNN and the two-class linear"
    },
    {
        "question": "How does vector quantization refine reparametrized embeddings differently from VQ-VAE’s discrete codebook approach?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Vector Quantization",
            "Reparametrization"
        ],
        "id": 746,
        "masked_question": "How does [mask1] refine [mask2] embeddings differently from VQ-VAE’s discrete codebook approach?",
        "masked_number": 2,
        "masked_elements": [
            "Vector Quantization",
            "Reparametrization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.13342v1_figure_1.png",
        "paperid": "2410.13342v1",
        "paper_path": "./papers/2410.13342v1.json",
        "figure_id": "2410.13342v1_figure_1.png",
        "caption": "Figure 1: Architecture of DART including encoder, the ML-VAE, VQ, variance adapter, and decoder.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does the Variance Adapter leverage accent embeddings from ML-VAE relative to Fastspeech2’s variance modeling?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Variance Adapter",
            "ML-VAE"
        ],
        "id": 747,
        "masked_question": "How does the [mask1] leverage accent embeddings from ML-VAE relative to Fastspeech2’s variance modeling?",
        "masked_number": 1,
        "masked_elements": [
            "Variance Adapter"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.13342v1_figure_1.png",
        "paperid": "2410.13342v1",
        "paper_path": "./papers/2410.13342v1.json",
        "figure_id": "2410.13342v1_figure_1.png",
        "caption": "Figure 1: Architecture of DART including encoder, the ML-VAE, VQ, variance adapter, and decoder.",
        "qtype": "Literature_Background",
        "response": "The **Variance Adapter** in DART leverages the accent embeddings (`z_a^q`) (along with speaker embeddings `z_s^q`) from the ML-VAE and Vector Quantization (VQ) module by incorporating them as inputs.\n\nIn the FastSpeech2 architecture, the Variance Adapter is responsible for modeling and integrating crucial *variance* information such as pitch, energy, and duration into the phoneme-level representations. By feeding the quantized accent embeddings (`z_a^q`) into the Variance Adapter, DART enables the model to condition these variance predictions on the specific accent information derived from the ML-VAE. This allows the Variance Adapter to generate prosodic features ("
    },
    {
        "question": "How does vector quantization bottleneck enhance disentanglement in ML-VAE encoding?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "The reparametrized speaker $z_s$ and grouped accent $z_a$ representations pass through the VQ layer, acting as a bottleneck (van2017neural), filtering out irrelevant information.",
            "This integration improves accent conversion and preserves key information by effectively disentangling speaker and accent attributes.",
            "The VQ block incorporates an information bottleneck, ensuring effective utilization of codebooks."
        ],
        "final_answer": "By inserting a VQ layer as an information bottleneck on the speaker and accent latents, irrelevant details are filtered out. This forces the model to commit to a limited set of discrete codes, which in turn encourages the separation of speaker and accent factors and preserves only the information critical for each attribute’s representation.",
        "relevant_elements": [
            "Vector Quantization",
            "ML-VAE"
        ],
        "id": 748,
        "masked_question": "How does [mask1] bottleneck enhance disentanglement in ML-VAE encoding?",
        "masked_number": 1,
        "masked_elements": [
            "Vector Quantization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.13342v1_figure_1.png",
        "paperid": "2410.13342v1",
        "paper_path": "./papers/2410.13342v1.json",
        "figure_id": "2410.13342v1_figure_1.png",
        "caption": "Figure 1: Architecture of DART including encoder, the ML-VAE, VQ, variance adapter, and decoder.",
        "qtype": "Experimental_Results",
        "response": "The element highlighted by [mask1] is the **Vector Quantization (VQ) bottleneck**.\n\nHere's how it enhances disentanglement in ML-VAE encoding:\n\n1.  **Information Bottleneck**: The VQ layers act as an information bottleneck. This means that the reparametrized speaker (`z_s`) and grouped accent (`z_a`) representations are forced to be compressed into a discrete set of codebook vectors. This compression helps to filter out irrelevant or redundant information.\n2.  **Filtering Irrelevant Information**: By quantizing the continuous representations into discrete codes from a learned codebook, the VQ layers effectively discard nuances that are not relevant to capturing the core speaker or accent attributes.\n3.  **Separate Quantization**: The design incorporates *separate* VQ modules for speaker and accent representations. This explicit separation during the quantization process helps ensure that the information retained for the speaker attribute is distinct from that retained for the accent attribute.\n\nIn essence, the VQ bottleneck enhances disentanglement by making the speaker and accent representations (`z_s^q` and `z_a^q`) more compact and distinct, focusing only on the most salient information for each attribute while discarding common or irrelevant factors."
    },
    {
        "question": "How does the variance adapter utilize quantized latent embeddings to adjust prosody before mel decoding?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Variance Adapter",
            "Mel Decoder"
        ],
        "id": 749,
        "masked_question": "How does the [mask1] utilize quantized latent embeddings to adjust prosody before mel decoding?",
        "masked_number": 1,
        "masked_elements": [
            "Variance Adapter"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.13342v1_figure_1.png",
        "paperid": "2410.13342v1",
        "paper_path": "./papers/2410.13342v1.json",
        "figure_id": "2410.13342v1_figure_1.png",
        "caption": "Figure 1: Architecture of DART including encoder, the ML-VAE, VQ, variance adapter, and decoder.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How do Duration Predictor and Intensity Predictor coordinate to enhance temporal and amplitude accuracy of gestural scores?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Duration Predictor",
            "Intensity Predictor"
        ],
        "id": 750,
        "masked_question": "How do [mask1] and [mask2] coordinate to enhance temporal and amplitude accuracy of gestural scores?",
        "masked_number": 2,
        "masked_elements": [
            "Duration Predictor",
            "Intensity Predictor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.16221v3_figure_2.png",
        "paperid": "2408.16221v3",
        "paper_path": "./papers/2408.16221v3.json",
        "figure_id": "2408.16221v3_figure_2.png",
        "caption": "Figure 2: SSDM architecture",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Connectionist Subsequence Aligner output guide Multimodal Tokenizer to encode dysfluency-aware tokens?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Connectionist Subsequence Aligner",
            "Multimodal Tokenizer"
        ],
        "id": 751,
        "masked_question": "How does [mask1] output guide Multimodal Tokenizer to encode dysfluency-aware tokens?",
        "masked_number": 1,
        "masked_elements": [
            "Connectionist Subsequence Aligner"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.16221v3_figure_2.png",
        "paperid": "2408.16221v3",
        "paper_path": "./papers/2408.16221v3.json",
        "figure_id": "2408.16221v3_figure_2.png",
        "caption": "Figure 2: SSDM architecture",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What are the potential scalability limitations of Self-Distillation between Acoustic Encoder and Gestural Scores?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Self-Distillation",
            "Acoustic Encoder",
            "Gestural Scores"
        ],
        "id": 752,
        "masked_question": "What are the potential scalability limitations of [mask1] between Acoustic Encoder and Gestural Scores?",
        "masked_number": 1,
        "masked_elements": [
            "Self-Distillation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.16221v3_figure_2.png",
        "paperid": "2408.16221v3",
        "paper_path": "./papers/2408.16221v3.json",
        "figure_id": "2408.16221v3_figure_2.png",
        "caption": "Figure 2: SSDM architecture",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might convergence of the Pareto Selection process be impacted by high-dimensional LLM parameter spaces?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Pareto Selection"
        ],
        "id": 754,
        "masked_question": "How might convergence of the [mask1] process be impacted by high-dimensional LLM parameter spaces?",
        "masked_number": 1,
        "masked_elements": [
            "Pareto Selection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.14500v1_figure_1.png",
        "paperid": "2411.14500v1",
        "paper_path": "./papers/2411.14500v1.json",
        "figure_id": "2411.14500v1_figure_1.png",
        "caption": "Figure 1: Overview of our framework.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates leveraging Gaussian noise mutation to enhance exploration in diversity generation?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "To further improve the diversity and exploration of LLMs, we incorporate Gaussian noise as the mutation strategy.",
            "Studies Wu et al. (2022  ###reference_b31###) have shown that introducing Gaussian noise during LLM training helps models escape local optima, thereby boosting their performance."
        ],
        "final_answer": "The use of Gaussian noise mutation is motivated by evidence that adding Gaussian noise during LLM training helps models escape local optima and thus boosts their performance, enhancing exploration in the diversity generation process.",
        "relevant_elements": [
            "Gaussian Noise",
            "Mutation"
        ],
        "id": 756,
        "masked_question": "What motivates leveraging [mask1] mutation to enhance exploration in diversity generation?",
        "masked_number": 1,
        "masked_elements": [
            "Gaussian Noise"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.14500v1_figure_1.png",
        "paperid": "2411.14500v1",
        "paper_path": "./papers/2411.14500v1.json",
        "figure_id": "2411.14500v1_figure_1.png",
        "caption": "Figure 1: Overview of our framework.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] in the image refers to \"Gaussian Noise\".\n\nThe motivation for leveraging Gaussian noise mutation to enhance exploration in diversity generation is explained in the \"Fairness-Guided Diversity Generation for LLMs\" section of the provided context:\n\n\"To further improve the diversity and exploration of LLMs, we incorporate **Gaussian noise as the mutation strategy**. Studies Wu et al. (2022) have shown that introducing Gaussian noise during LLM training helps models escape local optima, thereby boosting their performance. This makes it a suitable mutation operator for our framework.\"\n\nTherefore, the motivation is that introducing Gaussian noise helps models escape local optima, which in turn boosts their performance and enhances diversity and exploration within the framework."
    },
    {
        "question": "What motivates conducting objective evaluation prior to fitness evaluation to guide Pareto selection?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "Objective evaluation focuses on assessing specific metrics, such as accuracy and fairness, tailored to the particular needs identified by decision-makers within the domain of application.",
            "Fitness evaluation, however, involves ranking LLMs based on the outcomes of their objective evaluations. This is typically done using a multi-objective optimiser … which assigns each LLM a fitness value by evaluating their performance considering the defined objectives …"
        ],
        "final_answer": "Conducting objective evaluation first provides clear, per-model metric values for each chosen objective (e.g. accuracy and fairness). These objective scores are then used as the inputs to the multi-objective optimizer’s fitness evaluation, enabling a proper Pareto-based ranking and selection of models.",
        "relevant_elements": [
            "Objective Evaluation",
            "Fitness Evaluation"
        ],
        "id": 757,
        "masked_question": "What motivates conducting [mask1] prior to [mask2] to guide Pareto selection?",
        "masked_number": 2,
        "masked_elements": [
            "Objective Evaluation",
            "Fitness Evaluation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.14500v1_figure_1.png",
        "paperid": "2411.14500v1",
        "paper_path": "./papers/2411.14500v1.json",
        "figure_id": "2411.14500v1_figure_1.png",
        "caption": "Figure 1: Overview of our framework.",
        "qtype": "Design_Rationale",
        "response": "To answer the question, we need to understand the roles of Objective Evaluation ([mask1]) and Fitness Evaluation ([mask2]) as described in the text and depicted in the diagram, particularly concerning their contribution to Pareto selection.\n\n1.  **Objective Evaluation ([mask1]):**\n    *   From the \"Fairness-Aware Evaluation via Multi-Objective Optimisation\" section, \"Objective evaluation focuses on assessing specific metrics, such as accuracy and fairness, tailored to the particular needs identified by decision-makers within the domain of application.\"\n    *   The diagram shows that \""
    },
    {
        "question": "What motivated using Semantic Human Parsing and ID-Preserved Masking for targeted clothes inpainting?",
        "relevant_section_ids": [
            "1",
            "3.1"
        ],
        "relevant_context": [
            "However, diffusion models often struggle with preserving the intricate details of a person’s identity during image generation (see Fig. 1). We overcome this by leveraging a human parsing method [26] to produce binary masks that mark only the clothing regions in an image. We then use this binary mask to retain ID-specific portions in an image during diffusion inpainting, such as the face, hair, and body shape, thereby only augmenting the subject’s clothes.",
            "While generating different images of a subject, it is important to preserve the person-relevant information. However, diffusion models struggle to retain this information due to the varied and complex nature of human faces and body shapes. Thus, we apply a semantic human parsing method [26] to each image, x_i, to obtain an ID-preserving binary mask, m_i, where only the upper-clothes, lower-clothes, and footwear regions are marked for inpainting. ... This allows the person (s_i) features, such as the face, hair, and general body structure, to be preserved in the generated samples, even after clothes inpainting—an especially critical aspect for enriching CC-ReID data."
        ],
        "final_answer": "They found that text-guided diffusion inpainting often alters or loses identity-specific details (face, hair, body shape). To prevent this and only modify clothing, they use semantic human parsing to create an ID-preserving mask that marks just the clothing regions for inpainting, thus preserving the person’s identity features while changing outfits.",
        "relevant_elements": [
            "Semantic Human Parsing",
            "ID-Preserved Masking"
        ],
        "id": 758,
        "masked_question": "What motivated using [mask1] and [mask2] for targeted clothes inpainting?",
        "masked_number": 2,
        "masked_elements": [
            "Semantic Human Parsing",
            "ID-Preserved Masking"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.07205v2_figure_2.png",
        "paperid": "2411.07205v2",
        "paper_path": "./papers/2411.07205v2.json",
        "figure_id": "2411.07205v2_figure_2.png",
        "caption": "Figure 2: Overview of DLCR data generation (stage 1). Given a training image xisubscript𝑥𝑖x_{i}italic_x start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT, we apply an ID-preserving mask, misubscript𝑚𝑖m_{i}italic_m start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT, where only the clothing regions are marked for inpainting. A target clothing ID, c𝑐citalic_c, is randomly selected from the training dataset and a textual description of the clothing items belonging to c𝑐citalic_c is extracted. Specifically, we use LLaVA to extract frame-wise descriptions for every image in Xcsuperscript𝑋𝑐X^{c}italic_X start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT, and use LLaMA to obtain a summarized description Rcsuperscript𝑅𝑐R^{c}italic_R start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT. This description is used as a prompt for diffusion inpainting to artificially change a subject’s clothing. Our ID-preserving diffusion inpainting model\nsynthesizes quality generated data x^0subscript^𝑥0\\hat{x}_{0}over^ start_ARG italic_x end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT for improved downstream CC-ReID training.",
        "qtype": "Design_Rationale",
        "response": "1.  **Analyze the role of [mask1] (Semantic Human Parsing):** The text states, \"we apply a semantic human parsing method [26] to each image, , to obtain an ID-preserving binary mask, , where only the upper-clothes, lower-clothes, and footwear regions are marked for inpainting.\" This means semantic human parsing is used to identify and isolate the clothing regions from the rest of the person.\n\n2.  **Analyze the role of [mask2] (ID-Preserved Masking):** The blue box ([mask2]) in the diagram shows `x_bar_i` (masked clothes image) being generated from `x_i` (original image) and `m_i` (ID-preserving mask) which comes from \"Semantic Human Parsing\". The text further clarifies that `m_i` is an \"ID-preserving binary mask\" where \"only the upper-clothes, lower-clothes, and footwear regions are marked for inpainting.\"\n\n3.  **Identify the problem these components solve:** The context explicitly states, \"While generating different images of a subject, it is important to preserve the person-relevant information. However, diffusion models struggle to retain this information due to the varied and complex nature of human faces and body shapes.\"\n\n4.  **Connect the solution to the problem:** The text explains that using the ID-preserving mask created by semantic human parsing \"allows the person () features, such as the face, hair, and general body structure, to be preserved in the generated samples, even after clothes inpainting—an especially critical aspect for enriching CC-ReID data.\""
    },
    {
        "question": "What reasoning supports extracting clothes descriptions from LLaVA before summarizing with LLaMA?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "While CC-ReID datasets provide clothes IDs, they are usually simple scalar values that do not contain descriptive information as to what specific clothing items are present in an image.",
            "A naive approach would be to simply generate descriptions of clothing items using an LLM, e.g. LLaMA, or to create random clothing descriptions. While this is likely to increase the diversity of the dataset, and consequently, the generalization capacity of the downstream CC-ReID models, it does not alleviate dataset-specific biases.",
            "We use LLaVA in order to obtain descriptions of clothing items that are present in the dataset, aiming to reduce the dataset-specific bias (see supplementary). This forces the CC-ReID models to focus on identity features, and ignore clothing features.",
            "However, the subject’s visibility can vary across images of a particular clothes ID, C, due to changes in occlusions, lighting, or viewpoints. This can lead LLaVA to occasionally respond with missing or incorrect clothing items on certain images of X^c.",
            "To mitigate this issue, we pass the image-based responses, R^c, as input to LLaMA and prompt it to summarize them into a single clothing description. Consequently, we obtain a holistic clothes description, \\hat{r}^c, for a particular clothes ID c. Through this summarization, LLaMA helps to produce accurate clothing descriptions and overcomes the issue of missing clothing items."
        ],
        "final_answer": "By first using LLaVA to extract descriptions grounded in the actual images, the method avoids random or biased text prompts and captures dataset-specific clothing details. Then, because individual LLaVA outputs can be incomplete or noisy (due to occlusions, lighting changes, etc.), these multiple image-level descriptions are summarized with LLaMA into a single holistic description, ensuring accuracy and completeness.",
        "relevant_elements": [
            "LLaVA",
            "LLaMA"
        ],
        "id": 759,
        "masked_question": "What reasoning supports extracting clothes descriptions from [mask1] before summarizing with LLaMA?",
        "masked_number": 1,
        "masked_elements": [
            "LLaVA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.07205v2_figure_2.png",
        "paperid": "2411.07205v2",
        "paper_path": "./papers/2411.07205v2.json",
        "figure_id": "2411.07205v2_figure_2.png",
        "caption": "Figure 2: Overview of DLCR data generation (stage 1). Given a training image xisubscript𝑥𝑖x_{i}italic_x start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT, we apply an ID-preserving mask, misubscript𝑚𝑖m_{i}italic_m start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT, where only the clothing regions are marked for inpainting. A target clothing ID, c𝑐citalic_c, is randomly selected from the training dataset and a textual description of the clothing items belonging to c𝑐citalic_c is extracted. Specifically, we use LLaVA to extract frame-wise descriptions for every image in Xcsuperscript𝑋𝑐X^{c}italic_X start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT, and use LLaMA to obtain a summarized description Rcsuperscript𝑅𝑐R^{c}italic_R start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT. This description is used as a prompt for diffusion inpainting to artificially change a subject’s clothing. Our ID-preserving diffusion inpainting model\nsynthesizes quality generated data x^0subscript^𝑥0\\hat{x}_{0}over^ start_ARG italic_x end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT for improved downstream CC-ReID training.",
        "qtype": "Design_Rationale",
        "response": "To understand the reasoning, let's break down the process described in the text and figure:\n\n1.  **Purpose of LLaVA (mask1):** The text states, \"First, we prompt LLaVA to obtain the information of the clothing items for the upper and lower body, as well as the footwear a person is wearing in each image .\" It also clarifies the motivation: \"A naive approach would be to simply generate descriptions of clothing items using an LLM, e.g. LLaMA, or to create random clothing descriptions... We use LLaVA in order to obtain descriptions of clothing items that are present in the dataset, aiming to reduce the dataset-specific bias.\" So, LLaVA is used to extract *image-level, dataset-specific* clothing descriptions (`r^c_n`) by analyzing the actual images (`X^c`).\n\n2.  **Challenge with LLaVA's output:** The text notes, \"However, the subject’s visibility can vary across images of a particular clothes ID, , due to changes in occlusions, lighting, or viewpoints. This can lead LLaVA to occasionally respond with missing or incorrect clothing items on certain images of"
    },
    {
        "question": "How does Clothes Description Extraction combine LLaVA responses and LLaMA summarization into a single clothes description?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "First, we prompt LLaVA to obtain the information of the clothing items for the upper and lower body, as well as the footwear a person is wearing in each image x_i. We denote the set of text responses obtained from LLaVA as r_i^c, where r_i^c is the clothes description of image x_i.",
            "However, the subject’s visibility can vary across images of a particular clothes ID, C, due to changes in occlusions, lighting, or viewpoints. This can lead LLaVA to occasionally respond with missing or incorrect clothing items on certain images of C. To mitigate this issue, we pass the image-based responses, r_i^c, as input to LLaMA and prompt it to summarize them into a single clothing description. Consequently, we obtain a holistic clothes description, R^c, for a particular clothes ID c.",
            "We further post-process R^c if there are multiple clothing descriptions obtained from LLaMA for a particular body part. We keep the most frequently occurring descriptions across the images of C."
        ],
        "final_answer": "For each clothes ID, DLCR first collects image‐level clothing descriptions r_i^c from the visual-language model LLaVA across all images of that ID. It then feeds this set of LLaVA outputs into the large language model LLaMA, prompting it to summarize them into a single, holistic description R^c. Finally, if LLaMA produces multiple variants for a specific garment (e.g., upper body), the most frequent item is chosen to form the final clothes description.",
        "relevant_elements": [
            "Clothes Description Extraction",
            "LLaVA",
            "LLaMA"
        ],
        "id": 760,
        "masked_question": "How does [mask1] combine [mask2] responses and LLaMA summarization into a single clothes description?",
        "masked_number": 2,
        "masked_elements": [
            "Clothes Description Extraction",
            "LLaVA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.07205v2_figure_2.png",
        "paperid": "2411.07205v2",
        "paper_path": "./papers/2411.07205v2.json",
        "figure_id": "2411.07205v2_figure_2.png",
        "caption": "Figure 2: Overview of DLCR data generation (stage 1). Given a training image xisubscript𝑥𝑖x_{i}italic_x start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT, we apply an ID-preserving mask, misubscript𝑚𝑖m_{i}italic_m start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT, where only the clothing regions are marked for inpainting. A target clothing ID, c𝑐citalic_c, is randomly selected from the training dataset and a textual description of the clothing items belonging to c𝑐citalic_c is extracted. Specifically, we use LLaVA to extract frame-wise descriptions for every image in Xcsuperscript𝑋𝑐X^{c}italic_X start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT, and use LLaMA to obtain a summarized description Rcsuperscript𝑅𝑐R^{c}italic_R start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT. This description is used as a prompt for diffusion inpainting to artificially change a subject’s clothing. Our ID-preserving diffusion inpainting model\nsynthesizes quality generated data x^0subscript^𝑥0\\hat{x}_{0}over^ start_ARG italic_x end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT for improved downstream CC-ReID training.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does ID-Preserving Masking interact with the Forward Process to retain subject identity during diffusion inpainting?",
        "relevant_section_ids": [
            "3",
            "3.1"
        ],
        "relevant_context": [
            "Forward Process: At each timestep, Gaussian noise is added with a timestep dependent variance to obtain x_t... We can also efficiently sample x_t in a single step [20].",
            "We apply a semantic human parsing method [26] to each image, x_i, to obtain an ID-preserving binary mask, m_i, where only the upper-clothes, lower-clothes, and footwear regions are marked for inpainting. This allows the person (s_i) features, such as the face, hair, and general body structure, to be preserved in the generated samples, even after clothes inpainting—an especially critical aspect for enriching CC-ReID data.",
            "For a given image x_i, we get the ID-preserved masked image x̄_i by applying its corresponding human-parsed semantic mask, m_i.",
            "The masked image x̄_i is used in the forward diffusion process (Eq. (1)), to preserve ID-related information."
        ],
        "final_answer": "Before running the diffusion forward process, the full image is element-wise masked with a human-parsed binary mask that zeroes out only the clothing regions. The resulting masked image (which preserves face, hair, body shape, etc.) is then fed into the forward process. Because the unmasked (identity) regions remain intact during the noise addition steps, the subject’s identity is retained throughout the diffusion inpainting.",
        "relevant_elements": [
            "ID-Preserving Masking",
            "Forward Process"
        ],
        "id": 761,
        "masked_question": "How does [mask1] interact with the Forward Process to retain subject identity during diffusion inpainting?",
        "masked_number": 1,
        "masked_elements": [
            "ID-Preserving Masking"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.07205v2_figure_2.png",
        "paperid": "2411.07205v2",
        "paper_path": "./papers/2411.07205v2.json",
        "figure_id": "2411.07205v2_figure_2.png",
        "caption": "Figure 2: Overview of DLCR data generation (stage 1). Given a training image xisubscript𝑥𝑖x_{i}italic_x start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT, we apply an ID-preserving mask, misubscript𝑚𝑖m_{i}italic_m start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT, where only the clothing regions are marked for inpainting. A target clothing ID, c𝑐citalic_c, is randomly selected from the training dataset and a textual description of the clothing items belonging to c𝑐citalic_c is extracted. Specifically, we use LLaVA to extract frame-wise descriptions for every image in Xcsuperscript𝑋𝑐X^{c}italic_X start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT, and use LLaMA to obtain a summarized description Rcsuperscript𝑅𝑐R^{c}italic_R start_POSTSUPERSCRIPT italic_c end_POSTSUPERSCRIPT. This description is used as a prompt for diffusion inpainting to artificially change a subject’s clothing. Our ID-preserving diffusion inpainting model\nsynthesizes quality generated data x^0subscript^𝑥0\\hat{x}_{0}over^ start_ARG italic_x end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT for improved downstream CC-ReID training.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does temporal adapter apply global aggregation to prompt embeddings over video frames?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "For the current prompt embedding ϕ_t in the video object mask retrieval process, we leverage the adaptive average pooling strategy along the time dimension to aggregate global object and temporal information of previous k frames."
        ],
        "final_answer": "The temporal adapter applies global aggregation by performing adaptive average pooling along the time dimension over the prompt embeddings from the previous k frames, thereby combining global object and temporal information into the current prompt embedding.",
        "relevant_elements": [
            "Temporal Adapter",
            "Prompt Embedding"
        ],
        "id": 762,
        "masked_question": "How does [mask1] apply global aggregation to [mask2] over video frames?",
        "masked_number": 2,
        "masked_elements": [
            "Temporal Adapter",
            "Prompt Embedding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.17606v1_figure_2.png",
        "paperid": "2411.17606v1",
        "paper_path": "./papers/2411.17606v1.json",
        "figure_id": "2411.17606v1_figure_2.png",
        "caption": "Figure 2: Overview of HyperSeg. HyperSeg encodes the visual input in a multi-grained manner and concatenates the prompt for different perception tasks. We feed learnable fine-grained tokens into a Fine-grained Visual Perceiver (FVP) to integrate multi-scale high-resolution image features into LLM for detailed visual learning and to facilitate space-time information propagation for video understanding.\nAdditionally, we use the semantically enhanced mask tokens and prompt embedding to finally generate the segmentation masks and class scores for generic segmentation, and instance embedding for video instance association.",
        "qtype": "Implementation_Details",
        "response": "**Step-by-step reasoning:**\n\n1.  **Identify [mask1]:** The red box points to \"Temporal Adapter\", which includes \"Global Aggregation\" and \"Local Injection\".\n2.  **Identify [mask2]:** The blue box highlights \"Prompt Embedding\".\n3.  **Locate relevant text about \"Temporal Adapter\":** The section \"Temporal Adapter\" states: \"To this end, we utilize global prompt aggregation and local space-time information injection in the time dimension to adapt to more complicated video perception tasks.\"\n4.  **Locate relevant text about \"Global prompt aggregation\":** Under the subheading \"Global prompt aggregation\", the text directly explains: \"For the current prompt embedding [which is mask2] in the video object mask retrieval process, we leverage the adaptive average pooling strategy along the time dimension to aggregate global object and temporal information of previous frames.\"\n\n**Answer:**\nThe Temporal Adapter ([mask1]) applies global aggregation to the Prompt Embedding ([mask2]) by leveraging the adaptive average pooling strategy along the time dimension. This process aggregates global object and temporal information from previous video frames."
    },
    {
        "question": "How does Fine-grained Visual Perceiver use cross-attention to fuse pyramid encoder features into fine-grained tokens?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Specifically, we fuse multi-scale visual features into fine-grained tokens (stated as  in Sec 3.1) which can inject rich fine-grained visual information into the pre-trained VLLMs without excessive computation cost.",
            "Formally, given the vision input , we leverage a pyramid vision encoder [7  ###reference_b7###] to get details-aware image features . For the j-th scale and the previous fine-grained tokens , the FVP module enriches each token through conditional weighted cross-attention: where MHCA denotes the Multi-Head Cross-Attention layer,  is the projection function, tanh is a normalization function and MLP is a Multilayer Perceptron. The component of  is the conditional weight used to multiply the enriched fine-grained tokens  before the residual connection to the previous tokens ."
        ],
        "final_answer": "The Fine-grained Visual Perceiver (FVP) injects multi-scale pyramid encoder features into its fixed-length fine-grained tokens by performing a conditional weighted multi-head cross-attention (MHCA). At each pyramid scale, the FVP attends from the previous fine-grained tokens over the new scale’s encoder features, projects and normalizes the attended output (via tanh and an MLP) to form a conditional weight, multiplies this weight with the cross-attention result, and then adds it residually back to the original tokens.",
        "relevant_elements": [
            "Fine-grained Visual Perceiver",
            "Pyramid Encoder",
            "Fine-grained Tokens"
        ],
        "id": 763,
        "masked_question": "How does [mask1] use cross-attention to fuse pyramid encoder features into fine-grained tokens?",
        "masked_number": 1,
        "masked_elements": [
            "Fine-grained Visual Perceiver"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.17606v1_figure_2.png",
        "paperid": "2411.17606v1",
        "paper_path": "./papers/2411.17606v1.json",
        "figure_id": "2411.17606v1_figure_2.png",
        "caption": "Figure 2: Overview of HyperSeg. HyperSeg encodes the visual input in a multi-grained manner and concatenates the prompt for different perception tasks. We feed learnable fine-grained tokens into a Fine-grained Visual Perceiver (FVP) to integrate multi-scale high-resolution image features into LLM for detailed visual learning and to facilitate space-time information propagation for video understanding.\nAdditionally, we use the semantically enhanced mask tokens and prompt embedding to finally generate the segmentation masks and class scores for generic segmentation, and instance embedding for video instance association.",
        "qtype": "Implementation_Details",
        "response": "To answer the question about how the FVP module ([mask1]) uses cross-attention to fuse pyramid encoder features into fine-grained tokens, let's refer to the \"Fine-grained Visual Perceiver\" section in the provided context.\n\n1.  **Identify the FVP module's purpose:** The text states that the FVP module \"fuses multi-scale visual features into fine-grained tokens\" to inject rich fine-grained visual information.\n2.  **Locate the cross-attention mechanism:** The context explicitly mentions, \"For the j-th scale and the previous fine-grained tokens, the FVP module enriches each token through conditional weighted cross-attention\".\n3.  **Detail the process:** The formula describes this as:\n    `FVP(f_img^j, token_{fg}^{j-1}) = token_{fg}^{j-1} + tanh(MLP(MHCA(token_{fg}^{j-1}, PROJ(f_img^j)))) * PROJ(MHCA(token_{fg}^{j-1}, PROJ(f_img^j)))`\n    where `MHCA` denotes the Multi-Head Cross-Attention layer.\n\nIn essence, the FVP module takes the `f_img` (details-aware image features from the pyramid encoder) and the `token_fg` (fine-grained tokens). It enriches the fine-grained tokens by using `f_img` as the key/value and `token_fg` as the query in a Multi-Head Cross-Attention (MHCA) layer. The output of this cross-attention, after projection, is used in two ways: it's transformed by an MLP and a tanh activation to create a \"conditional weight\" which then multiplies the \"enriched fine-grained tokens\" (which are essentially the projected output of the cross-attention itself). This weighted output is then added back to the previous fine-grained tokens via a residual connection. The initial weight value is set to zero for adaptation and stability.\n\nTherefore, the FVP module uses Multi-Head Cross-Attention to query the fine-grained tokens against the projected multi-scale pyramid encoder features, and then incorporates the resulting enriched features back into the fine-grained tokens, applying a conditional weight derived from the cross-attention output itself."
    },
    {
        "question": "How does FVP’s fusion of pyramid encoder features complement CLIP-derived vision tokens within the LLM input pipeline?",
        "relevant_section_ids": [
            "3.1",
            "3.3"
        ],
        "relevant_context": [
            "The VLLM takes three types of inputs: visual tokens encoded by the CLIP encoder, renewed fine-grained tokens, and prompt tokens for diverse instructions. The output embeddings of semantically enhanced mask tokens and prompt tokens are further fed into the segmentation predictor for final segmentation results.",
            "Specifically, we fuse multi-scale visual features into fine-grained tokens (stated as z in Sec 3.1) which can inject rich fine-grained visual information into the pre-trained VLLMs without excessive computation cost."
        ],
        "final_answer": "FVP merges the pyramid encoder’s multi-scale, detail-rich features into a set of fine-grained tokens. These tokens are provided in parallel with the low-resolution CLIP-derived vision tokens (and prompt tokens) as inputs to the LLM. In this way, the coarse global representations from CLIP are complemented by the FVP’s fine-grained spatial details, yielding a richer visual embedding for downstream segmentation.",
        "relevant_elements": [
            "FVP",
            "Vision Tokens"
        ],
        "id": 764,
        "masked_question": "How does [mask1]’s fusion of pyramid encoder features complement [mask2] within the LLM input pipeline?",
        "masked_number": 2,
        "masked_elements": [
            "FVP",
            "Vision Tokens"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.17606v1_figure_2.png",
        "paperid": "2411.17606v1",
        "paper_path": "./papers/2411.17606v1.json",
        "figure_id": "2411.17606v1_figure_2.png",
        "caption": "Figure 2: Overview of HyperSeg. HyperSeg encodes the visual input in a multi-grained manner and concatenates the prompt for different perception tasks. We feed learnable fine-grained tokens into a Fine-grained Visual Perceiver (FVP) to integrate multi-scale high-resolution image features into LLM for detailed visual learning and to facilitate space-time information propagation for video understanding.\nAdditionally, we use the semantically enhanced mask tokens and prompt embedding to finally generate the segmentation masks and class scores for generic segmentation, and instance embedding for video instance association.",
        "qtype": "Literature_Background",
        "response": "The Fine-"
    },
    {
        "question": "How does semantic recognition coupling with mask tokens expand VLLM-based mask decoding compared to decode-only strategies?",
        "relevant_section_ids": [
            "1",
            "3.2"
        ],
        "relevant_context": [
            "Decode-only methods [59, 58] use the prompt embedding and mask tokens decoded by VLLM to obtain class scores for each mask, which makes the mask tokens interact insufficiently with the semantic condition as they ignore the powerful generative capabilities of VLLM.",
            "As illustrated in Fig. 3 (c), VLLM is compelled to generate all the existing objects in the vision input and then the mask tokens. The semantically enhanced mask tokens contain valuable semantic integrated information about the image, which are subsequently used as input for the segmentation predictor to generate segmentation masks."
        ],
        "final_answer": "By forcing the VLLM to first generate object names and then emit the mask tokens, the mask tokens become “semantically enhanced” – they carry integrated category information directly from the model’s generative process. This contrasts with decode-only strategies that merely apply prompt embeddings at decode time and ignore the VLLM’s semantic recognition power, resulting in richer, more semantically aware mask decoding.",
        "relevant_elements": [
            "semantic recognition",
            "mask tokens"
        ],
        "id": 765,
        "masked_question": "How does [mask1] coupling with mask tokens expand VLLM-based mask decoding compared to decode-only strategies?",
        "masked_number": 1,
        "masked_elements": [
            "semantic recognition"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.17606v1_figure_2.png",
        "paperid": "2411.17606v1",
        "paper_path": "./papers/2411.17606v1.json",
        "figure_id": "2411.17606v1_figure_2.png",
        "caption": "Figure 2: Overview of HyperSeg. HyperSeg encodes the visual input in a multi-grained manner and concatenates the prompt for different perception tasks. We feed learnable fine-grained tokens into a Fine-grained Visual Perceiver (FVP) to integrate multi-scale high-resolution image features into LLM for detailed visual learning and to facilitate space-time information propagation for video understanding.\nAdditionally, we use the semantically enhanced mask tokens and prompt embedding to finally generate the segmentation masks and class scores for generic segmentation, and instance embedding for video instance association.",
        "qtype": "Literature_Background",
        "response": "The \"Semantic Recognition\" component, as part of the \"Hybrid Entity Recognition\" strategy in HyperSeg, expands VLLM-based mask decoding compared to decode-only strategies by leveraging the VLLM's powerful generative capabilities during the decoding process."
    },
    {
        "question": "How does Flow Predictor extend dense flow estimation methodologies for latent motion representation?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "The Latent Flow Generator (LFG) is a self-supervised training framework designed to model motion information between the source image x_src and the driving image x_dri. As illustrated in Figure 1 (a), LFG consists of three trainable modules: the image encoder E_img, the flow predictor F, and the image decoder D_img.",
            "The flow predictor estimates a dense flow map f_pred and a blocking map m_pred (Siarohin et al., 2021; 2020), corresponding to f and m: f_pred, m_pred = F(z_src, z_dri).",
            "The flow map f_pred describes the feature-level movement of x_src relative to x_dri in horizontal and vertical directions. The blocking map m_pred, ranging from 0 to 1, indicates the degree of area blocking in the transformation from x_src to x_dri.",
            "The flow map f_pred is used to perform the affine transformation W(f_pred, z_src), serving as a coarse-grained warping of z_src. Subsequently, the blocking map m_pred guides the model in repairing the occlusion area, thereby serving as fine-grained repair.",
            "We consider the concatenation of f_pred and m_pred as Δ̂ to represent the motion of x_dri relative to x_src. In this way, we achieve two objectives: 1) finding an effective explicit motion representation Δ, which is identity-agnostic and well-supported by physical meaning, and 2) reconstructing x_dri from x_src and Δ without the need for a full pixel generation."
        ],
        "final_answer": "The Flow Predictor extends classical dense-flow methods by operating in the latent space: it jointly predicts a dense flow map (f_pred) that encodes feature-level motion and a blocking map (m_pred) that marks occluded regions. The flow map is used for coarse affine warping of the source latent code, while the blocking map enables fine-grained repair of occlusions. By concatenating these two outputs into Δ̂, the model obtains an explicit, identity-agnostic latent motion representation that drives the subsequent reconstruction without having to generate every pixel anew.",
        "relevant_elements": [
            "Flow Predictor"
        ],
        "id": 766,
        "masked_question": "How does [mask1] extend dense flow estimation methodologies for latent motion representation?",
        "masked_number": 1,
        "masked_elements": [
            "Flow Predictor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.13726v2_figure_1.png",
        "paperid": "2410.13726v2",
        "paper_path": "./papers/2410.13726v2.json",
        "figure_id": "2410.13726v2_figure_1.png",
        "caption": "Figure 1: The pipeline of DAWN. First, we train the Latent Flow Generator (LFG) in (a) to extract the motion representation from the video. Then the Pose and Blink generation Network (PBNet) in (b) is utilized to generate the head pose and blink sequences of the avatar. Subsequently, the Audio-to-Video Flow Diffusion Model (A2V-FDM) in (c) generates the talking head video from the source image conditioned by the audio and pose/blink sequences provided by the PBNet.",
        "qtype": "Literature_Background",
        "response": "The Flow Predictor, denoted by [mask1] in Figure 1(a), extends dense flow estimation methodologies for latent motion representation in the following ways:\n\n1.  **Estimation of a Blocking Map:** Beyond estimating a dense flow map (`f_dri`) which describes feature-level movement for coarse-grained warping of the source image's latent code (`z_src`), it also estimates a *blocking map* (`m_dri`). This blocking map, ranging from 0 to 1, indicates the degree of area blocking or occlusion during the transformation from the source to the driving image.\n2.  **Occlusion Handling and Fine-grained Repair:** The blocking map guides the model in repairing occlusion areas, serving as a fine-"
    },
    {
        "question": "How does PBNet's transformer-based VAE leverage Rotary Positional Encoding techniques from sequence modeling?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "To enhance the model’s extrapolation capability, we use RoPE as the positional encoding in the decoder, consistent with A2V-FDM."
        ],
        "final_answer": "PBNet incorporates Rotary Positional Encoding (RoPE) in its transformer decoder to encode sequence positions, improving the model’s ability to generalize and extrapolate over variable‐length pose and blink sequences.",
        "relevant_elements": [
            "PBNet"
        ],
        "id": 767,
        "masked_question": "How does [mask1]'s transformer-based VAE leverage Rotary Positional Encoding techniques from sequence modeling?",
        "masked_number": 1,
        "masked_elements": [
            "PBNet"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.13726v2_figure_1.png",
        "paperid": "2410.13726v2",
        "paper_path": "./papers/2410.13726v2.json",
        "figure_id": "2410.13726v2_figure_1.png",
        "caption": "Figure 1: The pipeline of DAWN. First, we train the Latent Flow Generator (LFG) in (a) to extract the motion representation from the video. Then the Pose and Blink generation Network (PBNet) in (b) is utilized to generate the head pose and blink sequences of the avatar. Subsequently, the Audio-to-Video Flow Diffusion Model (A2V-FDM) in (c) generates the talking head video from the source image conditioned by the audio and pose/blink sequences provided by the PBNet.",
        "qtype": "Literature_Background",
        "response": "The [mask1] refers to the Pose and Blink generation Network (PBNet), which is described as a transformer-based Variational Autoencoder (VAE).\n\nThe text states: \"To enhance the model’s extrapolation capability, we use RoPE as the positional encoding in the decoder, consistent with A2V-FDM.\"\n\nTherefore, PBNet's transformer-based VAE leverages Rotary Positional Encoding (RoPE) in its decoder to enhance the model's extrapolation capability."
    },
    {
        "question": "How does the warp operation preserve source identity while applying flow representations in latent space?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "The flow map φ describes the feature-level movement of z_s relative to z_d in horizontal and vertical directions. The blocking map m, ranging from 0 to 1, indicates the degree of area blocking in the transformation from z_s to z_d. The flow map φ is used to perform the affine transformation g, serving as a coarse-grained warping of z_s. Subsequently, the blocking map m guides the model in repairing the occlusion area, thereby serving as fine-grained repair. Finally, the image decoder converts the warped latent code into the target image x̂, where x̂ = dec(g(z_s, φ) ⊙ m).",
            "We consider the concatenation of φ and m as z_motion to represent the motion of z_d relative to z_s. In this way, we achieve two objectives: 1) finding an effective explicit motion representation z_motion, which is identity-agnostic and well-supported by physical meaning, and 2) reconstructing x_d from x_s and z_motion without the need for a full pixel generation."
        ],
        "final_answer": "In the Latent Flow Generator, the warp operation applies the estimated flow map φ directly to the source’s latent code (z_s), moving only the motion-related features. A complementary blocking map m then masks out and repairs occlusions, ensuring only displaced (motion) features are altered. Because the warp is performed in the learned latent space and only modifies identity-agnostic motion features, the source’s appearance and identity information remain intact and are faithfully reconstructed by the decoder.",
        "relevant_elements": [
            "warp",
            "latent space"
        ],
        "id": 768,
        "masked_question": "How does the [mask1] operation preserve source identity while applying flow representations in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "warp",
            "latent space"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.13726v2_figure_1.png",
        "paperid": "2410.13726v2",
        "paper_path": "./papers/2410.13726v2.json",
        "figure_id": "2410.13726v2_figure_1.png",
        "caption": "Figure 1: The pipeline of DAWN. First, we train the Latent Flow Generator (LFG) in (a) to extract the motion representation from the video. Then the Pose and Blink generation Network (PBNet) in (b) is utilized to generate the head pose and blink sequences of the avatar. Subsequently, the Audio-to-Video Flow Diffusion Model (A2V-FDM) in (c) generates the talking head video from the source image conditioned by the audio and pose/blink sequences provided by the PBNet.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does PBNet relieve A2V-FDM of long-term pose and blink dependency modeling?",
        "relevant_section_ids": [
            "4.5"
        ],
        "relevant_context": [
            "Ablation study on PBNet. We evaluate the effectiveness of the PBNet in Table 4. The term “w/o PBNet” indicates that the PBNet module was removed from the architecture, requiring the A2V-FDM to simultaneously generate pose, blink, and lip motions from the audio by itself. The results suggest an overall enhancement of all evaluation metrics with the inclusion of PBNet. This is because modeling the long-term dependency of pose and blink movements through PBNet simplifies training for the A2V-FDM."
        ],
        "final_answer": "By offloading the modeling of long-term pose and blink dependencies to PBNet, A2V-FDM no longer needs to learn those long-term temporal correlations itself, which simplifies its training.",
        "relevant_elements": [
            "PBNet",
            "A2V-FDM"
        ],
        "id": 769,
        "masked_question": "How does [mask1] relieve [mask2] of long-term pose and blink dependency modeling?",
        "masked_number": 2,
        "masked_elements": [
            "PBNet",
            "A2V-FDM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.13726v2_figure_1.png",
        "paperid": "2410.13726v2",
        "paper_path": "./papers/2410.13726v2.json",
        "figure_id": "2410.13726v2_figure_1.png",
        "caption": "Figure 1: The pipeline of DAWN. First, we train the Latent Flow Generator (LFG) in (a) to extract the motion representation from the video. Then the Pose and Blink generation Network (PBNet) in (b) is utilized to generate the head pose and blink sequences of the avatar. Subsequently, the Audio-to-Video Flow Diffusion Model (A2V-FDM) in (c) generates the talking head video from the source image conditioned by the audio and pose/blink sequences provided by the PBNet.",
        "qtype": "Experimental_Results",
        "response": "PBNet ([mask1]) relieves the A2V-FDM component of DAWN ([mask2]) from long-term pose and blink dependency modeling by explicitly handling and modeling these dependencies itself. This pre-modeling of long-term pose and blink movements simplifies the training process for the A2V-FDM, which can then focus on generating the video from the audio and the separately provided pose/blink sequences."
    },
    {
        "question": "How does power allocation coordinate with channel arrangement under varying service compliance for resource optimization?",
        "relevant_section_ids": [
            "5.1",
            "6.1",
            "7.4"
        ],
        "relevant_context": [
            "2) Power Actor State : We integrate SC decision actions into the power actor states since SC orchestration serves as a prerequisite for power allocation.",
            "In particular, the initial state s₀ is sent into the μ_SC actor networks at the beginning of each episode, generating μ_SC SC allocation actions a_SC,t. The actions for power a_PA are then produced by the power actor network, based on the integrated a_SC,t and s_PA,t.",
            "The APs consistently tend to serve users who are in close proximity, and the utilization of the same SC by multiple APs is well-coordinated to achieve a satisfactory balance between spectral efficiency and interference. From the perspective of application types, EF services (UE₂) are configured with stricter reliability requirements, which drive reduced SC reuse, as illustrated in Fig. 7(c) where SC₃ is exclusively utilized by UE₂."
        ],
        "final_answer": "The scheme uses a two-actor DRL structure in which the SC (subcarrier) actor first arranges channels to satisfy each user’s compliance requirements (e.g., stricter reliability leads to less SC reuse). The power actor then takes that SC allocation as part of its input state and dynamically allocates continuous power ratios over the chosen SCs. Under tighter service compliance (lower compliance tolerance), the SC actor dedicates fewer, interference-protected SCs to the demanding flow, enabling the power actor to concentrate higher power on those links; when compliance is looser, more aggressive SC reuse is allowed and the power actor spreads power more evenly to boost spectral efficiency. This coordination under a shared reward (trading off effective capacity, power consumption and bandwidth occupancy) achieves joint energy- and spectrum-efficient resource optimization.",
        "relevant_elements": [
            "Power allocation",
            "Channel arrangement"
        ],
        "id": 770,
        "masked_question": "How does [mask1] coordinate with channel arrangement under varying service compliance for resource optimization?",
        "masked_number": 1,
        "masked_elements": [
            "Power allocation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.15609v1_figure_1.png",
        "paperid": "2408.15609v1",
        "paper_path": "./papers/2408.15609v1.json",
        "figure_id": "2408.15609v1_figure_1.png",
        "caption": "Figure 1: System Model. This diagram illustrates the on-demand services framework, where applications with diverse requirements are served by the underlying resources and facilities, the system rewards are calculated based on the completion of requirements and the consumption of resources.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does the methodology derive discounted capacity from service capacity and satisfaction rate for reward computation?",
        "relevant_section_ids": [
            "5.3"
        ],
        "relevant_context": [
            "(1) The sum of the values among all users yields the system’s service capacity.",
            "(2) The discounted capacity for system is obtained from the system’s service capacity and the user satisfaction rate φ within the system: C̃ = C¯ × φ."
        ],
        "final_answer": "The methodology computes discounted capacity by multiplying the system’s service capacity by the overall user satisfaction rate in the system.",
        "relevant_elements": [
            "Service capacity",
            "Discount capacity"
        ],
        "id": 771,
        "masked_question": "How does the methodology derive [mask1] from [mask2] and satisfaction rate for reward computation?",
        "masked_number": 2,
        "masked_elements": [
            "Discount capacity",
            "Service capacity"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.15609v1_figure_1.png",
        "paperid": "2408.15609v1",
        "paper_path": "./papers/2408.15609v1.json",
        "figure_id": "2408.15609v1_figure_1.png",
        "caption": "Figure 1: System Model. This diagram illustrates the on-demand services framework, where applications with diverse requirements are served by the underlying resources and facilities, the system rewards are calculated based on the completion of requirements and the consumption of resources.",
        "qtype": "Experimental_Results",
        "response": "The methodology derives \"Discount Capacity\" (mask1) from \"Service Capacity\" (mask2) and the satisfaction rate by multiplying them.\n\nHere's the step-by-step reasoning:\n1.  **Identify \"Service Capacity\" (mask2):** The text states under \"Reward of DRL\", \"1) ESE Reward\", point (1): \"The sum of the values among all users yields the system's service capacity.\"\n2.  **Identify \"Satisfaction rate\":** The image clearly shows \"Satisfaction rate\" as an input to a multiplication node.\n3.  **Identify \"Discount Capacity\" (mask1):** The text states under \"Reward of DRL\", \"1) ESE Reward\", point (2): \"The discounted capacity for system is obtained from the system’s service capacity and the user satisfaction rate within the system: .\"\n4.  **Combine information:** Both the text and the image diagram indicate a multiplication operation. The diagram shows arrows from \"Service capacity\" and \"Satisfaction rate\" converging at a multiplication symbol (X), with the output feeding into \"Discount Capacity\". The text explicitly states \"The discounted capacity for system is obtained from the system’s service capacity and the user satisfaction rate within the system\". This implies a multiplicative relationship."
    },
    {
        "question": "What ethical concerns could arise from power allocation decisions prioritizing EEE Reward over fair service?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "power allocation",
            "EEE Reward"
        ],
        "id": 773,
        "masked_question": "What ethical concerns could arise from [mask1] decisions prioritizing EEE Reward over fair service?",
        "masked_number": 1,
        "masked_elements": [
            "power allocation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.15609v1_figure_1.png",
        "paperid": "2408.15609v1",
        "paper_path": "./papers/2408.15609v1.json",
        "figure_id": "2408.15609v1_figure_1.png",
        "caption": "Figure 1: System Model. This diagram illustrates the on-demand services framework, where applications with diverse requirements are served by the underlying resources and facilities, the system rewards are calculated based on the completion of requirements and the consumption of resources.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations emerge from using Model under analysis features in Samples subset selection to capture bias diversity?",
        "relevant_section_ids": [
            "3.2.1"
        ],
        "relevant_context": [
            "In the typical deployment scenario, the correctly classified examples are abundant, and, for instance,  projects them in a very narrow neighborhood of its latent space.",
            "Our long-range objective will be indeed to capture the set of features that are correctly learned by the model, and k-medoids is a natural choice to have a good coverage of the latent space for ."
        ],
        "final_answer": "Because the model under analysis projects many correctly classified samples into a very narrow region of its own latent space, relying directly on its features to pick examples would yield little diversity. To overcome this, the authors apply k-medoids clustering to force a broader coverage of the feature space and better capture bias diversity.",
        "relevant_elements": [
            "Model under analysis",
            "Samples subset selection"
        ],
        "id": 774,
        "masked_question": "What limitations emerge from using [mask1] features in Samples subset selection to capture bias diversity?",
        "masked_number": 1,
        "masked_elements": [
            "Model under analysis"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.09570v1_figure_2.png",
        "paperid": "2408.09570v1",
        "paper_path": "./papers/2408.09570v1.json",
        "figure_id": "2408.09570v1_figure_2.png",
        "caption": "Figure 2: Pipeline for SaMyNa. Given a model, we can tell on either 𝒟trainsuperscript𝒟train\\mathcal{D}^{\\text{train}}caligraphic_D start_POSTSUPERSCRIPT train end_POSTSUPERSCRIPTor 𝒟valsuperscript𝒟val\\mathcal{D}^{\\text{val}}caligraphic_D start_POSTSUPERSCRIPT val end_POSTSUPERSCRIPT what are the correct (with green border) and the incorrectly (red border) classified samples. Amongst these, we first perform a sample subset selection looking at the latent space of the model under analysis and choosing through k-medoids the most representative samples for the learned class. Then, we employ a captioner to get a textual description of these samples. Among these descriptions, we identify recurrent keywords and, in parallel, working in the latent space of a text encoder, we extract the mean description for the learned classes, cleansed from common features within the dataset. We finally compare this representation with the embedding of the keywords, identifying learned correlations aside from the target.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might reliance on a pre-trained Multimodal LLM for Samples captioning introduce biases or misinterpretations?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Samples captioning",
            "Multimodal LLM"
        ],
        "id": 775,
        "masked_question": "How might reliance on a pre-trained [mask1] for [mask2] introduce biases or misinterpretations?",
        "masked_number": 2,
        "masked_elements": [
            "Multimodal LLM",
            "Samples captioning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.09570v1_figure_2.png",
        "paperid": "2408.09570v1",
        "paper_path": "./papers/2408.09570v1.json",
        "figure_id": "2408.09570v1_figure_2.png",
        "caption": "Figure 2: Pipeline for SaMyNa. Given a model, we can tell on either 𝒟trainsuperscript𝒟train\\mathcal{D}^{\\text{train}}caligraphic_D start_POSTSUPERSCRIPT train end_POSTSUPERSCRIPTor 𝒟valsuperscript𝒟val\\mathcal{D}^{\\text{val}}caligraphic_D start_POSTSUPERSCRIPT val end_POSTSUPERSCRIPT what are the correct (with green border) and the incorrectly (red border) classified samples. Amongst these, we first perform a sample subset selection looking at the latent space of the model under analysis and choosing through k-medoids the most representative samples for the learned class. Then, we employ a captioner to get a textual description of these samples. Among these descriptions, we identify recurrent keywords and, in parallel, working in the latent space of a text encoder, we extract the mean description for the learned classes, cleansed from common features within the dataset. We finally compare this representation with the embedding of the keywords, identifying learned correlations aside from the target.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What is the motivation behind contrasting correct and incorrect samples before captioning?",
        "relevant_section_ids": [
            "3.2.1"
        ],
        "relevant_context": [
            "Given \\(D_{train}\\), for a given target class \\(c\\), we extract the pool of correctly classified samples \\(S^{correct}_c\\) and samples misclassified as \\(S^{misclass}_c\\).",
            "Provided that \\(f\\) clusters both \\(S^{correct}_c\\) and \\(S^{misclass}_c\\) together, our hypothesis is that these two share a common set of features, behind which we might find a bias."
        ],
        "final_answer": "By grouping together both correctly classified and misclassified samples and then contrasting them, the method aims to surface the features they have in common—features that are likely spurious correlations or biases the model has learned. Captioning this combined subset therefore highlights the semantic cues that underlie the model’s bias.",
        "relevant_elements": [
            "Samples subset selection",
            "Samples captioning"
        ],
        "id": 776,
        "masked_question": "What is the motivation behind contrasting correct and incorrect [mask1] before [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Samples subset selection",
            "Samples captioning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.09570v1_figure_2.png",
        "paperid": "2408.09570v1",
        "paper_path": "./papers/2408.09570v1.json",
        "figure_id": "2408.09570v1_figure_2.png",
        "caption": "Figure 2: Pipeline for SaMyNa. Given a model, we can tell on either 𝒟trainsuperscript𝒟train\\mathcal{D}^{\\text{train}}caligraphic_D start_POSTSUPERSCRIPT train end_POSTSUPERSCRIPTor 𝒟valsuperscript𝒟val\\mathcal{D}^{\\text{val}}caligraphic_D start_POSTSUPERSCRIPT val end_POSTSUPERSCRIPT what are the correct (with green border) and the incorrectly (red border) classified samples. Amongst these, we first perform a sample subset selection looking at the latent space of the model under analysis and choosing through k-medoids the most representative samples for the learned class. Then, we employ a captioner to get a textual description of these samples. Among these descriptions, we identify recurrent keywords and, in parallel, working in the latent space of a text encoder, we extract the mean description for the learned classes, cleansed from common features within the dataset. We finally compare this representation with the embedding of the keywords, identifying learned correlations aside from the target.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates comparing class embedding with keywords for ranking biases?",
        "relevant_section_ids": [
            "3.2.5"
        ],
        "relevant_context": [
            "Now, we are ready to compare the embedding of each keyword with E*(c) using the cosine similarity: where ψ is the embedding of the keyword in the same latent space used to calculate E*(c).",
            "This tells us how much the concept is embodied by the proposed keywords.",
            "Based on the ranking, we will obtain a set of keywords that correlate with the learned class c, and others that become decorrelated as they embody some knowledge shared through all the classes (as filtered in (4)).",
            "Finally, as post-processing, we filter all the keywords related to the ground-truth target class the model was aiming at learning: the final ranking we obtain embodies the set of features that correlate with the learned class c, from which an end user of the system can deduce the presence of a bias."
        ],
        "final_answer": "The comparison is motivated by the need to measure how much each candidate keyword concept is embodied in the model’s learned class representation. By computing the cosine similarity between the class embedding and each keyword embedding, the method can rank keywords by their relevance to the class and thus surface those features that most strongly correspond to potential spurious biases.",
        "relevant_elements": [
            "Learned class embedding",
            "Keywords ranking"
        ],
        "id": 777,
        "masked_question": "What motivates comparing [mask1] with [mask2] for ranking biases?",
        "masked_number": 2,
        "masked_elements": [
            "Learned class embedding",
            "Keywords ranking"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.09570v1_figure_2.png",
        "paperid": "2408.09570v1",
        "paper_path": "./papers/2408.09570v1.json",
        "figure_id": "2408.09570v1_figure_2.png",
        "caption": "Figure 2: Pipeline for SaMyNa. Given a model, we can tell on either 𝒟trainsuperscript𝒟train\\mathcal{D}^{\\text{train}}caligraphic_D start_POSTSUPERSCRIPT train end_POSTSUPERSCRIPTor 𝒟valsuperscript𝒟val\\mathcal{D}^{\\text{val}}caligraphic_D start_POSTSUPERSCRIPT val end_POSTSUPERSCRIPT what are the correct (with green border) and the incorrectly (red border) classified samples. Amongst these, we first perform a sample subset selection looking at the latent space of the model under analysis and choosing through k-medoids the most representative samples for the learned class. Then, we employ a captioner to get a textual description of these samples. Among these descriptions, we identify recurrent keywords and, in parallel, working in the latent space of a text encoder, we extract the mean description for the learned classes, cleansed from common features within the dataset. We finally compare this representation with the embedding of the keywords, identifying learned correlations aside from the target.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates integrating random masking with recover masked frames for robust transition training?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "To address this, we convert the unsupervised problem of generating transitions into a supervised learning framework by leveraging existing continuous sign language videos.",
            "Given a complete continuous sign language sequence X, we simulate missing transitions by randomly masking portions of X, creating gaps that mimic real-world transition absences.",
            "By training the model to predict the masked frames M conditioned on the observable context C, it learns to generate realistic transitions that smoothly bridge the gap.",
            "To generate smooth transitional poses and capture relationships between different segments, we employ a random masking strategy during training, as illustrated in the training phase of Fig. 2.",
            "This masking strategy enables the model to predict missing frames based on observable context, facilitating smooth transition generation."
        ],
        "final_answer": "Because real transition frames are unavailable, the model uses random masking on continuous sign videos to simulate missing segments and then learns, in a supervised way, to recover those masked frames from their surrounding context. This converts an unsupervised transition generation task into a supervised one and enables the network to produce robust, smooth transitions by explicitly training it to predict missing frames.",
        "relevant_elements": [
            "random masking",
            "recover masked frames"
        ],
        "id": 778,
        "masked_question": "What motivates integrating [mask1] with [mask2] for robust transition training?",
        "masked_number": 2,
        "masked_elements": [
            "random masking",
            "recover masked frames"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.16810v1_figure_1.png",
        "paperid": "2411.16810v1",
        "paper_path": "./papers/2411.16810v1.json",
        "figure_id": "2411.16810v1_figure_1.png",
        "caption": "Figure 1: Task and key steps. Our work aims to generate continuous sign videos by creating transition poses between discrete segments. In training, random masking simulates missing transitions, and the model learns to recover these frames (steps 1-3). During inference, padding initializes missing transitions, which the model refines to generate smooth, coherent sequences (steps 4-6).",
        "qtype": "Design_Rationale",
        "response": "1.  **Identify [mask1] and [mask2] in the image and text:**\n    *   [mask1] (red box, Step 1 in the diagram) shows \"random masking\" applied to a continuous video sequence.\n    *   [mask2] (blue box, Step 2 in the diagram) shows the result of \"recover masked frames\" using a robot (representing the model).\n\n2.  **Locate relevant information about \"random masking\" in the text:**\n    *   Under \"Core Idea: Unsupervised to Supervised\": \"Given a complete continuous sign language sequence, we simulate missing transitions by randomly masking portions of, creating gaps that mimic real-world transition absences.\"\n    *   Under \"Random Masking Strategy\": \"To generate smooth transitional poses and capture relationships between different segments, we employ a random masking strategy during training... This masking strategy enables the model to predict missing frames based on observable context, facilitating smooth transition generation.\"\n\n3.  **Locate relevant information about \"recovering masked frames\" (which is the objective after masking):**\n    *   Under \"Core Idea: Unsupervised to Supervised\": \"This setup frames the task as predicting [masked frames] based on [observable pose"
    },
    {
        "question": "What drives implementing initialize padding before predict missing frames during inference?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "In the inference phase, generating smooth transitions between discrete motion segments is challenging due to the gaps between observed frames.",
            "We leverage the natural correlation between consecutive frames in sign language sequences by introducing a linear interpolation padding initialization strategy, as illustrated in Fig. 2.",
            "This strategy starts by using the last pose of the preceding observed segment, Xₐ, and the first pose of the following observed segment, X_b, as boundary frames for the missing transition segment. The goal is to generate intermediate frames X_m that provide a smooth transition from Xₐ to X_b."
        ],
        "final_answer": "The gaps between discrete observed sign segments make it hard to generate smooth transitions directly. To overcome this, the model first initializes the missing frames via linear interpolation between the last frame of the preceding segment and the first frame of the following segment. This \"initialize padding\" provides a coherent starting point—leveraging natural temporal correlations—so the diffusion model can more effectively predict and refine the missing transition frames.",
        "relevant_elements": [
            "initialize padding",
            "predict missing frames"
        ],
        "id": 779,
        "masked_question": "What drives implementing [mask1] before predict missing frames during inference?",
        "masked_number": 1,
        "masked_elements": [
            "initialize padding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.16810v1_figure_1.png",
        "paperid": "2411.16810v1",
        "paper_path": "./papers/2411.16810v1.json",
        "figure_id": "2411.16810v1_figure_1.png",
        "caption": "Figure 1: Task and key steps. Our work aims to generate continuous sign videos by creating transition poses between discrete segments. In training, random masking simulates missing transitions, and the model learns to recover these frames (steps 1-3). During inference, padding initializes missing transitions, which the model refines to generate smooth, coherent sequences (steps 4-6).",
        "qtype": "Design_Rationale",
        "response": "The [mask1] in the question refers to step 4 in the diagram, which is \"initialize padding\" using linear interpolation. This step is implemented before predicting missing frames (steps 5 and 6) during the inference phase.\n\nAccording to the \"Linear Interpolation Padding\" section in the text:\n1.  \"In the inference phase, generating smooth transitions between discrete motion segments is challenging due to the gaps between observed frames.\"\n2.  The linear interpolation padding strategy \"leverages the natural correlation between consecutive frames in sign language sequences\" by initializing missing frames between the last pose of the preceding segment and the first pose of the following segment.\n3.  The purpose of this initialization is to \"gradually fill in the key points at each time step, creating intermediate poses that ensure a coherent and natural flow between segments.\"\n4.  Crucially, the text states: \"This strategy **facilitates smoother transitions and provides a stable foundation for later refinement**, resulting in seamless sign language video synthesis.\"\n\nTherefore, the implementation of \"initialize padding\" before predicting missing frames"
    },
    {
        "question": "How does random masking determine which frames to hide while maintaining sufficient context for transition recovery?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "Given a complete continuous sign language sequence S, we simulate missing transitions by randomly masking portions of S, creating gaps that mimic real-world transition absences. Let the masked frames be denoted as Xm, and the observable pose frames as Xo.",
            "The mask M is constructed by randomly selecting frame indices, extending across the dimensions of the latent feature Z. This mask M is then applied to selectively retain or mask out parts of Z, resulting in a masked latent representation: Z_masked = Z ⊙ (1 - M)."
        ],
        "final_answer": "The random masking strategy simply picks a set of frame indices at random to hide—masking out those frames in the latent representation—while leaving the surrounding (unmasked) frames visible. Those visible frames naturally provide the context needed for the model to learn to reconstruct the missing transitions.",
        "relevant_elements": [
            "random masking"
        ],
        "id": 780,
        "masked_question": "How does [mask1] determine which frames to hide while maintaining sufficient context for transition recovery?",
        "masked_number": 1,
        "masked_elements": [
            "random masking"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.16810v1_figure_1.png",
        "paperid": "2411.16810v1",
        "paper_path": "./papers/2411.16810v1.json",
        "figure_id": "2411.16810v1_figure_1.png",
        "caption": "Figure 1: Task and key steps. Our work aims to generate continuous sign videos by creating transition poses between discrete segments. In training, random masking simulates missing transitions, and the model learns to recover these frames (steps 1-3). During inference, padding initializes missing transitions, which the model refines to generate smooth, coherent sequences (steps 4-6).",
        "qtype": "Implementation_Details",
        "response": "The text states that the random masking strategy determines which frames to hide by:\n\n1.  **Randomly selecting frame indices:** The mask is constructed by \"randomly selecting frame indices\" of the latent representation of the video.\n2.  **Maintaining context:** The process ensures the model can predict missing frames \"based on observable context,\" although the text doesn't explicitly detail a mechanism for *ensuring* \"sufficient\" context beyond the random selection itself which creates gaps that the model learns to fill from the un-masked, observable frames.\n\nIn summary, the specific frames to be hidden are determined by **randomly selecting their indices**. The overall strategy is designed to enable the model to leverage the surrounding observable (unmasked) context to learn to recover the masked frames and generate smooth transitions."
    },
    {
        "question": "How does initialize padding compute intermediate poses from boundary frames for predicting missing transition frames?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "In the inference phase, generating smooth transitions between discrete motion segments is challenging due to the gaps between observed frames. We leverage the natural correlation between consecutive frames in sign language sequences by introducing a linear interpolation padding initialization strategy, as illustrated in Fig. 2.",
            "This strategy starts by using the last pose of the preceding observed segment, z_start, and the first pose of the following observed segment, z_end, as boundary frames for the missing transition segment. The goal is to generate intermediate frames z_i that provide a smooth transition from z_start to z_end. Using linear interpolation, we initialize these missing frames as follows:",
            "This interpolation scheme gradually fills in the key points at each time step, creating intermediate poses that ensure a coherent and natural flow between segments. This strategy facilitates smoother transitions and provides a stable foundation for later refinement, resulting in seamless sign language video synthesis."
        ],
        "final_answer": "Initialize padding creates each missing transition pose by linearly interpolating between the last observed pose of the preceding segment (z_start) and the first observed pose of the following segment (z_end). Concretely, for the i-th missing frame out of N, its pose is set to ((N–i)/N)·z_start + (i/N)·z_end, producing a smooth sequence of intermediate poses.",
        "relevant_elements": [
            "initialize padding",
            "predict missing frames"
        ],
        "id": 781,
        "masked_question": "How does [mask1] compute intermediate poses from boundary frames for predicting missing transition frames?",
        "masked_number": 1,
        "masked_elements": [
            "initialize padding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.16810v1_figure_1.png",
        "paperid": "2411.16810v1",
        "paper_path": "./papers/2411.16810v1.json",
        "figure_id": "2411.16810v1_figure_1.png",
        "caption": "Figure 1: Task and key steps. Our work aims to generate continuous sign videos by creating transition poses between discrete segments. In training, random masking simulates missing transitions, and the model learns to recover these frames (steps 1-3). During inference, padding initializes missing transitions, which the model refines to generate smooth, coherent sequences (steps 4-6).",
        "qtype": "Implementation_Details",
        "response": "[mask1] refers to steps 4, 5, and 6, which represent the inference phase.\nAccording to the context under the \"Linear Interpolation Padding\" section, during the inference phase, the model initializes the missing transition frames using a linear interpolation padding strategy.\n\nHere's how it computes intermediate poses from boundary frames:\n1.  **Identify Boundary Frames**: It uses the last pose of the preceding observed segment ($p_L$) and the first pose of the following observed segment ($p_R$) as the boundary frames for the missing transition segment.\n2.  **Linear Interpolation**: To generate the intermediate frames ($p_i$) that provide a smooth transition between $p_L$ and $p_R$, it applies linear interpolation.\n3.  **Calculation**: The intermediate poses are initialized using the formula:\n    $p_i = p_L + \\frac{i}{N+1}(p_R - p_L)$\n    where $p_L$ is the left boundary frame, $p_R$ is the right boundary frame, $i$ is the index of the current intermediate frame being generated (from 1 to N), and N is the total number of missing frames.\n\nThis linear interpolation scheme gradually fills in the key points at each time step, creating initial intermediate poses that establish a coherent flow between the segments, which are then further refined by the diffusion model."
    },
    {
        "question": "How does CKKS homomorphic encryption handle quantized integer values during ciphertext packing?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Encryption",
            "Quantization"
        ],
        "id": 782,
        "masked_question": "How does [mask1] homomorphic handle quantized integer values during ciphertext packing?",
        "masked_number": 1,
        "masked_elements": [
            "Encryption"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.05260v1_figure_1.png",
        "paperid": "2411.05260v1",
        "paper_path": "./papers/2411.05260v1.json",
        "figure_id": "2411.05260v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed QuanCrypt-FL framework.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] refers to the \"Encryption - Encrypt using CKKS scheme\" step.\n\nBased on the provided context:\n1.  The paper states that the CKKS (Cheon-Kim-Kim-Song) homomorphic encryption scheme is \"particularly advantageous for privacy-preserving machine learning, as it supports real number arithmetic and Single Instruction Multiple Data (SIMD) operations.\"\n2.  Before encryption, clients perform quantization, which involves converting model updates into \"low-precision integers\" and \"quantized values q\".\n3.  These \"quantized model updates\" are then encrypted using the CKKS scheme.\n\nTherefore, homomorphic encryption using the CKKS scheme handles quantized integer values during ciphertext packing by leveraging its **Single Instruction Multiple Data (SIMD) operations**. This capability allows multiple quantized integer values to be packed into a single ciphertext, which simulates real number operations effectively, and enables efficient batch processing (e."
    },
    {
        "question": "How does dynamic unstructured pruning update its mask based on L1 norm and pruning rate evolution?",
        "relevant_section_ids": [
            "4"
        ],
        "relevant_context": [
            "During local model training, we employed a pruning technique to iteratively remove less important weights or gradients from the model updates. Specifically, clients perform soft, unstructured pruning based on the L1 norm, which creates a sparse model and makes the FL training process more efficient. The pruning process is guided by a dynamically updated pruning rate δ_t, which increases over the communication rounds, allowing for more aggressive pruning as training progresses.",
            "The pruning rate δ_t is updated iteratively using the equation 3, where t is the pruning rate at round t, t₀ is the effective round when pruning starts, t_f is the target round when the target pruning rate is reached, δ₀ is the initial pruning rate, and δ_f is the target pruning rate. This pruning rate increases gradually from the initial value to the target value, ensuring that pruning is progressively applied more aggressively as training advances.",
            "Once pruning is applied to the model updates at each client, the pruned local model update Ŵ_p^t is computed as in equation 4, where ⊙ represents the element-wise product, and M_p^t is the local pruning mask generated to identify which weights to prune at communication round t."
        ],
        "final_answer": "At each communication round t a new binary mask M_p^t is generated by ranking all weights (or gradients) in each layer by their L1-norm magnitudes and zeroing out the smallest-magnitude fraction. The fraction of weights to be pruned, δ_t, is not fixed but follows a schedule (Eq.3) that smoothly increases from an initial pruning rate δ₀ at start round t₀ to a target rate δ_f by round t_f. The mask M_p^t is then applied element-wise (Ŵ_p^t = ΔW_p^t ⊙ M_p^t) to produce the pruned update sent for aggregation.",
        "relevant_elements": [
            "Model Pruning"
        ],
        "id": 783,
        "masked_question": "How does dynamic unstructured [mask1] update its mask based on L1 norm and pruning rate evolution?",
        "masked_number": 1,
        "masked_elements": [
            "Model Pruning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.05260v1_figure_1.png",
        "paperid": "2411.05260v1",
        "paper_path": "./papers/2411.05260v1.json",
        "figure_id": "2411.05260v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed QuanCrypt-FL framework.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does quantization affect CKKS encryption efficiency and communication overhead during secure model updates?",
        "relevant_section_ids": [
            "1",
            "4"
        ],
        "relevant_context": [
            "Second, to address the high computational complexity of HE in FL, we implement a low-bit quantization technique to reduce upload costs for users or organizations, although this introduces challenges related to numerical overflows.",
            "Next, each client performs quantization on the pruned and clipped model updates to reduce communication costs. The quantization process involves calculating the scaling factor s and determining the quantized values Q to ensure the updates are compressed before transmission. The quantized values are then clamped to the range [−l,l] and converted to the appropriate data type based on the bit width (e.g., 8-bit, 16-bit, or 32-bit) to minimize communication overhead. After completing quantization, each client encrypts the quantized model updates using the CKKS homomorphic encryption scheme.",
            "We integrate low-bit quantization and dynamic pruning with HE to enhance both efficiency and privacy. Quantization reduces the precision of model weights, resulting in a 3X reduction in storage usage."
        ],
        "final_answer": "By converting full-precision updates into low-bit integers before CKKS encoding, quantization compresses the plaintext and thus shrinks the resulting ciphertexts. This both speeds up CKKS encryption/decryption and cuts the size of data sent over the network, yielding roughly a 3× reduction in storage and communication overhead for secure model updates.",
        "relevant_elements": [
            "Quantization",
            "Encryption"
        ],
        "id": 784,
        "masked_question": "How does [mask1] affect CKKS encryption efficiency and communication overhead during secure model updates?",
        "masked_number": 1,
        "masked_elements": [
            "Quantization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.05260v1_figure_1.png",
        "paperid": "2411.05260v1",
        "paper_path": "./papers/2411.05260v1.json",
        "figure_id": "2411.05260v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed QuanCrypt-FL framework.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does dynamic unstructured pruning affect FedAvg aggregation complexity and communication overhead across rounds?",
        "relevant_section_ids": [
            "4"
        ],
        "relevant_context": [
            "During local model training, we employed a pruning technique to iteratively remove less important weights or gradients from the model updates. Specifically, clients perform soft, unstructured pruning based on the L1 norm, which creates a sparse model and makes the FL training process more efficient.",
            "After pruning, clients send their pruned updates to the server, which aggregates them using FedAvg to generate the global model. This pruning technique not only reduces the model size and computational costs but also makes the training process more resistant to inference attacks.",
            "By progressively increasing the pruning rate, the communication efficiency improves throughout the rounds. As clients share a sparsified model with the server, the transmitted model is no longer the full model, limiting the information available to potential attackers."
        ],
        "final_answer": "Dynamic unstructured pruning gradually increases the sparsity of each client’s update over the course of training rounds. As more weights are zeroed out, each FedAvg aggregation step has fewer nonzero parameters to process—reducing aggregation complexity—and the size of each transmitted update shrinks, lowering the communication overhead round by round.",
        "relevant_elements": [
            "Model Pruning",
            "Aggregation"
        ],
        "id": 785,
        "masked_question": "How does dynamic unstructured [mask1] affect FedAvg [mask2] complexity and communication overhead across rounds?",
        "masked_number": 2,
        "masked_elements": [
            "Model Pruning",
            "Aggregation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.05260v1_figure_1.png",
        "paperid": "2411.05260v1",
        "paper_path": "./papers/2411.05260v1.json",
        "figure_id": "2411.05260v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed QuanCrypt-FL framework.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does MHA layer interaction affect FFN Factorization compared to MoE-based decomposition methodologies?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "MHA layer",
            "FFN Factorization"
        ],
        "id": 786,
        "masked_question": "How does [mask1] interaction affect FFN Factorization compared to MoE-based decomposition methodologies?",
        "masked_number": 1,
        "masked_elements": [
            "MHA layer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.11855v1_figure_1.png",
        "paperid": "2408.11855v1",
        "paper_path": "./papers/2408.11855v1.json",
        "figure_id": "2408.11855v1_figure_1.png",
        "caption": "Figure 1: Overall Framework of FactorLLM. Teacher Model: Original transformer blocks with multi-head attention (MHA) and feed-forward layers. Student Model: Modified blocks composed of the same MHA layers and factorized FFN, with a linear router deciding which expert(s) tokens will pass through. Training Process: Input tokens branch into normal transformer layers and FactorLLM to produce ground-truth (GT) and predictions respectively. Transformers freeze to distill FactorLLM based on compositional loss, including mean square error (MSE) between per-layer representations, cross entropy (CE) loss between per-layer optimal and routing masks, and final CE loss between GT and predictions.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Cross Entropy training shape Router allocations akin to load balancing in MoE routing designs?",
        "relevant_section_ids": [
            "3.1",
            "3.3"
        ],
        "relevant_context": [
            "To mitigate this imbalance, a load balance loss, denoted as L_balance, was introduced in [37] to penalize uneven input distribution among experts: where I_{n,j}=1 if the jth expert is selected for processing token n and 0 otherwise.",
            "Subsequently, we apply the TopK algorithm to extract expert indices T for the smallest distances, leading to a pseudo router allocation ˆy, where elements corresponding to indices in T are set to 1 and all others to 0, defined as ˆy. Therefore, leveraging the pre-established pseudo label ˆy, we expedite the router’s update using the cross-entropy function:"
        ],
        "final_answer": "Rather than using an explicit balancing penalty, FactorLLM builds a one-hot “pseudo-label” for each token by picking the TopK experts whose outputs most closely match the teacher (via MSE + TopK). It then trains the freshly injected router with a cross-entropy loss against these labels. This cross-entropy supervision forces the router to mimic the teacher’s allocations—effectively steering traffic among experts in a balanced, MoE-style manner without adding a separate load-balance term.",
        "relevant_elements": [
            "Router",
            "Cross Entropy"
        ],
        "id": 787,
        "masked_question": "How does [mask1] training shape Router allocations akin to load balancing in MoE routing designs?",
        "masked_number": 1,
        "masked_elements": [
            "Cross Entropy"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.11855v1_figure_1.png",
        "paperid": "2408.11855v1",
        "paper_path": "./papers/2408.11855v1.json",
        "figure_id": "2408.11855v1_figure_1.png",
        "caption": "Figure 1: Overall Framework of FactorLLM. Teacher Model: Original transformer blocks with multi-head attention (MHA) and feed-forward layers. Student Model: Modified blocks composed of the same MHA layers and factorized FFN, with a linear router deciding which expert(s) tokens will pass through. Training Process: Input tokens branch into normal transformer layers and FactorLLM to produce ground-truth (GT) and predictions respectively. Transformers freeze to distill FactorLLM based on compositional loss, including mean square error (MSE) between per-layer representations, cross entropy (CE) loss between per-layer optimal and routing masks, and final CE loss between GT and predictions.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does cross-entropy supervision of router outputs shape dynamic expert activation?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "We define y* as the output of the teacher’s feed-forward network FFN_T, and Y as the outputs from the student experts {FFN_i}. We first compute the Mean Squared Error (MSE) across these features, yielding a set of distances d. Subsequently, we apply the TopK algorithm to extract expert indices S for the smallest d, leading to a pseudo router allocation Y* , where elements corresponding to indices in S are set to 1 and all others to 0, defined as Y* = TopK(d).",
            "Therefore, leveraging the pre-established pseudo label Y* , we expedite the router’s update using the cross-entropy function:\n\nL_PA = −∑_{l=1}^{L} Y*_l ⋅ log (Router(X)_l)\n\nHere, L denotes the number of layers in FFN, and Router(X)_l represents the router’s output distribution over experts in layer l."
        ],
        "final_answer": "By applying a cross-entropy loss between the router’s predicted expert-selection distribution and a pseudo-label derived from the teacher’s feature distances, the router is directly trained to activate exactly those experts whose outputs most closely match the teacher. This supervision forces the router to learn dynamic, per-token expert assignments that align with the teacher’s knowledge, thereby shaping which experts are activated at inference time.",
        "relevant_elements": [
            "Cross-Entropy loss",
            "router",
            "Experts"
        ],
        "id": 789,
        "masked_question": "How does cross-entropy supervision of [mask1] outputs shape dynamic expert activation?",
        "masked_number": 1,
        "masked_elements": [
            "router"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.11855v1_figure_1.png",
        "paperid": "2408.11855v1",
        "paper_path": "./papers/2408.11855v1.json",
        "figure_id": "2408.11855v1_figure_1.png",
        "caption": "Figure 1: Overall Framework of FactorLLM. Teacher Model: Original transformer blocks with multi-head attention (MHA) and feed-forward layers. Student Model: Modified blocks composed of the same MHA layers and factorized FFN, with a linear router deciding which expert(s) tokens will pass through. Training Process: Input tokens branch into normal transformer layers and FactorLLM to produce ground-truth (GT) and predictions respectively. Transformers freeze to distill FactorLLM based on compositional loss, including mean square error (MSE) between per-layer representations, cross entropy (CE) loss between per-layer optimal and routing masks, and final CE loss between GT and predictions.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] refers"
    },
    {
        "question": "How does Compositional Incremental Learning enforce nonrecurrence of composition classes while enabling primitives to recur?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "We note that the composition classes between incremental tasks are always disjoint, which means C_i ∩ C_j = ∅ for any i ≠ j.",
            "Different from the composition classes, the primitive classes are allowed to recur in different tasks. That means it allows the tasks to share some primitive concepts of objects and states."
        ],
        "final_answer": "Compositional Incremental Learning enforces nonrecurrence of composition classes by requiring that the sets of composition classes in any two tasks be disjoint (C_i ∩ C_j = ∅). At the same time, it permits the underlying primitives (state classes and object classes) to recur across tasks, allowing tasks to share primitive concepts even though their compositions are distinct.",
        "relevant_elements": [
            "Compositional Incremental Learning",
            "Primitives Recurrence"
        ],
        "id": 790,
        "masked_question": "How does [mask1] enforce nonrecurrence of composition classes while enabling primitives to recur?",
        "masked_number": 1,
        "masked_elements": [
            "Compositional Incremental Learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.01739v2_figure_1.png",
        "paperid": "2411.01739v2",
        "paper_path": "./papers/2411.01739v2.json",
        "figure_id": "2411.01739v2_figure_1.png",
        "caption": "Figure 1: Differences between Class Incremental Learning (class-IL), Blurry Incremental Learning (blur-IL), and Compositional Incremental Learning (composition-IL). The object classes are not allowed to recur in the class-IL scenario, whereas they may recur randomly in the blur-IL scenario. Different from them, the classes in composition-IL involve state-object compositions apart from the object classes. Besides, the compositions do not reoccur, but the primitives (states or objects) may randomly reappear across incremental sessions.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Blurry Incremental Learning’s class recurrence mechanism influence Compositional Incremental Learning’s state-object labeling protocol?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Blurry Incremental Learning",
            "Compositional Incremental Learning"
        ],
        "id": 791,
        "masked_question": "How does [mask1]’s class recurrence mechanism influence Compositional Incremental Learning’s state-object labeling protocol?",
        "masked_number": 1,
        "masked_elements": [
            "Blurry Incremental Learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.01739v2_figure_1.png",
        "paperid": "2411.01739v2",
        "paper_path": "./papers/2411.01739v2.json",
        "figure_id": "2411.01739v2_figure_1.png",
        "caption": "Figure 1: Differences between Class Incremental Learning (class-IL), Blurry Incremental Learning (blur-IL), and Compositional Incremental Learning (composition-IL). The object classes are not allowed to recur in the class-IL scenario, whereas they may recur randomly in the blur-IL scenario. Different from them, the classes in composition-IL involve state-object compositions apart from the object classes. Besides, the compositions do not reoccur, but the primitives (states or objects) may randomly reappear across incremental sessions.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What challenges might arise from maintaining disjoint state-object compositions while allowing primitives recurrence?",
        "relevant_section_ids": [
            "1",
            "3.3"
        ],
        "relevant_context": [
            "Although the composition classes are disjoint across incremental tasks, the primitive classes (i.e. objects and states) encountered in old tasks are allowed to reappear in new tasks. Unfortunately, existing incremental learning approaches are challenged by such a compositional scenario, because their models excessively prioritize the object primitives while neglecting the state primitives. Consequently, the compositions with the same object but with different states become ambiguous and indistinguishable.",
            "The main stumbling block in composition-IL is the ambiguous composition boundary. Although the composition label consists of two primitives (i.e. object and state), we note that the model excessively prioritizes the object primitive while neglecting the state primitive. Consequently, the compositions with the same object but with different states become ambiguous and indistinguishable."
        ],
        "final_answer": "Maintaining disjoint compositions while allowing primitives to recur leads to an ambiguous composition boundary: models tend to focus on object primitives at the expense of state primitives, making different compositions that share the same object but have different states hard to distinguish.",
        "relevant_elements": [
            "Primitives Recurrence",
            "State-Object Composition"
        ],
        "id": 792,
        "masked_question": "What challenges might arise from maintaining disjoint [mask1] while allowing [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "State-Object Composition",
            "Primitives Recurrence"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.01739v2_figure_1.png",
        "paperid": "2411.01739v2",
        "paper_path": "./papers/2411.01739v2.json",
        "figure_id": "2411.01739v2_figure_1.png",
        "caption": "Figure 1: Differences between Class Incremental Learning (class-IL), Blurry Incremental Learning (blur-IL), and Compositional Incremental Learning (composition-IL). The object classes are not allowed to recur in the class-IL scenario, whereas they may recur randomly in the blur-IL scenario. Different from them, the classes in composition-IL involve state-object compositions apart from the object classes. Besides, the compositions do not reoccur, but the primitives (states or objects) may randomly reappear across incremental sessions.",
        "qtype": "Others",
        "response": "The red box ([mask1]) in the image highlights the composition classes in `Data 2`. The blue box ([mask2]) highlights the primitive classes (like \"Yellow\" and \"Suit\") in `Data 1`, and the arrows indicate their recurrence in `Data 2` (e.g.,"
    },
    {
        "question": "How could blurry incremental learning's class recurrence strategy be adapted for compositional incremental learning?",
        "relevant_section_ids": [
            "1"
        ],
        "relevant_context": [
            "To break such a strict limitation, recent studies develop a new setting mostly called Blurry Incremental Learning (blur-IL) MVP ###reference_b24###; CLIB ###reference_b11###, where the incremental sessions allow the recurrence of previous classes, resulting in a more realistic and flexible scenario.",
            "As compared in Fig. 1 ###reference_###, we can see that composition-IL integrates the characteristics of class-IL and blur-IL. Although the composition classes are disjoint across incremental tasks, the primitive classes (i.e. objects and states) encountered in old tasks are allowed to reappear in new tasks."
        ],
        "final_answer": "By following blur-IL’s idea of letting classes recur in later sessions—but applying it at the level of primitive concepts—composition-IL allows old object and state primitives (rather than full compositions) to reappear in new tasks, while still keeping individual composition labels disjoint.",
        "relevant_elements": [
            "Blurry Incremental Learning",
            "Compositional Incremental Learning"
        ],
        "id": 793,
        "masked_question": "How could [mask1]'s class recurrence strategy be adapted for [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Blurry Incremental Learning",
            "Compositional Incremental Learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.01739v2_figure_1.png",
        "paperid": "2411.01739v2",
        "paper_path": "./papers/2411.01739v2.json",
        "figure_id": "2411.01739v2_figure_1.png",
        "caption": "Figure 1: Differences between Class Incremental Learning (class-IL), Blurry Incremental Learning (blur-IL), and Compositional Incremental Learning (composition-IL). The object classes are not allowed to recur in the class-IL scenario, whereas they may recur randomly in the blur-IL scenario. Different from them, the classes in composition-IL involve state-object compositions apart from the object classes. Besides, the compositions do not reoccur, but the primitives (states or objects) may randomly reappear across incremental sessions.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What privacy risks emerge from constructing point clouds using MVS on user-captured images?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "MVS",
            "point clouds"
        ],
        "id": 794,
        "masked_question": "What privacy risks emerge from constructing [mask1] using MVS on user-captured images?",
        "masked_number": 1,
        "masked_elements": [
            "point clouds"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.14316v1_figure_2.png",
        "paperid": "2409.14316v1",
        "paper_path": "./papers/2409.14316v1.json",
        "figure_id": "2409.14316v1_figure_2.png",
        "caption": "Figure 2: Framework Overview. MVPGS leverages learning-based MVS to estimate dense view-consistent depth Dm v ssuperscript𝐷𝑚𝑣𝑠D^{mvs}italic_D start_POSTSUPERSCRIPT italic_m italic_v italic_s end_POSTSUPERSCRIPT and construct a point cloud 𝒫𝒫\\mathcal{P}caligraphic_P for the initialization of Gaussians 𝒢𝒢\\mathcal{G}caligraphic_G. We excavate the computed geometry from MVS through forward warping to generate appearance priors for the supervision of unseen views. To regularize the geometry update during optimization, we introduce LC Ssubscript𝐿𝐶𝑆L_{CS}italic_L start_POSTSUBSCRIPT italic_C italic_S end_POSTSUBSCRIPT from MVS depth and Lm o n osubscript𝐿𝑚𝑜𝑛𝑜L_{mono}italic_L start_POSTSUBSCRIPT italic_m italic_o italic_n italic_o end_POSTSUBSCRIPT from monocular depth priors to guide Gaussians to converge to proper positions.",
        "qtype": "Others",
        "response": "The [mask1] refers to \"Consistent Depths D^mvs\".\n\nWhen constructing \"Consistent Depths\" using Multi-View Stereo (MVS) on user-captured images, the primary privacy risks arise from the potential to **reconstruct detailed 3D geometric information of private or sensitive spaces, objects, or individuals** that were present in the original input views.\n\nHere's a breakdown of the risks:\n\n1.  **Exposure of Private Spaces:** If user-captured images are taken inside private residences, offices, or other personal spaces, the MVS process can generate accurate 3D depth maps and subsequently a 3D model of that environment. This explicit 3D reconstruction can reveal layouts, contents, and structural details of these private spaces, which might not be fully discernible from individual 2D images.\n2.  **Identification of Individuals and Objects:** If individuals or personal objects are present in the user-captured images, the depth maps can help reconstruct their 3D form. This could potentially lead to the 3D reconstruction of identifiable facial structures, body shapes, or unique personal belongings, increasing the risk of re-identification or profiling, even from angles not captured in the original images.\n3.  **Increased Detail and Inference:** A precise 3D model derived from depth maps can allow for measurements, estimations of scale, and inference of spatial relationships that might be difficult or impossible to determine from 2D images alone. This enhanced understanding of the scene's geometry could be exploited for various purposes without the user's consent or knowledge.\n4.  **Data Persistence and Sharing:** Once the 3D depth information (and subsequent 3D Gaussian representation) is generated, it becomes a persistent digital twin of the captured scene. If this data is stored,"
    },
    {
        "question": "How could inverse bilinear sampling amplify appearance inconsistencies across large viewpoint changes?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "inverse bilinear sampling",
            "appearance priors"
        ],
        "id": 795,
        "masked_question": "How could [mask1] amplify appearance inconsistencies across large viewpoint changes?",
        "masked_number": 1,
        "masked_elements": [
            "inverse bilinear sampling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.14316v1_figure_2.png",
        "paperid": "2409.14316v1",
        "paper_path": "./papers/2409.14316v1.json",
        "figure_id": "2409.14316v1_figure_2.png",
        "caption": "Figure 2: Framework Overview. MVPGS leverages learning-based MVS to estimate dense view-consistent depth Dm v ssuperscript𝐷𝑚𝑣𝑠D^{mvs}italic_D start_POSTSUPERSCRIPT italic_m italic_v italic_s end_POSTSUPERSCRIPT and construct a point cloud 𝒫𝒫\\mathcal{P}caligraphic_P for the initialization of Gaussians 𝒢𝒢\\mathcal{G}caligraphic_G. We excavate the computed geometry from MVS through forward warping to generate appearance priors for the supervision of unseen views. To regularize the geometry update during optimization, we introduce LC Ssubscript𝐿𝐶𝑆L_{CS}italic_L start_POSTSUBSCRIPT italic_C italic_S end_POSTSUBSCRIPT from MVS depth and Lm o n osubscript𝐿𝑚𝑜𝑛𝑜L_{mono}italic_L start_POSTSUBSCRIPT italic_m italic_o italic_n italic_o end_POSTSUBSCRIPT from monocular depth priors to guide Gaussians to converge to proper positions.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates integrating L_mono with L_CS to regulate Gaussian geometry convergence during optimization?",
        "relevant_section_ids": [
            "1",
            "3.3",
            "3.3.2"
        ],
        "relevant_context": [
            "Furthermore, the position parameters in 3DGS are directly updated by the back-propagation gradient, which may lead to deviations from accurate geometry during few-shot optimization (see leaves in Fig. 7 ###reference_###). To facilitate convergence during optimization, we introduce a loss between 3DGS’s geometry and the confident geometric structure computed from MVS. Additionally, MVS may have poor performance in areas such as textureless and low overlap [49 ###reference_b49###], we incorporate monocular depth priors [31 ###reference_b31###] to further constrain the global geometry of scenes and mitigate the influence of inaccurate warped appearance priors caused by imprecise MVS depths.",
            "The geometry of scenes can be reflected by the Gaussian’s mean parameter μ, which is updated directly through back-propagate gradients during optimization. In practice, these parameters tend to have difficulty converging to correct positions when constraints from input views are insufficient. To facilitate convergence, we introduce two geometric constraints derived from MVS outputs and recent monocular depth priors [31 ###reference_b31###].",
            "MVS depth may not be consistent in certain areas. For regions lacking consistent structure regularization, we use monocular depth priors as compensation. Specifically, we utilize the ViT-based DPT [31 ###reference_b31###], which is trained on large-scale datasets and demonstrates strong generalization capabilities on other scenes, to predict depth map D_mono for each view."
        ],
        "final_answer": "Because back‐propagated updates alone can cause the Gaussians’ positions to drift under sparse‐view supervision and MVS depths are only reliable in high‐confidence regions, the authors combine the MVS‐based consistency loss (L_CS) with a monocular depth prior loss (L_mono) to ensure that Gaussian geometry converges correctly both locally (where MVS is trusted) and globally (where MVS may fail).",
        "relevant_elements": [
            "L_mono",
            "L_CS",
            "Gaussian"
        ],
        "id": 796,
        "masked_question": "What motivates integrating [mask1] with [mask2] to regulate Gaussian geometry convergence during optimization?",
        "masked_number": 2,
        "masked_elements": [
            "L_mono",
            "L_CS"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.14316v1_figure_2.png",
        "paperid": "2409.14316v1",
        "paper_path": "./papers/2409.14316v1.json",
        "figure_id": "2409.14316v1_figure_2.png",
        "caption": "Figure 2: Framework Overview. MVPGS leverages learning-based MVS to estimate dense view-consistent depth Dm v ssuperscript𝐷𝑚𝑣𝑠D^{mvs}italic_D start_POSTSUPERSCRIPT italic_m italic_v italic_s end_POSTSUPERSCRIPT and construct a point cloud 𝒫𝒫\\mathcal{P}caligraphic_P for the initialization of Gaussians 𝒢𝒢\\mathcal{G}caligraphic_G. We excavate the computed geometry from MVS through forward warping to generate appearance priors for the supervision of unseen views. To regularize the geometry update during optimization, we introduce LC Ssubscript𝐿𝐶𝑆L_{CS}italic_L start_POSTSUBSCRIPT italic_C italic_S end_POSTSUBSCRIPT from MVS depth and Lm o n osubscript𝐿𝑚𝑜𝑛𝑜L_{mono}italic_L start_POSTSUBSCRIPT italic_m italic_o italic_n italic_o end_POSTSUBSCRIPT from monocular depth priors to guide Gaussians to converge to proper positions.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "Why employ inverse bilinear sampling after forward warping for appearance prior generation in unseen views?",
        "relevant_section_ids": [
            "1",
            "3.2.2"
        ],
        "relevant_context": [
            "Since the warped locations might be floating-point numbers and not exactly aligned with an image grid, we utilize reversed bilinear sampling[42] to distribute colors to the local regions.",
            "In practice, x' is fractional and may not religiously lie in the pixel center. To address this problem, we utilize reversed bilinear sampling[42], which distributes the weight of the projected pixel to its nearest neighbors."
        ],
        "final_answer": "Inverse bilinear sampling is used to handle fractional (floating-point) warped coordinates that do not fall exactly on integer pixel centers. By distributing each warped pixel’s color across its four nearest neighbors, it ensures proper alignment of color contributions on the discrete image grid and yields a smoother, more accurate appearance prior for unseen views.",
        "relevant_elements": [
            "inverse bilinear sampling",
            "forward warping"
        ],
        "id": 797,
        "masked_question": "Why employ [mask1] after forward warping for appearance prior generation in unseen views?",
        "masked_number": 1,
        "masked_elements": [
            "inverse bilinear sampling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.14316v1_figure_2.png",
        "paperid": "2409.14316v1",
        "paper_path": "./papers/2409.14316v1.json",
        "figure_id": "2409.14316v1_figure_2.png",
        "caption": "Figure 2: Framework Overview. MVPGS leverages learning-based MVS to estimate dense view-consistent depth Dm v ssuperscript𝐷𝑚𝑣𝑠D^{mvs}italic_D start_POSTSUPERSCRIPT italic_m italic_v italic_s end_POSTSUPERSCRIPT and construct a point cloud 𝒫𝒫\\mathcal{P}caligraphic_P for the initialization of Gaussians 𝒢𝒢\\mathcal{G}caligraphic_G. We excavate the computed geometry from MVS through forward warping to generate appearance priors for the supervision of unseen views. To regularize the geometry update during optimization, we introduce LC Ssubscript𝐿𝐶𝑆L_{CS}italic_L start_POSTSUBSCRIPT italic_C italic_S end_POSTSUBSCRIPT from MVS depth and Lm o n osubscript𝐿𝑚𝑜𝑛𝑜L_{mono}italic_L start_POSTSUBSCRIPT italic_m italic_o italic_n italic_o end_POSTSUBSCRIPT from monocular depth priors to guide Gaussians to converge to proper positions.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to \"Inverse Bilinear Sampling\".\n\nStep-by-step reasoning:\n1.  **Identify the relevant section:** The question asks about \"Inverse Bilinear Sampling\" after \"forward warping\" for \"appearance prior generation in unseen views.\" This process is detailed in Section 3.2.2, \"Forward Warping Appearance for Unseen Views.\"\n2.  **Locate the mention of \"Inverse Bilinear Sampling\":** In Section 3.2.2, the text states: \"Since the warped locations might be floating-point numbers and not exactly aligned with an image grid, we utilize reversed bilinear sampling[42] to distribute colors to the local regions.\" It further elaborates: \"To establish a more robust mapping relationship between pixels in two views, we combine forward warping with reversed bilinear sampling[42].\"\n3.  **Explain the problem it solves:** When forward warping, the transformed pixel coordinates (`u'`, `v'`) in the target view are often fractional (floating-point numbers) because they don't necessarily land precisely on the center of an image pixel.\n4.  **Explain the solution's role:** Inverse bilinear sampling (also referred to as reversed bilinear sampling in the text) addresses this by distributing the color contribution from these fractional warped locations to their four nearest integer-coordinate pixel neighbors. This ensures a more robust and accurate mapping of colors from the source view to the target view's image grid, even when the warped points don't align perfectly.\n\nTherefore, \"Inverse Bilinear Sampling\" is employed to handle the issue where forward-warped locations are often floating-point numbers and do not perfectly align with the image grid. It distributes the color contribution from these fractional warped points to their nearest neighbors, ensuring a robust and accurate transfer of appearance priors to the unseen views."
    },
    {
        "question": "What motivates embedding IEM in each skip connection instead of only at the bottleneck?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "A primary concern when manipulating U-Net-based architecture bottleneck features is the potential information loss in skip connections. Specifically, suppose feature disentanglement is solely conducted at the last feature (i.e., bottleneck) of the encoder E without a similar process in the skip connections linked to the generator G. In that case, there is a risk of information loss. To address this issue, we designed AIM and IEM to perform identity feature disentanglement and target age conjunction at each i-th skip connection and bottleneck as: This scheme ensures that feature disentanglement and age injection are consistently applied across all levels of the skip connections, as depicted in Fig. 3."
        ],
        "final_answer": "Embedding IEM in every skip connection is motivated by the need to prevent identity information loss that would occur if disentanglement were applied only at the bottleneck. By performing identity feature disentanglement at each skip level as well as at the bottleneck, the model ensures that identity-related features are preserved consistently throughout all pathways of the U-Net architecture.",
        "relevant_elements": [
            "IEM",
            "skip connections"
        ],
        "id": 798,
        "masked_question": "What motivates embedding [mask1] in each [mask2] instead of only at the bottleneck?",
        "masked_number": 2,
        "masked_elements": [
            "IEM",
            "skip connections"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.16945v1_figure_2.png",
        "paperid": "2410.16945v1",
        "paper_path": "./papers/2410.16945v1.json",
        "figure_id": "2410.16945v1_figure_2.png",
        "caption": "Figure 2: Overall architecture of IdenBAT for brain age transformation. Age transformer 𝒯𝒯\\mathcal{T}caligraphic_T, which consists of encoder ℰℰ\\mathcal{E}caligraphic_E, identity extracting module (IEM), age injecting module (AIM), and generator 𝒢𝒢\\mathcal{G}caligraphic_G aims to synthesize age-transformed image 𝐗^^𝐗\\hat{\\mathbf{X}}over^ start_ARG bold_X end_ARG.",
        "qtype": "Design_Rationale",
        "response": "The question asks about the motivation for embedding [mask1] (IEM) in each [mask2] (Skip Connections) instead of only at the bottleneck.\n\n1.  **Identify [mask1]**: The red box highlights \"IEM\" (Identity Extracting Module).\n2.  **Identify [mask2]**: The blue box highlights \"Skip Connections\".\n3.  **Locate relevant context**: In the \"Identity Extracting Module\" section, the text directly addresses this: \"A primary concern when manipulating U-Net-based architecture bottleneck features is the potential information loss in skip connections. Specifically, suppose feature disentanglement is solely conducted at the last feature (i.e., bottleneck) of the encoder $\\mathcal{E}$ without a similar process in the skip connections linked to the generator $\\mathcal{G}$. In that case, there is a risk of information loss. To address this issue, we designed AIM and IEM to perform identity feature disentanglement and target age conjunction at each $l$-th skip connection and bottleneck... This scheme ensures that feature disentanglement and age injection are consistently applied across all levels of the skip connections...\"\n\n**Reasoning**:\nThe text clearly states that performing feature disentanglement (the role of IEM) *only* at the bottleneck would lead to a \"risk of information loss\" in the skip connections. Therefore, embedding IEM (and AIM) at \"each $l$-th skip connection and bottleneck\" ensures that identity feature disentanglement and age injection are \"consistently applied across all levels of the skip connections,\" thereby preventing this information loss.\n\n**Answer**:\nEmbedding IEM in each skip connection instead of only at the bottleneck is motivated by the need to prevent potential information loss. If identity feature disentanglement were only performed at the bottleneck, there would be a risk of information loss in the skip connections linked to the generator. This design ensures that feature disentanglement and age injection are consistently applied across all levels of the skip connections, maintaining the integrity of identity features."
    },
    {
        "question": "How does AIM's style transfer mechanism enhance age conditioning of identity features before generator synthesis?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "We utilize a style transfer method for age conditioning in AIM to incorporate information about the target age into the identity feature.",
            "The target age a_t is incorporated into φ_{t,i} using a mapping network 𝓜, comprising eight fully-connected layers with LeakyReLU activation function, in line with StyleGAN2 Karras et al. (2020).",
            "The embedded age condition is fused into the identity feature γ_i through CBN blocks. Specifically, the i-th identity feature γ_i undergoes batch normalization, standardizing the features batch-wise and mapping them into a specific normalized space.",
            "Subsequently, these normalized features undergo denormalization, wherein the target age representation y_t is incorporated by adjusting the mean and standard deviation parameters of the denormalization as: [CBN equation].",
            "This technique allows for reintroducing age-specific characteristics into the normalized identity feature, tailoring it to reflect the desired age condition."
        ],
        "final_answer": "AIM uses a style-transfer–inspired conditional batch-normalization (CBN) pipeline. It first sends the target age through a small mapping network to produce age embeddings, then normalizes the identity feature γ_i and immediately denormalizes it by shifting and scaling with those age embeddings. This injects target-age–specific style (mean and variance) into the identity features before they are passed to the generator, ensuring the synthesized image carries the desired age attributes while preserving identity.",
        "relevant_elements": [
            "AIM",
            "generator"
        ],
        "id": 799,
        "masked_question": "How does [mask1]'s style transfer mechanism enhance age conditioning of identity features before generator synthesis?",
        "masked_number": 1,
        "masked_elements": [
            "AIM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.16945v1_figure_2.png",
        "paperid": "2410.16945v1",
        "paper_path": "./papers/2410.16945v1.json",
        "figure_id": "2410.16945v1_figure_2.png",
        "caption": "Figure 2: Overall architecture of IdenBAT for brain age transformation. Age transformer 𝒯𝒯\\mathcal{T}caligraphic_T, which consists of encoder ℰℰ\\mathcal{E}caligraphic_E, identity extracting module (IEM), age injecting module (AIM), and generator 𝒢𝒢\\mathcal{G}caligraphic_G aims to synthesize age-transformed image 𝐗^^𝐗\\hat{\\mathbf{X}}over^ start_ARG bold_X end_ARG.",
        "qtype": "Design_Rationale",
        "response": "The Age Injecting Module (AIM) enhances age conditioning of identity features before generator synthesis primarily through a **style transfer mechanism utilizing Conditional Batch Normalization (CBN) blocks**.\n\nHere's how it works:\n1.  **Target Age Embedding:** The target age ($a_t$) is first processed by a mapping network ($\\mathcal{M}$) to generate an embedded age condition representation ($y(a_t)$).\n2.  **Conditional Feature Fusion:** This embedded age condition is then fused into the disentangled identity features ($f_{id}$) extracted by the Identity Extracting Module (IEM).\n3.  **Mean and Standard Deviation Adjustment:** Within the CBN blocks, the identity features undergo batch normalization. Critically, during the subsequent denormalization step, the target age representation ($y^{(k)}$) is incorporated by **adjusting the mean and standard deviation parameters** of the denormalization process.\n4.  **Age-Specific Characteristics Reintroduction:** This technique allows the model to reintroduce age-specific characteristics directly into the normalized identity features, effectively tailoring them to reflect the desired age condition.\n5.  **Application across Skip Connections:** This process of identity feature disentanglement and"
    },
    {
        "question": "How are age and identity features iteratively combined through AIM and IEM across each skip connection?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "The embedded age condition is fused into the identity feature f_i through CBN blocks. Specifically, the k-th identity feature f_i^k undergoes batch normalization, standardizing the features batch-wise and mapping them into a specific normalized space. Subsequently, these normalized features undergo denormalization, wherein the target age representation ψ(a_t) is incorporated by adjusting the mean and standard deviation parameters of the denormalization as: … This technique allows for reintroducing age-specific characteristics into the normalized identity feature, tailoring it to reflect the desired age condition. (Section 3.1)",
            "To address this issue, we designed AIM and IEM to perform identity feature disentanglement and target age conjunction at each k-th skip connection and bottleneck as: … This scheme ensures that feature disentanglement and age injection are consistently applied across all levels of the skip connections, as depicted in Fig. 3. (Section 3.2)"
        ],
        "final_answer": "At every U-Net skip connection (and at the bottleneck), the encoder’s feature map is first sent through the Identity Extracting Module (IEM) to pull out an age-irrelevant, identity feature f_i^k. That identity feature is then passed into the Age Injecting Module (AIM), where conditional batch-normalization layers use the target age embedding ψ(a_t) to modulate mean and variance and re-inject age information. By alternating IEM (to disentangle identity) and AIM (to inject age) at each resolution level, the network fuses the two kinds of features iteratively across all skip connections.",
        "relevant_elements": [
            "IEM",
            "AIM",
            "skip connections"
        ],
        "id": 800,
        "masked_question": "How are age and identity features iteratively combined through [mask1] and [mask2] across each skip connection?",
        "masked_number": 2,
        "masked_elements": [
            "AIM",
            "IEM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.16945v1_figure_2.png",
        "paperid": "2410.16945v1",
        "paper_path": "./papers/2410.16945v1.json",
        "figure_id": "2410.16945v1_figure_2.png",
        "caption": "Figure 2: Overall architecture of IdenBAT for brain age transformation. Age transformer 𝒯𝒯\\mathcal{T}caligraphic_T, which consists of encoder ℰℰ\\mathcal{E}caligraphic_E, identity extracting module (IEM), age injecting module (AIM), and generator 𝒢𝒢\\mathcal{G}caligraphic_G aims to synthesize age-transformed image 𝐗^^𝐗\\hat{\\mathbf{X}}over^ start_ARG bold_X end_ARG.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How do outputs from Teacher Text Encoder guide adjustments in the Student Text Encoder prompt?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "For an image I and a set of classes C, we start by performing zero-shot classification using the frozen teacher model. Specifically, we use the teacher image encoder fᵀ_I and text encoder fᵀ_T to compute the teacher image features zᵀ_I and text features zᵀ_T. For the teacher model we use the fixed text prompt “a photo of [CLASS]”. We then apply Eq. 1 to produce the probabilities pᵀ predicted by the teacher on image I for classes C.",
            "Finally, using Eq. 1 we produce student class probabilities pˢ predicted on image I for classes C. Note that all encoder parameters except for the learnable prompt p are frozen.",
            "We use the symmetric KL-divergence between the teacher (pᵀ) and the student (pˢ) probabilities in a distillation loss: L_distill = KL(pᵀ || pˢ) + KL(pˢ || pᵀ). This distillation loss depends only on the fixed predictions of the teacher, the prompt-conditioned predictions of the students, and the set of classes C."
        ],
        "final_answer": "The teacher text encoder produces text features (using the fixed prompt “a photo of [CLASS]”) which are converted into teacher class probabilities. During training, the student’s prompt parameters are updated so that the student text encoder produces class probabilities that match the teacher’s. Concretely, the symmetric KL-divergence between the teacher and student probabilities serves as the loss, and back-propagating this loss through the student text encoder adjusts its prompt parameters.",
        "relevant_elements": [
            "Teacher Text Encoder",
            "Student Text Encoder"
        ],
        "id": 802,
        "masked_question": "How do outputs from [mask1] guide adjustments in the Student Text Encoder prompt?",
        "masked_number": 1,
        "masked_elements": [
            "Teacher Text Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.03056v2_figure_1.png",
        "paperid": "2407.03056v2",
        "paper_path": "./papers/2407.03056v2.json",
        "figure_id": "2407.03056v2_figure_1.png",
        "caption": "Figure 1: Motivation and overview. (Top left) Lightweight VLMs like CLIP achieve impressive zero-shot performance but lag behind supervised approaches; large VLMs incur a high computational burden. (Bottom left) Parameter-efficient prompt learning offers a non-destructive approach to adapting VLMs to downstream tasks; however, existing methods require annotated samples and struggle to generalize to unseen classes. (Right) Our approach does not require labeled samples and learns by distilling knowledge from a more powerful VLM. It can be seamlessly integrated into existing prompt learning techniques and generalizes better to unseen classes on downstream tasks.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How are Teacher Image Encoder representations aligned with learned Prompt embeddings in Student Image Encoder?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "For an image x and a set of classes C, we start by performing zero-shot classification using the frozen teacher model. Specifically, we use the teacher image encoder f_T and text encoder g_T to compute the teacher image features v_T and text features t_T. We then apply Eq. 1 to produce the probabilities p^T predicted by the teacher on image x for classes C.",
            "Finally, using Eq. 1 we produce student class probabilities p^S predicted on image x for classes C. Note that all encoder parameters except for the learnable prompt P are frozen.",
            "We use the symmetric KL-divergence between the teacher (p^T) and the student (p^S) probabilities in a distillation loss: L_{KD}(p^T,p^S)=KL(p^T||p^S)+KL(p^S||p^T)."
        ],
        "final_answer": "The student’s prompt-conditioned image encoder is trained to match the teacher’s image-and-text induced class distributions by minimizing a symmetric KL-divergence between the teacher’s and the student’s predicted probabilities. In this way, the student’s learned prompts are aligned with the teacher’s image encoder representations through unsupervised knowledge distillation.",
        "relevant_elements": [
            "Teacher Image Encoder",
            "Prompt",
            "Student Image Encoder"
        ],
        "id": 803,
        "masked_question": "How are [mask1] representations aligned with learned Prompt embeddings in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Teacher Image Encoder",
            "Student Image Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.03056v2_figure_1.png",
        "paperid": "2407.03056v2",
        "paper_path": "./papers/2407.03056v2.json",
        "figure_id": "2407.03056v2_figure_1.png",
        "caption": "Figure 1: Motivation and overview. (Top left) Lightweight VLMs like CLIP achieve impressive zero-shot performance but lag behind supervised approaches; large VLMs incur a high computational burden. (Bottom left) Parameter-efficient prompt learning offers a non-destructive approach to adapting VLMs to downstream tasks; however, existing methods require annotated samples and struggle to generalize to unseen classes. (Right) Our approach does not require labeled samples and learns by distilling knowledge from a more powerful VLM. It can be seamlessly integrated into existing prompt learning techniques and generalizes better to unseen classes on downstream tasks.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Knowledge Distillation align student prompts with teacher outputs for label-agnostic adaptation?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Given a lightweight CLIP model (the student) and a larger, more powerful CLIP model (the teacher), we aim to improve the downstream performance of the student model by distilling knowledge from teacher to student. For an image x and a set of classes C, we start by performing zero-shot classification using the frozen teacher model. Specifically, we use the teacher image encoder f_t^i and text encoder f_t^t to compute the teacher image features z_t^i and text features z_t^t. … We then apply Eq. 1 to produce the probabilities p_t predicted by the teacher on image x for classes C.",
            "Given the same image x processed by the teacher and the same set of classes C, the student extracts image features z_s^i and text features z_s^t. Note that the text and image encoders can both depend on the prompt parameters θ. … Finally, using Eq. 1 we produce student class probabilities p_s predicted on image x for classes C. Note that all encoder parameters except for the learnable prompt θ are frozen.",
            "We use the symmetric KL-divergence between the teacher (p_t) and the student (p_s) probabilities in a distillation loss: L_KD(θ) = KL(p_t || p_s) + KL(p_s || p_t)."
        ],
        "final_answer": "KDPL aligns the student’s learnable prompts with the teacher’s outputs by performing zero-shot inference with the frozen teacher to obtain a target probability distribution p_t, running the student (with only its prompts unfrozen) to obtain p_s, and then minimizing the symmetric KL-divergence between p_t and p_s. This distillation loss updates only the prompt parameters and requires no ground-truth labels.",
        "relevant_elements": [
            "Knowledge Distillation",
            "Student Prompts",
            "Teacher Outputs"
        ],
        "id": 804,
        "masked_question": "How does [mask1] align [mask2] with teacher outputs for label-agnostic adaptation?",
        "masked_number": 2,
        "masked_elements": [
            "Knowledge Distillation",
            "Student Prompts"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.03056v2_figure_1.png",
        "paperid": "2407.03056v2",
        "paper_path": "./papers/2407.03056v2.json",
        "figure_id": "2407.03056v2_figure_1.png",
        "caption": "Figure 1: Motivation and overview. (Top left) Lightweight VLMs like CLIP achieve impressive zero-shot performance but lag behind supervised approaches; large VLMs incur a high computational burden. (Bottom left) Parameter-efficient prompt learning offers a non-destructive approach to adapting VLMs to downstream tasks; however, existing methods require annotated samples and struggle to generalize to unseen classes. (Right) Our approach does not require labeled samples and learns by distilling knowledge from a more powerful VLM. It can be seamlessly integrated into existing prompt learning techniques and generalizes better to unseen classes on downstream tasks.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does parameter-efficient prompt learning eliminate the need for annotated samples?",
        "relevant_section_ids": [
            "1",
            "3.2"
        ],
        "relevant_context": [
            "To eliminate the need for labeled training examples and improve the generalization of learned prompts, we propose a novel approach to prompt learning which we call Knowledge Distillation Prompt Learning (KDPL). KDPL adapts lightweight VLMs and improves performance on downstream tasks by distilling knowledge from a more powerful VLM without the need for annotated examples.",
            "Our proposed approach, which we call Knowledge Distillation Prompt Learning (KDPL), is a general method designed to enhance the performance of the CLIP model on downstream tasks through parameter-efficient prompt learning. Unlike previous approaches which rely on labeled examples for training, KDPL eliminates the need for manually-labeled samples by learning only through knowledge distillation from a larger and more powerful VLM."
        ],
        "final_answer": "Parameter-efficient prompt learning (KDPL) removes the need for annotated samples by using the outputs of a larger, pre-trained vision-language model (the teacher) as soft labels: it distills the teacher’s zero-shot prediction distributions into the student’s prompt parameters via a symmetric KL-divergence loss, training entirely without ground-truth labels.",
        "relevant_elements": [
            "Parameter-efficient prompt learning",
            "Annotated Samples"
        ],
        "id": 805,
        "masked_question": "How does [mask1] eliminate the need for [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Parameter-efficient prompt learning",
            "Annotated Samples"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.03056v2_figure_1.png",
        "paperid": "2407.03056v2",
        "paper_path": "./papers/2407.03056v2.json",
        "figure_id": "2407.03056v2_figure_1.png",
        "caption": "Figure 1: Motivation and overview. (Top left) Lightweight VLMs like CLIP achieve impressive zero-shot performance but lag behind supervised approaches; large VLMs incur a high computational burden. (Bottom left) Parameter-efficient prompt learning offers a non-destructive approach to adapting VLMs to downstream tasks; however, existing methods require annotated samples and struggle to generalize to unseen classes. (Right) Our approach does not require labeled samples and learns by distilling knowledge from a more powerful VLM. It can be seamlessly integrated into existing prompt learning techniques and generalizes better to unseen classes on downstream tasks.",
        "qtype": "Literature_Background",
        "response": "*   **Step 1: Identify [mask1].** The red box, identified as [mask1], explicitly states \"Parameter-efficient prompt learning via Knowledge Distillation\".\n*   **Step 2: Identify [mask2].** The blue box, identified as [mask2], contains an image of an elephant with the text \"Label: Unknown\". This signifies a scenario where the ground-truth label for an image is not available or is unknown.\n*   **Step 3: Refer to the text for the relationship between the identified masks.**\n    *   The \"Introduction\" section states: \"To eliminate the need for labeled training examples and improve the generalization of learned prompts, we propose a novel approach to prompt learning which we call Knowledge Distillation Prompt Learning (KDPL).\" The red box (Parameter-efficient prompt learning via Knowledge Distillation) is a description of KDPL.\n    *   The caption for Figure 1 (Right) states: \"Our approach [referring to KDPL] does not require labeled samples and learns by distilling knowledge from a more powerful VLM.\"\n    *   The \"Label Agnostic Prompt Learning\" section confirms: \"Our proposed approach, which we call Knowledge Distillation Prompt Learning (KDPL), ... eliminates the need for manually-labeled samples by learning only through knowledge distillation from a larger and more powerful VLM.\"\n\n*   **Step 4: Formulate the answer.** Based on the textual evidence, \"Parameter-efficient prompt learning via Knowledge Distillation\" (KDPL) eliminates the need for \"labeled training examples\" or \"manually-labeled samples,\" which is visually represented by the \"Label: Unknown\" in the blue box.\n\n**Answer:** Parameter-efficient prompt learning via Knowledge Distillation eliminates the need for **labeled training examples**."
    },
    {
        "question": "How does VPT-NSP's null-space mechanism inform orthogonal updating of Wδ within SSM blocks?",
        "relevant_section_ids": [
            "2.2",
            "4.2"
        ],
        "relevant_context": [
            "VPT-NSP [24] theoretically deduces two sufficient consistency conditions to strictly satisfy the orthogonality for prompt tuning, where the null space method [36] is utilized to implement the conditions.",
            "Inspired by the null-space optimization methods [31  ###reference_b31###, 24  ###reference_b24###, 36  ###reference_b36###], the bases of the projection matrices P_A and P_δ should reside in the null space of the corresponding feature subspace extracted from the previous task. As a result, we derive the projectors P_A, P_δ, P_B and P_C to enable that the parameter updates satisfy the conditions in Eq.24. To sum up, we use Eq.26 to perform orthogonal projections for parameter updating."
        ],
        "final_answer": "VPT-NSP uses a null-space projection to enforce that prompt updates lie in the subspace orthogonal to features from earlier tasks.  Analogously, for the SSM’s Wδ parameter, we extract its input-conditioned feature matrix from the previous task, compute its null-space via SVD, build a projector P_δ whose bases are those null-space vectors, and then update Wδ by ΔWδ = P_δ·G^{Wδ}.  This guarantees that every change to Wδ is orthogonal to the old-task feature subspace, preserving consistency.",
        "relevant_elements": [
            "Wδ"
        ],
        "id": 806,
        "masked_question": "How does VPT-NSP's null-space mechanism inform orthogonal updating of [mask1] within SSM blocks?",
        "masked_number": 1,
        "masked_elements": [
            "Wδ"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15469v1_figure_1.png",
        "paperid": "2411.15469v1",
        "paper_path": "./papers/2411.15469v1.json",
        "figure_id": "2411.15469v1_figure_1.png",
        "caption": "Figure 1: Illustration of the proposed Mamba-CL. The backbone contains S𝑆Sitalic_S Mamba blocks. For each Mamba block, we fine-tune the weights 𝐖δ,𝐖B,𝐖Csuperscript𝐖𝛿superscript𝐖𝐵superscript𝐖𝐶{\\mathbf{W}}^{\\delta},{\\mathbf{W}}^{B},{\\mathbf{W}}^{C}bold_W start_POSTSUPERSCRIPT italic_δ end_POSTSUPERSCRIPT , bold_W start_POSTSUPERSCRIPT italic_B end_POSTSUPERSCRIPT , bold_W start_POSTSUPERSCRIPT italic_C end_POSTSUPERSCRIPT and 𝐀𝐀{\\mathbf{A}}bold_A within the SSM (as well as the linear layer after the SSM). To minimize forgetting, we aim to utilize orthogonal projections to keep the output unchanged from SSM after training the t+1𝑡1t+1italic_t + 1-th task.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How could NSCL's orthogonal subspace projection influence updates of A to preserve SSM outputs?",
        "relevant_section_ids": [
            "2.2",
            "4.2"
        ],
        "relevant_context": [
            "Subspace projection methods [36, 31, 21, 42] propose to update parameters in the subspace orthogonal to the previous feature space. Through the orthogonality, the features from old tasks can remain unchanged after learning new tasks, thereby theoretically enhancing the stability of models.",
            "Inspired by the null‐space optimization methods [31, 24, 36], the bases of the projection matrices P^A and P^δ should reside in the null space of H^{1,2,3}. ... To sum up, we use Eq.26 to perform orthogonal projections for parameter updating."
        ],
        "final_answer": "By adopting NSCL’s orthogonal subspace projection, when computing the update ΔA for the SSM’s input‐invariant parameter A, one first forms the feature subspace H^{1,2,3} from all previous tasks’ inputs and then projects ∇A onto the null space of H^{1,2,3}. This enforces ΔA ⟂ H^{1,2,3}, so that the change in A does not affect the SSM’s outputs on old data, thereby preserving past task performance.",
        "relevant_elements": [
            "A"
        ],
        "id": 807,
        "masked_question": "How could NSCL's orthogonal subspace projection influence updates of [mask1] to preserve SSM outputs?",
        "masked_number": 1,
        "masked_elements": [
            "A"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15469v1_figure_1.png",
        "paperid": "2411.15469v1",
        "paper_path": "./papers/2411.15469v1.json",
        "figure_id": "2411.15469v1_figure_1.png",
        "caption": "Figure 1: Illustration of the proposed Mamba-CL. The backbone contains S𝑆Sitalic_S Mamba blocks. For each Mamba block, we fine-tune the weights 𝐖δ,𝐖B,𝐖Csuperscript𝐖𝛿superscript𝐖𝐵superscript𝐖𝐶{\\mathbf{W}}^{\\delta},{\\mathbf{W}}^{B},{\\mathbf{W}}^{C}bold_W start_POSTSUPERSCRIPT italic_δ end_POSTSUPERSCRIPT , bold_W start_POSTSUPERSCRIPT italic_B end_POSTSUPERSCRIPT , bold_W start_POSTSUPERSCRIPT italic_C end_POSTSUPERSCRIPT and 𝐀𝐀{\\mathbf{A}}bold_A within the SSM (as well as the linear layer after the SSM). To minimize forgetting, we aim to utilize orthogonal projections to keep the output unchanged from SSM after training the t+1𝑡1t+1italic_t + 1-th task.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does discretization module δ_t decomposition establish separate consistency constraints for W^δ and W^C during incremental updates?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "As there are two potential variables (i.e., W^δ and W^C) in the single equation Eq.13, it is difficult to solve it directly. Given that δ is a discretization parameter that affects both W^δ and W^C, we first keep δ so that the discretization process remains consistent. Base on that, we can decompose Eq.13 into two consistency conditions for W^δ and W^C:",
            "In this way, we derive the consistency condition for W^δ: W^δ_{t+1} = W^δ_t.",
            "Considering the deduced condition W^δ_{t+1} = W^δ_t given by Eq.13, the consistency term for W^C can be simplified and expanded through the projection layer to yield the separate constraint W^C_{t+1} = W^C_t."
        ],
        "final_answer": "They first fix the discretization module δ across tasks so that the shared discretization process does not change, then decompose the single consistency equation (Eq.13) into two independent requirements: one for W^δ and one for W^C.  Concretely, they show that maintaining r_t = r_{t+1} forces W^δ_{t+1} = W^δ_t, and, under that deduced condition, they similarly derive W^C_{t+1} = W^C_t as the separate consistency constraint for the projection weights.",
        "relevant_elements": [
            "δ_t",
            "W^δ",
            "W^C"
        ],
        "id": 808,
        "masked_question": "How does discretization module [mask1] decomposition establish separate consistency constraints for [mask2] and W^C during incremental updates?",
        "masked_number": 2,
        "masked_elements": [
            "δ_t",
            "W^δ"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15469v1_figure_1.png",
        "paperid": "2411.15469v1",
        "paper_path": "./papers/2411.15469v1.json",
        "figure_id": "2411.15469v1_figure_1.png",
        "caption": "Figure 1: Illustration of the proposed Mamba-CL. The backbone contains S𝑆Sitalic_S Mamba blocks. For each Mamba block, we fine-tune the weights 𝐖δ,𝐖B,𝐖Csuperscript𝐖𝛿superscript𝐖𝐵superscript𝐖𝐶{\\mathbf{W}}^{\\delta},{\\mathbf{W}}^{B},{\\mathbf{W}}^{C}bold_W start_POSTSUPERSCRIPT italic_δ end_POSTSUPERSCRIPT , bold_W start_POSTSUPERSCRIPT italic_B end_POSTSUPERSCRIPT , bold_W start_POSTSUPERSCRIPT italic_C end_POSTSUPERSCRIPT and 𝐀𝐀{\\mathbf{A}}bold_A within the SSM (as well as the linear layer after the SSM). To minimize forgetting, we aim to utilize orthogonal projections to keep the output unchanged from SSM after training the t+1𝑡1t+1italic_t + 1-th task.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does sparse depth guidance integrate depth cues into camera features prior to view transformation?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Sparse Depth Guidance. As shown in Fig. 4, SDG first projects each point of the input LiDAR point clouds into multi-view images, and obtains sparse multi-view depth maps.",
            "Then, they are fed into a shared encoder to extract depth features, which are concatenated with image features to form the depth-aware camera features.",
            "They are used as the input of view transformation, and finally voxel pooling [9] is employed to generate the image 3D feature volume, which is denoted as $F_{I}^{D}, V_I^{D}$."
        ],
        "final_answer": "Sparse depth guidance projects LiDAR points into each camera view to produce sparse depth maps, processes these maps through a shared encoder to extract depth features, and concatenates those depth features with the 2D image features to form depth-aware camera features. These combined features are then used as the input to the view transformation step.",
        "relevant_elements": [
            "SDG",
            "VT"
        ],
        "id": 810,
        "masked_question": "How does [mask1] integrate depth cues into camera features prior to [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "SDG",
            "VT"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.00340v1_figure_1.png",
        "paperid": "2411.00340v1",
        "paper_path": "./papers/2411.00340v1.json",
        "figure_id": "2411.00340v1_figure_1.png",
        "caption": "Figure 1: Comparison between BEVFusion and the proposed GAFusion. (a) In BEVFusion, the camera stream and the LiDAR stream separately generate BEV features, which are then concatenated together. (b) In GAFusion, the camera modality BEV features are generated by multiple guidance from the LiDAR stream, and the receptive fields are enhanced by MSDPT. The BEV features are fused by LGAFT. “VT” is view transformer.",
        "qtype": "Experimental_Results",
        "response": "SDG (Sparse Depth Guidance) integrates depth cues by first projecting each point of the input LiDAR point clouds into multi-view images to obtain sparse multi-view depth maps. These sparse depth maps are then fed into a shared encoder to extract depth features. These extracted depth features are subsequently concatenated with the camera's image features, forming \"depth-aware camera features.\" These depth-aware camera features are then used as the input for the View Transformation (VT)."
    },
    {
        "question": "How does MSDPT enhance camera 3D features for adaptive fusion in LGAFT?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "To effectively aggregate semantic information and enlarge the receptive fields, we improved a multi-scale dual-path transformer (MSDPT), a module inspired by OccFormer [47].",
            "Dual-path transformer (DPT) consists of a local path and a global path, which uses 3D convolution to perform downsampling to obtain features of different scales.",
            "The local path is mainly used to extract fine-grained semantic structures. Since the height direction has less variation in 3D object detection, the local path only slices and processes the 3D feature volume extracted from the multi-view images in parallel along the horizontal direction.",
            "The global path attempts to acquire the semantic layout of the scene accurately. It first obtains BEV features by average pooling along the height dimension, and then interacts with the basic information of the BEV features.",
            "To improve computational efficiency, they both use windowed self-attention [25], and share weights. Finally, the 3D feature volume from the local path merges the sufficient semantic features from the global path. The dual-path outputs are F_local and F_global, the combined output F is computed as: F_local ⊙ sigmoid(FFN(F_global))."
        ],
        "final_answer": "MSDPT enlarges the receptive field of the camera’s 3D feature volume and enriches its semantic content by running two parallel streams over multiple scales: a local path that slices horizontally to capture fine-grained detail and a global path that pools along height to capture scene-level layout. Both paths employ windowed self-attention, and their outputs are adaptively merged (F_local ⊙ sigmoid(FFN(F_global))). The resulting multi-scale, context-enhanced camera features are then used by the LGAFT module to perform adaptive fusion with LiDAR BEV features.",
        "relevant_elements": [
            "MSDPT",
            "LGAFT"
        ],
        "id": 811,
        "masked_question": "How does [mask1] enhance camera 3D features for adaptive fusion in LGAFT?",
        "masked_number": 1,
        "masked_elements": [
            "MSDPT"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.00340v1_figure_1.png",
        "paperid": "2411.00340v1",
        "paper_path": "./papers/2411.00340v1.json",
        "figure_id": "2411.00340v1_figure_1.png",
        "caption": "Figure 1: Comparison between BEVFusion and the proposed GAFusion. (a) In BEVFusion, the camera stream and the LiDAR stream separately generate BEV features, which are then concatenated together. (b) In GAFusion, the camera modality BEV features are generated by multiple guidance from the LiDAR stream, and the receptive fields are enhanced by MSDPT. The BEV features are fused by LGAFT. “VT” is view transformer.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What are potential drawbacks of sparse depth guidance (SDG) under incomplete LiDAR point coverage?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Due to the sparsity and measurement noises of LiDAR point clouds, the depth information of some pixels is inaccurate."
        ],
        "final_answer": "When LiDAR point coverage is incomplete or noisy, SDG can only provide depth at the sparse measured points, causing many pixels to have missing or inaccurate depth estimates.",
        "relevant_elements": [
            "SDG"
        ],
        "id": 812,
        "masked_question": "What are potential drawbacks of sparse depth guidance ([mask1]) under incomplete LiDAR point coverage?",
        "masked_number": 1,
        "masked_elements": [
            "SDG"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.00340v1_figure_1.png",
        "paperid": "2411.00340v1",
        "paper_path": "./papers/2411.00340v1.json",
        "figure_id": "2411.00340v1_figure_1.png",
        "caption": "Figure 1: Comparison between BEVFusion and the proposed GAFusion. (a) In BEVFusion, the camera stream and the LiDAR stream separately generate BEV features, which are then concatenated together. (b) In GAFusion, the camera modality BEV features are generated by multiple guidance from the LiDAR stream, and the receptive fields are enhanced by MSDPT. The BEV features are fused by LGAFT. “VT” is view transformer.",
        "qtype": "Others",
        "response": "The context states that \"SDG first projects each point of the input LiDAR point clouds into multi-view images, and obtains sparse multi-view depth maps.\"\nIt further mentions that \"Due to the sparsity and measurement noises of LiDAR point clouds, the depth information of some pixels is inaccurate. Therefore, LOG is proposed to address the aforementioned drawbacks\".\n\nGiven an incomplete LiDAR point coverage:\n1.  **Limited Depth Information:** Since SDG relies on projecting individual LiDAR points to create sparse depth maps, incomplete LiDAR coverage means that there will be regions in the multi-view images where no LiDAR points are available. Consequently, SDG will not be able to provide any depth information for these areas.\n2.  **Inaccurate or Unreliable Depth Estimation:** Even in areas with some coverage, if the LiDAR points are sparse or noisy (as indicated by the text), the \"depth-aware camera features\" generated"
    },
    {
        "question": "What alternative methods could reduce MSDPT computational cost while maintaining receptive field expansion?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "To improve computational efficiency, they both use windowed self-attention [25], and share weights."
        ],
        "final_answer": "Replacing full self-attention with windowed self-attention and sharing the attention weights between the local and global paths reduces MSDPT’s computational cost while still preserving its ability to expand receptive fields.",
        "relevant_elements": [
            "MSDPT"
        ],
        "id": 813,
        "masked_question": "What alternative methods could reduce [mask1] computational cost while maintaining receptive field expansion?",
        "masked_number": 1,
        "masked_elements": [
            "MSDPT"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.00340v1_figure_1.png",
        "paperid": "2411.00340v1",
        "paper_path": "./papers/2411.00340v1.json",
        "figure_id": "2411.00340v1_figure_1.png",
        "caption": "Figure 1: Comparison between BEVFusion and the proposed GAFusion. (a) In BEVFusion, the camera stream and the LiDAR stream separately generate BEV features, which are then concatenated together. (b) In GAFusion, the camera modality BEV features are generated by multiple guidance from the LiDAR stream, and the receptive fields are enhanced by MSDPT. The BEV features are fused by LGAFT. “VT” is view transformer.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations might pixel selection impose on minority-class learning in the Professional Training Module?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Professional Training Module",
            "pixel selection"
        ],
        "id": 814,
        "masked_question": "What limitations might [mask1] impose on minority-class learning in the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "pixel selection",
            "Professional Training Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.12680v2_figure_1.png",
        "paperid": "2409.12680v2",
        "paper_path": "./papers/2409.12680v2.json",
        "figure_id": "2409.12680v2_figure_1.png",
        "caption": "Figure 1: Overview of our framework. For labeled images, we apply weak augmentation for a labeled image and then feed it into Gen-Student and Pro-Student, supervised by the ground truth. For unlabeled images, we use two different modules: (a) In the professional training module, we apply weak augmentation and strong augmentation to an unlabeled image, feeding them into Gen-Teacher and Pro-Student, respectively, and then use refined pseudo-labels by pixel selection from Gen-Teacher to supervise Pro-Student s prediction. (b) In the general training module, weak and strong augmentations are applied to an unlabeled image, which are then fed into Pro-Teacher and Gen-Student, respectively, followed by the utilization of all pseudo-labels from Pro-Teacher to supervise Gen-Student s prediction. (c) In addition, we introduce a dual contrastive learning to foster distinct decision boundaries in the model, ensuring that it does not solely cater to the majority classes. (d) We evaluate the performance of STPG using Gen-Student.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might memory bank capacity constraints undermine Dual Contrastive Learning’s effectiveness for rare classes?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Dual Contrastive Learning",
            "memory bank"
        ],
        "id": 815,
        "masked_question": "How might [mask1] capacity constraints undermine Dual Contrastive Learning’s effectiveness for rare classes?",
        "masked_number": 1,
        "masked_elements": [
            "memory bank"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.12680v2_figure_1.png",
        "paperid": "2409.12680v2",
        "paper_path": "./papers/2409.12680v2.json",
        "figure_id": "2409.12680v2_figure_1.png",
        "caption": "Figure 1: Overview of our framework. For labeled images, we apply weak augmentation for a labeled image and then feed it into Gen-Student and Pro-Student, supervised by the ground truth. For unlabeled images, we use two different modules: (a) In the professional training module, we apply weak augmentation and strong augmentation to an unlabeled image, feeding them into Gen-Teacher and Pro-Student, respectively, and then use refined pseudo-labels by pixel selection from Gen-Teacher to supervise Pro-Student s prediction. (b) In the general training module, weak and strong augmentations are applied to an unlabeled image, which are then fed into Pro-Teacher and Gen-Student, respectively, followed by the utilization of all pseudo-labels from Pro-Teacher to supervise Gen-Student s prediction. (c) In addition, we introduce a dual contrastive learning to foster distinct decision boundaries in the model, ensuring that it does not solely cater to the majority classes. (d) We evaluate the performance of STPG using Gen-Student.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What advantage does pixel selection bring to refining Gen-Teacher’s pseudo-labels for Pro-Student training?",
        "relevant_section_ids": [
            "1",
            "3.2"
        ],
        "relevant_context": [
            "1: The first module only selects pseudo-labels that are predicted consistently or highly mismatched between a professional student (Pro-Student) and a general teacher (Gen-Teacher), which can learn more minority class information and reduce error accumulation.",
            "3.2: Thus, we propose a pixel selection strategy for producing refined pseudo-labels to improve the performance. The loss is calculated using consistent and highly mismatched pseudo-labels from Gen-Teacher to supervise Pro-Student’s predictions instead of all the pseudo-labels. The minority-class pseudo-labels are approximated with highly mismatched pseudo-labels, based on the observation that minority classes are more likely to be misclassified as other classes."
        ],
        "final_answer": "By selecting only the pixels on which Gen-Teacher and Pro-Student either agree (high-quality) or strongly disagree (likely minority-class), pixel selection produces refined pseudo-labels that focus Pro-Student’s learning on reliable and informative minority-class samples, thereby reducing noisy errors and improving performance.",
        "relevant_elements": [
            "pixel selection",
            "Gen-Teacher’s pseudo-labels",
            "Pro-Student"
        ],
        "id": 816,
        "masked_question": "What advantage does [mask1] bring to refining Gen-Teacher’s pseudo-labels for Pro-Student training?",
        "masked_number": 1,
        "masked_elements": [
            "pixel selection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.12680v2_figure_1.png",
        "paperid": "2409.12680v2",
        "paper_path": "./papers/2409.12680v2.json",
        "figure_id": "2409.12680v2_figure_1.png",
        "caption": "Figure 1: Overview of our framework. For labeled images, we apply weak augmentation for a labeled image and then feed it into Gen-Student and Pro-Student, supervised by the ground truth. For unlabeled images, we use two different modules: (a) In the professional training module, we apply weak augmentation and strong augmentation to an unlabeled image, feeding them into Gen-Teacher and Pro-Student, respectively, and then use refined pseudo-labels by pixel selection from Gen-Teacher to supervise Pro-Student s prediction. (b) In the general training module, weak and strong augmentations are applied to an unlabeled image, which are then fed into Pro-Teacher and Gen-Student, respectively, followed by the utilization of all pseudo-labels from Pro-Teacher to supervise Gen-Student s prediction. (c) In addition, we introduce a dual contrastive learning to foster distinct decision boundaries in the model, ensuring that it does not solely cater to the majority classes. (d) We evaluate the performance of STPG using Gen-Student.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to \"Pixel selection,\" which is a strategy used in the Professional Training Module to refine Gen-Teacher's pseudo-labels for Pro-Student training.\n\nAccording to the \"Professional Training Module\" section in the context:\n1.  \"The traditional learning approach tends to focus on majority classes and is not able to sufficiently learn minority classes.\"\n2.  \"Thus, we propose a pixel selection strategy for producing refined pseudo-labels to improve the performance.\"\n3.  \"The loss is calculated using consistent and highly mismatched pseudo-labels from Gen-Teacher to supervise Pro-Student s predictions instead of all the pseudo-labels.\"\n4.  \"The minority-class pseudo-labels are approximated with highly mismatched pseudo-labels, based on the observation that minority classes are more likely to be misclassified as other classes.\"\n\nAdditionally, from the \"Introduction\" section:\n*   \"The first module [professional training module] only selects"
    },
    {
        "question": "What is the motivation behind performing post-processing with point cloud registration after translation map generation?",
        "relevant_section_ids": [
            "1",
            "4.3"
        ],
        "relevant_context": [
            "However, these methods are sensitive to initialization especially when parts of the point cloud are occluded. Our method provides a reasonable initial guess that can be further refined by these methods.",
            "We can further use point cloud registration methods, e.g. SPR, to refine the estimated mesh by registering the vertices on the predicted mesh to the point clouds constructed from the depth image D. It is observed that the refined mesh is closer to the ground truth than the one without refinement and the one obtained by SPR initializing from a flattened mesh as seen in V-E."
        ],
        "final_answer": "The post-processing step uses classical point cloud registration (e.g. SPR) to refine the diffusion model’s initial mesh estimate—aligning it more precisely to the observed depth data and producing a reconstruction that is closer to the true cloth shape.",
        "relevant_elements": [
            "Post Processing",
            "Point Cloud Registration",
            "Translation Map Generation"
        ],
        "id": 818,
        "masked_question": "What is the motivation behind performing [mask1] after [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Post Processing",
            "Translation Map Generation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.11831v1_figure_1.png",
        "paperid": "2409.11831v1",
        "paper_path": "./papers/2409.11831v1.json",
        "figure_id": "2409.11831v1_figure_1.png",
        "caption": "Figure 1: (a) The workflow of the proposed method. (b) The detailed structure of the translation map generation model. It contains three main components: a MLP time step encoder, a ResNet-based observation encoder and a noise prediction network that uses CNN as backbone and the U-Net as the main structure. (c) An example of the mesh predicted by our method.",
        "qtype": "Design_Rationale",
        "response": "The motivation behind performing \"Post Processing\" after \"Translation Map Generation\" is to transform the estimated cloth mesh from the *canonical space* into the *world frame*.\n\nThe \"Translation Map Generation\" step, specifically the diffusion model, outputs a translation map `x0`, from which the \"Cloth State\" (denoted as `M_c` in the text) is recovered in the *canonical space*. As stated in Section IV-A: \"The final mesh `M_c` estimated in the canonical space is recovered using Eq. 3. Note that this mesh estimate is not yet registered with the mesh in the world frame.\"\n\nTherefore, \"Post Processing\" (Section IV-C) is then performed"
    },
    {
        "question": "What motivates conditioning noise prediction on both timestep embeddings and vision encoder outputs?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "The timestep t is also encoded by a MLP encoder with 2 fully connected layers so that the dimension of time has the same order of magnitude with the encoded observation.",
            "Finally, the outputs of the vision encoder and step encoder are concatenated as a latent vector c to represent the condition in Fig.1(b).",
            "The condition c is passed into each CNN layer of the noise prediction network after further processed by Feature-wise Linear Modulation (FiLM) method [34]."
        ],
        "final_answer": "Conditioning on both timestep embeddings and vision encoder outputs ensures that at each denoising iteration the network knows the current noise level (via the timestep embedding) and has access to the observed depth image (via the vision encoder). Encoding the timestep so that its embedding matches the scale of the visual features and then concatenating them into a single condition vector allows the noise prediction network to modulate its predictions based on both the diffusion step and the observation.",
        "relevant_elements": [
            "Step Encoder",
            "Vision Encoder",
            "Noise Prediction"
        ],
        "id": 819,
        "masked_question": "What motivates conditioning [mask1] on both timestep embeddings and [mask2] outputs?",
        "masked_number": 2,
        "masked_elements": [
            "Noise Prediction",
            "Vision Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.11831v1_figure_1.png",
        "paperid": "2409.11831v1",
        "paper_path": "./papers/2409.11831v1.json",
        "figure_id": "2409.11831v1_figure_1.png",
        "caption": "Figure 1: (a) The workflow of the proposed method. (b) The detailed structure of the translation map generation model. It contains three main components: a MLP time step encoder, a ResNet-based observation encoder and a noise prediction network that uses CNN as backbone and the U-Net as the main structure. (c) An example of the mesh predicted by our method.",
        "qtype": "Design_Rationale",
        "response": "The 'Noise Prediction' network (mask1) is motivated to be conditioned on both timestep embeddings and 'Vision Encoder' (mask2) outputs for the following reasons:\n\n1.  **Conditioning on Timestep Embeddings (from Step Encoder):**\n    *   **Motivation:** Diffusion models operate iteratively, progressively denoising a highly noisy input over a series of timesteps. The amount and characteristics of the noise being predicted vary significantly at each timestep"
    },
    {
        "question": "How does Feature-wise Linear Modulation integrate the condition vector into each CNN layer of the noise prediction network?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "The condition c is passed into each CNN layer of the noise prediction network after further processed by Feature-wise Linear Modulation (FiLM) method [34]."
        ],
        "final_answer": "The condition vector is first processed by the FiLM module to produce modulation parameters, and those parameters are then used to modulate (via feature-wise scaling and shifting) the activations in every CNN layer of the noise prediction network.",
        "relevant_elements": [
            "Feature-wise Linear Modulation",
            "noise prediction network"
        ],
        "id": 820,
        "masked_question": "How does [mask1] integrate the condition vector into each CNN layer of the noise prediction network?",
        "masked_number": 1,
        "masked_elements": [
            "Feature-wise Linear Modulation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.11831v1_figure_1.png",
        "paperid": "2409.11831v1",
        "paper_path": "./papers/2409.11831v1.json",
        "figure_id": "2409.11831v1_figure_1.png",
        "caption": "Figure 1: (a) The workflow of the proposed method. (b) The detailed structure of the translation map generation model. It contains three main components: a MLP time step encoder, a ResNet-based observation encoder and a noise prediction network that uses CNN as backbone and the U-Net as the main structure. (c) An example of the mesh predicted by our method.",
        "qtype": "Implementation_Details",
        "response": "To answer the question, let's break down the process using the provided image and text:\n\n1.  **Identify [mask1]**: [mask1] points to the \"Condition\" input into the \"Noise Prediction\" module in Figure 1 (b).\n2.  **Locate relevant section in text**: Section IV-B, titled \"Translation Map Generation,\" describes the detailed network structure of the diffusion model, which includes the noise prediction network.\n3.  **Trace the \"Condition\" vector**: The text in Section IV-B states: \"Finally, the outputs of the vision encoder and step encoder are concatenated as a latent vector to represent the condition in Fig.1 (b).\" This describes how the condition vector is formed.\n4.  **Find how it's integrated**: The next sentence after describing the noise prediction network (which uses 2D CNNs as backbone) explicitly states: \"The condition is passed into each CNN layer of the noise prediction network after further processed by Feature-wise Linear Modulation (FiLM) method [34].\"\n\nBased on this, the condition vector is integrated using the Feature-wise Linear Modulation (FiLM) method.\n\nThe specific method and details are:\nThe condition vector is processed by the **Feature-wise Linear Modulation (FiLM) method** before being passed into each CNN layer of the noise prediction network."
    },
    {
        "question": "How are timestep embeddings transformed by the MLP time step encoder before conditioning the diffusion model?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "The timestep φ is also encoded by a MLP encoder with 2 fully connected layers so that the dimension of time has the same order of magnitude with the encoded observation.",
            "Finally, the outputs of the vision encoder and step encoder are concatenated as a latent vector c to represent the condition in Fig.1 (b)."
        ],
        "final_answer": "The scalar timestep is passed through a two‐layer MLP (two fully‐connected layers) to produce a time‐step embedding whose dimensionality matches that of the encoded depth observation. This embedding is then concatenated with the vision encoder output to form the conditional input to the diffusion model.",
        "relevant_elements": [
            "MLP time step encoder",
            "timestep embeddings"
        ],
        "id": 821,
        "masked_question": "How are [mask1] transformed by the MLP time step encoder before conditioning the diffusion model?",
        "masked_number": 1,
        "masked_elements": [
            "timestep embeddings"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.11831v1_figure_1.png",
        "paperid": "2409.11831v1",
        "paper_path": "./papers/2409.11831v1.json",
        "figure_id": "2409.11831v1_figure_1.png",
        "caption": "Figure 1: (a) The workflow of the proposed method. (b) The detailed structure of the translation map generation model. It contains three main components: a MLP time step encoder, a ResNet-based observation encoder and a noise prediction network that uses CNN as backbone and the U-Net as the main structure. (c) An example of the mesh predicted by our method.",
        "qtype": "Implementation_Details",
        "response": "The content highlighted by [mask1] is the \"Step Encoder\". This encoder takes the \"timestep\" as its input.\n\nBased on the provided text, the transformation of the timestep by the MLP time step encoder proceeds as follows:\n\"The timestep `t` is also encoded by a MLP encoder with 2 fully connected layers...\" The diagram further details that this MLP encoder uses \"Linear\", \"Mish\", and \"Linear\" layers. This means the timestep is passed through a Linear layer, then a Mish activation function, and finally another Linear layer.\n\nThe purpose of this transformation is to encode the timestep into a representation whose dimension has the same order of magnitude as the encoded observation. The output of this MLP encoder is then concatenated with the output of the vision encoder to form the \"condition\" for the diffusion model.\n\nTherefore, the `timestep` (which is the input to the MLP time step encoder) is transformed by being passed through a series of operations: a linear layer, followed by a Mish activation function, and then another linear layer."
    },
    {
        "question": "How does the mask generator convert probability matrices into binary mask matrices?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Sigmoid function σ projects the values to probabilities.",
            "Since our goal is to filter out the adverse effects of irrelevant channels, we further perform Bernoulli resampling on the probability matrices to obtain binary mask matrix M^i with the same shape.",
            "To ensure the propagation of gradients, we use the Gumbel Softmax reparameterization trick (Jang et al., 2016) during Bernoulli resampling."
        ],
        "final_answer": "The mask generator first applies a sigmoid to its linear outputs to form a probability matrix, then performs Bernoulli resampling on each entry (using the Gumbel-Softmax trick to maintain gradients) to yield a binary mask matrix.",
        "relevant_elements": [
            "Mask Generator",
            "Probability Matrix"
        ],
        "id": 822,
        "masked_question": "How does the [mask1] convert [mask2] into binary mask matrices?",
        "masked_number": 2,
        "masked_elements": [
            "Mask Generator",
            "Probability Matrix"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.12261v1_figure_2.png",
        "paperid": "2410.12261v1",
        "paper_path": "./papers/2410.12261v1.json",
        "figure_id": "2410.12261v1_figure_2.png",
        "caption": "Figure 2: CATCH architecture. (1) Forward Module normalizes the input data, patchifies the frequency domain, and then projects it into the hidden space. (2) Channel Fusion Module captures channel interrelationships in each frequency band with a Channel-Masked Transformer (CMT) Layer, where the mask matrix (channel correlation) is generated by Mask Generator (MG). During backpropagation, MG is optimized by Channel Correlation Discovering mechanism for more appropriate channel correlations. (3) Time-Frequency Reconstruction Module obtains the frequency reconstruction through Flatten & Linear Head, and obtains the time reconstruction after iFFT.",
        "qtype": "Implementation_Details",
        "response": "The Mask Generator (MG) [mask1] converts the Probability Matrix $\\mathcal{D}$ [mask2] into binary mask matrices by performing Bernoulli resampling on the probability matrices. To ensure the propagation of gradients during this binarization process, the Gumbel Softmax reparameterization trick is utilized. Higher probabilities in the Probability Matrix $\\mathcal{D}$ lead to values closer to 1 in the resulting binary mask matrix, indicating a relationship between channels. Furthermore, the diagonal items of the binary mask matrix are manually set to 1."
    },
    {
        "question": "How does the Channel-Masked Transformer Layer apply mask matrices to attention matrices?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "After the patch-wise mask generator outputs the mask matrices for frequency bands, we utilize the transformer layer to further capture the fine-grained channel correlations.",
            "Empirically, we utilize the masked attention mechanism to further model the fine-grained interrelationships among relevant channels and integrate the mask in a calculated way to keep the propagation of gradients:"
        ],
        "final_answer": "The Channel-Masked Transformer Layer takes the binary mask matrices produced by the patch-wise mask generator and applies them element-wise to the softmax-normalized attention matrix. In other words, after computing the attention scores and normalizing them with softmax, each entry in that attention matrix is multiplied by the corresponding entry in the mask matrix, zeroing out connections between channels deemed irrelevant while preserving gradient flow for the relevant ones.",
        "relevant_elements": [
            "Channel-Masked Transformer Layer",
            "Mask Matrix",
            "Attention Matrix"
        ],
        "id": 823,
        "masked_question": "How does the [mask1] apply mask matrices to attention matrices?",
        "masked_number": 1,
        "masked_elements": [
            "Channel-Masked Transformer Layer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.12261v1_figure_2.png",
        "paperid": "2410.12261v1",
        "paper_path": "./papers/2410.12261v1.json",
        "figure_id": "2410.12261v1_figure_2.png",
        "caption": "Figure 2: CATCH architecture. (1) Forward Module normalizes the input data, patchifies the frequency domain, and then projects it into the hidden space. (2) Channel Fusion Module captures channel interrelationships in each frequency band with a Channel-Masked Transformer (CMT) Layer, where the mask matrix (channel correlation) is generated by Mask Generator (MG). During backpropagation, MG is optimized by Channel Correlation Discovering mechanism for more appropriate channel correlations. (3) Time-Frequency Reconstruction Module obtains the frequency reconstruction through Flatten & Linear Head, and obtains the time reconstruction after iFFT.",
        "qtype": "Implementation_Details",
        "response": "The Channel-Masked Transformer Layer (CMT) applies the mask matrices to attention matrices through element-wise multiplication before the softmax operation.\n\nSpecifically, as described in the \"Channel-Masked Transformer Layer\" section and shown in the formula:\n`Attention(Q, K, V)`\n`A = softmax((QK_T * M) / sqrt(d_k))`\n`Output = A * V`\n\nHere's a breakdown:\n1.  The Query (Q) and Key (K) matrices are multiplied (`QK_T`) to produce the raw attention scores between channels.\n2.  This raw attention score matrix (`QK_T`) is then **element-wise multiplied** by the binary mask matrix `M`. This multiplication effectively filters or weighs the attention scores based on the relationships defined by the mask (where `M` has 0s for irrelevant pairs and 1s for relevant pairs).\n3.  This masked attention score matrix is then scaled by `sqrt(d_k)`.\n4.  Finally, the `softmax` function is applied to normalize these scores to obtain the final attention matrix `A`, which is then used to compute the `Output` by multiplying with the Value (V) matrix.\n\nThe mask matrix `M` is generated by the \"Patch-wise Mask Generator\" and is a binary matrix where higher probability values from the probability matrix lead to `M` values closer to 1, indicating a relationship between channels. The diagonal items of `M` are manually kept at 1."
    },
    {
        "question": "How does FFT & patching leverage vision transformer patch embedding for fine-grained frequency representation?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "In the Forward Module, we first apply the Instance Normalization … To model time series in both time and frequency domains, we then utilize the efficient FFT (Brigham & Morrow, 1967) to transform time series into orthogonal trigonometric signals in the frequency domain, where we keep both the real and imaginary (imag) parts through F(x)=[Re(x); Im(x)] for maximum information retention. Additionally, to capture fine-grained details in different frequency bands, we apply the patching operation in the frequency domain, the process is formalized as follows:\n\n   P^{R,i}_{:,k}=F_{:,(k-1)·s+1:(k-1)·s+w},\n   P^{I,i}_{:,k}=F_{:,(k-1)·s+1:(k-1)·s+w},\n\n   where each P^{R,i} and P^{I,i} ∈ ℝ^{N×p}, p=w and s is the stride.",
            "We then concat each pair of P^{R,i} and P^{I,i} into P^{i} as the i-th frequency patch. After patching in the frequency domain, the frequency patches are then projected into the high-dimensional hidden space through a learnable linear layer E:\n\n   P^{i}∈ℝ^{N×2p},    X^{i}=P^{i}E,    E∈ℝ^{2p×d}."
        ],
        "final_answer": "After converting the multivariate series into real and imaginary frequency coefficients via FFT, CATCH splits the spectrum of each channel into overlapping ‘frequency patches’ of size w (stride s), concatenates the real and imaginary parts of each patch into a 2p-length vector, and then linearly projects each patch with a learnable matrix E (ℝ^{2p×d}). This patch + linear-projection step directly mirrors the patch embedding used in Vision Transformers, yielding fine-grained, per-band frequency representations for downstream attention and reconstruction.",
        "relevant_elements": [
            "FFT & Patching",
            "Forward Module"
        ],
        "id": 824,
        "masked_question": "How does [mask1] leverage vision transformer patch embedding for fine-grained frequency representation?",
        "masked_number": 1,
        "masked_elements": [
            "FFT & Patching"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.12261v1_figure_2.png",
        "paperid": "2410.12261v1",
        "paper_path": "./papers/2410.12261v1.json",
        "figure_id": "2410.12261v1_figure_2.png",
        "caption": "Figure 2: CATCH architecture. (1) Forward Module normalizes the input data, patchifies the frequency domain, and then projects it into the hidden space. (2) Channel Fusion Module captures channel interrelationships in each frequency band with a Channel-Masked Transformer (CMT) Layer, where the mask matrix (channel correlation) is generated by Mask Generator (MG). During backpropagation, MG is optimized by Channel Correlation Discovering mechanism for more appropriate channel correlations. (3) Time-Frequency Reconstruction Module obtains the frequency reconstruction through Flatten & Linear Head, and obtains the time reconstruction after iFFT.",
        "qtype": "Literature_Background",
        "response": "The \"[mask1]\" component, labeled \"FFT & Patching,\" leverages a concept analogous to vision transformer patch embedding for fine-grained frequency representation as follows:\n\n1.  **FFT for Frequency Domain Transformation:** First, it applies the Fast Fourier Transform (FFT) to the input time series. This converts the time-domain signal into its frequency-domain representation, preserving both the real and imaginary components.\n2.  **Patching in Frequency Domain:** To achieve fine-grained details in different frequency bands, a patching operation is then applied to this frequency-domain representation. This operation divides the frequency spectrum into smaller, overlapping or non-overlapping segments (patches).\n3.  **Concatenation and Projection:** Each pair of real and imaginary parts for a given patch is concatenated to form a frequency patch. These frequency patches are then projected into a high-dimensional hidden space.\n\nBy applying patching to the frequency domain (instead of the time domain or an image), the model can capture and process localized, fine-grained information within specific frequency bands, analogous to how vision transformers process local regions (patches) of an image. This enables the model to understand detailed patterns and relationships across different frequency components."
    },
    {
        "question": "How does Mask Generator integrate Gumbel Softmax to trade off between CI and CD channel strategies?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Note that the binary mask is an intermediate state between CI (identity matrix) and CD (all-ones matrix) strategies.",
            "Since our goal is to filter out the adverse effects of irrelevant channels, we further perform Bernoulli resampling on the probability matrices to obtain binary mask matrix M with the same shape.",
            "To ensure the propagation of gradients, we use the Gumbel Softmax reparameterization trick (Jang et al., 2016) during Bernoulli resampling."
        ],
        "final_answer": "The Mask Generator first projects each patch’s features into a probability matrix via a sigmoid. It then samples a binary mask from these probabilities—lying between the identity (CI) and all-ones (CD) extremes—by performing Bernoulli resampling with the Gumbel Softmax reparameterization trick, thereby enabling a differentiable trade-off between CI and CD strategies.",
        "relevant_elements": [
            "Mask Generator"
        ],
        "id": 825,
        "masked_question": "How does [mask1] integrate Gumbel Softmax to trade off between CI and CD channel strategies?",
        "masked_number": 1,
        "masked_elements": [
            "Mask Generator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.12261v1_figure_2.png",
        "paperid": "2410.12261v1",
        "paper_path": "./papers/2410.12261v1.json",
        "figure_id": "2410.12261v1_figure_2.png",
        "caption": "Figure 2: CATCH architecture. (1) Forward Module normalizes the input data, patchifies the frequency domain, and then projects it into the hidden space. (2) Channel Fusion Module captures channel interrelationships in each frequency band with a Channel-Masked Transformer (CMT) Layer, where the mask matrix (channel correlation) is generated by Mask Generator (MG). During backpropagation, MG is optimized by Channel Correlation Discovering mechanism for more appropriate channel correlations. (3) Time-Frequency Reconstruction Module obtains the frequency reconstruction through Flatten & Linear Head, and obtains the time reconstruction after iFFT.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does the distilled diffusion model interact with the precision-optimized noise predictor to reduce reconstruction steps?",
        "relevant_section_ids": [
            "4.2",
            "4.3"
        ],
        "relevant_context": [
            "Section 4.2: \"To address this inefficiency, we employ a multi-sampling strategy within our framework by integrating a distilled diffusion model. ... By doing so, we optimize the reconstruction process in our attack framework, condensing it to just 1 to 4 steps. ... We replace the recursive application of one-step estimates with a single-step prediction using a distilled diffusion model.\"",
            "Section 4.3: \"To enhance the robustness of our adversarial attack, we finally use z̄ as the input for the distilled diffusion model regularized by precision optimized noise predictor. The final output, z̃, is designed to exhibit increased robustness.\""
        ],
        "final_answer": "The distilled diffusion model is fed the latent estimate refined by the precision-optimized noise predictor (which applies pairwise correlation and patch-wise KL losses to regularize the noise). By taking this regularized latent code as input, the distilled model can perform the full reverse diffusion reconstruction in just one to four steps instead of many recursive iterations, thus greatly reducing reconstruction time while maintaining adversarial quality.",
        "relevant_elements": [
            "distilled diffusion model",
            "precision-optimized noise predictor"
        ],
        "id": 826,
        "masked_question": "How does the distilled diffusion model interact with the [mask1] to reduce reconstruction steps?",
        "masked_number": 1,
        "masked_elements": [
            "precision-optimized noise predictor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.14089v1_figure_2.png",
        "paperid": "2410.14089v1",
        "paper_path": "./papers/2410.14089v1.json",
        "figure_id": "2410.14089v1_figure_2.png",
        "caption": "Figure 2: Overview of MMAD-Purify. In the MMAD-Purify framework, the input image is first processed through an encoder. It then enters the first distillated DM pipeline, where a precision-optimized noise predictor is applied. The resulting latents of the input image, combined with latents of other modalities, form a multi-modal representation. This multi-modal representation is then passed through a target classifier to generate perturbations, which are added back to the input image. This process is iteratively repeated, ultimately generating the adversarial example, 𝐱a⁢d⁢vsubscript𝐱𝑎𝑑𝑣\\mathbf{x}_{adv}bold_x start_POSTSUBSCRIPT italic_a italic_d italic_v end_POSTSUBSCRIPT. After purification, the final 𝐱a⁢d⁢vpsuperscriptsubscript𝐱𝑎𝑑𝑣𝑝\\mathbf{x}_{adv}^{p}bold_x start_POSTSUBSCRIPT italic_a italic_d italic_v end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_p end_POSTSUPERSCRIPT has a different label from the generated image, demonstrating successful adversarial attack.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does the precision-optimized noise predictor interact with the distilled diffusion model to improve computational efficiency?",
        "relevant_section_ids": [
            "4.2",
            "4.3"
        ],
        "relevant_context": [
            "This replacement reduces the reconstruction process from multiple recursive steps to a single prediction operation, greatly improving computational efficiency.",
            "To enhance the robustness of our adversarial attack, we finally use z_N as the input for the distilled diffusion model regularized by precision optimized noise predictor. The final output, z_0, is designed to exhibit increased robustness."
        ],
        "final_answer": "The precision-optimized noise predictor first refines and regularizes the noise estimate to produce a single latent state z_N. Instead of running a full multi-step PF-ODE solver, this one refined latent vector is then passed through a distilled diffusion model that performs the entire reconstruction in one (or very few) steps. By combining the precision noise regularization with a distilled, single-step sampler, the method collapses the usual iterative diffusion pipeline into a single fast prediction, greatly improving computational efficiency.",
        "relevant_elements": [
            "Precision-optimized noise predictor",
            "Distilled diffusion model"
        ],
        "id": 828,
        "masked_question": "How does the [mask1] interact with the [mask2] to improve computational efficiency?",
        "masked_number": 2,
        "masked_elements": [
            "Precision-optimized noise predictor",
            "Distilled diffusion model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.14089v1_figure_2.png",
        "paperid": "2410.14089v1",
        "paper_path": "./papers/2410.14089v1.json",
        "figure_id": "2410.14089v1_figure_2.png",
        "caption": "Figure 2: Overview of MMAD-Purify. In the MMAD-Purify framework, the input image is first processed through an encoder. It then enters the first distillated DM pipeline, where a precision-optimized noise predictor is applied. The resulting latents of the input image, combined with latents of other modalities, form a multi-modal representation. This multi-modal representation is then passed through a target classifier to generate perturbations, which are added back to the input image. This process is iteratively repeated, ultimately generating the adversarial example, 𝐱a⁢d⁢vsubscript𝐱𝑎𝑑𝑣\\mathbf{x}_{adv}bold_x start_POSTSUBSCRIPT italic_a italic_d italic_v end_POSTSUBSCRIPT. After purification, the final 𝐱a⁢d⁢vpsuperscriptsubscript𝐱𝑎𝑑𝑣𝑝\\mathbf{x}_{adv}^{p}bold_x start_POSTSUBSCRIPT italic_a italic_d italic_v end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_p end_POSTSUPERSCRIPT has a different label from the generated image, demonstrating successful adversarial attack.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does multi-modal representation influence perturbation generation during each iteration of adversarial sample process?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Multi-modal representation",
            "Perturbation"
        ],
        "id": 829,
        "masked_question": "How does multi-modal representation influence [mask1] generation during each iteration of adversarial sample process?",
        "masked_number": 1,
        "masked_elements": [
            "Perturbation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.14089v1_figure_2.png",
        "paperid": "2410.14089v1",
        "paper_path": "./papers/2410.14089v1.json",
        "figure_id": "2410.14089v1_figure_2.png",
        "caption": "Figure 2: Overview of MMAD-Purify. In the MMAD-Purify framework, the input image is first processed through an encoder. It then enters the first distillated DM pipeline, where a precision-optimized noise predictor is applied. The resulting latents of the input image, combined with latents of other modalities, form a multi-modal representation. This multi-modal representation is then passed through a target classifier to generate perturbations, which are added back to the input image. This process is iteratively repeated, ultimately generating the adversarial example, 𝐱a⁢d⁢vsubscript𝐱𝑎𝑑𝑣\\mathbf{x}_{adv}bold_x start_POSTSUBSCRIPT italic_a italic_d italic_v end_POSTSUBSCRIPT. After purification, the final 𝐱a⁢d⁢vpsuperscriptsubscript𝐱𝑎𝑑𝑣𝑝\\mathbf{x}_{adv}^{p}bold_x start_POSTSUBSCRIPT italic_a italic_d italic_v end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_p end_POSTSUPERSCRIPT has a different label from the generated image, demonstrating successful adversarial attack.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does iterative jailbreaking with competing objectives refine synthetic prompts targeting Arab stereotypes?",
        "relevant_section_ids": [
            "3.2.x"
        ],
        "relevant_context": [
            "Phase 4: Jailbreaking ChatGPT via Iterative AIM and Competing Objectives At this stage, we have already succeeded in getting the model to generate harmful content. The next step involves creating synthetic prompts that can manipulate other LLMs into producing similar content. This process is iterative. First, we instruct the model to generate a prompt designed to elicit harmful ideas from another LLM (such as explaining how to build a bomb), while maintaining the previous context. We then test this synthetic prompt on a separate (test) LLM to see if it bypasses its safety mechanisms. If the test model does not generate harmful content, we provide the original model with the synthetic prompt and the test LLM’s response, indicating that the attempt failed, and instruct it to try again. This cycle continues until the original model creates a synthetic prompt capable of bypassing the test LLM’s safeguards. At that point, the prompt is likely to work on other LLMs as well.",
            "Phase 5: Intensifying Negative Stereotypes Towards Arabs Using AIM In the final phase, the model is instructed to create prompts that specifically target biases and stereotypes about Arabs. We apply the same iterative method to generate synthetic prompts that evoke stereotypes about Arabs, ensuring they align with our predefined categories. This process can be fully automated and has been used to generate synthetic prompts across all our targeted categories."
        ],
        "final_answer": "By repeatedly generating candidate prompts, testing them on a separate LLM, and feeding back failures, the model progressively reshapes its output until each synthetic prompt reliably bypasses safety filters. Once that iterative loop is mastered, the same procedure is applied specifically to Arab‐related content—prompt after prompt is automatically refined until it effectively evokes and intensifies the predefined stereotypes about Arabs while still fooling the target models’ safety mechanisms.",
        "relevant_elements": [
            "Phase 4: Jailbreak iterative AIM + Competing Objective",
            "Phase 5: Generate Biased Content"
        ],
        "id": 830,
        "masked_question": "How does [mask1] refine synthetic prompts targeting Arab stereotypes?",
        "masked_number": 1,
        "masked_elements": [
            "Phase 4: Jailbreak iterative AIM + Competing Objective"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.24049v3_figure_2.png",
        "paperid": "2410.24049v3",
        "paper_path": "./papers/2410.24049v3.json",
        "figure_id": "2410.24049v3_figure_2.png",
        "caption": "Figure 2: Pipeline for generating Red Teaming prompts to detect biases against Arabs. The process begins with semi-automatic AIM Chu et al. (2024) prompt generalization, Step 1, where we jailbreak ChatGPT to create 10 prompts for each of the eight categories described in Section 3.1. Step 2, we apply few-shot learning to automatically generate 100 prompts for each category. Step 3, the generated prompts are passed to six target models (Section 4.1), and the models’ responses are evaluated by the classifier (Section 4.2).",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does few-shot learning improve prompt diversity and maintain category coverage across eight stereotypes?",
        "relevant_section_ids": [
            "3.2.x"
        ],
        "relevant_context": [
            "After generating ten AIM prompts using the semi-automatic method described in Section 3.2, we expanded the dataset using GPT-4 through few-shot learning.",
            "Each newly generated prompt was iteratively fed back into the model to ensure novelty and minimize repetition. GPT-4 was tasked with generating five prompts at a time. This process allowed for diverse outputs across categories.",
            "The method efficiently produced 100 unique prompts per category without requiring specialized tokens or additional fine-tuning. Post-processing was applied to remove duplicates and ensure the dataset’s diversity."
        ],
        "final_answer": "Few-shot learning improves prompt diversity by having GPT-4 generate prompts in small batches (five at a time), then feeding each batch back into the model to enforce novelty and avoid repetition, followed by post-processing to remove any duplicates. Category coverage across all eight stereotypes is maintained by specifying the target category in each few-shot prompt, resulting in 100 unique, diverse prompts for each stereotype.",
        "relevant_elements": [
            "Step 2: Few Shot Learning"
        ],
        "id": 831,
        "masked_question": "How does [mask1] improve prompt diversity and maintain category coverage across eight stereotypes?",
        "masked_number": 1,
        "masked_elements": [
            "Step 2: Few Shot Learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.24049v3_figure_2.png",
        "paperid": "2410.24049v3",
        "paper_path": "./papers/2410.24049v3.json",
        "figure_id": "2410.24049v3_figure_2.png",
        "caption": "Figure 2: Pipeline for generating Red Teaming prompts to detect biases against Arabs. The process begins with semi-automatic AIM Chu et al. (2024) prompt generalization, Step 1, where we jailbreak ChatGPT to create 10 prompts for each of the eight categories described in Section 3.1. Step 2, we apply few-shot learning to automatically generate 100 prompts for each category. Step 3, the generated prompts are passed to six target models (Section 4.1), and the models’ responses are evaluated by the classifier (Section 4.2).",
        "qtype": "Experimental_Results",
        "response": "Step 2: Few Shot Learning improves prompt diversity and maintains category coverage across eight stereotypes through the following mechanisms:\n\n1.  **Prompt Diversity:**\n    *   **Iterative Feedback:** Newly generated prompts are \"iteratively fed back into the model to ensure novelty and minimize repetition,\" preventing the generation of redundant content.\n    *   **Batch Generation:** GPT-4 is instructed to generate \"five prompts at a time,\" which is a process designed"
    },
    {
        "question": "What ethical safeguards could enhance Semi-Automatic AIM Prompt Generation to prevent harmful prompt proliferation?",
        "relevant_section_ids": [
            "7"
        ],
        "relevant_context": [
            "From an ethical standpoint, the intentional creation of jailbreak prompts that could propagate harmful stereotypes requires careful consideration.",
            "Future research should incorporate thorough ethical reviews, sensitivity analyses, and involve diverse research teams and stakeholders to mitigate risks.",
            "Our findings should inform improvements to LLMs’ unsafe content classifiers to ensure they effectively prevent harmful content generation.",
            "Expanding model diversity, improving transparency, and developing better bias detection tools will be essential for advancing ethical AI systems."
        ],
        "final_answer": "To prevent harmful prompt proliferation during Semi-Automatic AIM Prompt Generation, the paper recommends: conducting thorough ethical reviews of the prompt-generation process; performing sensitivity analyses to identify and mitigate risks; involving diverse research teams and external stakeholders to oversee and guide prompt design; improving LLM unsafe-content classifiers to catch and block harmful outputs; expanding the diversity of models and datasets; increasing transparency around prompt development; and developing more robust bias-detection tools.",
        "relevant_elements": [
            "Semi-Automatic AIM Prompt Generation"
        ],
        "id": 832,
        "masked_question": "What ethical safeguards could enhance [mask1] to prevent harmful prompt proliferation?",
        "masked_number": 1,
        "masked_elements": [
            "Semi-Automatic AIM Prompt Generation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.24049v3_figure_2.png",
        "paperid": "2410.24049v3",
        "paper_path": "./papers/2410.24049v3.json",
        "figure_id": "2410.24049v3_figure_2.png",
        "caption": "Figure 2: Pipeline for generating Red Teaming prompts to detect biases against Arabs. The process begins with semi-automatic AIM Chu et al. (2024) prompt generalization, Step 1, where we jailbreak ChatGPT to create 10 prompts for each of the eight categories described in Section 3.1. Step 2, we apply few-shot learning to automatically generate 100 prompts for each category. Step 3, the generated prompts are passed to six target models (Section 4.1), and the models’ responses are evaluated by the classifier (Section 4.2).",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might Few-Shot Learning risk reinforcing stereotypes due to limited prompt diversity?",
        "relevant_section_ids": [
            "3.2.x",
            "7"
        ],
        "relevant_context": [
            "After generating ten AIM prompts using the semi-automatic method described in Section 3.2, we expanded the dataset using GPT-4 through few-shot learning. Each newly generated prompt was iteratively fed back into the model to ensure novelty and minimize repetition. GPT-4 was tasked with generating five prompts at a time. This process allowed for diverse outputs across categories. The method efficiently produced 100 unique prompts per category without requiring specialized tokens or additional fine-tuning. Post-processing was applied to remove duplicates and ensure the dataset’s diversity.",
            "Our use of few-shot learning for prompt generation, though effective, involved a selective process that could introduce bias due to the iterative nature of identifying high-performing prompts during semi-automatic generation (see Step 1 in Section 3.2)."
        ],
        "final_answer": "Few‐shot learning relies on a small set of exemplar prompts to bootstrap new queries. If those seed prompts are not sufficiently varied, the model may repeatedly echo the same patterns and biases. In practice, the iterative selection of high‐performing examples can narrow the prompt distribution and inadvertently reinforce stereotypes, since there are too few distinct contexts to break existing prejudices.",
        "relevant_elements": [
            "Few-Shot Learning"
        ],
        "id": 833,
        "masked_question": "How might [mask1] risk reinforcing stereotypes due to limited prompt diversity?",
        "masked_number": 1,
        "masked_elements": [
            "Few-Shot Learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.24049v3_figure_2.png",
        "paperid": "2410.24049v3",
        "paper_path": "./papers/2410.24049v3.json",
        "figure_id": "2410.24049v3_figure_2.png",
        "caption": "Figure 2: Pipeline for generating Red Teaming prompts to detect biases against Arabs. The process begins with semi-automatic AIM Chu et al. (2024) prompt generalization, Step 1, where we jailbreak ChatGPT to create 10 prompts for each of the eight categories described in Section 3.1. Step 2, we apply few-shot learning to automatically generate 100 prompts for each category. Step 3, the generated prompts are passed to six target models (Section 4.1), and the models’ responses are evaluated by the classifier (Section 4.2).",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What potential biases arise from hierarchical latent spaces when reverse optimizing surrogate predictions?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "hierarchical latent spaces",
            "reverse optimize",
            "surrogate model"
        ],
        "id": 834,
        "masked_question": "What potential biases arise from [mask1] when reverse optimizing surrogate predictions?",
        "masked_number": 1,
        "masked_elements": [
            "hierarchical latent spaces"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.11226v1_figure_1.png",
        "paperid": "2410.11226v1",
        "paper_path": "./papers/2410.11226v1.json",
        "figure_id": "2410.11226v1_figure_1.png",
        "caption": "Figure 1: Overview of Multi-Fidelity Latent space Active Learning (MF-LAL).",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might Bayesian active learning thresholds affect the diversity of generated molecules across fidelities?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "Section 3.2: “Specifically, during active learning, we repeatedly generate a latent vector z^{(i)} at fidelity f_i that decodes to a query compound. If Var[f_i](z^{(i)}) < τ, where τ is the uncertainty threshold, then we permanently increment i by one for all subsequent queries. Otherwise, i remains the same.”",
            "Section 3.3: “This additional term greatly restricts the area of the chemical space explored by the high fidelity oracles, reducing the computational cost wasted on non-promising areas and making the use of high-cost oracles feasible. It also means the higher fidelity latent spaces encode a more limited distribution of compounds, improving the quality of samples generated from those latent spaces.”"
        ],
        "final_answer": "Because the threshold τ in the Bayesian active learning loop governs when the model moves from a lower‐ to a higher‐fidelity latent space, a stricter (lower) threshold will trigger an earlier transition into the more restricted high‐fidelity space—yielding less structural diversity—whereas a more lenient (higher) threshold keeps the model longer in the broader low‐fidelity space, allowing greater diversity of generated compounds at that level.",
        "relevant_elements": [
            "Bayesian active learning",
            "generate molecules",
            "fidelities"
        ],
        "id": 835,
        "masked_question": "How might [mask1] thresholds affect the diversity of [mask2] across fidelities?",
        "masked_number": 2,
        "masked_elements": [
            "Bayesian active learning",
            "generate molecules"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.11226v1_figure_1.png",
        "paperid": "2410.11226v1",
        "paper_path": "./papers/2410.11226v1.json",
        "figure_id": "2410.11226v1_figure_1.png",
        "caption": "Figure 1: Overview of Multi-Fidelity Latent space Active Learning (MF-LAL).",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates separate hierarchical latent spaces for each fidelity level instead of a shared latent representation?",
        "relevant_section_ids": [
            "1",
            "3.1"
        ],
        "relevant_context": [
            "Instead of separating the generative model and surrogate model, we perform surrogate modeling and generation together at each fidelity level using a sequence of hierarchical latent spaces. This improves the quality of generated queries because there is a separate latent space and decoder specialized for each fidelity, and improves surrogate modeling and inter-fidelity information passing because each latent space can be organized for predicting at just that level.",
            "Note that G_θ^{(1:K)}≠G^{(1)}=…=G^{(K)}, meaning we must learn separate generative models for each fidelity level, as opposed to previous approaches that learn a single generative model for all fidelities.",
            "The use of a specialized decoder for each fidelity level improves reconstruction quality compared to previous methods that only use one, thus making the generated samples more tailored for their fidelity level.",
            "Additionally, the use of separate latent spaces for each fidelity level, as opposed to previous approaches that use only a single latent space shared across all levels, improves surrogate modeling performance because each latent space can be organized for prediction at just that level."
        ],
        "final_answer": "Separate hierarchical latent spaces are motivated by the need to tailor both generation and surrogate modeling to each fidelity. A dedicated latent space and decoder at each fidelity improve reconstruction quality and ensure generated compounds are specialized for that fidelity. Moreover, organizing each latent space around predictions at a single fidelity enhances surrogate accuracy and enables more efficient passing of learned information from lower to higher fidelities, advantages not achievable with a single shared latent representation.",
        "relevant_elements": [
            "Multi-fidelity latent representation",
            "hierarchical latent spaces"
        ],
        "id": 836,
        "masked_question": "What motivates separate [mask1] for each fidelity level instead of a shared latent representation?",
        "masked_number": 1,
        "masked_elements": [
            "hierarchical latent spaces"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.11226v1_figure_1.png",
        "paperid": "2410.11226v1",
        "paper_path": "./papers/2410.11226v1.json",
        "figure_id": "2410.11226v1_figure_1.png",
        "caption": "Figure 1: Overview of Multi-Fidelity Latent space Active Learning (MF-LAL).",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to **latent representations**.\n\nThe motivation for using separate latent representations for each fidelity level instead of a shared latent representation is explicitly stated in the text:\n\n1.  \"This improves the quality of generated queries because there is a separate latent space and decoder specialized for each fidelity, and improves surrogate modeling and inter-fidelity information passing because each latent space can be organized for predicting at just that level.\"\n2.  \"Additionally, the use of separate latent spaces for each fidelity level, as opposed to previous approaches that use only a single latent space shared across all levels, improves surrogate modeling performance because each latent space can be organized for prediction at just that level.\"\n3.  Regarding the likelihood term for generation, it also states: \"It also means the higher fidelity latent spaces encode a more limited distribution of compounds, improving the quality of samples generated from those latent spaces.\"\n\nIn essence, separate latent representations allow each latent space to be optimized and organized specifically for prediction at its corresponding fidelity level, thereby improving surrogate modeling performance, the quality of generated queries, and the quality of generated samples."
    },
    {
        "question": "What motivates combining reverse optimization with surrogate prediction into a unified framework?",
        "relevant_section_ids": [
            "1"
        ],
        "relevant_context": [
            "However, since we want to generate query compounds to send to oracles at multiple fidelity levels, the distribution of optimal query compounds may differ across fidelities. A separate generative model is not aware of such differences across fidelity levels, hence it cannot send queries to the multi-fidelity oracles efficiently.",
            "Instead of separating the generative model and surrogate model, we perform surrogate modeling and generation together at each fidelity level using a sequence of hierarchical latent spaces. This improves the quality of generated queries because there is a separate latent space and decoder specialized for each fidelity, and improves surrogate modeling and inter-fidelity information passing because each latent space can be organized for predicting at just that level."
        ],
        "final_answer": "Because optimal query molecules differ by fidelity and a standalone generative model cannot account for those differences, the authors integrate reverse optimization (generation) and surrogate prediction in one hierarchical latent‐space framework. This unified design ensures each fidelity has its own latent space and decoder—improving the quality of generated queries and enabling more accurate, fidelity‐aware surrogate modeling and inter‐fidelity information sharing.",
        "relevant_elements": [
            "Reverse optimize",
            "Surrogate model"
        ],
        "id": 837,
        "masked_question": "What motivates combining [mask1] with [mask2] into a unified framework?",
        "masked_number": 2,
        "masked_elements": [
            "Reverse optimize",
            "Surrogate model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.11226v1_figure_1.png",
        "paperid": "2410.11226v1",
        "paper_path": "./papers/2410.11226v1.json",
        "figure_id": "2410.11226v1_figure_1.png",
        "caption": "Figure 1: Overview of Multi-Fidelity Latent space Active Learning (MF-LAL).",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates using diverse criteria (Common, Longtailed, Random, Nonexistent) for concept selection in Visual Information Construction?",
        "relevant_section_ids": [
            "2.2.1"
        ],
        "relevant_context": [
            "The degree of association between object concepts in the graph (i.e., co-occurrence frequency) reflects the distribution of the objects.",
            "Based on this, we designed four criteria for concept combinations with increasing difficulty: Common: Combine the concept pairs with the highest co-occurrence frequency, Long-tail: Combine the concept pairs with associations but the lowest co-occurrence frequency in the graph, Random: Randomly combine two object concepts from the graph, Fictional: Randomly combine object concepts in the graph that have no associations.",
            "The selected pairs  are used to dynamically generate test images under different distributions. Such approach ensures the randomness of the sample concept distribution."
        ],
        "final_answer": "The diverse criteria are motivated by the desire to cover a spectrum of concept-pair distributions—ranging from very common co-occurrences to rare, to entirely unassociated pairs—so that test images span increasing difficulty levels and maintain randomness in their concept selection.",
        "relevant_elements": [
            "Criteria",
            "Visual Information Construction"
        ],
        "id": 838,
        "masked_question": "What motivates using diverse [mask1] for concept selection in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Criteria",
            "Visual Information Construction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.09318v1_figure_2.png",
        "paperid": "2409.09318v1",
        "paper_path": "./papers/2409.09318v1.json",
        "figure_id": "2409.09318v1_figure_2.png",
        "caption": "Figure 2: Pipeline of the Open-Set Dynamic Evaluation Protocol. The workflow involves constructing a graph and generating test samples based on the graph, with four distinct steps.",
        "qtype": "Design_Rationale",
        "response": "**Step 1: Identify the components referred to by [mask1] and [mask2].**\n*   [mask1] refers to the \"Criteria: Common, Longtailed, Random, Nonexistent\" listed under \"Select concepts\" in the \"Visual Information Construction\" box.\n*   [mask2] refers to the entire \"Visual Information Construction\" step.\n\n**Step 2: Locate the relevant sections in the provided text.**\n*   The text describes \"Visual Information Construction\" under \"II-B Composing Visual Data\".\n*   The specific criteria are detailed in \"II-B1 Selection Criteria\" within \"II-B Composing Visual Data\".\n\n**Step 3: Analyze the \"II-B1 Selection Criteria\" section for the motivation.**\nThe first paragraph of \"II-B1 Selection Criteria\" states: \"The degree of association between object concepts in the graph (i.e., co-occurrence frequency) reflects the distribution of the objects. Based on this, we designed four criteria for concept combinations with increasing difficulty: Common, Long-tail, Random, Fictional. The selected pairs are used to dynamically generate test images under different distributions. Such approach ensures the randomness of the sample concept distribution.\"\n\nAdditionally, in \"II-A Graph-Based Conceptual Modeling\", it mentions: \"Aiming to cover a broader range of target object concepts in our evaluation of object existence hallucination, ODE employs a weighted graph to model real-world scenes, facilitating the generation of more diverse scenarios in subsequent stages.\" This broader goal connects to the selection criteria.\n\n**Step 4: Synthesize the motivation.**\nThe motivation for using diverse criteria (Common, Long-tail, Random, Fictional/Nonexistent) for concept selection in Visual Information Construction is to:\n1.  Generate test images under **different distributions**, capturing various degrees of association between object concepts (from high co-occurrence to no association).\n2.  Ensure the **randomness of the sample concept distribution**, leading to distinct test instances.\n3.  Cover a **broader range of target object concepts**, which is crucial for evaluating object existence hallucination comprehensively and across scenarios of increasing difficulty.\n\n**Answer:**\nThe motivation for using diverse **criteria** (Common, Longtailed, Random, Nonexistent) for concept selection in **Visual Information Construction** is to dynamically generate test images under different concept distributions, ensuring the randomness of the sample concept distribution, and to cover a broader range of target object concepts for a comprehensive evaluation of object existence hallucination across scenarios of increasing difficulty."
    },
    {
        "question": "Why integrate both Generative Task and Discriminative Task in Prompts Construction for hallucination evaluation?",
        "relevant_section_ids": [
            "2.4"
        ],
        "relevant_context": [
            "For generative tasks, we use the prompt “Please describe this image.” to instruct the MLLM to provide a description of the concepts present in the image.",
            "For discriminative tasks, we use “Is there a {object} in the image?” expecting a “yes” or “no” response. To evaluate hallucinated objects, we construct counterfactual prompts like “Is there a {hallucinated object} in the image?”"
        ],
        "final_answer": "By combining a Generative Task with a Discriminative Task, ODE is able to measure hallucinations in two complementary ways: the generative prompt elicits a free-form description of everything the model “sees,” thereby revealing any spontaneously introduced (hallucinated) objects, while the discriminative prompt drills down to yes/no judgments about the presence or absence of specific objects (including deliberately counterfactual ones). Together, they provide both open-ended and targeted checks for object-existence hallucinations.",
        "relevant_elements": [
            "Generative Task",
            "Discriminative Task",
            "Prompts Construction"
        ],
        "id": 839,
        "masked_question": "Why integrate both [mask1] and [mask2] in Prompts Construction for hallucination evaluation?",
        "masked_number": 2,
        "masked_elements": [
            "Generative Task",
            "Discriminative Task"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.09318v1_figure_2.png",
        "paperid": "2409.09318v1",
        "paper_path": "./papers/2409.09318v1.json",
        "figure_id": "2409.09318v1_figure_2.png",
        "caption": "Figure 2: Pipeline of the Open-Set Dynamic Evaluation Protocol. The workflow involves constructing a graph and generating test samples based on the graph, with four distinct steps.",
        "qtype": "Design_Rationale",
        "response": "**Chain of Thought:**\n\n1.  **Identify [mask1] and [mask2]:**\n    *   [mask1] (red box) refers to the \"Generative Task: Describe this image.\"\n    *   [mask2] (blue box) refers to the \"Discriminative Task: Is there a {} in the picture? {}: Image-Present Object A\" and \"Is there a {} in the picture? {}: Hallucination-Prone Object C\". Both are part of the \"Prompts Construction\" stage in the diagram.\n\n2.  **Locate relevant context for \"Prompts Construction\":**\n    *   The section \"II-D Structuring Textual Data\" directly discusses the prompt templates for evaluation.\n\n3.  **Analyze the purpose of each task from the context:**\n    *   **Generative Task:** \"For generative tasks, we use the prompt 'Please describe this image.' to instruct the MLLM to provide a description of the concepts present in the image.\"\n        *   **Purpose:** This task evaluates the MLLM's ability to freely describe the image content. Hallucinations in this context would appear as objects described by the MLLM that are not actually present in the image. It assesses spontaneous object hallucination.\n    *   **Discriminative Task:** \"For discriminative tasks, we use 'Is there a {object} in the image?' expecting a \"yes\" or \"no\" response. To evaluate hallucinated objects, we construct counterfactual prompts like 'Is there a {hallucinated object} in the image?'\"\n        *   **Purpose:** This task evaluates the MLLM's ability to correctly answer specific \"yes/no\" questions about object existence.\n            *   Asking about \"Image-Present Object A\" checks if the model can correctly identify existing objects (avoiding false negatives).\n            *   Asking about \"Hallucination-Prone Object C\" (which is not present in the image) checks if the model hallucinates"
    },
    {
        "question": "How does the Image Generation and Filtering module integrate open vocabulary object detection to enforce quality specifications?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "To prevent model exposure to test data, we employ text-to-image generation models (e.g., Stable Diffusion 1.5, as used in our experiments) to generate ODE test images from textual prompts such as “a picture of A and B,” where A and B represent specific visual concepts. Positive and negative prompts are applied to improve image quality. For each test scenario, we generate both realistic photographs and anime-style images to ensure diversity in the representation of the same concepts.",
            "Due to limitations of the generative models, not all images produced are of high quality. To assess the quality of the generated images, we leverage an open vocabulary object detection model to extract the actual visual content of each image, discarding those that lack the expected entities. For example, for an image described as “a picture of a dog and a frisbee,” if the detection model fails to identify the dog and frisbee or shows low confidence, the image is filtered out. High-quality images are retained and annotated with detected concept information as “truth” data. Additionally, hallucination data from the conceptual hallucination graph is included for comprehensive annotation."
        ],
        "final_answer": "The module runs all generated images through an open-vocabulary object detector, compares the detected objects to the intended concepts, and discards any image where the detector either misses the expected entities or reports low confidence. Only images that satisfy the detector’s quality criteria are kept and labeled with the detected concepts as ground-truth.",
        "relevant_elements": [
            "Image Generation and Filtering",
            "Quality Specifications"
        ],
        "id": 840,
        "masked_question": "How does the [mask1] module integrate open vocabulary object detection to enforce quality specifications?",
        "masked_number": 1,
        "masked_elements": [
            "Image Generation and Filtering"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.09318v1_figure_2.png",
        "paperid": "2409.09318v1",
        "paper_path": "./papers/2409.09318v1.json",
        "figure_id": "2409.09318v1_figure_2.png",
        "caption": "Figure 2: Pipeline of the Open-Set Dynamic Evaluation Protocol. The workflow involves constructing a graph and generating test samples based on the graph, with four distinct steps.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] module, identified as \"Image Generation and Filtering,\" integrates open vocabulary object detection to enforce quality specifications in the following manner:\n\n1.  **Leveraging an Open Vocabulary Object Detection Model**: The module employs an open vocabulary object detection model to analyze the initial images generated by the text-to-image model (e.g., Stable Diffusion). This model is used to \"extract the actual visual content\" of each generated image.\n2.  **Assessing Quality against Expected Entities**: For each image, the detection model verifies the presence of the \"expected entities\" or objects that were specified in the original textual prompt used for image generation (e.g., \"a dog and a frisbee\").\n3.  **Filtering based on Detection Results**: If the open vocabulary object detection model fails to identify the expected entities within the image, or if it detects them but with \"low confidence,\" those particular images are \"filtered out\" or discarded.\n4.  **Retaining High-Quality Images**: Only images that successfully pass this detection check—meaning the intended objects are identified with sufficient confidence by the open vocabulary object detection model—are \"retained\" as high-quality images for further steps in the protocol.\n\nThis process ensures that the generated dataset consists only of images that accurately depict the intended visual concepts, thereby maintaining the quality and relevance of the test data."
    },
    {
        "question": "How does Visual Information Construction module apply selection criteria to generate concept pairs from the truth graph?",
        "relevant_section_ids": [
            "2.2",
            "2.2.1"
        ],
        "relevant_context": [
            "After obtaining a scene graph with object concepts, we select two concept nodes at each step to form a pair, which is used as the content for the test image.",
            "The degree of association between object concepts in the graph (i.e., co-occurrence frequency) reflects the distribution of the objects. Based on this, we designed four criteria for concept combinations with increasing difficulty:",
            "Common: Combine the concept pairs with the highest co-occurrence frequency, i.e., the object combinations with the highest degree of association.",
            "Long-tail: Combine the concept pairs with associations but the lowest co-occurrence frequency in the graph.",
            "Random: Randomly combine two object concepts from the graph.",
            "Fictional: Randomly combine object concepts in the graph that have no associations."
        ],
        "final_answer": "The Visual Information Construction module first takes the truth graph of object concepts and at each step picks two nodes to form a concept pair. It applies four selection criteria—Common (highest co-occurrence edges), Long-tail (lowest nonzero co-occurrence edges), Random (any two nodes at random), and Fictional (pairs with no edge between them)—to choose which pairs to use when dynamically generating each test image.",
        "relevant_elements": [
            "Visual Information Construction",
            "Graph of truth"
        ],
        "id": 841,
        "masked_question": "How does [mask1] module apply selection criteria to generate concept pairs from the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Visual Information Construction",
            "Graph of truth"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.09318v1_figure_2.png",
        "paperid": "2409.09318v1",
        "paper_path": "./papers/2409.09318v1.json",
        "figure_id": "2409.09318v1_figure_2.png",
        "caption": "Figure 2: Pipeline of the Open-Set Dynamic Evaluation Protocol. The workflow involves constructing a graph and generating test samples based on the graph, with four distinct steps.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How are concept tokens initialized by merging Vision Encoder & Projection outputs with Grounded-SAM masks and clustering?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "For each concept, given a set of images \\(\\{I_i^1,\\dots,I_i^n\\}\\), we utilize the LLaVA vision encoder \\(V\\) and the projection layer \\(P\\) to obtain aligned visual tokens \\(V_i^1,\\dots,V_i^n\\), which have the shape of \\(n\\times D\\).",
            "To reduce redundant background information in the visual tokens, we apply the Grounded-SAM (Ren et al., 2024) with the prompt “the main character in the image” to obtain a mask \\(M_i^1,\\dots,M_i^n\\) for each image. After aligning each mask’s shape with the visual tokens, we perform an element-wise Hadamard product between \\(M_i^j\\) and \\(V_i^j\\). This process yields concept-related visual tokens, denoted as \\(W_i^1,\\dots,W_i^n\\).",
            "To obtain a more compact concept representation and reduce the number of visual tokens to \\(K\\), we applied k-means clustering (Hartigan & Wong, 1979) to the concept-related visual tokens, resulting in \\(Z_i^1,\\dots,Z_i^K\\), with a size of \\(K\\times D\\), where \\(D\\) denotes the final token length corresponding to each concept.",
            "For the special token \\([\\text{sks}_i]\\), we average the clustered \\(Z_i^1,\\dots,Z_i^K\\) values to create a special token with a shape of \\(1\\times D\\). Ultimately, we derive concept tokens \\(T_i\\) with dimensions \\((K+1)\\times D\\), constructed from visual tokens related to the concepts."
        ],
        "final_answer": "Concept tokens are initialized by first passing each concept image through the LLaVA vision encoder and projection layer to obtain per-image visual embeddings. Grounded-SAM is then used to generate masks of the main character in each image, and these masks are applied element-wise to the visual embeddings to yield concept-related tokens. These tokens are clustered via k-means into K centroids (each of dimension D), and their cluster centers form the K learnable tokens. A special token is created by averaging the K centroids. In total, each concept’s token set consists of these K cluster tokens plus the averaged special token, yielding a \\((K+1)\\times D\\) concept embedding.",
        "relevant_elements": [
            "Vision Encoder & Projection",
            "Grounded-SAM"
        ],
        "id": 842,
        "masked_question": "How are concept tokens initialized by merging [mask1] outputs with Grounded-SAM masks and clustering?",
        "masked_number": 1,
        "masked_elements": [
            "Vision Encoder & Projection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.11706v1_figure_2.png",
        "paperid": "2411.11706v1",
        "paper_path": "./papers/2411.11706v1.json",
        "figure_id": "2411.11706v1_figure_2.png",
        "caption": "Figure 2: The illustration of MC-LLaVA. In the\ntraining phase, given m concepts, we utilize visual tokens to initialize the m*(k+1) concept tokens. Then, we use a multi-concept joint training strategy to learn the concept tokens and classifier weights across four training tasks.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does combining Grounded SAM with Vision Encoder & Projection replace high-quality negative sample methods?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Yo’LLaVA (Nguyen et al., 2024) uses high-quality negative samples that are visually similar to a specific concept but represent non-identical objects for training the concept tokens. We conduct a case study by reproducing Yo’LLaVA with different percentages of high-quality negative samples. As shown in Fig. 3 (right), reducing the number of negative samples decreases the personalization capabilities among all kinds of Yo’LLaVA data, reflecting the heavy reliance of Yo’LLaVA on high-quality negative data.\nRelying on negative samples creates challenges for multi-concept personalization, as personalizing a new concept necessitates hundreds of high-quality negative samples, which are hard for users to collect. As the number of concepts increases, defining and acquiring high-quality negative samples becomes more challenging.",
            "Therefore, as shown in the right half of Fig. 2, We propose a method that utilizes concept images to initialize the concept tokens. For each concept, given a set of images, …, we utilize the LLaVA vision encoder V and the projection layer P to obtain aligned visual tokens Z^i_1, …, Z^i_m, which have the shape of b × d. To reduce redundant background information in the visual tokens, we apply the Grounded-SAM (Ren et al., 2024) with the prompt “the main character in the image” to obtain a mask M^i_1, …, M^i_m for each image. After aligning each mask’s shape with the visual tokens, we perform an element-wise Hadamard product between M^i_j and Z^i_j. This process yields concept-related visual tokens, denoted Ẑ^i_1, …, Ẑ^i_m.\nTo obtain a more compact concept representation and reduce the number of visual tokens to k, we applied k-means clustering (Hartigan & Wong, 1979) to the concept-related visual tokens, resulting in Q^i_1, …, Q^i_k, with a size of k × d, where k denotes the final token length corresponding to each concept."
        ],
        "final_answer": "Instead of collecting and relying on hundreds of hard-to-gather negative examples, MC-LLaVA uses each concept’s own images to initialize its tokens. The images are passed through the vision encoder and projection layers to produce visual features; Grounded SAM then segments out only the concept (masking away background), yielding concept-related visual tokens. These tokens are cluster-pooled into a fixed set of concept embeddings. This image-based initialization entirely replaces the need for high-quality negative samples.",
        "relevant_elements": [
            "Vision Encoder & Projection",
            "Grounded SAM"
        ],
        "id": 844,
        "masked_question": "How does combining [mask1] with Vision Encoder & Projection replace high-quality negative sample methods?",
        "masked_number": 1,
        "masked_elements": [
            "Grounded SAM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.11706v1_figure_2.png",
        "paperid": "2411.11706v1",
        "paper_path": "./papers/2411.11706v1.json",
        "figure_id": "2411.11706v1_figure_2.png",
        "caption": "Figure 2: The illustration of MC-LLaVA. In the\ntraining phase, given m concepts, we utilize visual tokens to initialize the m*(k+1) concept tokens. Then, we use a multi-concept joint training strategy to learn the concept tokens and classifier weights across four training tasks.",
        "qtype": "Literature_Background",
        "response": "The method replaces high-quality negative sample methods by utilizing visual information from positive concept images itself.\n\nHere's the breakdown:\n1.  **Vision Encoder & Projection's Role:** For each concept image, the \"Vision Encoder & Projection\" first processes the image to"
    },
    {
        "question": "How does Normalization of k-means initialized tokens contrast with prompt tuning initialization methods?",
        "relevant_section_ids": [
            "2",
            "3.3"
        ],
        "relevant_context": [
            "While soft prompt tuning has achieved notable successes across various tasks, its effectiveness depends on the appropriate initialization of parameters (Meng et al., 2024), which leads to current personalization approaches heavily rely on the availability of high-quality negative samples (Nguyen et al., 2024).",
            "We find concept token initialization is crucial that misalignment with the tokenizer’s embedding distribution can destabilize training. We normalize the vector norms of concept tokens (denoted P^i) from k-means. To align with tokenizer embeddings, adjusted tokens are:"
        ],
        "final_answer": "When tokens are initialized via k-means clustering on visual features, MC-LLaVA explicitly normalizes their vector norms to match the distribution of the pretrained tokenizer’s embeddings, stabilizing training. In contrast, standard prompt-tuning initializations (hard or soft prompts) do not perform any such norm alignment and instead typically rely on random or negative-sample–based initialization without adjusting token norms.",
        "relevant_elements": [
            "k-means",
            "Normalization"
        ],
        "id": 845,
        "masked_question": "How does [mask1] of k-means initialized tokens contrast with prompt tuning initialization methods?",
        "masked_number": 1,
        "masked_elements": [
            "Normalization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.11706v1_figure_2.png",
        "paperid": "2411.11706v1",
        "paper_path": "./papers/2411.11706v1.json",
        "figure_id": "2411.11706v1_figure_2.png",
        "caption": "Figure 2: The illustration of MC-LLaVA. In the\ntraining phase, given m concepts, we utilize visual tokens to initialize the m*(k+1) concept tokens. Then, we use a multi-concept joint training strategy to learn the concept tokens and classifier weights across four training tasks.",
        "qtype": "Literature_Background",
        "response": "The **normalization** of k-means initialized tokens, as proposed in the method, is crucial for **aligning the vector norms of the concept tokens with the tokenizer's embedding distribution** to prevent training destabilization. This approach contrasts with traditional prompt tuning initialization methods (like Yo’LLaVA) primarily in its **reduced reliance on high-quality negative samples** for initialization.\n\nSpecifically:\n\n*   **K-means initialization (with normalization):** This method utilizes visual information from concept images and k-means clustering to derive concept tokens. The subsequent normalization step *explicitly addresses misalignment with the tokenizer's embedding distribution*, which can destabilize training. The paper states this approach is \"simple yet effective... reducing reliance on negative samples\" and \"effectively accelerates convergence speed.\"\n*   **Prompt tuning initialization methods (e.g., Yo’LLaVA):** These methods are described as heavily relying on \"high-quality negative samples that are visually similar"
    },
    {
        "question": "How do parallel questions build on direct questions to enhance multi-chart information localization?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "The direct questions evaluate whether the model can accurately identify the relevant chart to answer questions accordingly.",
            "We present multiple charts and use terms like “In the second chart” to explicitly specify which chart the answer should pertain to.",
            "Unlike direct questions that ask the model to locate and focus on one specific chart, parallel questions examine the model’s ability to answer independent questions that span multiple charts simultaneously.",
            "These questions are formed by querying information from multiple charts, with each parallel question containing several sub-questions, and each sub-answer is derived from a different chart.",
            "Similar to direct questions, we explicitly specify which chart the answer should come from."
        ],
        "final_answer": "Parallel questions build on direct questions by extending the single‐chart localization task into multiple independent sub-tasks, each targeting a specified chart. They require the model to locate and extract information from several charts at once—using explicit references like “in the second chart”—thus enhancing multi‐chart information localization through simultaneous handling of multiple chart queries.",
        "relevant_elements": [
            "Parallel Questions",
            "Direct Questions"
        ],
        "id": 846,
        "masked_question": "How do [mask1] build on [mask2] to enhance multi-chart information localization?",
        "masked_number": 2,
        "masked_elements": [
            "Parallel Questions",
            "Direct Questions"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.14179v1_figure_2.png",
        "paperid": "2410.14179v1",
        "paper_path": "./papers/2410.14179v1.json",
        "figure_id": "2410.14179v1_figure_2.png",
        "caption": "Figure 2: Multi-ChartQA contains four types of QA tasks, covering four crucial abilities for understanding and reasoning across multiple charts.\nWe highlight the key information location for answering each question with boxes and circles. The arrows represent the multi-step reasoning process across different charts.",
        "qtype": "Literature_Background",
        "response": "Parallel Questions build on Direct Questions by extending the scope of information localization from a single chart to multiple charts simultaneously.\n\nHere's the breakdown:\n1.  **Direct Questions** (mask2) test the model's ability to locate and extract information from *one specific chart*. They explicitly specify which chart to refer to (e.g., \"In the first chart\"). This focuses on accurate information localization within a single visual source.\n2.  **Parallel Questions** (mask1) build on this foundation. While still explicitly specifying which chart each piece of information should come from (similar to direct questions), they require the model to answer *independent sub-questions that span multiple charts simultaneously*. This means the model must perform multiple, distinct information localizations across different charts, often in parallel, to answer a single complex question. This enhances multi-chart information localization by demanding the ability to efficiently switch context and extract data from various related charts within one query, rather than isolated single-chart queries. Both types also cover structural and content information."
    },
    {
        "question": "How does sequential reasoning extend comparative reasoning to enable deeper multi-hop chart integration?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Comparison questions assess the model’s ability to analyze and compare information across multiple charts, requiring reasoning between them.",
            "Sequential reasoning involves complex multi-step reasoning questions with a temporal or logical sequence.",
            "Specifically, these questions use a single entity as a clue and, through multi-hop reasoning, traverse several charts to arrive at the final answer."
        ],
        "final_answer": "Sequential reasoning builds on comparative reasoning’s cross-chart comparison by adding a multi-step, temporal or logical traversal: it tracks a single entity’s attributes across several charts, using multi-hop reasoning to integrate information step by step for a deeper, chained analysis.",
        "relevant_elements": [
            "Sequential Reasoning",
            "Comparative Reasoning"
        ],
        "id": 847,
        "masked_question": "How does [mask1] extend comparative reasoning to enable deeper multi-hop chart integration?",
        "masked_number": 1,
        "masked_elements": [
            "Sequential Reasoning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.14179v1_figure_2.png",
        "paperid": "2410.14179v1",
        "paper_path": "./papers/2410.14179v1.json",
        "figure_id": "2410.14179v1_figure_2.png",
        "caption": "Figure 2: Multi-ChartQA contains four types of QA tasks, covering four crucial abilities for understanding and reasoning across multiple charts.\nWe highlight the key information location for answering each question with boxes and circles. The arrows represent the multi-step reasoning process across different charts.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does sequential reasoning enforce multi-step chart traversal in the benchmark's methodology?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Sequential reasoning involves complex multi-step reasoning questions with a temporal or logical sequence.",
            "To solve such problems, the model needs to track and analyze different aspects of an entity from the information dispersed in different charts.",
            "Specifically, these questions use a single entity as a clue and, through multi-hop reasoning, traverse several charts to arrive at the final answer."
        ],
        "final_answer": "Sequential reasoning enforces multi-step chart traversal by using a single entity as a clue and requiring multi-hop reasoning: the model must track and analyze that entity’s attributes across several charts in sequence to arrive at the final answer.",
        "relevant_elements": [
            "Sequential Reasoning"
        ],
        "id": 848,
        "masked_question": "How does [mask1] enforce multi-step chart traversal in the benchmark's methodology?",
        "masked_number": 1,
        "masked_elements": [
            "Sequential Reasoning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.14179v1_figure_2.png",
        "paperid": "2410.14179v1",
        "paper_path": "./papers/2410.14179v1.json",
        "figure_id": "2410.14179v1_figure_2.png",
        "caption": "Figure 2: Multi-ChartQA contains four types of QA tasks, covering four crucial abilities for understanding and reasoning across multiple charts.\nWe highlight the key information location for answering each question with boxes and circles. The arrows represent the multi-step reasoning process across different charts.",
        "qtype": "Experimental_Results",
        "response": "[mask1] refers to the \"Sequential Reasoning\" question type.\n\nBased on the provided text and Figure 2, \"Sequential Reasoning\" enforces multi-step chart traversal in the benchmark's methodology in the following ways:\n\n1.  **Multi-hop Reasoning:** The questions require more than one step to arrive at the final answer. Information from one chart serves as a clue or intermediate result that is then used to find information in another chart.\n2.  **Tracking a Single Entity Across Charts:** These questions compel the model to track and analyze different aspects or characteristics of a single entity (e.g., an age group or a specific political body) by gathering dispersed information from several charts. The design is inspired by how humans would follow an entity's evolution or various attributes across different visual data sources.\n3.  **Logical or Temporal Sequence:** The questions are structured with a logical flow, meaning the answer to a subsequent part of the question is dependent on the result obtained from a previous part, often requiring a \"then, what...\" structure.\n\n**Example from [mask1]:**\nThe example question, \"Firstly identify the age group with the largest proportion in the U.S. House at the beginning of the 118th Congress. Then, what percentage of people in this age group think that it is best for a president to be in their 50s?\", demonstrates this:\n*   **Step 1 (Chart 3):** Identify the age group with the largest proportion in the U.S. House from Chart 3. This leads to \"Ages 60-69\" (1"
    },
    {
        "question": "How does parallel questions design evaluate simultaneous extraction across multiple charts methodologically?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Unlike direct questions that ask the model to locate and focus on one specific chart, parallel questions examine the model's ability to answer independent questions that span multiple charts simultaneously.",
            "These questions are formed by querying information from multiple charts, with each parallel question containing several sub-questions, and each sub-answer is derived from a different chart.",
            "Similar to direct questions, we explicitly specify which chart the answer should come from.",
            "Like direct questions, parallel questions also include structure questions, content questions, as well as mixed questions that involve both."
        ],
        "final_answer": "Parallel questions are designed by grouping several independent sub-questions into one overall question, where each sub-question refers to a different chart. The model must extract each sub-answer from its designated chart—explicitly specified in the prompt—thereby testing the model’s ability to simultaneously gather and report information across multiple, semantically related charts. These parallel questions cover structural, content, and mixed information types.",
        "relevant_elements": [
            "Parallel Questions"
        ],
        "id": 849,
        "masked_question": "How does [mask1] design evaluate simultaneous extraction across multiple charts methodologically?",
        "masked_number": 1,
        "masked_elements": [
            "Parallel Questions"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.14179v1_figure_2.png",
        "paperid": "2410.14179v1",
        "paper_path": "./papers/2410.14179v1.json",
        "figure_id": "2410.14179v1_figure_2.png",
        "caption": "Figure 2: Multi-ChartQA contains four types of QA tasks, covering four crucial abilities for understanding and reasoning across multiple charts.\nWe highlight the key information location for answering each question with boxes and circles. The arrows represent the multi-step reasoning process across different charts.",
        "qtype": "Experimental_Results",
        "response": "The design evaluates simultaneous extraction across multiple charts by formulating questions that span across these charts. Methodologically, this involves:\n1.  **Multiple Sub-questions:** Each parallel question contains several independent sub-questions.\n2.  **Diverse Chart Sources for Sub-answers:** Each sub-answer is derived from a different chart within the chart set.\n3.  **Explicit Chart Specification:** The questions explicitly specify which chart the answer should come from for each sub-question.\n4.  **Information Types:** They include questions focusing on structural information (e.g., chart elements), content information (e.g., specific data values), or a mix of both.\n\nThis design specifically examines the model's ability to gather and process information from multiple charts concurrently, as is typical in real-world scenarios involving semantically related charts."
    },
    {
        "question": "How does MSD’s learnable mask selection reduce noise accumulation during serialization?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "To address this issue, we propose Masked Sequence Denoising (MSD) to selectively mask the noised point tokens of the point cloud sequences and use the purified features for classification, mitigating the adverse effects of noise accumulation.",
            "The higher the probability of p_i^1 becomes, the closer the probability value of the current position is to a value of 1, otherwise it is closer to a value of 0. This indicates that while features are preserved, noise is greatly suppressed.",
            "As shown in Figure 2(a), the input sequence will be multiplied by a learnable mask to obtain the masked sequence. Then, the denoised and purified sequence features will be forwarded for classification."
        ],
        "final_answer": "MSD learns a binary mask via Gumbel-Softmax that, when multiplied element-wise with the serialized point tokens, preserves clean features (mask = 1) and suppresses noisy ones (mask = 0). By filtering out the corrupted tokens before further processing, it prevents noise from accumulating during the serialization stage.",
        "relevant_elements": [
            "MSD"
        ],
        "id": 850,
        "masked_question": "How does [mask1]’s learnable mask selection reduce noise accumulation during serialization?",
        "masked_number": 1,
        "masked_elements": [
            "MSD"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.13574v1_figure_2.png",
        "paperid": "2408.13574v1",
        "paper_path": "./papers/2408.13574v1.json",
        "figure_id": "2408.13574v1_figure_2.png",
        "caption": "Figure 2:  The framework of PointDGMamba. It consists of three key components: (a) Masked Sequence Denoising (MSD) is presented to mask out noised point patches in the sequence and thus mitigate adverse effects of noise accumulation during the serialization stage; (b) Sequence-wise Cross-domain Feature Aggregation (SCFA) is introduced to aggregate cross-domain but same-class point cloud features with the global prompt to extract more generalized features, thereby strengthing Mamba s effectiveness in handling distribution shifts. (c) Dual-level Domain Scanning, including intra-domain scanning and cross-domain scanning, is proposed to facilitate sufficient information interaction between different parts of the features.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] area, labeled as \"Masked Sequence Denoising (MSD)\", reduces noise accumulation during serialization through a \"learnable mask\" as follows:\n\n1.  **Problem Identification**: The serialization of 3D point cloud data into 1D sequences for Mamba processing can disrupt the inherent topology, leading to the generation and accumulation of \"unexpected noise\" during training.\n2.  **Selective Masking**: The MSD module introduces a \"learnable mask\" (M) which is multiplied element-wise with the input \"Point Cloud Sequence\" (φ) to produce a \"Masked"
    },
    {
        "question": "How does combining SCFA with Dual-level Domain Scanning enhance cross-domain feature interaction?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "3.2: We propose a Sequence-wise Cross-domain Feature Aggregation (SCFA) to aggregate cross-domain but same-class point cloud features to prompt the model to extract more generalized features.",
            "3.3: In order to facilitate the interaction of different feature information for generalization, we design Dual-level Domain Scanning, including Intra-domain Scanning (IDS) and Cross-domain Scanning (CDS).",
            "3.3: IDS treats features as three unrelated sequences, scanning them one after another in order. CDS treats features as three related sequences. After scanning a data point of the first feature, the data points at the same position for the other two features will be scanned sequentially. This can promote the interaction between each feature.",
            "3.3: It is worth noting that the DDS module processes aggregated features, so it needs to be used together with the SCFA module."
        ],
        "final_answer": "SCFA first fuses same-class point-cloud features from different source domains (along with a global prompt) into a single, cross-domain representation. By feeding these aggregated features into Dual-level Domain Scanning—where Intra-domain Scanning captures sequential patterns within each feature set and Cross-domain Scanning interleaves corresponding points across domains—the network enforces both within-domain and cross-domain mixing at the sequence level. In this way, the combination of SCFA and DDS maximizes information exchange among domains and strengthens the model’s ability to learn domain-agnostic, generalized features.",
        "relevant_elements": [
            "SCFA",
            "Dual-level Domain Scanning"
        ],
        "id": 851,
        "masked_question": "How does combining SCFA with [mask1] enhance cross-domain feature interaction?",
        "masked_number": 1,
        "masked_elements": [
            "Dual-level Domain Scanning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.13574v1_figure_2.png",
        "paperid": "2408.13574v1",
        "paper_path": "./papers/2408.13574v1.json",
        "figure_id": "2408.13574v1_figure_2.png",
        "caption": "Figure 2:  The framework of PointDGMamba. It consists of three key components: (a) Masked Sequence Denoising (MSD) is presented to mask out noised point patches in the sequence and thus mitigate adverse effects of noise accumulation during the serialization stage; (b) Sequence-wise Cross-domain Feature Aggregation (SCFA) is introduced to aggregate cross-domain but same-class point cloud features with the global prompt to extract more generalized features, thereby strengthing Mamba s effectiveness in handling distribution shifts. (c) Dual-level Domain Scanning, including intra-domain scanning and cross-domain scanning, is proposed to facilitate sufficient information interaction between different parts of the features.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "Could selective masking in MSD unintentionally drop essential structural tokens, reducing model robustness across domains?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "Masked Sequence Denoising",
            "MSD"
        ],
        "id": 852,
        "masked_question": "Could selective masking in [mask1] unintentionally drop essential structural tokens, reducing model robustness across domains?",
        "masked_number": 1,
        "masked_elements": [
            "MSD"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.13574v1_figure_2.png",
        "paperid": "2408.13574v1",
        "paper_path": "./papers/2408.13574v1.json",
        "figure_id": "2408.13574v1_figure_2.png",
        "caption": "Figure 2:  The framework of PointDGMamba. It consists of three key components: (a) Masked Sequence Denoising (MSD) is presented to mask out noised point patches in the sequence and thus mitigate adverse effects of noise accumulation during the serialization stage; (b) Sequence-wise Cross-domain Feature Aggregation (SCFA) is introduced to aggregate cross-domain but same-class point cloud features with the global prompt to extract more generalized features, thereby strengthing Mamba s effectiveness in handling distribution shifts. (c) Dual-level Domain Scanning, including intra-domain scanning and cross-domain scanning, is proposed to facilitate sufficient information interaction between different parts of the features.",
        "qtype": "Others",
        "response": "Based on the provided context, the paper directly addresses this concern. The Masked Sequence Denoising (MSD) module, highlighted as [mask1], is specifically designed to \"selectively mask the noised point tokens of the point cloud sequences and use the purified features for classification, mitigating the adverse effects of noise accumulation.\" The text further states that \"This process not only preserves the basic feature of the point cloud but also ensures that the denoised sequence can highly represent the original structure.\" The authors intend for MSD to filter out noise, not essential structural tokens, thereby improving the model's performance and potentially its robustness by providing purified features. There is no mention in the context that this selective masking unintentionally drops essential structural tokens or reduces model robustness across domains."
    },
    {
        "question": "What adaptive methods could replace Intra-domain Scanning to mitigate bias in Dual-level Domain Scanning?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "Dual-level Domain Scanning",
            "Intra-domain Scanning"
        ],
        "id": 853,
        "masked_question": "What adaptive methods could replace [mask1] to mitigate bias in Dual-level Domain Scanning?",
        "masked_number": 1,
        "masked_elements": [
            "Intra-domain Scanning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.13574v1_figure_2.png",
        "paperid": "2408.13574v1",
        "paper_path": "./papers/2408.13574v1.json",
        "figure_id": "2408.13574v1_figure_2.png",
        "caption": "Figure 2:  The framework of PointDGMamba. It consists of three key components: (a) Masked Sequence Denoising (MSD) is presented to mask out noised point patches in the sequence and thus mitigate adverse effects of noise accumulation during the serialization stage; (b) Sequence-wise Cross-domain Feature Aggregation (SCFA) is introduced to aggregate cross-domain but same-class point cloud features with the global prompt to extract more generalized features, thereby strengthing Mamba s effectiveness in handling distribution shifts. (c) Dual-level Domain Scanning, including intra-domain scanning and cross-domain scanning, is proposed to facilitate sufficient information interaction between different parts of the features.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations might freezing the MLP during inference impose on editing flexibility?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "MLP"
        ],
        "id": 854,
        "masked_question": "What limitations might freezing the [mask1] during inference impose on editing flexibility?",
        "masked_number": 1,
        "masked_elements": [
            "MLP"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.07463v2_figure_2.png",
        "paperid": "2410.07463v2",
        "paper_path": "./papers/2410.07463v2.json",
        "figure_id": "2410.07463v2_figure_2.png",
        "caption": "Figure 2: Our framework for language-guided audio-visual editing. During training, we extract unimodal information from the audio-visual sample using pretrained encoders. Then, we fuse audio and visual features with an MLP and feed the output along with the text prompt into the text encoder. The text encoder generates textual conditions to guide the audio-visual diffusion model. We update the parameters of the MLP and diffusion models. During inference, we freeze all parameters of our model. We replace the training prompt with an editing prompt, e.g., we append “beside a crackling fireplace” to the training prompt “a telephone is raining.” We inject the cross-model semantic enhancement module into the vision branch to improve semantic consistency. The generated audio and image accurately reflect the editing requirements.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative mechanisms could replace Semantic Enhancement for improving vision-language alignment?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Semantic Enhancement"
        ],
        "id": 855,
        "masked_question": "What alternative mechanisms could replace [mask1] for improving vision-language alignment?",
        "masked_number": 1,
        "masked_elements": [
            "Semantic Enhancement"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.07463v2_figure_2.png",
        "paperid": "2410.07463v2",
        "paper_path": "./papers/2410.07463v2.json",
        "figure_id": "2410.07463v2_figure_2.png",
        "caption": "Figure 2: Our framework for language-guided audio-visual editing. During training, we extract unimodal information from the audio-visual sample using pretrained encoders. Then, we fuse audio and visual features with an MLP and feed the output along with the text prompt into the text encoder. The text encoder generates textual conditions to guide the audio-visual diffusion model. We update the parameters of the MLP and diffusion models. During inference, we freeze all parameters of our model. We replace the training prompt with an editing prompt, e.g., we append “beside a crackling fireplace” to the training prompt “a telephone is raining.” We inject the cross-model semantic enhancement module into the vision branch to improve semantic consistency. The generated audio and image accurately reflect the editing requirements.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates fusing CLIP-I and CLAP-A features through the MLP prior to text encoding?",
        "relevant_section_ids": [
            "1",
            "3.3"
        ],
        "relevant_context": [
            "We extract a compact yet representative feature from the given audio-visual sample, capturing its unique and multimodal characteristics. This feature serves as a guide for fine-tuning the diffusion model.",
            "Specifically, given the same audio-visual pair, we utilize the pretrained CLIP image encoder to extract a compact visual feature f_v from I and use the pretrained CLAP audio encoder to convert A to a latent audio feature f_a, where d is the dimension of feature vectors. We concatenate f_v and f_a as an audio-visual feature f to represent the multimodal characteristics of the sounding event. Since the diffusion model is controlled by the language condition, we convert the audio-visual feature f to text-compatible representations using Multi-Layer Perceptrons (MLPs)."
        ],
        "final_answer": "They fuse the CLIP-I and CLAP-A features into a single multimodal representation and then project it through MLPs into the text embedding space so as to (1) capture the unique audio–visual characteristics of the input sample and (2) turn that multimodal signature into a text‐compatible condition for guiding and fine‐tuning the diffusion model.",
        "relevant_elements": [
            "CLIP-I",
            "CLAP-A",
            "MLP"
        ],
        "id": 856,
        "masked_question": "What motivates fusing [mask1] and [mask2] features through the MLP prior to text encoding?",
        "masked_number": 2,
        "masked_elements": [
            "CLIP-I",
            "CLAP-A"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.07463v2_figure_2.png",
        "paperid": "2410.07463v2",
        "paper_path": "./papers/2410.07463v2.json",
        "figure_id": "2410.07463v2_figure_2.png",
        "caption": "Figure 2: Our framework for language-guided audio-visual editing. During training, we extract unimodal information from the audio-visual sample using pretrained encoders. Then, we fuse audio and visual features with an MLP and feed the output along with the text prompt into the text encoder. The text encoder generates textual conditions to guide the audio-visual diffusion model. We update the parameters of the MLP and diffusion models. During inference, we freeze all parameters of our model. We replace the training prompt with an editing prompt, e.g., we append “beside a crackling fireplace” to the training prompt “a telephone is raining.” We inject the cross-model semantic enhancement module into the vision branch to improve semantic consistency. The generated audio and image accurately reflect the editing requirements.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "Why inject Semantic Enhancement into the Text2Image branch during inference instead of Text2Audio?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "However, we observe that the vision branch tends to ignore some editing requirements specified by the text prompt. ... This phenomenon, termed \"catastrophic neglect\" [2], leads to inconsistent audio-visual editing outcomes, consequently reducing overall user satisfaction.",
            "To address this limitation, we propose a cross-modal semantic enhancement approach. ... By enhancing the semantic correlation between vision and language, we attain consistent audio-visual content editing."
        ],
        "final_answer": "Semantic Enhancement is applied to the Text2Image branch because only the vision branch exhibits \"catastrophic neglect\"—i.e. it tends to ignore editing instructions—whereas the audio branch already responds faithfully to the text prompts. Therefore, the enhancement targets the visual cross-attention maps to fix this vision-specific issue.",
        "relevant_elements": [
            "Semantic Enhancement",
            "Text2Image"
        ],
        "id": 857,
        "masked_question": "Why inject [mask1] into the [mask2] branch during inference instead of Text2Audio?",
        "masked_number": 2,
        "masked_elements": [
            "Semantic Enhancement",
            "Text2Image"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.07463v2_figure_2.png",
        "paperid": "2410.07463v2",
        "paper_path": "./papers/2410.07463v2.json",
        "figure_id": "2410.07463v2_figure_2.png",
        "caption": "Figure 2: Our framework for language-guided audio-visual editing. During training, we extract unimodal information from the audio-visual sample using pretrained encoders. Then, we fuse audio and visual features with an MLP and feed the output along with the text prompt into the text encoder. The text encoder generates textual conditions to guide the audio-visual diffusion model. We update the parameters of the MLP and diffusion models. During inference, we freeze all parameters of our model. We replace the training prompt with an editing prompt, e.g., we append “beside a crackling fireplace” to the training prompt “a telephone is raining.” We inject the cross-model semantic enhancement module into the vision branch to improve semantic consistency. The generated audio and image accurately reflect the editing requirements.",
        "qtype": "Design_Rationale",
        "response": "The \"Semantic Enhancement\" (mask1) module is injected into the \"Text2Image\" (mask2) branch during inference, instead of the Text2Audio branch, because the authors \"observe that the vision branch tends to ignore some editing requirements specified by the text prompt.\" This phenomenon, termed \"catastrophic neglect,\" leads to the Text2Image model failing to produce corresponding visual elements for editing requirements. In contrast, the paper explicitly states that the \"audio branch is capable of synthesizing the sound of raindrops... and can include the sound of waves,\" indicating that the Text2Audio branch does not suffer from the same issue of ignoring editing requirements. Therefore, the \"Semantic Enhancement\" module is a targeted solution to address and improve the semantic correlation between language and *visual generation*."
    },
    {
        "question": "What motivates integrating transformer encoder embeddings into U-Net layers for conditional SOH curve generation?",
        "relevant_section_ids": [
            "2.2"
        ],
        "relevant_context": [
            "Similar to the current state-of-the-art architectures for image and audio diffusion models [9, 45], DiffBatt is based on a U-Net architecture (see Fig. 1a) and employs diffusion processes to generate SOH curves similar to a time series generation task. Conditioning for battery information, e.g., the capacity matrix, or a diffusion timestep, is provided by adding embeddings into intermediate layers of the network [21].",
            "For this study, we employ the concept of the capacity matrix (C), as introduced by Attia et al. [1], as an additional condition for the diffusion process. The capacity matrix serves as a compact representation of battery electrochemical cycling data, incorporating a series of feature representations.",
            "To encode C into an embedding (E_C), we utilize a transformer encoder (see Fig. 1b). This allows DiffBatt to generate SOH curves, from which the RUL can be derived by calculating the number of cycles until the SOH drops below a specified threshold, such as 80% of the nominal capacity."
        ],
        "final_answer": "Integrating transformer-encoder embeddings into the U-Net layers enables DiffBatt to condition its reverse-diffusion SOH curve generation on compact, early-life battery information (the capacity matrix). By encoding the capacity matrix via a transformer, and injecting that embedding into intermediate U-Net layers, the model can leverage cycle-level performance data to guide the generation of realistic, battery-specific SOH degradation trajectories.",
        "relevant_elements": [
            "transformer encoder embeddings",
            "U-Net layers"
        ],
        "id": 858,
        "masked_question": "What motivates integrating transformer encoder embeddings into [mask1] for conditional SOH curve generation?",
        "masked_number": 1,
        "masked_elements": [
            "U-Net layers"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.23893v3_figure_1.png",
        "paperid": "2410.23893v3",
        "paper_path": "./papers/2410.23893v3.json",
        "figure_id": "2410.23893v3_figure_1.png",
        "caption": "Figure 1: Schematic view of the model architecture. Adapted and modified from the work by Fürrutter et al. [14], with permission from the authors. Modifications include context-specific changes.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] in the image, highlighted by the red box, depicts the U-Net architecture, which forms the core of the DiffBatt diffusion model.\n\nThe text states:\n*   \"DiffBatt is based on a DDPM enhanced with transformer models and utilizes classifier-free diffusion guidance for conditional generative modeling.\"\n*   \"To learn a conditional model, the diffusion model is extended by incorporating the conditioning variable into the reverse process.\"\n*   \"Conditioning for battery information, e.g., the capacity matrix, or a diffusion timestep, is provided by adding embeddings into intermediate layers of the network [21].\"\n*   \"We employ the concept of the capacity matrix (CM) ... as an additional condition for the diffusion process.\"\n*   \"To encode CM into an embedding (CM_emb), we utilize a transformer encoder (see Fig. 1b).\"\n*   \"This allows DiffBatt to generate SOH curves, from which the RUL can be derived by calculating the number of cycles until the SOH drops below a specified threshold...\"\n*   The overall goal is \"to leverage early life performance data to predict battery degradation and minimize resource expenditure.\"\n\nTherefore, the transformer encoder embeddings (CM_emb) generated from the capacity matrix (CM) are integrated into the U-Net architecture of DiffBatt to **serve as conditioning information for the conditional SOH curve generation.** This allows the model to generate SOH curves that are specific to the battery characteristics encoded in the capacity matrix, enabling predictions of battery degradation from early life performance data."
    },
    {
        "question": "How does contamination detection pipeline process overlapping samples between Training Set and Evaluation Set?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "We explore two types of data contamination in multimodal evaluation benchmarks. 1) Image-only contamination. We aim to detect how many images in the benchmark can be found in the pre-training data. To this end, we utilize the CLIPScore (Hessel et al., 2021) to measure the similarity between images from the evaluation and training set. In our pilot experiments, we find that if the CLIPScore between two images exceeds 0.9, it indicates high visual similarity. Thus, we adopt 0.9 as the threshold to determine visual contamination. The image-only contamination rate is calculated as the ratio of the number of contaminated images and the number of total images in the evaluation set.",
            "2) Image-text contamination. Beyond images, the question and answer of benchmark can also be contaminated. We extend ideas from NLP detection works (Li et al., 2024) to identify this image-text contamination. For contaminated image pairs, we determine the question and answer contaminated if the answer can be directly inferred from the captions of the training image. In practice, we leverage GPT-4 to conduct this process."
        ],
        "final_answer": "First, the pipeline computes CLIPScore between each evaluation image and all images in the training set; any pair with a score above 0.9 is marked as image-only contamination. Second, for those contaminated image pairs, it uses GPT-4 to check whether the evaluation question and answer can be directly inferred from the training‐image captions, flagging those as image-text contamination.",
        "relevant_elements": [
            "Training Set",
            "Evaluation Set"
        ],
        "id": 862,
        "masked_question": "How does contamination detection pipeline process overlapping samples between [mask1] and [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Training Set",
            "Evaluation Set"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.08695v2_figure_1.png",
        "paperid": "2410.08695v2",
        "paper_path": "./papers/2410.08695v2.json",
        "figure_id": "2410.08695v2_figure_1.png",
        "caption": "Figure 1: (a) shows that some images in evaluation sets can be exactly found in the training set and their corresponding questions can be solved by the captions of similar training images. (b) compares our dynamic multimodal evaluation with the previous static evaluation. We can see that dynamic evaluation can create various variants upon static benchmarks with flexible complexity.",
        "qtype": "Implementation_Details",
        "response": "The contamination detection pipeline processes overlapping samples between the **Training Set** and the **Evaluation Set** in two main ways:\n\n1.  **Image-only contamination:**\n    *   It measures the visual similarity between images from the Evaluation Set and images in the Training Set using **CLIPScore**.\n    *   An image is considered contaminated if its CLIPScore with an image from the Training Set exceeds a threshold of **0.9**, indicating high visual similarity.\n\n2.  **Image-text contamination:**\n    *   For image pairs already identified as visually contaminated (via the image-only method), it further checks if the question and answer associated with the evaluation image can be directly inferred from the captions of the corresponding training image.\n    *   This inference process is conducted using **GPT-4**."
    },
    {
        "question": "How do Visual Dynamic and Linguistic Dynamic modules integrate to generate variants with flexible complexity?",
        "relevant_section_ids": [
            "4.1",
            "4.5"
        ],
        "relevant_context": [
            "As illustrated in Figure 3 (a), by simulating real LVLM’s user interaction in visual attention and linguistic understanding, we design image (i.e., T_i) and language (i.e., T_l) bootstrapping strategies. Experiments show that the composition of T_i and T_l would yield dynamic evaluation samples with flexible complexity, an example is exhibited in Figure 3 (c).",
            "Due to every single VLB strategy for image and question being atomic, we can investigate two kinds of bootstrapping composition with flexible complexities. 1) Paired multimodal composition. We can compose visual bootstrapping T_i and linguistic bootstrapping T_l into a paired multimodal dynamic sample (T_i, T_l), obtaining a total of |T_i|×|T_l| dynamic variants. 2) Multi-strategy composition. We can also stack multiple image bootstrapping strategies on a single image or multiple language bootstrapping strategies on the question, composing a multi-strategy dynamic sample like (T_i^1∘T_i^2, T_l^1∘T_l^2). Since each single VLB strategy possesses different levels of complexity c, the above two kinds of compositions can effectively construct different variants varying in complexity, to assess the robustness and adaptability of LVLMs and explore models’ upper and lower limits in performance across different benchmarks."
        ],
        "final_answer": "The Visual Dynamic (image bootstrapping) and Linguistic Dynamic (language bootstrapping) modules are each composed of atomic transformations (e.g., adding or removing objects in the image; word substitution or sentence rephrasing in the question), each with an assigned difficulty. These two sets of transformations are then integrated in two ways: 1) Paired multimodal composition – applying one image transformation and one language transformation together to produce a new variant, yielding |T_i|×|T_l| samples; 2) Multi-strategy composition – stacking multiple image or language transformations in sequence. Because each atomic strategy carries its own complexity score, both types of composition produce dynamic variants whose overall difficulty can be flexibly controlled.",
        "relevant_elements": [
            "Visual Dynamic",
            "Linguistic Dynamic"
        ],
        "id": 863,
        "masked_question": "How do [mask1] and [mask2] modules integrate to generate variants with flexible complexity?",
        "masked_number": 2,
        "masked_elements": [
            "Visual Dynamic",
            "Linguistic Dynamic"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.08695v2_figure_1.png",
        "paperid": "2410.08695v2",
        "paper_path": "./papers/2410.08695v2.json",
        "figure_id": "2410.08695v2_figure_1.png",
        "caption": "Figure 1: (a) shows that some images in evaluation sets can be exactly found in the training set and their corresponding questions can be solved by the captions of similar training images. (b) compares our dynamic multimodal evaluation with the previous static evaluation. We can see that dynamic evaluation can create various variants upon static benchmarks with flexible complexity.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] (Linguistic Dynamic) and [mask2] (Visual Dynamic) modules, which are essentially Language Bootstrapping and Image Bootstrapping respectively, integrate through a process called \"Compositional Bootstrapping\" to generate variants with flexible complexity.\n\nHere's how they integrate:\n\n1.  **Paired Multimodal Composition:** They can be combined by composing a visual bootstrapping strategy from the [mask2] module (e.g., adding objects, removing objects, expanding images) with a linguistic bootstrapping strategy from the [mask1] module (e.g., word substitution, sentence rephrasing, adding relevant/irrelevant"
    },
    {
        "question": "How does data contamination analysis motivate the design of dynamic evaluation protocols?",
        "relevant_section_ids": [
            "1",
            "3"
        ],
        "relevant_context": [
            "Despite the proliferation of LVLM evaluations, there are increasing concerns about the genuine capabilities of LVLMs (Laskar et al., 2024), largely due to two key challenges associated with current evaluation benchmarks. 1) Data contamination. LVLMs are pre-trained on large datasets, often sourced from the internet. Unfortunately, many evaluation benchmarks are constructed from similar sources, leading to a high likelihood of overlap with training data, thus causing data contamination (Touvron et al., 2023; Chen et al., 2024a), as illustrated in Figure 1(a) and detailed in Section 3. It raises a critical concern: “Does the model genuinely perceive and understand the input, or is it merely memorizing it?”",
            "2) Static dataset with fixed complexity. As shown in Figure 1(b), existing benchmarks for LVLMs are manually collected. Once constructed, they are static with a fixed complexity, making them inadequate to keep pace with the rapid development of LVLMs.\nTo accurately assess LVLM performance boundaries, a dynamic, automated evaluation protocol with adjustable complexity is urgently needed.",
            "The results reveal that each evaluation benchmark presents certain contamination rates across training datasets of various sizes, even with some reaching as high as 84.46% (image-only) and 33.13% (image-text). Note that the actual size of pre-training data far exceeds our detected maximum of 100M, which indicates that the actual contamination issue could be even more severe."
        ],
        "final_answer": "The high rates of overlap between static evaluation benchmarks and LVLM training data undermine confidence that models are reasoning rather than memorizing. Data contamination analysis—highlighting up to 84.5% image-only and 33.1% image-text overlap—directly motivates the creation of dynamic evaluation protocols. By automatically generating new, unseen test samples with controlled complexity, dynamic evaluation reduces contamination and provides a more reliable measure of a model’s true visual-language understanding.",
        "relevant_elements": [
            "Data Contamination",
            "Dynamic Evaluation"
        ],
        "id": 864,
        "masked_question": "How does [mask1] analysis motivate the design of [mask2] protocols?",
        "masked_number": 2,
        "masked_elements": [
            "Data Contamination",
            "Dynamic Evaluation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.08695v2_figure_1.png",
        "paperid": "2410.08695v2",
        "paper_path": "./papers/2410.08695v2.json",
        "figure_id": "2410.08695v2_figure_1.png",
        "caption": "Figure 1: (a) shows that some images in evaluation sets can be exactly found in the training set and their corresponding questions can be solved by the captions of similar training images. (b) compares our dynamic multimodal evaluation with the previous static evaluation. We can see that dynamic evaluation can create various variants upon static benchmarks with flexible complexity.",
        "qtype": "Literature_Background",
        "response": "The analysis of **data contamination** motivates the design of **dynamic evaluation protocols** by highlighting a critical flaw in existing static benchmarks.\n\nHere's a step-by-step reasoning:\n1.  "
    },
    {
        "question": "How do visual dynamic and linguistic dynamic modules interact to generate flexible complexity variants?",
        "relevant_section_ids": [
            "4.1",
            "4.5"
        ],
        "relevant_context": [
            "As illustrated in Figure 3 (a), by simulating real LVLM’s user interaction in visual attention and linguistic understanding, we design image (i.e., Τ_I) and language (i.e., Τ_Q) bootstrapping strategies. Experiments show that the composition of Τ_I and Τ_Q would yield dynamic evaluation samples with flexible complexity, an example is exhibited in Figure 3 (c).",
            "Due to every single VLB strategy for image and question being atomic, we can investigate two kinds of bootstrapping composition with flexible complexities. 1) Paired multimodal composition. We can compose visual bootstrapping Τ_I and linguistic bootstrapping Τ_Q, into a paired multimodal dynamic sample (I^(i), Q^(j)), obtaining a total of m × n dynamic variants. 2) Multi-strategy composition. We can also stack multiple image bootstrapping strategies on a single image or multiple language bootstrapping strategies on the question, composing a multi-strategy dynamic sample like (I^(i1+i2), Q^(j1+j2)). Since each single VLB strategy possesses different levels of complexity c, the above two kinds of compositions can effectively construct different variants varying in complexity, to assess the robustness and adaptability of LVLMs and explore models’ upper and lower limits in performance across different benchmarks."
        ],
        "final_answer": "The visual dynamic (image bootstrapping) and linguistic dynamic (language bootstrapping) modules interact via compositional bootstrapping: each image transformation (Τ_I) and each question transformation (Τ_Q) is treated as an atomic strategy with an associated difficulty level. By pairing one image and one language strategy (paired multimodal composition) or stacking multiple strategies within one or both modalities (multi-strategy composition), VLB generates a grid of dynamic variants whose overall complexity can be flexibly controlled by the choice and number of applied transformations.",
        "relevant_elements": [
            "Visual Dynamic",
            "Linguistic Dynamic"
        ],
        "id": 865,
        "masked_question": "How do [mask1] and [mask2] modules interact to generate flexible complexity variants?",
        "masked_number": 2,
        "masked_elements": [
            "Visual Dynamic",
            "Linguistic Dynamic"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.08695v2_figure_1.png",
        "paperid": "2410.08695v2",
        "paper_path": "./papers/2410.08695v2.json",
        "figure_id": "2410.08695v2_figure_1.png",
        "caption": "Figure 1: (a) shows that some images in evaluation sets can be exactly found in the training set and their corresponding questions can be solved by the captions of similar training images. (b) compares our dynamic multimodal evaluation with the previous static evaluation. We can see that dynamic evaluation can create various variants upon static benchmarks with flexible complexity.",
        "qtype": "Literature_Background",
        "response": "The [mask1] (Linguistic Dynamic module, corresponding to Language Bootstrapping `Q_{trans}`) and [mask2] (Visual Dynamic module, corresponding to Image Bootstrapping `I_{trans}`) interact through a process called **compositional bootstrapping** to generate flexible complexity variants.\n\nHere's how they interact:\n1.  **Individual Strategies with Difficulty Levels**: Both modules offer various strategies for transforming the original image (`I_o`) and question (`Q"
    },
    {
        "question": "How does on-device calibration leverage metric learning to set low and high thresholds?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "After computing the prototype vector of the new positive class c_p by feeding X^+ to the Eq. 2, we calculate the average distances of the positive and negative provided samples from the prototype c_p that are denoted, respectively, as μ_p and μ_n.",
            "For the thresholds, we consider the following function:\n\n   τ(α) = μ_p + (μ_n − μ_p) * α\n\nwhere α is a configurable parameter. From this equation, the threshold values are estimated as τ_L = τ(α_L) and τ_H = τ(α_H)."
        ],
        "final_answer": "On-device calibration uses the learned embedding (via metric learning) to compute a prototype c_p from the user’s positive examples. It then measures the average embedding distance μ_p of positives and μ_n of negatives to this prototype. The low and high thresholds are set by linearly interpolating between μ_p and μ_n: τ_L = μ_p + α_L·(μ_n−μ_p) and τ_H = μ_p + α_H·(μ_n−μ_p), with α_L and α_H chosen to tightly bound positive and negative samples.",
        "relevant_elements": [
            "On-device Calibration",
            "Thresholds"
        ],
        "id": 866,
        "masked_question": "How does [mask1] leverage metric learning to set low and high [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "On-device Calibration",
            "Thresholds"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.12481v1_figure_1.png",
        "paperid": "2408.12481v1",
        "paper_path": "./papers/2408.12481v1.json",
        "figure_id": "2408.12481v1_figure_1.png",
        "caption": "Figure 1: Self-Learning framework for On-device Personalized KWS. (1) A first on-device calibration function takes the examples provided by the user and returns the threshold parameters for the labeling task. (2) The labeling task processes the audio signal to detect and store pseudo-labeled samples. (3) Eventually, the new dataset is used to incrementally train the DNN feature extractor.",
        "qtype": "Literature_Background",
        "response": "The \"On-device Calibration\" (mask1) leverages metric learning by:\n\n1.  **Establishing a Prototype**: It first computes a prototype vector `Cp` for the target keyword by feeding the few user-provided positive examples (recordings of the actual keyword) to the DNN Feature Extractor `f(.)`. This `Cp` represents the central embedding for the keyword in the feature space. The feature extractor itself is trained using metric learning (specifically, triplet loss, as mentioned in IV-C), which aims to embed similar samples close to each other and dissimilar samples far apart.\n2.  **Calculating Average Distances**: It then calculates the average Euclidean distances of the user-provided positive samples (`dp"
    },
    {
        "question": "How does incremental training leverage the pseudo-labeled set to fine-tune the DNN feature extractor?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "The feature extractor is fine-tuned on the new dataset composed by the pseudo-labeled samples.",
            "The training task runs for a fixed number of epochs. Similarly to the pretraining phase, we use the triplet loss and Adam as the optimizer.",
            "At every training epoch, the pseudo-positives are randomly split into groups of P samples. Thus, the training takes place if at least P pseudo-positive samples are present in memory.",
            "Every group of samples is then combined with P samples randomly taken from the pseudo-negative set and the user-provided utterances U to form a mini-batch.",
            "From this, we obtain the triplets as all the combinations between pseudo-positives, pseudo-negatives and the user samples of a mini-batch.",
            "Referring to Eq. 1, da and dp are the embeddings obtained from pseudo-labeled samples while dn is the embedding of one of the samples provided by the user."
        ],
        "final_answer": "During incremental training the on-device system collects pseudo-labeled examples—both pseudo-positives (frames close to the keyword prototype) and pseudo-negatives (frames far from it).  These are stored and, at each epoch, the pseudo-positives are grouped into batches of size P.  Each such group is joined with an equal number of pseudo-negatives and the original user-recorded utterances to build a mini-batch.  From each mini-batch all possible triplets (anchor and positive drawn from pseudo-labeled samples, negative drawn from user examples) are formed and used to fine-tune the DNN feature extractor via the triplet loss and Adam optimizer.",
        "relevant_elements": [
            "Incremental Training",
            "pseudo-labeled set",
            "DNN Feature Extractor"
        ],
        "id": 867,
        "masked_question": "How does incremental training leverage the pseudo-labeled set to fine-tune the [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "DNN Feature Extractor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.12481v1_figure_1.png",
        "paperid": "2408.12481v1",
        "paper_path": "./papers/2408.12481v1.json",
        "figure_id": "2408.12481v1_figure_1.png",
        "caption": "Figure 1: Self-Learning framework for On-device Personalized KWS. (1) A first on-device calibration function takes the examples provided by the user and returns the threshold parameters for the labeling task. (2) The labeling task processes the audio signal to detect and store pseudo-labeled samples. (3) Eventually, the new dataset is used to incrementally train the DNN feature extractor.",
        "qtype": "Literature_Background",
        "response": "The [mask1] refers to the **DNN Feature Extractor f(•)**.\n\n**Step-by-step reasoning:**\n1.  **Identify [mask1]:** The red box in the image highlights \"DNN Feature Extractor f(•)\".\n2.  **Locate \"Incremental Training\" in the text:** The section \"IV-C Incremental Training\" details this process.\n3.  **Understand the goal of Incremental Training:** The text states, \"The feature extractor model is fine-tuned on the new set of pseudo-labeled samples.\" This directly links incremental training, the pseudo-labeled set, and the feature extractor.\n4.  **Detail *how* it leverages the pseudo-labeled set:**\n    *   \"The feature extractor is fine-tuned on the new dataset composed by the pseudo-labeled samples.\"\n    *   \"At every training epoch, the pseudo-positives are randomly split into groups of P samples.\"\n    *   \"Every group of samples is then combined with N samples randomly taken from the pseudo-negative set and the user-provided utterances S_user to form a mini-batch.\"\n    *   \"From this, we obtain the triplets as all the combinations between pseudo-positives, pseudo-negatives and the user samples of a mini-batch.\"\n    *   The training uses \"triplet"
    },
    {
        "question": "How does On-Device Calibration threshold selection shape pseudo-positive versus pseudo-negative labeling before incremental training?",
        "relevant_section_ids": [
            "4.2",
            "4.1"
        ],
        "relevant_context": [
            "After computing the prototype vector of the new positive class c_p by feeding X_p to Eq. 2, we calculate the average distances of the positive and negative provided samples from the prototype that are denoted, respectively, as μ_p and μ_n. … For the thresholds, we consider the following function: f(α) = (μ_p + α(μ_n − μ_p), μ_n − α(μ_n − μ_p)). From this equation, the threshold values are estimated as th_l = μ_p + α(μ_n − μ_p) and th_h = μ_n − α(μ_n − μ_p). Because α delimits samples close to the prototype, it must hold th_l < th_h. We experimentally verify in Sec. VI-C that a low α value for the low-thres (th_l) leads to the best quality labels for the positive samples. Vice versa, a higher α separates the negative samples and a value 0.5 is experimentally demonstrated as the best choice.",
            "If d̄ is lower than th_l (Eq. 6), the sample is marked as pseudo-positive, meaning the system is confident that the current audio frame includes the target keyword. On the other side, the audio segment is a pseudo-negative if d̄ is higher than th_h (Eq. 7). When d̄ is between th_l and th_h no decision is taken and the segment is not labeled to prevent potential errors. Eventually, the pseudo-positives and the pseudo-negatives are stored in memory to serve the incremental training task."
        ],
        "final_answer": "On-Device Calibration first measures the average distance of a few user-provided positive and negative examples to the newly computed prototype (μ_p and μ_n). It then interpolates between these two distances using a factor α to set a low threshold (th_l = μ_p + α(μ_n − μ_p)) and a high threshold (th_h = μ_n − α(μ_n − μ_p)), ensuring th_l < th_h. During the streaming labeling phase, any segment whose filtered distance to the prototype falls below th_l is labeled as a pseudo-positive, any segment above th_h is labeled as a pseudo-negative, and segments in between remain unlabeled. This selective labeling yields high-confidence pseudo-positives and pseudo-negatives for the subsequent incremental training.",
        "relevant_elements": [
            "On-Device Calibration",
            "Labeling",
            "Incremental Training"
        ],
        "id": 868,
        "masked_question": "How does [mask1] threshold selection shape pseudo-positive versus pseudo-negative labeling before incremental training?",
        "masked_number": 1,
        "masked_elements": [
            "On-Device Calibration"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.12481v1_figure_1.png",
        "paperid": "2408.12481v1",
        "paper_path": "./papers/2408.12481v1.json",
        "figure_id": "2408.12481v1_figure_1.png",
        "caption": "Figure 1: Self-Learning framework for On-device Personalized KWS. (1) A first on-device calibration function takes the examples provided by the user and returns the threshold parameters for the labeling task. (2) The labeling task processes the audio signal to detect and store pseudo-labeled samples. (3) Eventually, the new dataset is used to incrementally train the DNN feature extractor.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does varying window stride affect pseudo-positive sample generation in labeling before incremental training?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Labeling",
            "Incremental Training"
        ],
        "id": 869,
        "masked_question": "How does varying window stride affect pseudo-positive sample generation in [mask1] before [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Labeling",
            "Incremental Training"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.12481v1_figure_1.png",
        "paperid": "2408.12481v1",
        "paper_path": "./papers/2408.12481v1.json",
        "figure_id": "2408.12481v1_figure_1.png",
        "caption": "Figure 1: Self-Learning framework for On-device Personalized KWS. (1) A first on-device calibration function takes the examples provided by the user and returns the threshold parameters for the labeling task. (2) The labeling task processes the audio signal to detect and store pseudo-labeled samples. (3) Eventually, the new dataset is used to incrementally train the DNN feature extractor.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does brightness normalization complement the dynamic gating module to preserve structural information?",
        "relevant_section_ids": [
            "3.2",
            "3.2.1",
            "3.2.2"
        ],
        "relevant_context": [
            "Section 3.2: \"Brightness normalization is then performed on these channels to remove the effects of brightness while continuing to reuse the brightness-independent channel features to preserve structural detail information.\"",
            "Section 3.2.1: \"Normalization has been proven to eliminate brightness-related components, retain robust structural representations, and effectively reduce the impact of brightness variations on model learning.\"",
            "Section 3.2.2: \"Based on the routing selection result, we select only the routed channels from the normalized feature, while retaining the remaining channels of the original feature. Finally, these channel features are recombined to obtain the output feature. This design effectively mitigates the information loss caused by normalization.\""
        ],
        "final_answer": "Brightness normalization removes brightness-related variations on the channels flagged by the dynamic gating module, while the gating module keeps the unflagged (brightness-independent) channels in their original form. By recombining the normalized (brightness-corrected) channels with the untouched channels, the network both suppresses unwanted brightness effects and preserves the structural detail carried in the brightness-independent feature channels.",
        "relevant_elements": [
            "Brightness Normalization",
            "Dynamic Gating Module",
            "Structural Information"
        ],
        "id": 870,
        "masked_question": "How does [mask1] complement the dynamic gating module to preserve structural information?",
        "masked_number": 1,
        "masked_elements": [
            "Brightness Normalization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.04697v1_figure_2.png",
        "paperid": "2411.04697v1",
        "paper_path": "./papers/2411.04697v1.json",
        "figure_id": "2411.04697v1_figure_2.png",
        "caption": "Figure 2: The architecture of BA-Fusion. BA-Fusion consists of a Brightness Adaptive Gate (BAG), and the multimodal fusion backbone network.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does brightness consistency loss stabilize fusion decoder outputs across diverse brightness conditions?",
        "relevant_section_ids": [
            "3.1",
            "3.3",
            "3.3.2"
        ],
        "relevant_context": [
            "To optimize the BAG module, we also propose an alternating training strategy with a brightness consistency loss function to force the gating module to select the brightness-related channel, which is driven by performance stability under the brightness jitter operation.",
            "In the second stage, we propose a brightness consistency loss function, which constrains the consistency of the brightness and structural features of the fusion results under different brightness perturbations with the feature representation of normal fusion results in the first stage.",
            "Considering that image brightness is related to the amplitude in the frequency domain, we introduce frequency domain amplitude information to design the brightness consistency loss. This encourages the network to pay closer attention to the brightness information and effectively select the channels that are related to brightness."
        ],
        "final_answer": "The brightness consistency loss enforces that the frequency‐domain amplitude (and thus brightness content) of the fused image remain consistent between the normal and brightness‐jittered inputs. By penalizing deviations in amplitude, it drives the Brightness Adaptive Gate to identify and normalize only the channels affected by brightness changes. As a result, the decoder always receives features with stable brightness representations, yielding fusion outputs that are consistent and robust across diverse illumination conditions.",
        "relevant_elements": [
            "Brightness Consistency Loss",
            "Fusion Decoder",
            "Brightness Variations"
        ],
        "id": 871,
        "masked_question": "How does [mask1] stabilize [mask2] outputs across diverse brightness conditions?",
        "masked_number": 2,
        "masked_elements": [
            "Brightness Consistency Loss",
            "Fusion Decoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.04697v1_figure_2.png",
        "paperid": "2411.04697v1",
        "paper_path": "./papers/2411.04697v1.json",
        "figure_id": "2411.04697v1_figure_2.png",
        "caption": "Figure 2: The architecture of BA-Fusion. BA-Fusion consists of a Brightness Adaptive Gate (BAG), and the multimodal fusion backbone network.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How could replacing normalization with adaptive scaling alleviate detail loss in the Brightness Adaptive Gate?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Brightness Adaptive Gate",
            "Brightness Normalization"
        ],
        "id": 873,
        "masked_question": "How could replacing [mask1] with adaptive scaling alleviate detail loss in the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Brightness Normalization",
            "Brightness Adaptive Gate"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.04697v1_figure_2.png",
        "paperid": "2411.04697v1",
        "paper_path": "./papers/2411.04697v1.json",
        "figure_id": "2411.04697v1_figure_2.png",
        "caption": "Figure 2: The architecture of BA-Fusion. BA-Fusion consists of a Brightness Adaptive Gate (BAG), and the multimodal fusion backbone network.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations arise from using RAG-based History Memory for personalization under privacy constraints?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "RAG-based History Memory"
        ],
        "id": 874,
        "masked_question": "What limitations arise from using [mask1] for personalization under privacy constraints?",
        "masked_number": 1,
        "masked_elements": [
            "RAG-based History Memory"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.11913v1_figure_1.png",
        "paperid": "2411.11913v1",
        "paper_path": "./papers/2411.11913v1.json",
        "figure_id": "2411.11913v1_figure_1.png",
        "caption": "Figure 1: An overview of the proposed framework for personalized autonomous vehicle motion control. The system workflow begins with processing four input streams (System Message S𝑆Sitalic_S, Human Instruction I𝐼Iitalic_I, Camera Image V𝑉Vitalic_V, and Historical Memory H𝐻Hitalic_H) through an on-board VLM, which generates personalized action policies P𝑃Pitalic_P containing MPC and PID control parameter matrices. These policies are then executed through the vehicle’s drive-by-wire system. If the human evaluates, human feedback F𝐹Fitalic_F is collected and stored in the RAG-based memory module for continuous learning and adaptation of the system’s behavior to individual preferences.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative control strategies could complement MPC Action Matrix to handle highly dynamic driving environments?",
        "relevant_section_ids": [
            "3.3",
            "3.5"
        ],
        "relevant_context": [
            "Section 3.3: \"…our VLM will generate two distinct action matrices to separately manage the PID controller for longitudinal movement and the MPC for lateral movement. These matrices translate the model’s understanding of the environment and user preferences into precise control actions…\"",
            "Section 3.5: \"…we implement a decoupled control strategy that separates lateral and longitudinal vehicle motion control. The lateral control is handled by MPC … while longitudinal control is managed through a PID controller calculating the front steering angle. … Our VLM generates the action matrix that primarily considers three key components…\""
        ],
        "final_answer": "A natural complement to an MPC-based action matrix in highly dynamic driving scenarios is a PID‐based controller. By decoupling lateral and longitudinal control—using MPC for one axis and a PID controller for the other—the system can more robustly handle rapid changes in vehicle dynamics.",
        "relevant_elements": [
            "MPC Action Matrix"
        ],
        "id": 875,
        "masked_question": "What alternative control strategies could complement [mask1] to handle highly dynamic driving environments?",
        "masked_number": 1,
        "masked_elements": [
            "MPC Action Matrix"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.11913v1_figure_1.png",
        "paperid": "2411.11913v1",
        "paper_path": "./papers/2411.11913v1.json",
        "figure_id": "2411.11913v1_figure_1.png",
        "caption": "Figure 1: An overview of the proposed framework for personalized autonomous vehicle motion control. The system workflow begins with processing four input streams (System Message S𝑆Sitalic_S, Human Instruction I𝐼Iitalic_I, Camera Image V𝑉Vitalic_V, and Historical Memory H𝐻Hitalic_H) through an on-board VLM, which generates personalized action policies P𝑃Pitalic_P containing MPC and PID control parameter matrices. These policies are then executed through the vehicle’s drive-by-wire system. If the human evaluates, human feedback F𝐹Fitalic_F is collected and stored in the RAG-based memory module for continuous learning and adaptation of the system’s behavior to individual preferences.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates using both MPC Action Matrix and PID Action Matrix within a unified action policy?",
        "relevant_section_ids": [
            "3.3",
            "3.5"
        ],
        "relevant_context": [
            "In our approach, reasoning within the VLM framework enables the interpretation of diverse driving scenarios and user instructions to generate actionable outputs. Traditional controllers in motion control typically rely on a default set of parameters; however, following the approach in [42], our VLM will generate two distinct action matrices to separately manage the PID controller for longitudinal movement and the MPC for lateral movement.",
            "As shown in Fig. 1, we implement a decoupled control strategy that separates lateral and longitudinal vehicle motion control. The lateral control is handled by MPC calculating the longitudinal acceleration, while longitudinal control is managed through a PID controller calculating the front steering angle."
        ],
        "final_answer": "The unified policy includes both an MPC Action Matrix and a PID Action Matrix because the system uses a decoupled control strategy: MPC is best suited for optimizing lateral (steering) behavior, while PID is used for precise longitudinal (speed) control. By generating separate action matrices for each controller, the VLM can translate its scene understanding and user preferences into the appropriate low-level commands for both steering and speed regulation.",
        "relevant_elements": [
            "MPC Action Matrix",
            "PID Action Matrix"
        ],
        "id": 876,
        "masked_question": "What motivates using both [mask1] and PID Action Matrix within a unified action policy?",
        "masked_number": 1,
        "masked_elements": [
            "MPC Action Matrix"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.11913v1_figure_1.png",
        "paperid": "2411.11913v1",
        "paper_path": "./papers/2411.11913v1.json",
        "figure_id": "2411.11913v1_figure_1.png",
        "caption": "Figure 1: An overview of the proposed framework for personalized autonomous vehicle motion control. The system workflow begins with processing four input streams (System Message S𝑆Sitalic_S, Human Instruction I𝐼Iitalic_I, Camera Image V𝑉Vitalic_V, and Historical Memory H𝐻Hitalic_H) through an on-board VLM, which generates personalized action policies P𝑃Pitalic_P containing MPC and PID control parameter matrices. These policies are then executed through the vehicle’s drive-by-wire system. If the human evaluates, human feedback F𝐹Fitalic_F is collected and stored in the RAG-based memory module for continuous learning and adaptation of the system’s behavior to individual preferences.",
        "qtype": "Design_Rationale",
        "response": "The motivation for using both MPC Action Matrix and PID Action Matrix within a unified action policy stems from a **decoupled control strategy** that separates lateral and longitudinal vehicle motion control.\n\nHere's the breakdown:\n1.  **PID for Longitudinal Control:** The text states, \"For the longitudinal control, the PID controller calculates the acceleration...\". This means the PID Action Matrix contains the parameters (proportional, integral, and derivative terms) for managing the vehicle's speed and acceleration.\n2.  **MPC for Lateral Control:** The text explains, \"For the lateral control, our MPC approach utilizes a linear vehicle dynamics model... to optimize the front steering angle...\". Thus, the MPC Action Matrix contains the weighting factors (e.g., for lateral error, heading error, and control effort) for controlling the vehicle's steering and path.\n\nThe **unified action policy (P)** generated by the on-board VLM encompasses both of these distinct matrices because the VLM is designed to \"generate two distinct action matrices to separately manage the PID controller for longitudinal movement and the MPC for lateral movement.\" This allows the system to generate a comprehensive control strategy that leverages the strengths of each controller type for its specific task (PID for longitudinal dynamics, MPC for lateral dynamics) while enabling personalization by adapting the control parameters based on human instructions, visual inputs, and historical preferences."
    },
    {
        "question": "What drives integrating RAG-based History Memory with Human Evaluation for continuous personalization?",
        "relevant_section_ids": [
            "1",
            "3.1",
            "3.4"
        ],
        "relevant_context": [
            "We introduce a RAG-based memory module that incorporates human feedback for continuous learning and adaptation, enabling personalized driving experiences through iterative refinement of control strategies.",
            "After each trip, users can provide feedback E on the generated control policy P for the current situations (including instructions I and visual input V), which helps refine the VLM’s reasoning process. Subsequently, the instructions I, scene description O, policy P, and feedback E are packaged as a historical data entry and stored in the RAG database.",
            "Given that our 8B-parameter VLM lacks the extensive reasoning capabilities of larger, 100B-200B parameter models, we employ a RAG-based approach and integrate a memory module to enhance reasoning and enable human feedback learning."
        ],
        "final_answer": "The integration is driven by the need for continuous learning and adaptation to each user’s driving style. By retrieving past interactions from a RAG-based memory and incorporating human evaluations after each trip, the system can iteratively refine its VLM-generated control policies and deliver truly personalized driving experiences.",
        "relevant_elements": [
            "RAG-based History Memory",
            "Human Evaluation"
        ],
        "id": 877,
        "masked_question": "What drives integrating [mask1] with Human Evaluation for continuous personalization?",
        "masked_number": 1,
        "masked_elements": [
            "RAG-based History Memory"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.11913v1_figure_1.png",
        "paperid": "2411.11913v1",
        "paper_path": "./papers/2411.11913v1.json",
        "figure_id": "2411.11913v1_figure_1.png",
        "caption": "Figure 1: An overview of the proposed framework for personalized autonomous vehicle motion control. The system workflow begins with processing four input streams (System Message S𝑆Sitalic_S, Human Instruction I𝐼Iitalic_I, Camera Image V𝑉Vitalic_V, and Historical Memory H𝐻Hitalic_H) through an on-board VLM, which generates personalized action policies P𝑃Pitalic_P containing MPC and PID control parameter matrices. These policies are then executed through the vehicle’s drive-by-wire system. If the human evaluates, human feedback F𝐹Fitalic_F is collected and stored in the RAG-based memory module for continuous learning and adaptation of the system’s behavior to individual preferences.",
        "qtype": "Design_Rationale",
        "response": "The integration of the RAG-based History Memory (H) with Human Evaluation for continuous personalization is driven by several key factors:\n\n1.  **Enhancing Reasoning Capabilities of a Compact VLM:** The text states that the proposed VLM is a compact 9B-parameter model and \"lacks the"
    },
    {
        "question": "What is the rationale for tiling sampled frames with index annotations before VLM query?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "The sampled frames are then tiled in an image with the annotation of the time order of the frames (Fig. 2 (b)).",
            "The image was then fed into a VLM to identify the frame closest to a specific action timing; Fig. 2 (c) illustrates the start timing of an action."
        ],
        "final_answer": "By tiling the sampled frames into a single image and overlaying each with its frame‐index annotation, the VLM can directly compare all candidate frames at once and select the index corresponding to the moment closest to the queried action timing.",
        "relevant_elements": [
            "tiled image",
            "VLM query"
        ],
        "id": 878,
        "masked_question": "What is the rationale for [mask1] sampled frames with index annotations before [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "tiled image",
            "VLM query"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.17422v4_figure_2.png",
        "paperid": "2408.17422v4",
        "paper_path": "./papers/2408.17422v4.json",
        "figure_id": "2408.17422v4_figure_2.png",
        "caption": "Figure 2: The proposed pipeline for open-vocabulary video action localization using a VLM consists of the following steps: (a) Frames are sampled at regular intervals from a time window, covering the entire video in the first iteration. (b) The sampled frames are then tiled in an image with annotations indicating the time order of the frames. (c) This image is then fed into a VLM to identify the frames closest to a specific timing of an action (e.g., the start timing of an action). (d) The sampling window is updated by centering on the selected frame with a narrower sampling interval. Bottom panel (1) For general action localization, the start time of the action in the video is determined by iterating steps (a) to (d). Bottom panel (2) By estimating the end time of the action in the same manner, the action is localized in the video.",
        "qtype": "Design_Rationale",
        "response": "The rationale for performing the processes described in `[mask1]` (sampling frames and generating an image with index annotations) before `[mask2]` (querying the VLM) is as follows:\n\n1.  **Preparation of VLM Input:** The core reason is to create the necessary input for the VLM. A Visual-Language Model (VLM) requires a visual input (an image) to perform its analysis. The process in `[mask1]` (steps (a) and (b) in Figure 2) generates this specific visual input.\n2.  **Facilitating Temporal Understanding:** By sampling frames at regular intervals from a time window and tiling them into a single image, the method provides the VLM with a concise visual overview of a segment of the video (Figure 2a, b).\n3.  **Enabling Frame Identification:** Crucially, the sampled frames are concatenated *with annotations of their time order* (e.g., numbers 1 to 16"
    },
    {
        "question": "What motivates sequentially estimating start and end frames instead of detecting both simultaneously?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "start frame",
            "end frame"
        ],
        "id": 879,
        "masked_question": "What motivates sequentially estimating [mask1] and end frames instead of detecting both simultaneously?",
        "masked_number": 1,
        "masked_elements": [
            "start frame"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.17422v4_figure_2.png",
        "paperid": "2408.17422v4",
        "paper_path": "./papers/2408.17422v4.json",
        "figure_id": "2408.17422v4_figure_2.png",
        "caption": "Figure 2: The proposed pipeline for open-vocabulary video action localization using a VLM consists of the following steps: (a) Frames are sampled at regular intervals from a time window, covering the entire video in the first iteration. (b) The sampled frames are then tiled in an image with annotations indicating the time order of the frames. (c) This image is then fed into a VLM to identify the frames closest to a specific timing of an action (e.g., the start timing of an action). (d) The sampling window is updated by centering on the selected frame with a narrower sampling interval. Bottom panel (1) For general action localization, the start time of the action in the video is determined by iterating steps (a) to (d). Bottom panel (2) By estimating the end time of the action in the same manner, the action is localized in the video.",
        "qtype": "Design_Rationale",
        "response": "The masked text `[mask1]` refers to the 'start' frame, as indicated by the red box and label in the image.\n\n**Step-by-step reasoning:**\n\n1.  **Identify the relevant section:** The \"III Method\" section, specifically \"III-A Core Pipeline,\" discusses how the start and end times are estimated.\n2.  **Locate the description of start/end estimation:** The text states: \"For general action localization, we first estimate the start time of the action in the video using T-PIVOT (Fig. 2 bottom panel (1)). Then, **by re-setting a sampling window for the period after the start time**, we estimate the end time of the action in the same manner (Fig. 2 bottom panel (2)).\"\n3.  **Analyze the sequential process"
    },
    {
        "question": "How does Sample Frames module compute frame selection when halving the sampling window each iteration?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "The pipeline starts by sampling a number of frames at regular intervals from a time window of the given video (Fig. 2 (a)).",
            "The sampled frames are then tiled in an image with the annotation of the time order of the frames (Fig. 2 (b)).",
            "Finally, the sampling window is updated centering the selected frame with a narrower sampling interval (Fig. 2 (d)).",
            "The sampling window is halved with each iteration, and this process is repeated for a specific number of iterations."
        ],
        "final_answer": "At each iteration, the Sample Frames module takes the current (potentially already halved) time window and uniformly samples a fixed number of frames at regular temporal intervals across that window. After the VLM identifies the closest frame, the module centers a new window around that frame, halves its duration, and then again uniformly samples the same number of frames within this narrowed window.",
        "relevant_elements": [
            "Sample Frames"
        ],
        "id": 880,
        "masked_question": "How does [mask1] module compute frame selection when halving the sampling window each iteration?",
        "masked_number": 1,
        "masked_elements": [
            "Sample Frames"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.17422v4_figure_2.png",
        "paperid": "2408.17422v4",
        "paper_path": "./papers/2408.17422v4.json",
        "figure_id": "2408.17422v4_figure_2.png",
        "caption": "Figure 2: The proposed pipeline for open-vocabulary video action localization using a VLM consists of the following steps: (a) Frames are sampled at regular intervals from a time window, covering the entire video in the first iteration. (b) The sampled frames are then tiled in an image with annotations indicating the time order of the frames. (c) This image is then fed into a VLM to identify the frames closest to a specific timing of an action (e.g., the start timing of an action). (d) The sampling window is updated by centering on the selected frame with a narrower sampling interval. Bottom panel (1) For general action localization, the start time of the action in the video is determined by iterating steps (a) to (d). Bottom panel (2) By estimating the end time of the action in the same manner, the action is localized in the video.",
        "qtype": "Implementation_Details",
        "response": "The module labeled \"(a) Sample Frames\" computes frame selection when halving the sampling window each iteration by:\n\n1.  **Updating the Time Window:** The sampling window is narrowed (halved) and centered around the frame identified in the previous iteration as being closest to the specific action timing (from step (c)).\n2.  **Equal Interval Sampling:** Within this *new, narrower sampling window*, the module continues to \"equally sample N frames\" at regular intervals. This means the spacing between the sampled frames becomes smaller as the window shrinks, but the number of frames sampled (N) remains constant."
    },
    {
        "question": "How does Adjust Sampling Window update interval boundaries based on the chosen frame index?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "Finally, the sampling window is updated centering the selected frame with a narrower sampling interval (Fig. 2 (d)).",
            "The sampling window is halved with each iteration, and this process is repeated for a specific number of iterations."
        ],
        "final_answer": "After the VLM returns the index of the frame closest to the queried action point, the method recenters the next sampling time window on that frame and reduces its duration—specifically, it halves the previous interval around the chosen frame index. This updates both the start and end boundaries to focus the next round of sampling around the estimated action moment.",
        "relevant_elements": [
            "Adjust Sampling Window"
        ],
        "id": 881,
        "masked_question": "How does [mask1] update interval boundaries based on the chosen frame index?",
        "masked_number": 1,
        "masked_elements": [
            "Adjust Sampling Window"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.17422v4_figure_2.png",
        "paperid": "2408.17422v4",
        "paper_path": "./papers/2408.17422v4.json",
        "figure_id": "2408.17422v4_figure_2.png",
        "caption": "Figure 2: The proposed pipeline for open-vocabulary video action localization using a VLM consists of the following steps: (a) Frames are sampled at regular intervals from a time window, covering the entire video in the first iteration. (b) The sampled frames are then tiled in an image with annotations indicating the time order of the frames. (c) This image is then fed into a VLM to identify the frames closest to a specific timing of an action (e.g., the start timing of an action). (d) The sampling window is updated by centering on the selected frame with a narrower sampling interval. Bottom panel (1) For general action localization, the start time of the action in the video is determined by iterating steps (a) to (d). Bottom panel (2) By estimating the end time of the action in the same manner, the action is localized in the video.",
        "qtype": "Implementation_Details",
        "response": "The masked area, labeled \"(d) Adjust Sampling Window,\" updates the interval boundaries by centering a new, narrower sampling time window around the \"chosen frame in (c)\" (the frame identified by the VLM in step (c) as closest to the specific action timing). The text specifies that this new sampling window's size is halved with each iteration to progressively narrow the search interval."
    },
    {
        "question": "How does Targeted Contrastive Matching optimize perturbation using modality-aware embeddings for semantic alignment?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "To learn the image perturbation at each step, we propose Targeted Contrastive Matching (TCM), where the cross-modality semantics of clean samples, target samples, and the current adversarial samples are aligned/diverged in the same latent embedding space.",
            "Specifically, TCM maximizes the similarity between the current adversarial example and the target reference example, while minimizing the similarity between the current adversarial example and the original clean example across both vision and text modalities.",
            "To optimize the image perturbation δ through the TCM objective L_TCM, projected gradient descent [33] is adopted and the optimization can be expressed as:\nwhere Π projects δ back into the ℓ∞-ball, α is the step size, and ∇_δ L_TCM is the gradient of the TCM loss."
        ],
        "final_answer": "Targeted Contrastive Matching (TCM) operates in the joint modality-aware embedding space of images and text. At each attack step it pulls the adversarial example’s embedding closer to the target reference embedding and simultaneously pushes it away from the original clean embedding. This contrastive objective is optimized by taking gradient steps on the image perturbation δ, and then projecting δ back into the allowed perturbation budget via projected gradient descent.",
        "relevant_elements": [
            "Targeted Contrastive Matching",
            "modality-aware embeddings"
        ],
        "id": 882,
        "masked_question": "How does [mask1] optimize perturbation using [mask2] for semantic alignment?",
        "masked_number": 2,
        "masked_elements": [
            "Targeted Contrastive Matching",
            "modality-aware embeddings"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15720v1_figure_2.png",
        "paperid": "2411.15720v1",
        "paper_path": "./papers/2411.15720v1.json",
        "figure_id": "2411.15720v1_figure_2.png",
        "caption": "Figure 2: The pipeline of the Chain of Attack (CoA) framework. (a) Our framework proposes using modality-aware embeddings to capture the semantic correspondence between images and texts. To enhance the adversarial transferability, we use a chain of attacks that explicitly updates the adversarial examples based on their previous multi-modal semantics in a step-by-step manner. A Targeted Contrastive Matching objective is further proposed to align and differentiate the semantics among clean, adversarial, and target reference examples. (b) Targeted response generation is conducted during inference, where the victim models give responses based on the adversarial examples. We further introduce a unified ASR computing strategy for automatic and comprehensive robustness evaluation of VLMs in response generation.",
        "qtype": "Implementation_Details",
        "response": "The **Targeted Contrastive Matching** (TCM) optimizes perturbation by leveraging **Modality-aware embeddings**.\n\nHere's how:\n1.  **Modality-aware Embeddings ("
    },
    {
        "question": "How is learnable δ updated via Projected Gradient Descent within Chain of Attack iterations?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "To optimize the image perturbation δ through the TCM objective L, projected gradient descent [33] is adopted and the optimization can be expressed as:\n\n    δ ← Πε (δ + α ∇δ L(δ))\n\nwhere Πε projects δ back into the ε-ball, α is the step size, and ∇δ L(δ) represents the gradient of the TCM loss."
        ],
        "final_answer": "Within each Chain of Attack iteration, the learnable perturbation δ is updated by taking a step in the direction of the TCM loss gradient and then projecting back into the allowed ε-ball: δ_{t+1} = Πε(δ_t + α ∇δ L_TCM(δ_t)), where α is the step size and Πε enforces the maximum perturbation budget.",
        "relevant_elements": [
            "learnable δ",
            "Projected Gradient Descent",
            "Chain of Attack"
        ],
        "id": 883,
        "masked_question": "How is [mask1] updated via [mask2] within Chain of Attack iterations?",
        "masked_number": 2,
        "masked_elements": [
            "learnable δ",
            "Projected Gradient Descent"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15720v1_figure_2.png",
        "paperid": "2411.15720v1",
        "paper_path": "./papers/2411.15720v1.json",
        "figure_id": "2411.15720v1_figure_2.png",
        "caption": "Figure 2: The pipeline of the Chain of Attack (CoA) framework. (a) Our framework proposes using modality-aware embeddings to capture the semantic correspondence between images and texts. To enhance the adversarial transferability, we use a chain of attacks that explicitly updates the adversarial examples based on their previous multi-modal semantics in a step-by-step manner. A Targeted Contrastive Matching objective is further proposed to align and differentiate the semantics among clean, adversarial, and target reference examples. (b) Targeted response generation is conducted during inference, where the victim models give responses based on the adversarial examples. We further introduce a unified ASR computing strategy for automatic and comprehensive robustness evaluation of VLMs in response generation.",
        "qtype": "Implementation_Details",
        "response": "The `Learnable δ` (image perturbation) is updated iteratively via projected gradient descent.\n\n1.  **Gradient Calculation**: The `Gradient` (∇) of the Targeted Contrastive Matching (TCM) loss (`L_TCM`) with respect to the adversarial image is computed. The TCM loss aims to maximize the similarity between the current adversarial example and the target reference example, and minimize similarity between the current adversarial example and the original clean example, across both vision and text modalities.\n2.  **Perturbation Update**: This calculated `Gradient` is then used to update the `Learnable δ` in a gradient descent step. Specifically, the new `δ` (`δ_t+1`) is computed by subtracting a scaled version of the `Gradient` (α * ∇ L_TCM) from the current `δ` (`δ_t`).\n3.  **Projection**: After the gradient update, the `δ` is subjected to a projection operation (`Project`) to ensure it remains within a predefined budget (e.g., an L-infinity ball), thereby ensuring the imperceptibility of the perturbation.\n\nThis process is repeated in each step of the Chain of Attack to gradually modify the adversarial example's semantics towards the"
    },
    {
        "question": "How does modality-aware embedding influence Targeted Contrastive Matching's alignment between clean and target representations?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "We use modality fusion of embeddings to capture the semantic correspondence between images and texts, the modality fusion for the clean and target image-text pairs can be achieved by the following calculations: … Where m_V and m_T are the modality-aware embeddings (MAE) for clean and target image-text pairs, respectively. λ is a modality-balancing hyperparameter.",
            "Specifically, TCM maximizes the similarity between the current adversarial example and the target reference example, while minimizing the similarity between the current adversarial example and the original clean example across both vision and text modalities."
        ],
        "final_answer": "By fusing vision and language encoder outputs into modality-aware embeddings (m_V for clean and m_T for target), the Chain of Attack framework provides unified joint representations. Targeted Contrastive Matching then operates directly on these fused embeddings—pulling the adversarial example’s embedding closer to the target MAE (m_T) while pushing it away from the clean MAE (m_V)—thereby aligning the adversarial perturbation toward the target semantics and away from the original clean semantics in a single shared embedding space.",
        "relevant_elements": [
            "modality-aware embedding",
            "Targeted Contrastive Matching"
        ],
        "id": 884,
        "masked_question": "How does [mask1] influence [mask2]'s alignment between clean and target representations?",
        "masked_number": 2,
        "masked_elements": [
            "modality-aware embedding",
            "Targeted Contrastive Matching"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15720v1_figure_2.png",
        "paperid": "2411.15720v1",
        "paper_path": "./papers/2411.15720v1.json",
        "figure_id": "2411.15720v1_figure_2.png",
        "caption": "Figure 2: The pipeline of the Chain of Attack (CoA) framework. (a) Our framework proposes using modality-aware embeddings to capture the semantic correspondence between images and texts. To enhance the adversarial transferability, we use a chain of attacks that explicitly updates the adversarial examples based on their previous multi-modal semantics in a step-by-step manner. A Targeted Contrastive Matching objective is further proposed to align and differentiate the semantics among clean, adversarial, and target reference examples. (b) Targeted response generation is conducted during inference, where the victim models give responses based on the adversarial examples. We further introduce a unified ASR computing strategy for automatic and comprehensive robustness evaluation of VLMs in response generation.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does sample relabeling integrate with Otsu thresholding to differentiate high- and low-confidence subsets?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "ANNE starts with a sample relabeling procedure [13  ###reference_b13###] using a threshold value τ to threshold the maximum prediction score for each training sample xᵢ, as follows: where the function onehot transforms the categorical distribution produced by f into a one-hot vector of size c, with the class containing the maximum probability assigned to yᵢ*, and all other classes assigned to 0.",
            "Next, ANNE runs the sample selection stage. Initially, we use the maximum prediction scores to divide the samples into two subsets, leveraging the Otsu’s algorithm [30  ###reference_b30###], as in [21  ###reference_b21###]. The first step is to determine a threshold value, denoted as θ, which splits D′ into two subsets, the high-confidence subset (HCS) D_HCS and the low-confidence subset (LCS) D_LCS."
        ],
        "final_answer": "ANNE first relabels each sample by converting its network prediction to a one-hot label when its maximum class probability exceeds a tunable threshold τ. Then it collects the maximum prediction scores of all samples and applies Otsu’s algorithm to find an optimal cutoff θ. Samples with max scores above θ form the high-confidence subset (HCS), and those below θ form the low-confidence subset (LCS).",
        "relevant_elements": [
            "Sample Relabelling",
            "Otsu thresholding"
        ],
        "id": 886,
        "masked_question": "How does [mask1] integrate with Otsu thresholding to differentiate high- and low-confidence subsets?",
        "masked_number": 1,
        "masked_elements": [
            "Sample Relabelling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.01613v1_figure_2.png",
        "paperid": "2411.01613v1",
        "paper_path": "./papers/2411.01613v1.json",
        "figure_id": "2411.01613v1_figure_2.png",
        "caption": "Figure 2: Our ANNE sample selection strategy starts with a sample relabeling approach [13], followed by a sample selection stage that first divides the training set into high-confidence (𝒟H⁢C⁢Ssubscript𝒟𝐻𝐶𝑆\\mathcal{D}_{HCS}caligraphic_D start_POSTSUBSCRIPT italic_H italic_C italic_S end_POSTSUBSCRIPT) and low-confidence (𝒟L⁢C⁢Ssubscript𝒟𝐿𝐶𝑆\\mathcal{D}_{LCS}caligraphic_D start_POSTSUBSCRIPT italic_L italic_C italic_S end_POSTSUBSCRIPT) subsets, according to the classification probability of the samples. Then, the samples from 𝒟L⁢C⁢Ssubscript𝒟𝐿𝐶𝑆\\mathcal{D}_{LCS}caligraphic_D start_POSTSUBSCRIPT italic_L italic_C italic_S end_POSTSUBSCRIPT will be divided into clean or noisy-label using an adaptive KNN approach, while samples from 𝒟H⁢C⁢Ssubscript𝒟𝐻𝐶𝑆\\mathcal{D}_{HCS}caligraphic_D start_POSTSUBSCRIPT italic_H italic_C italic_S end_POSTSUBSCRIPT will be divided into clean or noisy-label using an eigen-decomposition technique. As shown in the rightmost figure, our proposed adaptive KNN automatically changes the range to find the K𝐾Kitalic_K nearest neighbors, depending on the density of the sample in the feature space.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does sample relabeling influence clean versus noisy selection using Adaptive KNN and Eigen Decomposition?",
        "relevant_section_ids": [
            "3.2",
            "3.2.1",
            "3.2.2"
        ],
        "relevant_context": [
            "ANNE starts with a sample relabeling procedure [13] using a threshold value t to threshold the maximum prediction score for each training sample xᵢ, as follows: … the function R transforms the categorical distribution produced by f into a one-hot vector of size C, with the class containing the maximum probability assigned to y′ᵢ, and all other classes assigned to 0.",
            "Next, ANNE runs the sample selection stage. Initially, we use the maximum prediction scores to divide the samples into two subsets, leveraging Otsu’s algorithm [30]. The first step is to determine a threshold value ζ, which splits D′ into two subsets, the high-confidence subset (HCS) D_H and the low-confidence subset (LCS) D_L. To enable a more effective selection of clean and noisy samples from the subsets D_L and D_H, we apply a method robust to large noise rate problems to the LCS subset D_L, and a method robust to small noise rate problems to the HCS subset D_H. In particular, we use Eigen Decomposition for D_H, whereas for D_L we apply adaptive KNN.",
            "Adaptive KNN (AKNN): …We propose an adaptive k-nearest neighbour for noisy labels, where the value of k varies according to the local density in the feature space. … Samples with labels matching the prediction from the KNN classifier … are classified as clean, while those samples that do not match the KNN prediction are classified as noisy.",
            "Eigen Decomposition (FINE): FINE finds clean and noisy-label instances using the square of inner products between the image features produced by f and the dominant eigenvector computed from the features belonging to the same class. … we treat the sample as clean if it is aligned with the most dominant eigenvector, while most of the noisy-label samples tend not to be as well aligned. FINE uses a threshold parameter α to select the samples based on such inner product."
        ],
        "final_answer": "By first relabeling each sample’s softmax output into a hard pseudo-label (using a confidence threshold), ANNE then uses those scores to split the data into a high-confidence group (HCS) and a low-confidence group (LCS). In the high-confidence group—where relabelled predictions are already strong—it applies Eigen Decomposition (the FINE algorithm) to mark as clean any samples whose features align above a threshold with the class’s dominant eigenvector, and noisy otherwise. In the low-confidence group—where relabelled labels are more likely corrupted—it uses Adaptive KNN: it sets k based on local feature‐density and labels a sample clean if the majority of its k neighbours (under its relabelled pseudo-label) agree, noisy otherwise.",
        "relevant_elements": [
            "sample relabeling",
            "Adaptive KNN",
            "Eigen Decomposition"
        ],
        "id": 888,
        "masked_question": "How does [mask1] influence clean versus noisy selection using Adaptive KNN and Eigen Decomposition?",
        "masked_number": 1,
        "masked_elements": [
            "sample relabeling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.01613v1_figure_2.png",
        "paperid": "2411.01613v1",
        "paper_path": "./papers/2411.01613v1.json",
        "figure_id": "2411.01613v1_figure_2.png",
        "caption": "Figure 2: Our ANNE sample selection strategy starts with a sample relabeling approach [13], followed by a sample selection stage that first divides the training set into high-confidence (𝒟H⁢C⁢Ssubscript𝒟𝐻𝐶𝑆\\mathcal{D}_{HCS}caligraphic_D start_POSTSUBSCRIPT italic_H italic_C italic_S end_POSTSUBSCRIPT) and low-confidence (𝒟L⁢C⁢Ssubscript𝒟𝐿𝐶𝑆\\mathcal{D}_{LCS}caligraphic_D start_POSTSUBSCRIPT italic_L italic_C italic_S end_POSTSUBSCRIPT) subsets, according to the classification probability of the samples. Then, the samples from 𝒟L⁢C⁢Ssubscript𝒟𝐿𝐶𝑆\\mathcal{D}_{LCS}caligraphic_D start_POSTSUBSCRIPT italic_L italic_C italic_S end_POSTSUBSCRIPT will be divided into clean or noisy-label using an adaptive KNN approach, while samples from 𝒟H⁢C⁢Ssubscript𝒟𝐻𝐶𝑆\\mathcal{D}_{HCS}caligraphic_D start_POSTSUBSCRIPT italic_H italic_C italic_S end_POSTSUBSCRIPT will be divided into clean or noisy-label using an eigen-decomposition technique. As shown in the rightmost figure, our proposed adaptive KNN automatically changes the range to find the K𝐾Kitalic_K nearest neighbors, depending on the density of the sample in the feature space.",
        "qtype": "Experimental_Results",
        "response": "The [mask1], which represents the distribution of maximum prediction scores, plays a crucial role in influencing the clean versus noisy selection for both Adaptive KNN and Eigen Decomposition through a two-stage partitioning process:\n\n1.  **Initial Partitioning using Otsu's Threshold:**"
    },
    {
        "question": "How does Adaptive KNN adjust neighbor search radius based on local feature density?",
        "relevant_section_ids": [
            "3.2.1"
        ],
        "relevant_context": [
            "Unlike traditional KNN approaches, we propose an adaptive KNN method, where the number of nearest neighbors, denoted by k, varies depending on the local density of the training sample in the feature space F.",
            "We initially retrieve the nearest neighbours based on the samples with cosine similarity above threshold ε, for each sample x_i, forming the set N_i.",
            "We initially set ε to a high value and iteratively reduce it, while observing the number of neighbours |N_i| for each sample x_i.",
            "The minimum value of ε is defined as ε_min, and we control the number of neighbours by decrementing ε."
        ],
        "final_answer": "Adaptive KNN starts with a high cosine‐similarity threshold ε (small radius) and for each sample x_i it collects neighbours whose similarity exceeds ε. It then gradually lowers ε (thereby expanding the search radius) until a sufficient number of neighbours is found, stopping at a preset minimum ε_min. In dense regions only a few reductions are needed (keeping a small radius), while in sparse regions ε must be lowered further (expanding the radius), so that the neighborhood size adapts to local feature density.",
        "relevant_elements": [
            "Adaptive KNN"
        ],
        "id": 889,
        "masked_question": "How does [mask1] adjust neighbor search radius based on local feature density?",
        "masked_number": 1,
        "masked_elements": [
            "Adaptive KNN"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.01613v1_figure_2.png",
        "paperid": "2411.01613v1",
        "paper_path": "./papers/2411.01613v1.json",
        "figure_id": "2411.01613v1_figure_2.png",
        "caption": "Figure 2: Our ANNE sample selection strategy starts with a sample relabeling approach [13], followed by a sample selection stage that first divides the training set into high-confidence (𝒟H⁢C⁢Ssubscript𝒟𝐻𝐶𝑆\\mathcal{D}_{HCS}caligraphic_D start_POSTSUBSCRIPT italic_H italic_C italic_S end_POSTSUBSCRIPT) and low-confidence (𝒟L⁢C⁢Ssubscript𝒟𝐿𝐶𝑆\\mathcal{D}_{LCS}caligraphic_D start_POSTSUBSCRIPT italic_L italic_C italic_S end_POSTSUBSCRIPT) subsets, according to the classification probability of the samples. Then, the samples from 𝒟L⁢C⁢Ssubscript𝒟𝐿𝐶𝑆\\mathcal{D}_{LCS}caligraphic_D start_POSTSUBSCRIPT italic_L italic_C italic_S end_POSTSUBSCRIPT will be divided into clean or noisy-label using an adaptive KNN approach, while samples from 𝒟H⁢C⁢Ssubscript𝒟𝐻𝐶𝑆\\mathcal{D}_{HCS}caligraphic_D start_POSTSUBSCRIPT italic_H italic_C italic_S end_POSTSUBSCRIPT will be divided into clean or noisy-label using an eigen-decomposition technique. As shown in the rightmost figure, our proposed adaptive KNN automatically changes the range to find the K𝐾Kitalic_K nearest neighbors, depending on the density of the sample in the feature space.",
        "qtype": "Experimental_Results",
        "response": "The \"Adaptive KNN"
    },
    {
        "question": "How does prototype-based skill retrieval compensate missing sub-goal demonstrations during CiL stages?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "In the two-level policy hierarchy, we employ a skill prototype-based approach, in which skill prototypes capture the sequential patterns of actions and associated environmental states, as observed from expert demonstrations. These prototypes serve as a reference for skills learned from a multi-stage data stream. Through this prototype-based skill retrieval method, the policy flexibly uses skills that are shareable among tasks, potentially learned in the past or future, for policy evaluation.",
            "To facilitate skill retrieval from demonstrations, we encode observation and goal pairs (o_t, g_t) into state embeddings using a function f. We employ a skill retriever r. For this, we use multifaceted skill prototypes P, where P is the set of learned skill prototypes. These prototypes capture the sequential patterns of expert demonstrations associated with specific goal-reaching tasks. The similarity function s is defined as the maximum similarity between the current state embedding and each prototype’s bases. At inference time, the retriever compares the current (o_t, g_t) embedding against all prototypes and selects the most similar one; its associated adapter parameters are then fed to the decoder to produce the missing action segment."
        ],
        "final_answer": "When a demonstration at a given CiL stage is missing one or more sub-goal segments, the system encodes the current observation–goal pair into a state embedding and computes its similarity to a bank of learned skill prototypes. Each prototype summarizes the action–state patterns of a sub-goal from previous stages. By selecting the prototype whose bases are most similar to the current embedding, the framework retrieves the corresponding adapter parameters and feeds them to the skill decoder. This effectively “fills in” the missing sub-goal demonstration by reusing a previously learned skill that best matches the partial sequence, allowing successful completion despite incomplete demonstrations.",
        "relevant_elements": [
            "Prototype-based skill incremental learning",
            "Skill Retriever"
        ],
        "id": 890,
        "masked_question": "How does [mask1] compensate missing sub-goal demonstrations during CiL stages?",
        "masked_number": 1,
        "masked_elements": [
            "Skill Retriever"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.22658v1_figure_1.png",
        "paperid": "2410.22658v1",
        "paper_path": "./papers/2410.22658v1.json",
        "figure_id": "2410.22658v1_figure_1.png",
        "caption": "Figure 1: \nThe scenario demonstrating how IsCiL enhances continual imitation learning efficiency through retrievable skills:\n(i) Prototype-based skill incremental learning: despite the failure of τ1subscript𝜏1\\tau_{1}italic_τ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT, skills are incrementally learned from the available demonstrations. In later stages, missing skills for τ1subscript𝜏1\\tau_{1}italic_τ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT are retrieved from other tasks, achieving the resolution of τ1subscript𝜏1\\tau_{1}italic_τ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT and illustrating the reversibility and efficiency of retrievable skills.\n(ii) Task-wise selective adaptation: IsCiL effectively retrieves relevant learned skills, facilitating rapid task adaptation.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does task-wise selective adaptation use retrievable skills for rapid unseen task execution?",
        "relevant_section_ids": [
            "3.2",
            "3.4"
        ],
        "relevant_context": [
            "In (ii) the task-wise selective adaptation, we devise efficient task adaptation procedures in the policy hierarchy to adapt to specific tasks using incrementally learned skills. This enables the CiL agent to not only facilitate adaptation to shifts in task distribution (e.g., due to non-stationary environment conditions) but also support task unlearning upon explicit user request (e.g., due to privacy concerns).",
            "The evaluation process adapts to novel tasks and sub-goal sequences from the environment by modifying the goal g. This adjustment enables the inference of appropriate current actions, in a manner of similar to handling learned tasks."
        ],
        "final_answer": "Task-wise selective adaptation executes rapid unseen task inference by taking the new sub-goal sequence as input, passing it through the skill retriever to fetch the corresponding learned skill prototypes, and then feeding those retrieved adapters into the skill decoder to immediately produce the correct actions—allowing the agent to perform novel tasks on the fly without any extra training.",
        "relevant_elements": [
            "Task-wise selective adaptation",
            "Skill Retriever"
        ],
        "id": 891,
        "masked_question": "How does [mask1] use [mask2] for rapid unseen task execution?",
        "masked_number": 2,
        "masked_elements": [
            "Task-wise selective adaptation",
            "Skill Retriever"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.22658v1_figure_1.png",
        "paperid": "2410.22658v1",
        "paper_path": "./papers/2410.22658v1.json",
        "figure_id": "2410.22658v1_figure_1.png",
        "caption": "Figure 1: \nThe scenario demonstrating how IsCiL enhances continual imitation learning efficiency through retrievable skills:\n(i) Prototype-based skill incremental learning: despite the failure of τ1subscript𝜏1\\tau_{1}italic_τ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT, skills are incrementally learned from the available demonstrations. In later stages, missing skills for τ1subscript𝜏1\\tau_{1}italic_τ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT are retrieved from other tasks, achieving the resolution of τ1subscript𝜏1\\tau_{1}italic_τ start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT and illustrating the reversibility and efficiency of retrievable skills.\n(ii) Task-wise selective adaptation: IsCiL effectively retrieves relevant learned skills, facilitating rapid task adaptation.",
        "qtype": "Experimental_Results",
        "response": "To explain how **Task-wise selective adaptation** ([mask1]) uses **retrieved skills** ([mask2]) for rapid unseen task execution, let's break down the process based on the provided figure and text:\n\n1.  **Purpose of Task-wise selective adaptation ([mask1]):** As per the text and Figure 1 (ii) caption, this component's goal is to enable \"rapid task adaptation\" to \"unseen tasks\" (τ_u) by effectively using \"incrementally learned skills.\"\n\n2.  **Input for unseen task execution:** For an unseen task τ_u, the system is given its sequence of sub-goals (e.g., g6, g2, g3, g5) as"
    },
    {
        "question": "What limitations arise from FiLM-based EEG adapter versus cross-attention methods for embedding injection?",
        "relevant_section_ids": [
            "2.4"
        ],
        "relevant_context": [
            "Previous works, e.g., [19] have demonstrated that FiLM is more suitable for incorporating category information (e.g., EEG signals), while the cross-attention method is more applicable to sequential information (e.g., text description).",
            "In addition, compared to the additional 15% Gflops overhead introduced by cross-attention, the computational cost associated with FiLM is almost negligible [19]."
        ],
        "final_answer": "By using FiLM rather than cross-attention to inject EEG embeddings, the model gains almost negligible extra compute cost, but at the expense of losing cross-attention’s superior handling of sequential or temporal conditioning. In other words, FiLM is well suited to static, category‐style signals like EEG summaries but is less effective than cross-attention at modeling sequence‐dependent information.",
        "relevant_elements": [
            "EEG adapter",
            "FiLM",
            "cross-attention"
        ],
        "id": 894,
        "masked_question": "What limitations arise from FiLM-based [mask1] versus [mask2] methods for embedding injection?",
        "masked_number": 2,
        "masked_elements": [
            "EEG adapter",
            "cross-attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.14021v1_figure_2.png",
        "paperid": "2409.14021v1",
        "paper_path": "./papers/2409.14021v1.json",
        "figure_id": "2409.14021v1_figure_2.png",
        "caption": "Figure 2: Overview of our BrainDreamer. After aligning the EEG signals, images, and text using a mask-based triple contrastive learning strategy, we design an EEG adapter based on the trained EEG encoder. The EEG adapter employs the FiLM to modulate EEG embeddings. Then, the EEG and text embeddings are fed into pre-trained Stable Diffusion to generate reasoning-coherent images.",
        "qtype": "Others",
        "response": "The provided text states: \"Previous works, e.g., [19] have demonstrated that FiLM [mask1] is more suitable for incorporating category information (e.g., EEG signals), while the cross-attention method [mask2] is more applicable to sequential information (e.g., text description).\"\n\nTherefore, a limitation that arises from **FiLM-based (EEG Adapter) methods** compared to **cross-attention methods** is that FiLM is **less applicable or effective for incorporating sequential information**, such as text descriptions, into the model. Cross-attention is better suited for handling such sequential data."
    },
    {
        "question": "How might text encoder biases influence mask-based triple contrastive learning and affect EEG adapter outputs ethically?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "text encoder",
            "mask-based triple contrastive learning",
            "EEG adapter"
        ],
        "id": 895,
        "masked_question": "How might [mask1] biases influence mask-based triple contrastive learning and affect EEG adapter outputs ethically?",
        "masked_number": 1,
        "masked_elements": [
            "text encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.14021v1_figure_2.png",
        "paperid": "2409.14021v1",
        "paper_path": "./papers/2409.14021v1.json",
        "figure_id": "2409.14021v1_figure_2.png",
        "caption": "Figure 2: Overview of our BrainDreamer. After aligning the EEG signals, images, and text using a mask-based triple contrastive learning strategy, we design an EEG adapter based on the trained EEG encoder. The EEG adapter employs the FiLM to modulate EEG embeddings. Then, the EEG and text embeddings are fed into pre-trained Stable Diffusion to generate reasoning-coherent images.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What reasoning drives using mask-based triple contrastive learning to align EEG, image, and text embeddings?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "Previous works [2,26] have attempted to align the EEG embeddings with the CLIP image embeddings, and then input the EEG embeddings to the generative model for image generation. We believe that such image-EEG alignment is incomplete due to the following reasons: 1) Most generative models are text-to-image models (e.g., Imagen and Stable Diffusion), which are more sensitive to text embeddings. Despite CLIP’s impressive image-text representation capabilities, there still exists a certain degree of domain gap between image and text modalities. 2) Textual information offers greater flexibility and controllability, which is why text embeddings are often considered as “ground truth” in most multi-modal works [37,32]. Therefore, we also incorporate textual information to map EEG embeddings to the CLIP embedding space in addition to image information. We design a mask-based triple contrastive learning strategy for embedding alignment.",
            "In addition, we employ masked modeling on the image and EEG data. This not only enhances the robustness of the features but also reduces training costs."
        ],
        "final_answer": "They found that aligning EEG only to image embeddings is insufficient because modern diffusion models are text-to-image and depend heavily on text embeddings, and because CLIP’s image–text space still has a domain gap. Text embeddings also provide richer, more controllable semantic supervision often treated as “ground truth.” Consequently, they extend contrastive alignment to include EEG, image, and text jointly, and apply masking on the EEG and image inputs to improve robustness and cut training overhead.",
        "relevant_elements": [
            "mask-based triple contrastive learning",
            "Image Encoder",
            "Text Encoder"
        ],
        "id": 896,
        "masked_question": "What reasoning drives using [mask1] to align EEG, [mask2], and text embeddings?",
        "masked_number": 2,
        "masked_elements": [
            "mask-based triple contrastive learning",
            "Image Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.14021v1_figure_2.png",
        "paperid": "2409.14021v1",
        "paper_path": "./papers/2409.14021v1.json",
        "figure_id": "2409.14021v1_figure_2.png",
        "caption": "Figure 2: Overview of our BrainDreamer. After aligning the EEG signals, images, and text using a mask-based triple contrastive learning strategy, we design an EEG adapter based on the trained EEG encoder. The EEG adapter employs the FiLM to modulate EEG embeddings. Then, the EEG and text embeddings are fed into pre-trained Stable Diffusion to generate reasoning-coherent images.",
        "qtype": "Design_Rationale",
        "response": "The reasoning for using [mask1] (Mask-based Triple Contrastive Learning) to align EEG, [mask2] (image), and text embeddings is multifaceted, addressing perceived limitations of prior alignment strategies:\n\n1.  **Bridging the Domain Gap and Leveraging Text Sensitivity:** The core objective is to map EEG embeddings into the CLIP embedding space because the pre-trained Stable Diffusion model primarily operates on latent features within this space. Previous works primarily aligned EEG with image embeddings. However, the authors argue this is \"incomplete\" because most advanced generative models (like Stable Diffusion) are **text-to-image models and are more sensitive to text embeddings**. Directly incorporating text alignment allows the EEG embeddings to better leverage the strong semantic grounding provided by text, which these models are optimized to interpret.\n2.  **Increased Flexibility and Controllability:** Textual information offers greater flexibility and controllability. It is often treated as \"ground truth\" in multi-modal research due to its precise semantic power. By including text in the alignment, the EEG embeddings gain"
    },
    {
        "question": "What motivates freezing EEG encoder parameters during reconstruction stage?",
        "relevant_section_ids": [
            "2.2",
            "2.4"
        ],
        "relevant_context": [
            "In Stage 2 we construct an EEG adapter, consisting of an EEG encoder and a feature projection module, where the parameter weights of the EEG encoder remain fixed.",
            "As shown in Fig. 2, the EEG adapter consists of a frozen EEG encoder and a feature projection module.",
            "Compared to the additional 15% Gflops overhead introduced by cross-attention, the computational cost associated with FiLM is almost negligible."
        ],
        "final_answer": "During the reconstruction stage the EEG encoder’s weights are frozen so that the embedding mapping learned in the first (alignment) stage is preserved, and only the lightweight feature-projection module (injected via FiLM) needs to be trained, keeping the computational overhead almost negligible.",
        "relevant_elements": [
            "EEG Encoder",
            "Stage2: Reconstruction"
        ],
        "id": 897,
        "masked_question": "What motivates freezing [mask1] parameters during [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "EEG Encoder",
            "Stage2: Reconstruction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.14021v1_figure_2.png",
        "paperid": "2409.14021v1",
        "paper_path": "./papers/2409.14021v1.json",
        "figure_id": "2409.14021v1_figure_2.png",
        "caption": "Figure 2: Overview of our BrainDreamer. After aligning the EEG signals, images, and text using a mask-based triple contrastive learning strategy, we design an EEG adapter based on the trained EEG encoder. The EEG adapter employs the FiLM to modulate EEG embeddings. Then, the EEG and text embeddings are fed into pre-trained Stable Diffusion to generate reasoning-coherent images.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What drives integrating CQT transform with STFT amplitude spectrogram and Mel spectrogram?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "The Mel spectrogram provides higher frequency resolution in the low-frequency range, which facilitates the analysis of low-frequency line spectrum components.",
            "The CQT spectrogram offers higher frequency resolution in the low-frequency range and improved temporal resolution in the high-frequency range.",
            "It not only facilitates the analysis of low-frequency components but also provides information on periodic modulation in the high-frequency portion, such as propeller rhythm."
        ],
        "final_answer": "The integration is driven by the complementary time–frequency resolution properties of the three transforms: the STFT amplitude spectrogram provides a general time–frequency representation, the Mel spectrogram enhances low-frequency resolution, and the CQT spectrogram further delivers both high resolution at low frequencies and improved temporal resolution at high frequencies to capture periodic modulation (e.g., propeller rhythm).",
        "relevant_elements": [
            "CQT transform",
            "STFT amplitude spectrogram",
            "Mel spectrogram"
        ],
        "id": 898,
        "masked_question": "What drives integrating [mask1] with [mask2] and Mel spectrogram?",
        "masked_number": 2,
        "masked_elements": [
            "CQT transform",
            "STFT amplitude spectrogram"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.02758v1_figure_1.png",
        "paperid": "2411.02758v1",
        "paper_path": "./papers/2411.02758v1.json",
        "figure_id": "2411.02758v1_figure_1.png",
        "caption": "Figure 1: The general process of the data acquisition, preprocessing, and feature extraction.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates summing 2-D modulation spectrum into 1-D DEMON spectrum?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "To represent the modulation components of the signal more intuitively, the 2D-DEMON spectrum can be summed along the modulation frequency dimension to obtain the 1D-DEMON spectrum.",
            "The peaks in the 1D-DEMON spectrum reflect the shaft frequency and blade frequency of the propeller (fundamental frequency and its harmonics), which contain robust physical characteristics of the target."
        ],
        "final_answer": "Summing the 2-D modulation spectrum into a 1-D DEMON spectrum is motivated by the desire to represent the modulation components more intuitively; the resulting 1-D spectrum’s peaks clearly indicate the propeller’s shaft and blade frequencies, providing robust physical characteristics of the target.",
        "relevant_elements": [
            "2-D modulation spectrum",
            "1-D DEMON spectrum"
        ],
        "id": 899,
        "masked_question": "What motivates summing [mask1] into 1-D DEMON spectrum?",
        "masked_number": 1,
        "masked_elements": [
            "2-D modulation spectrum"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.02758v1_figure_1.png",
        "paperid": "2411.02758v1",
        "paper_path": "./papers/2411.02758v1.json",
        "figure_id": "2411.02758v1_figure_1.png",
        "caption": "Figure 1: The general process of the data acquisition, preprocessing, and feature extraction.",
        "qtype": "Design_Rationale",
        "response": "The text states that the \"2D-DEMON spectrum can be summed along the modulation frequency dimension to obtain the 1D-DEMON spectrum\" for the following reasons:\n\n1.  **To represent the modulation components of the signal more intuitively.**\n2.  **To allow the peaks in the 1D-DEMON spectrum to reflect the shaft frequency and blade frequency of the propeller (fundamental frequency and its harmonics), which contain robust physical characteristics of the target.**"
    },
    {
        "question": "How is the CQT transform configured to balance temporal and frequency resolution before log concatenation?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "We apply the constant-Q transform (CQT) to obtain the CQT spectrogram. In this process, each frame’s amplitude spectrum is convolved with the CQT kernel, which consists of a bank of logarithmically spaced band-pass filters. Among them, the center frequency component of the k-th filter, denoted as f_k, is determined by Equation (2): where the octave resolution is represented by B, and the upper and lower frequencies to be processed are indicated by f_u and f_l, respectively. The ratio of the filter bandwidth Δf_k to the center frequency f_k is a constant Q.",
            "After the filtering, spectra undergo a logarithmic transformation and are concatenated across all frames to obtain the CQT spectrogram. The CQT spectrogram offers higher frequency resolution in the low-frequency range and improved temporal resolution in the high-frequency range."
        ],
        "final_answer": "The CQT is implemented using a bank of logarithmically spaced band-pass filters with a fixed bandwidth-to-center-frequency ratio (constant Q). An octave resolution parameter B controls the number of filters per octave between a lower cutoff f_l and upper cutoff f_u, yielding fine frequency resolution at low frequencies and finer temporal resolution at high frequencies before taking the logarithm and concatenating across frames.",
        "relevant_elements": [
            "CQT transform",
            "log concatenate"
        ],
        "id": 900,
        "masked_question": "How is the [mask1] configured to balance temporal and frequency resolution before log concatenation?",
        "masked_number": 1,
        "masked_elements": [
            "CQT transform"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.02758v1_figure_1.png",
        "paperid": "2411.02758v1",
        "paper_path": "./papers/2411.02758v1.json",
        "figure_id": "2411.02758v1_figure_1.png",
        "caption": "Figure 1: The general process of the data acquisition, preprocessing, and feature extraction.",
        "qtype": "Implementation_Details",
        "response": "The [mask1], which refers to the CQT transform, is configured to balance temporal and frequency resolution by using a bank of logarithmically spaced bandpass filters as its kernel. The key characteristic of this configuration is that the ratio of the filter bandwidth ($\\Delta f$) to the center frequency ($f_k$) is a constant ($Q$). This \"constant-Q\" property inherently provides higher frequency resolution in the low-frequency range and improved temporal resolution in the high-frequency range. Parameters such as the octave resolution, upper frequency, and lower frequency for processing also define the specifics of this filter bank, contributing to its resolution characteristics."
    },
    {
        "question": "How does summing across modulation frequencies convert the 2-D modulation spectrum into a 1-D DEMON spectrum?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "The modulation spectra corresponding to each sub-band are then concatenated to form the 2D-DEMON spectrum.",
            "To represent the modulation components of the signal more intuitively, the 2D-DEMON spectrum can be summed along the modulation frequency dimension to obtain the 1D-DEMON spectrum."
        ],
        "final_answer": "By collapsing the 2-D modulation spectrum along its modulation-frequency axis—i.e. summing the power or amplitude values across all modulation frequencies for each sub-band—the 2-D matrix is reduced to a single-dimensional vector, yielding the 1-D DEMON spectrum.",
        "relevant_elements": [
            "2-D modulation spectrum",
            "1-D DEMON spectrum"
        ],
        "id": 901,
        "masked_question": "How does summing across modulation frequencies convert the [mask1] into a 1-D DEMON spectrum?",
        "masked_number": 1,
        "masked_elements": [
            "2-D modulation spectrum"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.02758v1_figure_1.png",
        "paperid": "2411.02758v1",
        "paper_path": "./papers/2411.02758v1.json",
        "figure_id": "2411.02758v1_figure_1.png",
        "caption": "Figure 1: The general process of the data acquisition, preprocessing, and feature extraction.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] refers to the **2-D modulation spectrum** (also referred to as the 2D-DEMON spectrum in the text).\n\nAccording to the \"Preprocessing and Feature Extraction\" section:\n\"The modulation spectra corresponding to each sub-band are then concatenated to form the 2D-DEMON spectrum. To represent the modulation components of the signal more intuitively, the 2D-DEMON spectrum can be summed along the modulation frequency dimension to obtain the 1D-DEMON spectrum.\"\n\nTherefore, summing across modulation frequencies converts the 2-D modulation spectrum into a 1-D DEMON spectrum by **collapsing or integrating the spectrum along the modulation frequency axis**. This process aggregates the modulation components across all sub-bands at each specific modulation frequency, yielding a single dimension that more intuitively represents the overall modulation characteristics, such as propeller shaft and blade frequencies."
    },
    {
        "question": "How does Temporal Grounding filter key frames for Spatial Grounding using contrastive attention weights?",
        "relevant_section_ids": [
            "3.2.1"
        ],
        "relevant_context": [
            "Following [23], we leverage Gumbel-Softmax [18] to manage a differentiable discrete selection between the two calculated attention probabilities and obtain a contrastive map G to distinguish between positive and negative frames in the video. The first and second columns of G index the positive frames (i.e., G[:,0]) and negative frames (i.e., G[:,1]).",
            "Specifically, for positive frames, we utilize top-k function to select M video frames with the highest attention weight from G and gather their corresponding frame features as p⁺. For negative frames, we take bottom-k function to select M video frames with the lowest attention weight from G and gather their corresponding frame features as p⁻."
        ],
        "final_answer": "Temporal Grounding builds a contrastive attention map G via Gumbel-Softmax to score each frame for how question-relevant it is. It then applies a top-k selection on G[:,0] (the positive-attention column) to pick the M frames with the highest weights as key frames for Spatial Grounding, and a bottom-k selection on the same scores to pick M negative frames.",
        "relevant_elements": [
            "Temporal Grounding",
            "Spatial Grounding"
        ],
        "id": 902,
        "masked_question": "How does [mask1] filter key frames for Spatial Grounding using contrastive attention weights?",
        "masked_number": 1,
        "masked_elements": [
            "Temporal Grounding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.14319v1_figure_1.png",
        "paperid": "2409.14319v1",
        "paper_path": "./papers/2409.14319v1.json",
        "figure_id": "2409.14319v1_figure_1.png",
        "caption": "Figure 1: \nComparison between existing research and our work for TextVideoQA. (a) Existing research has two major problems: 1) Opaque decision-making; they hardly tell if their answers (e.g., “30”) are originated from the relevant scene texts in the videos, or attributed to other short-cuts. 2) Heavy reliance on scene-text recognition; their low QA accuracy could be due to a failure in decoding the textual answer (e.g., “30 M.P.H.”) from the corresponding scene text region. (b) We establish a novel pipeline by temporal-spatially localizing the scene text region and then decoding them into textual answers. We also enable direct evaluation on the grounded scene-text region.",
        "qtype": "Implementation_Details",
        "response": "The Temporal Grounding (TG) stage, indicated by [mask1], filters key frames for Spatial Grounding by performing the following steps:\n\n1.  **Calculate Attention Matrices:** TG first learns a global question embedding. Then, it applies cross-attention to calculate two attention matrices, A_pos and A_neg, which represent the correlation probabilities for positive and negative frames, respectively, with respect to the given question.\n2.  **Generate Contrastive Map:** It leverages Gumbel-Softmax to manage a differentiable discrete selection between these two attention probabilities (A_pos and A_neg), resulting in a contrast"
    },
    {
        "question": "How does temporal grounding help mitigate opaque decision-making in Text-Based VideoQA models?",
        "relevant_section_ids": [
            "1",
            "3.2.1"
        ],
        "relevant_context": [
            "However, the key factors causing performance loss remain unclear due to the opaque decision-making process. For example, is it because of poor QA or poor scene-text recognition in the video? Additionally, even for the correct predictions, these methods rarely tell if their answers are originated from relevant scene texts in the videos, or attributed to other short-cut paths. This severely impedes further improvements.",
            "Specifically, at the first stage, T2S-QA employs temporal grounding to distinguish positive frames (i.e., frames with question-relevant scene texts) from negative frames (i.e., frames without question-relevant scene texts) in a video. Given that motion blur and occlusion often obscure scene text in video frames, it subsequently refines the selection by identifying a few key positive frames that are most relevant to the question as the grounded frames."
        ],
        "final_answer": "By using temporal grounding to distinguish and select only those frames that contain question-relevant scene text, the model exposes which moments it relies on to answer. This frame-level evidence reduces the opacity of its decision process by showing when in the video the critical text appears, rather than hiding the reasoning in an end-to-end pipeline.",
        "relevant_elements": [
            "Temporal Grounding",
            "Text-Based VideoQA Model"
        ],
        "id": 903,
        "masked_question": "How does [mask1] help mitigate opaque decision-making in [mask2] models?",
        "masked_number": 2,
        "masked_elements": [
            "Temporal Grounding",
            "Text-Based VideoQA Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.14319v1_figure_1.png",
        "paperid": "2409.14319v1",
        "paper_path": "./papers/2409.14319v1.json",
        "figure_id": "2409.14319v1_figure_1.png",
        "caption": "Figure 1: \nComparison between existing research and our work for TextVideoQA. (a) Existing research has two major problems: 1) Opaque decision-making; they hardly tell if their answers (e.g., “30”) are originated from the relevant scene texts in the videos, or attributed to other short-cuts. 2) Heavy reliance on scene-text recognition; their low QA accuracy could be due to a failure in decoding the textual answer (e.g., “30 M.P.H.”) from the corresponding scene text region. (b) We establish a novel pipeline by temporal-spatially localizing the scene text region and then decoding them into textual answers. We also enable direct evaluation on the grounded scene-text region.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does spatial grounding complement scene text recognition to provide visual evidence for QA?",
        "relevant_section_ids": [
            "1",
            "3.2.2"
        ],
        "relevant_context": [
            "Such a setting enjoys three-fold advantages: First, the grounded scene-text regions serve as visual evidence to support textual answers, thus enabling a reliable TextVideoQA system.",
            "At the second stage, T2S-QA applies spatial grounding in each grounded frame to differentiate positive scene texts from negative ones. Since answers typically pertain to a small subset of the rich scene text present in a video frame, T2S-QA further selects partial positive scene texts covering the answer as the final grounding results.",
            "Our analysis reveal that answers only occupy a very small area in the video frame, as shown in Fig. 3(c). Therefore, we first need to distinguish the scene texts related to the question from numerous elements, and then locate a few critical strongly associated scene texts as visual answers.",
            "SG facilitates adaptive OCR token selection ... enabling it to differentiate positive OCR tokens from negative ones based on their similarity to the given question. ... We take the bounding boxes of the selected positive OCR tokens as grounded OCR tokens for answer grounding evaluation."
        ],
        "final_answer": "Spatial grounding pinpoints which detected text regions (OCR tokens) in each selected frame are relevant to the question by ranking and selecting the highest-scoring bounding boxes. These spatially grounded regions then feed into the scene text recognition system, and the recognized text inside those precise boxes serves as concrete visual evidence (visual answers) that directly supports the final textual answer.",
        "relevant_elements": [
            "Spatial Grounding",
            "Scene Text Recognition"
        ],
        "id": 904,
        "masked_question": "How does [mask1] complement scene text recognition to provide visual evidence for QA?",
        "masked_number": 1,
        "masked_elements": [
            "Spatial Grounding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.14319v1_figure_1.png",
        "paperid": "2409.14319v1",
        "paper_path": "./papers/2409.14319v1.json",
        "figure_id": "2409.14319v1_figure_1.png",
        "caption": "Figure 1: \nComparison between existing research and our work for TextVideoQA. (a) Existing research has two major problems: 1) Opaque decision-making; they hardly tell if their answers (e.g., “30”) are originated from the relevant scene texts in the videos, or attributed to other short-cuts. 2) Heavy reliance on scene-text recognition; their low QA accuracy could be due to a failure in decoding the textual answer (e.g., “30 M.P.H.”) from the corresponding scene text region. (b) We establish a novel pipeline by temporal-spatially localizing the scene text region and then decoding them into textual answers. We also enable direct evaluation on the grounded scene-text region.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does unified attention control balance cross attention and self attention for consistent image editing?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Specifically, the two commonly used text-guided cross attention strategies are cross attention replacement and cross-attention refinement. These two methods ensure the seamless flow of information from the target prompt to the source prompt, thereby guiding the latent map towards the desired direction.",
            "To be specific, in the early steps of diffusion, the feature in the editing steps t_e, t_e+1, and t_e+2 will be used in self attention calculation to generate an image layout closer to the target prompt, while in the later stages, the feature in the reconstruction steps t_r−2, t_r−1 and t_r will be used to guide the generation of the target image layout closer to the original image."
        ],
        "final_answer": "The unified attention control scheme combines two text-driven cross-attention edits (replacement and refinement) to inject the target prompt’s semantics seamlessly, while simultaneously modulating the self-attention maps over time. During the early diffusion steps it uses self-attention from the target prompt (editing steps t_e, t_e+1, t_e+2) to shift the layout toward the desired edit, then in later steps it switches to self-attention from the original image (reconstruction steps t_r−2, t_r−1, t_r) to preserve background structure. This joint control of cross- and self-attention ensures both accurate semantic changes and consistency with the source image.",
        "relevant_elements": [
            "Unified Attention Control",
            "Cross Attention",
            "Self Attention"
        ],
        "id": 905,
        "masked_question": "How does [mask1] balance [mask2] and self attention for consistent image editing?",
        "masked_number": 2,
        "masked_elements": [
            "Unified Attention Control",
            "Cross Attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.03286v2_figure_2.png",
        "paperid": "2411.03286v2",
        "paper_path": "./papers/2411.03286v2.json",
        "figure_id": "2411.03286v2_figure_2.png",
        "caption": "Figure 2: Overview of the DiT4Edit framework. During the image editing process, our inversion algorithm generates high-quality latent maps, and the final edited image is achieved through unified attention control.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does patches merging optimize self attention to reduce computational overhead in the diffusion transformer?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Patches merging. To enhance the inference speed, inspired by token merging (Bolya et al. 2023  ###reference_b2###), we embed patches merging into the denoising model. This approach is motivated by the observation that the number of patches involved in attention calculations within the transformer architecture is significantly greater than that in UNet. The calculation flow is shown in Figure 4  ###reference_###. For a feature map, we first compute the similarity between each patch and merge the most similar ones to reduce the number of patches processed by the attention mechanism. After attention calculation, we unmerge the patches to maintain the original input size for the next layer in the model. By incorporating patches merging into our framework, we aim to streamline the process and improve overall efficiency, without altering the fundamental operations of each layer."
        ],
        "final_answer": "By grouping together (merging) the most similar patches before computing self-attention, the model substantially cuts down the number of tokens that must be attended to. After the attention step, the merged patches are then restored (unmerged) to their original resolution. This drop-and-restore strategy reduces the computational load of the transformer’s global attention without changing any other layer operations.",
        "relevant_elements": [
            "Patches Merging",
            "Self Attention"
        ],
        "id": 906,
        "masked_question": "How does [mask1] optimize self attention to reduce computational overhead in the diffusion transformer?",
        "masked_number": 1,
        "masked_elements": [
            "Patches Merging"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.03286v2_figure_2.png",
        "paperid": "2411.03286v2",
        "paper_path": "./papers/2411.03286v2.json",
        "figure_id": "2411.03286v2_figure_2.png",
        "caption": "Figure 2: Overview of the DiT4Edit framework. During the image editing process, our inversion algorithm generates high-quality latent maps, and the final edited image is achieved through unified attention control.",
        "qtype": "Literature_Background",
        "response": "The \"Patches Merging\" component optimizes self-attention to reduce computational overhead in the diffusion transformer by:\n\n1.  **Reducing the number of patches:** It computes the similarity between each patch in a feature map and then merges the most similar ones.\n2.  **Streamlining attention calculation:** This merging process effectively reduces the total number of patches that need to be processed by the self-attention mechanism within the transformer architecture.\n3.  **Maintaining original size:** After the attention calculation, the patches are unmerged to restore the original input size for subsequent layers.\n\nBy reducing the patches involved in attention calculations, \"Patches Merging\" directly enhances inference speed and improves overall efficiency by reducing the computational load of the self-attention mechanism."
    },
    {
        "question": "How does DPM-Solver++ inversion improve latent reconstruction accuracy at reduced inversion steps?",
        "relevant_section_ids": [
            "3.3",
            "4.4"
        ],
        "relevant_context": [
            "As we discussed earlier, using a high-order DPM-Solver (e.g., DPM-Solver++), can effectively improve the sampling speed.  To approximate the integral term in equation Eq. 4, given the xₜ at time t, using the Taylor expansion at t–1, and the DPM-Solver++ can obtain a exact solution value at time t–1.  In practical applications, it is common to set r>0, enabling a rapid inference and minimizing discretization errors.  This DPM-Solver is named DPM-Solver++ (2M).",
            "When comparing the two methods with the same number of inference steps (r), DPM-Solver consistently outperformed DDIM in terms of image editing quality.  This demonstrates that our use of the DPM-Solver inversion strategy allows for the generation of superior latent maps, resulting in better editing outcomes within fewer steps."
        ],
        "final_answer": "By using a high-order Taylor-expansion solver, DPM-Solver++ computes an exact solution at each step, greatly reducing discretization error.  As a result, it produces more accurate inversion latents than DDIM even when using fewer steps, yielding superior reconstruction quality at reduced inversion steps.",
        "relevant_elements": [
            "DPM-Solver++ Inversion"
        ],
        "id": 907,
        "masked_question": "How does [mask1] improve latent reconstruction accuracy at reduced inversion steps?",
        "masked_number": 1,
        "masked_elements": [
            "DPM-Solver++ Inversion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.03286v2_figure_2.png",
        "paperid": "2411.03286v2",
        "paper_path": "./papers/2411.03286v2.json",
        "figure_id": "2411.03286v2_figure_2.png",
        "caption": "Figure 2: Overview of the DiT4Edit framework. During the image editing process, our inversion algorithm generates high-quality latent maps, and the final edited image is achieved through unified attention control.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] refers to \"DPM-Solver++ Inversion\".\n\nHere's how DPM-Solver++ Inversion improves latent reconstruction accuracy at reduced inversion steps:\n\n1.  **Faster Convergence and Higher Order:** The text states that \"using a high-order DPM-Solver (e.g., DPM-Solver++), can effectively improve the sampling speed.\" It also mentions that \"ODE solver using the exponential integrator exhibits faster convergence compared to traditional solvers\" and that \"DPM-Solver++ (2M)\" is a \"second-order multistep solver.\" This higher order nature allows for more accurate approximations of the diffusion ODE solution.\n2.  **Superior Latent Maps with Fewer Steps:** The ablation study directly addresses this. It states, \"When comparing the two methods with the same number of inference steps (), DPM Solver consistently outperformed DDIM in terms of image editing quality. This demonstrates that our use of the DPM-Solver inversion strategy allows for the generation of **superior latent maps**, resulting in **better editing outcomes within fewer steps.**\" \"Superior latent maps\" imply improved latent reconstruction accuracy.\n\nIn summary, DPM-Solver++ Inversion, being a high-order, second-order multistep solver, achieves faster convergence and generates superior latent maps, leading to better image editing quality and improved latent reconstruction accuracy even with a reduced number of inversion steps."
    },
    {
        "question": "How does patches merging influence unified attention control's efficiency without degrading editing performance?",
        "relevant_section_ids": [
            "3.3",
            "4.4"
        ],
        "relevant_context": [
            "Patches merging. To enhance the inference speed, inspired by token merging (Bolya et al. 2023  ###reference_b2###), we embed patches merging into the denoising model. This approach is motivated by the observation that the number of patches involved in attention calculations within the transformer architecture is significantly greater than that in UNet. The calculation flow is shown in Figure 4  ###reference_###. For a feature map, we first compute the similarity between each patch and merge the most similar ones to reduce the number of patches processed by the attention mechanism. After attention calculation, we unmerge the patches to maintain the original input size for the next layer in the model. By incorporating patches merging into our framework, we aim to streamline the process and improve overall efficiency, without altering the fundamental operations of each layer.",
            "We perform a series of ablation studies to demonstrate the effectiveness of DPM-Solver inversion and patches merging. The results of our ablation experiments on patches merging are presented in Figure 4  ###reference_### and Table 2  ###reference_###. Implementing patches merging led to a notable reduction in the editing time for large-sized images while maintaining editing quality comparable to that achieved without patches merging. This indicates that patches merging can significantly enhance the overall performance of image editing frameworks."
        ],
        "final_answer": "By merging similar patches before the transformer’s attention calculation, the model processes fewer tokens—speeding up unified self- and cross-attention operations—and then restores the full set of patches afterward. Ablation results show this reduces editing time on large images without any drop in editing quality, thus boosting efficiency without degrading performance.",
        "relevant_elements": [
            "Patches Merging",
            "Unified Attention Control"
        ],
        "id": 908,
        "masked_question": "How does [mask1] influence [mask2]'s efficiency without degrading editing performance?",
        "masked_number": 2,
        "masked_elements": [
            "Patches Merging",
            "Unified Attention Control"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.03286v2_figure_2.png",
        "paperid": "2411.03286v2",
        "paper_path": "./papers/2411.03286v2.json",
        "figure_id": "2411.03286v2_figure_2.png",
        "caption": "Figure 2: Overview of the DiT4Edit framework. During the image editing process, our inversion algorithm generates high-quality latent maps, and the final edited image is achieved through unified attention control.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does NVS leverage Jensen-Shannon divergence to select the correct decoupled image for decoding?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Thus, to identify the correct decoupled image z_d between the dual image and the residual image, we introduce a non-visual input x_nv, containing only the textual prompt, without any visual information, to serve as an assistant.",
            "We then calculate the Jensen–Shannon Divergence (JSD) as the distance between the output distributions from the non-visual input and the dual image as JSD_dn, and between the non-visual input and the residual image as JSD_rn.",
            "The visual input corresponding to the greater distance is selected as the decoupled image z_d, formulated as: z_d = { z_d if JSD_dn > JSD_rn; z_r otherwise }."
        ],
        "final_answer": "NVS feeds both the dual image and the residual image (each paired with the prompt) through the LVLM, and also feeds the prompt alone (non-visual input). It then computes the Jensen–Shannon divergence between the prompt-only output distribution and each image-conditioned distribution (JSD_dn and JSD_rn). Whichever image yields the larger JSD (i.e. whose output diverges more from the language-only prior) is deemed to contain the key visual features and is selected as the decoupled image for decoding.",
        "relevant_elements": [
            "NVS"
        ],
        "id": 909,
        "masked_question": "How does [mask1] leverage Jensen-Shannon divergence to select the correct decoupled image for decoding?",
        "masked_number": 1,
        "masked_elements": [
            "NVS"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.12713v1_figure_2.png",
        "paperid": "2411.12713v1",
        "paper_path": "./papers/2411.12713v1.json",
        "figure_id": "2411.12713v1_figure_2.png",
        "caption": "Figure 2: LVLMs may generate responses that include hallucinations (e.g., “One person on the left side is holding a phone”, where “sandwich” is hallucinated as “phone”. First, the CVD method leverages SAM to decouple the original input image v𝑣vitalic_v into the dual image zdsubscript𝑧𝑑z_{d}italic_z start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT and the residual image zrsubscript𝑧𝑟z_{r}italic_z start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT, and introduces a non-visual input znsubscript𝑧𝑛z_{n}italic_z start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT. These four inputs are then passed into the LVLM to generate their corresponding output distributions: l⁢o⁢g⁢i⁢t⁢so𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑜logits_{o}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_o end_POSTSUBSCRIPT, l⁢o⁢g⁢i⁢t⁢sd𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑑logits_{d}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT, l⁢o⁢g⁢i⁢t⁢sr𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑟logits_{r}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT and l⁢o⁢g⁢i⁢t⁢sn𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑛logits_{n}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT. The Jensen-Shannon Divergence (JSD) is computed between them to obtain J⁢S⁢Do⁢n𝐽𝑆subscript𝐷𝑜𝑛JSD_{on}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_o italic_n end_POSTSUBSCRIPT, J⁢S⁢Dm⁢n𝐽𝑆subscript𝐷𝑚𝑛JSD_{mn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_m italic_n end_POSTSUBSCRIPT, and J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT. The NVS method compares J⁢S⁢Dm⁢n𝐽𝑆subscript𝐷𝑚𝑛JSD_{mn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_m italic_n end_POSTSUBSCRIPT and J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT, and the input with the greater distance is selected as the decoupled image (e.g., zrsubscript𝑧𝑟z_{r}italic_z start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT). Next, ATCD selects the decoding strategy by comparing J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT and J⁢S⁢Do⁢n𝐽𝑆subscript𝐷𝑜𝑛JSD_{on}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_o italic_n end_POSTSUBSCRIPT, if J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT is greater, the decoupled image output distribution is employed to contrastively subtract the original distribution. Conversely, if J⁢S⁢Do⁢n𝐽𝑆subscript𝐷𝑜𝑛JSD_{on}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_o italic_n end_POSTSUBSCRIPT is greater, the output distribution from the decoupled image is leveraged to contrastively enhance the weighted original distribution. Effectively correcting the hallucinated token (e.g., “phone” is successfully corrected to “sandwich”). Notably, this process is dynamically performed at each token generation step.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does ATCD use divergence between decoupled and original distributions to prevent cumulative hallucinations?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "We first calculate the distance between the output distributions from the non-visual input and the decoupled image, denoted as JSD_rn, and the distance between the output distributions from the original visual input and the non-visual input, denoted as JSD_on.",
            "We consider two scenarios: (1) Hallucination Existence: When JSD_rn is greater than JSD_on, we conclude that hallucinations are present in the original output distribution. ... (2) Diversity Insufficient: When JSD_rn is less than JSD_on, we consider there to be a risk of cumulative hallucinations. In this case, we use the output distribution from the decoupled image to contrastively enhance the weighted original distribution, thereby improving the diversity of generation, formulated as: ... The hyperparameters α and β represent the amplification factors. The final generated token y_t is sampled from P_t."
        ],
        "final_answer": "ATCD monitors the Jensen–Shannon divergence between (i) the model’s output when given only the decoupled image versus the non-visual prompt (JSD_rn) and (ii) the output when given the original visual input versus the non-visual prompt (JSD_on). If JSD_rn falls below JSD_on—indicating the decoupled distribution is too similar to the original and thus lacks diversity—ATCD counteracts emerging cumulative hallucinations by contrastively enhancing the original output distribution with the decoupled distribution, using learned amplification factors to boost diversity in the generated tokens.",
        "relevant_elements": [
            "ATCD"
        ],
        "id": 910,
        "masked_question": "How does [mask1] use divergence between decoupled and original distributions to prevent cumulative hallucinations?",
        "masked_number": 1,
        "masked_elements": [
            "ATCD"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.12713v1_figure_2.png",
        "paperid": "2411.12713v1",
        "paper_path": "./papers/2411.12713v1.json",
        "figure_id": "2411.12713v1_figure_2.png",
        "caption": "Figure 2: LVLMs may generate responses that include hallucinations (e.g., “One person on the left side is holding a phone”, where “sandwich” is hallucinated as “phone”. First, the CVD method leverages SAM to decouple the original input image v𝑣vitalic_v into the dual image zdsubscript𝑧𝑑z_{d}italic_z start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT and the residual image zrsubscript𝑧𝑟z_{r}italic_z start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT, and introduces a non-visual input znsubscript𝑧𝑛z_{n}italic_z start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT. These four inputs are then passed into the LVLM to generate their corresponding output distributions: l⁢o⁢g⁢i⁢t⁢so𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑜logits_{o}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_o end_POSTSUBSCRIPT, l⁢o⁢g⁢i⁢t⁢sd𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑑logits_{d}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT, l⁢o⁢g⁢i⁢t⁢sr𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑟logits_{r}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT and l⁢o⁢g⁢i⁢t⁢sn𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑛logits_{n}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT. The Jensen-Shannon Divergence (JSD) is computed between them to obtain J⁢S⁢Do⁢n𝐽𝑆subscript𝐷𝑜𝑛JSD_{on}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_o italic_n end_POSTSUBSCRIPT, J⁢S⁢Dm⁢n𝐽𝑆subscript𝐷𝑚𝑛JSD_{mn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_m italic_n end_POSTSUBSCRIPT, and J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT. The NVS method compares J⁢S⁢Dm⁢n𝐽𝑆subscript𝐷𝑚𝑛JSD_{mn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_m italic_n end_POSTSUBSCRIPT and J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT, and the input with the greater distance is selected as the decoupled image (e.g., zrsubscript𝑧𝑟z_{r}italic_z start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT). Next, ATCD selects the decoding strategy by comparing J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT and J⁢S⁢Do⁢n𝐽𝑆subscript𝐷𝑜𝑛JSD_{on}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_o italic_n end_POSTSUBSCRIPT, if J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT is greater, the decoupled image output distribution is employed to contrastively subtract the original distribution. Conversely, if J⁢S⁢Do⁢n𝐽𝑆subscript𝐷𝑜𝑛JSD_{on}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_o italic_n end_POSTSUBSCRIPT is greater, the output distribution from the decoupled image is leveraged to contrastively enhance the weighted original distribution. Effectively correcting the hallucinated token (e.g., “phone” is successfully corrected to “sandwich”). Notably, this process is dynamically performed at each token generation step.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What limitations could arise when SAM segments visual inputs for CVD in complex scenes?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "SAM",
            "CVD"
        ],
        "id": 911,
        "masked_question": "What limitations could arise when [mask1] segments visual inputs for [mask2] in complex scenes?",
        "masked_number": 2,
        "masked_elements": [
            "SAM",
            "CVD"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.12713v1_figure_2.png",
        "paperid": "2411.12713v1",
        "paper_path": "./papers/2411.12713v1.json",
        "figure_id": "2411.12713v1_figure_2.png",
        "caption": "Figure 2: LVLMs may generate responses that include hallucinations (e.g., “One person on the left side is holding a phone”, where “sandwich” is hallucinated as “phone”. First, the CVD method leverages SAM to decouple the original input image v𝑣vitalic_v into the dual image zdsubscript𝑧𝑑z_{d}italic_z start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT and the residual image zrsubscript𝑧𝑟z_{r}italic_z start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT, and introduces a non-visual input znsubscript𝑧𝑛z_{n}italic_z start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT. These four inputs are then passed into the LVLM to generate their corresponding output distributions: l⁢o⁢g⁢i⁢t⁢so𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑜logits_{o}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_o end_POSTSUBSCRIPT, l⁢o⁢g⁢i⁢t⁢sd𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑑logits_{d}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT, l⁢o⁢g⁢i⁢t⁢sr𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑟logits_{r}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT and l⁢o⁢g⁢i⁢t⁢sn𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑛logits_{n}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT. The Jensen-Shannon Divergence (JSD) is computed between them to obtain J⁢S⁢Do⁢n𝐽𝑆subscript𝐷𝑜𝑛JSD_{on}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_o italic_n end_POSTSUBSCRIPT, J⁢S⁢Dm⁢n𝐽𝑆subscript𝐷𝑚𝑛JSD_{mn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_m italic_n end_POSTSUBSCRIPT, and J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT. The NVS method compares J⁢S⁢Dm⁢n𝐽𝑆subscript𝐷𝑚𝑛JSD_{mn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_m italic_n end_POSTSUBSCRIPT and J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT, and the input with the greater distance is selected as the decoupled image (e.g., zrsubscript𝑧𝑟z_{r}italic_z start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT). Next, ATCD selects the decoding strategy by comparing J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT and J⁢S⁢Do⁢n𝐽𝑆subscript𝐷𝑜𝑛JSD_{on}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_o italic_n end_POSTSUBSCRIPT, if J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT is greater, the decoupled image output distribution is employed to contrastively subtract the original distribution. Conversely, if J⁢S⁢Do⁢n𝐽𝑆subscript𝐷𝑜𝑛JSD_{on}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_o italic_n end_POSTSUBSCRIPT is greater, the output distribution from the decoupled image is leveraged to contrastively enhance the weighted original distribution. Effectively correcting the hallucinated token (e.g., “phone” is successfully corrected to “sandwich”). Notably, this process is dynamically performed at each token generation step.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What challenges may emerge using Jensen-Shannon Divergence in NVS for accurate decoupled image selection?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Jensen-Shannon Divergence",
            "NVS"
        ],
        "id": 912,
        "masked_question": "What challenges may emerge using [mask1] in [mask2] for accurate decoupled image selection?",
        "masked_number": 2,
        "masked_elements": [
            "Jensen-Shannon Divergence",
            "NVS"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.12713v1_figure_2.png",
        "paperid": "2411.12713v1",
        "paper_path": "./papers/2411.12713v1.json",
        "figure_id": "2411.12713v1_figure_2.png",
        "caption": "Figure 2: LVLMs may generate responses that include hallucinations (e.g., “One person on the left side is holding a phone”, where “sandwich” is hallucinated as “phone”. First, the CVD method leverages SAM to decouple the original input image v𝑣vitalic_v into the dual image zdsubscript𝑧𝑑z_{d}italic_z start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT and the residual image zrsubscript𝑧𝑟z_{r}italic_z start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT, and introduces a non-visual input znsubscript𝑧𝑛z_{n}italic_z start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT. These four inputs are then passed into the LVLM to generate their corresponding output distributions: l⁢o⁢g⁢i⁢t⁢so𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑜logits_{o}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_o end_POSTSUBSCRIPT, l⁢o⁢g⁢i⁢t⁢sd𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑑logits_{d}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_d end_POSTSUBSCRIPT, l⁢o⁢g⁢i⁢t⁢sr𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑟logits_{r}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT and l⁢o⁢g⁢i⁢t⁢sn𝑙𝑜𝑔𝑖𝑡subscript𝑠𝑛logits_{n}italic_l italic_o italic_g italic_i italic_t italic_s start_POSTSUBSCRIPT italic_n end_POSTSUBSCRIPT. The Jensen-Shannon Divergence (JSD) is computed between them to obtain J⁢S⁢Do⁢n𝐽𝑆subscript𝐷𝑜𝑛JSD_{on}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_o italic_n end_POSTSUBSCRIPT, J⁢S⁢Dm⁢n𝐽𝑆subscript𝐷𝑚𝑛JSD_{mn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_m italic_n end_POSTSUBSCRIPT, and J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT. The NVS method compares J⁢S⁢Dm⁢n𝐽𝑆subscript𝐷𝑚𝑛JSD_{mn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_m italic_n end_POSTSUBSCRIPT and J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT, and the input with the greater distance is selected as the decoupled image (e.g., zrsubscript𝑧𝑟z_{r}italic_z start_POSTSUBSCRIPT italic_r end_POSTSUBSCRIPT). Next, ATCD selects the decoding strategy by comparing J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT and J⁢S⁢Do⁢n𝐽𝑆subscript𝐷𝑜𝑛JSD_{on}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_o italic_n end_POSTSUBSCRIPT, if J⁢S⁢Dc⁢n𝐽𝑆subscript𝐷𝑐𝑛JSD_{cn}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_c italic_n end_POSTSUBSCRIPT is greater, the decoupled image output distribution is employed to contrastively subtract the original distribution. Conversely, if J⁢S⁢Do⁢n𝐽𝑆subscript𝐷𝑜𝑛JSD_{on}italic_J italic_S italic_D start_POSTSUBSCRIPT italic_o italic_n end_POSTSUBSCRIPT is greater, the output distribution from the decoupled image is leveraged to contrastively enhance the weighted original distribution. Effectively correcting the hallucinated token (e.g., “phone” is successfully corrected to “sandwich”). Notably, this process is dynamically performed at each token generation step.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates combining uncertainty estimation with prompting in segmentation methodology?",
        "relevant_section_ids": [
            "4.1.2"
        ],
        "relevant_context": [
            "Robustness in foundation models for medical image segmentation is crucial for consistent and accurate results across various conditions. It ensures reliable outcomes, regardless of changes in data input or computational environment. This issue is particularly vulnerable in SAM-based segmentation models, where users can input customized prompts, potentially leading to inconsistent results due to the variability and unpredictability of these user-defined inputs.",
            "Zhang et al. introduces uncertainty estimation for both SAM and MedSAM by using the change in segmentation boundaries as a function of prompt augmentation to generate uncertainty maps [2]. They propose that incorporating uncertainty estimations into SAMs builds trust through better error identification."
        ],
        "final_answer": "The combination is driven by the need to address robustness issues introduced by the variability and unpredictability of user-defined prompts and the ambiguous boundaries in medical images: by augmenting prompts and measuring how segmentation outputs change, uncertainty maps can be generated to highlight where the model is less confident, improving error identification and building trust in the segmentation results.",
        "relevant_elements": [
            "Uncertainty estimation",
            "prompting",
            "Segmentation"
        ],
        "id": 916,
        "masked_question": "What motivates combining [mask1] with prompting in segmentation methodology?",
        "masked_number": 1,
        "masked_elements": [
            "Uncertainty estimation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.15851v2_figure_1.png",
        "paperid": "2407.15851v2",
        "paper_path": "./papers/2407.15851v2.json",
        "figure_id": "2407.15851v2_figure_1.png",
        "caption": "Figure 1: A schematic overview of motivations, foundation model usage, tasks and trustworthiness enhancements discussed in this paper.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates verifying solution plan against visible tests before drafting initial code?",
        "relevant_section_ids": [
            "1",
            "3"
        ],
        "relevant_context": [
            "In Section 3: “However, the LLM-generated plan P may occasionally be incorrect, misguiding subsequent program generation. To avoid this, LPW queries the LLM to verify P against all visible tests.”",
            "In Section 1 (Introduction): “Different from other approaches that exclude the solution plan entirely from the code generation (Chen et al., 2023b; Zhong et al., 2024), LPW incorporates the LLM-generated plan and its verification in the initial code development to clarify the programming logic. This approach ensures that the initial code closely aligns with the problem description, thus reducing the need for subsequent refinements.”"
        ],
        "final_answer": "Because an LLM-generated plan can be wrong and lead the code astray, LPW first checks the plan against visible tests to confirm its correctness and to provide a clear, verified logical blueprint—ensuring initial code aligns with the problem and reducing later debugging.",
        "relevant_elements": [
            "Solution Plan",
            "Plan Verification"
        ],
        "id": 917,
        "masked_question": "What motivates verifying [mask1] against visible tests before drafting initial code?",
        "masked_number": 1,
        "masked_elements": [
            "Solution Plan"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.14503v1_figure_1.png",
        "paperid": "2411.14503v1",
        "paper_path": "./papers/2411.14503v1.json",
        "figure_id": "2411.14503v1_figure_1.png",
        "caption": "Figure 1: The pipeline of LPW, a large language model programming workflow, where the components highlighted in red are exclusive to LPW. LPW consists of two phases. In the solution generation phase, LPW initially creates a solution plan (block (b)) for a problem (block (a)), along with the plan verification (block (c)) for each visible test. If the plan verification infers the accurate output for each visible test based on the solution plan (block (c)) and no incorrect logic is found in the verification check process (block (d)), LPW uses the generated plan and plan verification to help LLMs draft the initial program (block (e)) at the beginning of the code implementation phase. If the initial program passes all visible tests after execution (block (f)), it is used as the final code (block (l)) and then assessed with hidden tests.\nOtherwise, the LLM-generated code explanation (block (g)) and error analysis (block (j)) serve as debugging inputs to refine the error program (block (k)). The LLM-generated error analysis involves comparing the execution trace (block (h)) with the plan verification (block (i)) on the failed visible test to identify logic flaws in the code implementation and provide repair suggestions. The refined program is reevaluated on the visible tests to determine the necessity for further debugging iterations.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What rationale supports comparing execution trace with plan verification in error analysis?",
        "relevant_section_ids": [
            "1",
            "3"
        ],
        "relevant_context": [
            "In contrast to previous studies (Chen et al., 2023b ###reference_b12###; Zhong et al., 2024 ###reference_b59###; Shinn et al., 2023 ###reference_b49###) that query LLMs to infer errors in the generated code when it fails a visible test, LPW prompts LLMs to compare the expected output of each intermediate step for solving the failed visible test, as recorded in the plan verification, against the execution trace on the failed visible test to identify discrepancies and further produce an error analysis (block (j) in Figure 1 ###reference_###). This approach is more straightforward and reduces uncertainty. These discrepancies assist LLMs in accurately locating bugs and identifying logic flaws in the code implementation, and generating detailed refinement suggestions, as documented in the error analysis.",
            "LPW instructs the LLM to conduct an error analysis by identifying inconsistencies between the intermediate outputs recorded in the execution trace of P and the expected outputs documented in the verification, analyzing the causes, and offering refinement suggestions (block (4))."
        ],
        "final_answer": "By directly comparing actual runtime outputs (execution trace) with the expected intermediate outputs in the plan verification, LPW can more straightforwardly spot discrepancies, reduce uncertainty in debugging, and accurately locate bugs and logic flaws to produce precise refinement suggestions.",
        "relevant_elements": [
            "Execution Trace",
            "Plan Verification",
            "Error Analysis"
        ],
        "id": 918,
        "masked_question": "What rationale supports comparing [mask1] with plan verification in error analysis?",
        "masked_number": 1,
        "masked_elements": [
            "Execution Trace"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.14503v1_figure_1.png",
        "paperid": "2411.14503v1",
        "paper_path": "./papers/2411.14503v1.json",
        "figure_id": "2411.14503v1_figure_1.png",
        "caption": "Figure 1: The pipeline of LPW, a large language model programming workflow, where the components highlighted in red are exclusive to LPW. LPW consists of two phases. In the solution generation phase, LPW initially creates a solution plan (block (b)) for a problem (block (a)), along with the plan verification (block (c)) for each visible test. If the plan verification infers the accurate output for each visible test based on the solution plan (block (c)) and no incorrect logic is found in the verification check process (block (d)), LPW uses the generated plan and plan verification to help LLMs draft the initial program (block (e)) at the beginning of the code implementation phase. If the initial program passes all visible tests after execution (block (f)), it is used as the final code (block (l)) and then assessed with hidden tests.\nOtherwise, the LLM-generated code explanation (block (g)) and error analysis (block (j)) serve as debugging inputs to refine the error program (block (k)). The LLM-generated error analysis involves comparing the execution trace (block (h)) with the plan verification (block (i)) on the failed visible test to identify logic flaws in the code implementation and provide repair suggestions. The refined program is reevaluated on the visible tests to determine the necessity for further debugging iterations.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to **Execution Trace**.\n\nThe rationale for comparing the **Execution Trace** with the **Plan Verification** in error analysis is to:\n1.  **Identify inconsistencies**: Pinpoint discrepancies between the intermediate outputs recorded in the execution trace (what the code actually produced step-by-step) and the expected outputs documented in the plan verification (what the code should have produced according to the validated plan).\n2.  **Accurately locate bugs and identify logic flaws**: These identified discrepancies then assist Large Language Models (LLMs) in precisely determining where the code implementation deviates from the intended logic and specifications.\n3.  **Generate detailed refinement and repair suggestions**: By understanding the exact deviations, LLMs can provide targeted and more accurate feedback in the form of detailed refinement suggestions to fix the faulty code.\n\nThe text states: \"LPW prompts LLMs to compare the expected output of each intermediate step for solving the failed visible test, as recorded in the plan verification, against the execution trace on the failed visible test to identify discrepancies and further produce an error analysis (block (j) in Figure 1). This approach is more straightforward and reduces uncertainty. These discrepancies assist LLMs in accurately locating bugs and identifying logic flaws in the code implementation, and generating detailed refinement suggestions, as documented in the error analysis.\""
    },
    {
        "question": "How does the Verification Check module identify and correct logic errors in the Plan Verification outputs?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "For each t, its verification V compares the derived output ŷ with the ground-truth output y to assess the correctness of P, as outlined at block 4 in Figure 2.",
            "LPW includes two update steps in the solution generation phase to enable self-correction as indicated by the red arrows in Figure 2: 1) when the plan verification inferred ultimate output differs from the ground-truth output for a visible test, where ŷ≠y in T_vis, a revised solution plan P′ is included in the LLM response to substitute the original plan; 2) when the LLM detects any incorrect intermediate values in V, e.g. contextual inconsistencies, mathematical miscalculations, or logical reasoning errors, LPW prompts the LLM to regenerate the plan verification."
        ],
        "final_answer": "The Verification Check module runs the LLM‐generated plan through all visible tests and compares both the final outputs and each intermediate step against the known answers. If the final output for any test is wrong, it asks the LLM to produce a revised solution plan. If any intermediate value is inconsistent (due to a miscalculation or logical flaw), it prompts the LLM to regenerate the detailed verification. This loop continues until every intermediate result and the final outputs match the visible tests.",
        "relevant_elements": [
            "Plan Verification",
            "Verification Check"
        ],
        "id": 919,
        "masked_question": "How does the [mask1] module identify and correct logic errors in the Plan Verification outputs?",
        "masked_number": 1,
        "masked_elements": [
            "Verification Check"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.14503v1_figure_1.png",
        "paperid": "2411.14503v1",
        "paper_path": "./papers/2411.14503v1.json",
        "figure_id": "2411.14503v1_figure_1.png",
        "caption": "Figure 1: The pipeline of LPW, a large language model programming workflow, where the components highlighted in red are exclusive to LPW. LPW consists of two phases. In the solution generation phase, LPW initially creates a solution plan (block (b)) for a problem (block (a)), along with the plan verification (block (c)) for each visible test. If the plan verification infers the accurate output for each visible test based on the solution plan (block (c)) and no incorrect logic is found in the verification check process (block (d)), LPW uses the generated plan and plan verification to help LLMs draft the initial program (block (e)) at the beginning of the code implementation phase. If the initial program passes all visible tests after execution (block (f)), it is used as the final code (block (l)) and then assessed with hidden tests.\nOtherwise, the LLM-generated code explanation (block (g)) and error analysis (block (j)) serve as debugging inputs to refine the error program (block (k)). The LLM-generated error analysis involves comparing the execution trace (block (h)) with the plan verification (block (i)) on the failed visible test to identify logic flaws in the code implementation and provide repair suggestions. The refined program is reevaluated on the visible tests to determine the necessity for further debugging iterations.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Error Analysis integrate Execution Trace discrepancies with Plan Verification to generate refinement suggestions?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "LPW collects the runtime information on the first failed visible test u_n, indicating that the implementation in p_init deviates from the specifications in V.",
            "LPW instructs the LLM to conduct an error analysis by identifying inconsistencies between the intermediate outputs recorded in the execution trace of p_init and the expected outputs documented in the plan verification, analyzing the causes, and offering refinement suggestions (block (4)).",
            "Subsequently the error analysis and code explanation for p_init generated by the LLM (block (5)) are concatenated as the prompt to generate the refined program p_1 (block (6)). The code explanation helps the LLM align the text-based error analysis with the code implementation."
        ],
        "final_answer": "When the initial code fails a visible test, LPW captures the execution trace and compares each intermediate output in that trace against the corresponding expected output from the plan verification. The LLM then performs an error analysis: it pinpoints mismatches between actual and expected intermediate values, diagnoses their causes, and synthesizes concrete refinement suggestions. Finally, this error analysis—together with an LLM-generated code explanation—is fed back to the model to guide the generation of a corrected, refined program.",
        "relevant_elements": [
            "Error Analysis",
            "Execution Trace",
            "Plan Verification"
        ],
        "id": 920,
        "masked_question": "How does [mask1] integrate Execution Trace discrepancies with Plan Verification to generate refinement suggestions?",
        "masked_number": 1,
        "masked_elements": [
            "Error Analysis"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.14503v1_figure_1.png",
        "paperid": "2411.14503v1",
        "paper_path": "./papers/2411.14503v1.json",
        "figure_id": "2411.14503v1_figure_1.png",
        "caption": "Figure 1: The pipeline of LPW, a large language model programming workflow, where the components highlighted in red are exclusive to LPW. LPW consists of two phases. In the solution generation phase, LPW initially creates a solution plan (block (b)) for a problem (block (a)), along with the plan verification (block (c)) for each visible test. If the plan verification infers the accurate output for each visible test based on the solution plan (block (c)) and no incorrect logic is found in the verification check process (block (d)), LPW uses the generated plan and plan verification to help LLMs draft the initial program (block (e)) at the beginning of the code implementation phase. If the initial program passes all visible tests after execution (block (f)), it is used as the final code (block (l)) and then assessed with hidden tests.\nOtherwise, the LLM-generated code explanation (block (g)) and error analysis (block (j)) serve as debugging inputs to refine the error program (block (k)). The LLM-generated error analysis involves comparing the execution trace (block (h)) with the plan verification (block (i)) on the failed visible test to identify logic flaws in the code implementation and provide repair suggestions. The refined program is reevaluated on the visible tests to determine the necessity for further debugging iterations.",
        "qtype": "Implementation_Details",
        "response": "The [mask1], which is the \"Error Analysis (j)\" component, integrates \"Execution Trace (h)\" and \"Plan Verification (i)\" to generate refinement suggestions by **identifying inconsistencies** between them.\n\nSpecifically:\n1.  "
    },
    {
        "question": "How does the Encoder alter group vectors for input into the cross attention block?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "Firstly, group vectors are transformed by a condition encoder:\n    \\[ h = \\mathrm{Enc}(g), \\]\n    where Enc can be a multi-layer perception (MLP)."
        ],
        "final_answer": "The Encoder applies a small condition encoder (e.g. an MLP) to each raw group vector g, producing an encoded vector h = Enc(g). This encoded group vector h is then fed as the query input into the cross-attention block.",
        "relevant_elements": [
            "Encoder",
            "group vectors",
            "cross attention"
        ],
        "id": 921,
        "masked_question": "How does the [mask1] alter group vectors for input into the cross attention block?",
        "masked_number": 1,
        "masked_elements": [
            "Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.02791v1_figure_1.png",
        "paperid": "2410.02791v1",
        "paper_path": "./papers/2410.02791v1.json",
        "figure_id": "2410.02791v1_figure_1.png",
        "caption": "Figure 1: The flowchart of DifFaiRec. The original rating vector is 𝐱0subscript𝐱0\\mathbf{x}_{0}bold_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT. In the forward process, the vector is added with Gaussian noise T𝑇Titalic_T times, becoming 𝐱Tsubscript𝐱𝑇\\mathbf{x}_{T}bold_x start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT. In the reverse process, 𝐱Tsubscript𝐱𝑇\\mathbf{x}_{T}bold_x start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT, the group vectors, and the time step are fed into DifFaiRec to estimate the noise, and then the missing ratings in 𝐱0subscript𝐱0\\mathbf{x}_{0}bold_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT can be recovered after T𝑇Titalic_T times of denoising.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] \"Encoder\" (highlighted in red) receives the original \"Group vectors\" as input. According to the text in Section IV-C \"Counterfactual Module\", the group vectors are \"transformed by a condition encoder: where Enc can be a multi-layer perception (MLP).\" The text further elaborates that \"The condition encoder can adaptively perform feature crossover\".\n\nTherefore, the Encoder alters the group vectors by **transforming them through a multi-layer perception (MLP) to adaptively perform feature crossover**. These transformed group vectors are then used as the Key (K) and Value (V) inputs for the cross-attention block (labeled as Q KV)."
    },
    {
        "question": "How does the Reverse Process integrate time step embeddings and group vectors to predict the noise term?",
        "relevant_section_ids": [
            "4.4"
        ],
        "relevant_context": [
            "ε_θ can be formulated as follows through parameterization: where ε_θ is a noise approximator which can be inferred by diffusion model, and c based on user's group.",
            "In this work, as shown in Figure 1, we let ε_θ(x_t, t, c) take as input the current noisy sample x_t, the embedding vector z_t (one-hot encoding of the diffusion time step), and the output of the counterfactual module (the group-conditioned vector)."
        ],
        "final_answer": "In the reverse (denoising) process, the noise predictor ε_θ is implemented as a neural network that is conditioned on three things: the noisy rating vector x_t, a learned embedding z_t encoding the current diffusion time step, and the counterfactual group vector produced by the counterfactual module. By concatenating (or otherwise fusing) z_t and the group vector together with x_t, ε_θ(x_t, t, c) jointly integrates temporal information and group-fairness information to predict the noise term at each reverse step.",
        "relevant_elements": [
            "Reverse Process",
            "time step",
            "group vectors"
        ],
        "id": 922,
        "masked_question": "How does the [mask1] integrate [mask2] embeddings and group vectors to predict the noise term?",
        "masked_number": 2,
        "masked_elements": [
            "Reverse Process",
            "time step"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.02791v1_figure_1.png",
        "paperid": "2410.02791v1",
        "paper_path": "./papers/2410.02791v1.json",
        "figure_id": "2410.02791v1_figure_1.png",
        "caption": "Figure 1: The flowchart of DifFaiRec. The original rating vector is 𝐱0subscript𝐱0\\mathbf{x}_{0}bold_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT. In the forward process, the vector is added with Gaussian noise T𝑇Titalic_T times, becoming 𝐱Tsubscript𝐱𝑇\\mathbf{x}_{T}bold_x start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT. In the reverse process, 𝐱Tsubscript𝐱𝑇\\mathbf{x}_{T}bold_x start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT, the group vectors, and the time step are fed into DifFaiRec to estimate the noise, and then the missing ratings in 𝐱0subscript𝐱0\\mathbf{x}_{0}bold_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT can be recovered after T𝑇Titalic_T times of denoising.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Encoder output steer QKV attention for noise estimation?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Encoder",
            "Cross attention"
        ],
        "id": 923,
        "masked_question": "How does [mask1] output steer QKV attention for noise estimation?",
        "masked_number": 1,
        "masked_elements": [
            "Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.02791v1_figure_1.png",
        "paperid": "2410.02791v1",
        "paper_path": "./papers/2410.02791v1.json",
        "figure_id": "2410.02791v1_figure_1.png",
        "caption": "Figure 1: The flowchart of DifFaiRec. The original rating vector is 𝐱0subscript𝐱0\\mathbf{x}_{0}bold_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT. In the forward process, the vector is added with Gaussian noise T𝑇Titalic_T times, becoming 𝐱Tsubscript𝐱𝑇\\mathbf{x}_{T}bold_x start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT. In the reverse process, 𝐱Tsubscript𝐱𝑇\\mathbf{x}_{T}bold_x start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT, the group vectors, and the time step are fed into DifFaiRec to estimate the noise, and then the missing ratings in 𝐱0subscript𝐱0\\mathbf{x}_{0}bold_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT can be recovered after T𝑇Titalic_T times of denoising.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How do group vectors and time step embeddings interact in the noise prediction network?",
        "relevant_section_ids": [
            "4.4"
        ],
        "relevant_context": [
            "… can be formulated as follows through parameterization: where ε_θ is a noise approximator which can be inferred by diffusion model, and G_t is based on user's group. In this work, as shown in Figure 1, we let\n    G_t = Enc(counterfactual_module_output) + e_t\n    where e_t denotes the embedding vector (one-hot encoding) of time step t and G_t denotes the counterfactual module.",
            "The parameter set Θ contains all parameters of ε_θ, Enc, and the counterfactual module."
        ],
        "final_answer": "In the noise-prediction network ε_θ, the time-step embedding e_t (a one-hot encoding of t) is added to the group-condition vector produced by the counterfactual module. Their sum serves as the conditioning input (G_t) alongside the noisy sample x_t for predicting the noise.",
        "relevant_elements": [
            "Group vectors",
            "Time step"
        ],
        "id": 924,
        "masked_question": "How do [mask1] and [mask2] embeddings interact in the noise prediction network?",
        "masked_number": 2,
        "masked_elements": [
            "Group vectors",
            "Time step"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.02791v1_figure_1.png",
        "paperid": "2410.02791v1",
        "paper_path": "./papers/2410.02791v1.json",
        "figure_id": "2410.02791v1_figure_1.png",
        "caption": "Figure 1: The flowchart of DifFaiRec. The original rating vector is 𝐱0subscript𝐱0\\mathbf{x}_{0}bold_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT. In the forward process, the vector is added with Gaussian noise T𝑇Titalic_T times, becoming 𝐱Tsubscript𝐱𝑇\\mathbf{x}_{T}bold_x start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT. In the reverse process, 𝐱Tsubscript𝐱𝑇\\mathbf{x}_{T}bold_x start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT, the group vectors, and the time step are fed into DifFaiRec to estimate the noise, and then the missing ratings in 𝐱0subscript𝐱0\\mathbf{x}_{0}bold_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT can be recovered after T𝑇Titalic_T times of denoising.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does linear decoupling improve neural network's ability to approximate NLSE operators?",
        "relevant_section_ids": [
            "2.2"
        ],
        "relevant_context": [
            "To mitigate the linear effects after the entire transmission and introduce physical formula modeling, we adopt Feature Decoupling Distribution (FDD) modeling in the neural network part. This approach reduces the difficulty of fitting the neural network, however, the neural network itself no longer conforms to the NLSE.",
            "To allow the neural network to fully fit the NLSE, a linear system modeled using physical formulas is cascaded after the neural network. The linear system corresponds to the inverse process of dispersion compensation and distance attenuation compensation before the neural network, which can be regarded as a linear operator."
        ],
        "final_answer": "By extracting and handling the linear dispersion and attenuation effects with a physical‐modelled operator outside the network, the neural network only needs to learn the remaining nonlinear part of the NLSE. This ‘‘linear decoupling’’ simplifies the learning task, reducing the difficulty of fitting and thus improving the network’s ability to approximate the NLSE operators accurately.",
        "relevant_elements": [
            "linear decoupling",
            "neural network"
        ],
        "id": 925,
        "masked_question": "How does [mask1] improve neural network's ability to approximate NLSE operators?",
        "masked_number": 1,
        "masked_elements": [
            "linear decoupling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.04511v1_figure_1.png",
        "paperid": "2411.04511v1",
        "paper_path": "./papers/2411.04511v1.json",
        "figure_id": "2411.04511v1_figure_1.png",
        "caption": "Figure 1: Two methods for fitting the NLSE.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does cascading linear operator with neural network reproduce full NLSE integration?",
        "relevant_section_ids": [
            "2.2"
        ],
        "relevant_context": [
            "To allow the neural network to fully fit the NLSE, a linear system modeled using physical formulas is cascaded after the neural network.",
            "The linear system corresponds to the inverse process of dispersion compensation and distance attenuation compensation before the neural network, which can be regarded as a linear operator, as shown in Equation (3).",
            "The equivalent system formed by cascading the neural network and the linear system can fit the complete NLSE system."
        ],
        "final_answer": "By feeding the signal through a neural network that learns the nonlinear part of the NLSE and then applying a physics-based linear operator (implementing inverse dispersion compensation and attenuation compensation) after it, the combined NN + linear cascade reproduces both the nonlinear and linear operators of the NLSE, thus fitting the full NLSE integration.",
        "relevant_elements": [
            "linear operator",
            "neural network"
        ],
        "id": 926,
        "masked_question": "How does cascading [mask1] with neural network reproduce full NLSE integration?",
        "masked_number": 1,
        "masked_elements": [
            "linear operator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.04511v1_figure_1.png",
        "paperid": "2411.04511v1",
        "paper_path": "./papers/2411.04511v1.json",
        "figure_id": "2411.04511v1_figure_1.png",
        "caption": "Figure 1: Two methods for fitting the NLSE.",
        "qtype": "Literature_Background",
        "response": "*   **Step 1: Identify [mask1].**\n    Looking at the \"method 1: FDD model\" section in the image, the input signal first goes through a \"linear decoupling\" step (`∂s/∂z = -D̂s`). This decoupled signal, along with the encoded distance, feeds into the \"neural network.\" Subsequently, the output of the \"neural network\" goes through a component highlighted in red that is labeled"
    },
    {
        "question": "How does encoded distance z facilitate neural network training under linear decoupling for NLSE simulation?",
        "relevant_section_ids": [
            "2.2",
            "3.1"
        ],
        "relevant_context": [
            "To derive the output waveform with respect to the distance parameter z and enhance the model’s generalization over distances, we have implemented an encoded input method for z at the input end[8].",
            "We introduce a parameter z that controls the distance encoded by the neural network at the input end[8]. We utilize the feature of neural networks that can back propagate and take derivatives, we obtain the derivative of the output predicted waveform with respect to z.",
            "The transmission distance parameter z is also encoded by a linear layer and input into a neural network."
        ],
        "final_answer": "Under linear decoupling, the physical linear operator (dispersion and attenuation) is handled outside the network, so the neural network only needs to learn the nonlinear part of the NLSE. To enable it to capture how the nonlinear distortion accumulates over varying fiber lengths, the span distance z is encoded (via a learnable linear layer) and fed into the network at its input. By doing so, the network can back-propagate through z to compute ∂output/∂z, which is used in the NLSE loss, and it also generalizes naturally to distances not seen during training.",
        "relevant_elements": [
            "Encoded distance z",
            "neural network",
            "linear decoupling"
        ],
        "id": 927,
        "masked_question": "How does [mask1] facilitate neural network training under linear decoupling for NLSE simulation?",
        "masked_number": 1,
        "masked_elements": [
            "Encoded distance z"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.04511v1_figure_1.png",
        "paperid": "2411.04511v1",
        "paper_path": "./papers/2411.04511v1.json",
        "figure_id": "2411.04511v1_figure_1.png",
        "caption": "Figure 1: Two methods for fitting the NLSE.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does cascading the neural network with the linear operator simplify NLSE modeling complexity in FDD?",
        "relevant_section_ids": [
            "2.2",
            "3.3"
        ],
        "relevant_context": [
            "From (2), it can be seen that the NLSE equation includes both linear and nonlinear operators. Therefore, to mitigate the linear effects after the entire transmission and introduce physical formula modeling, we adopt Feature Decoupling Distribution (FDD) modeling in the neural network part. This approach reduces the difficulty of fitting the neural network. To allow the neural network to fully fit the NLSE, a linear system modeled using physical formulas is cascaded after the neural network. The linear system corresponds to the inverse process of dispersion compensation and distance attenuation compensation before the neural network, which can be regarded as a linear operator. The equivalent system formed by cascading the neural network and the linear system can fit the complete NLSE system.",
            "In FDD model, the linear effects of the FDD model system are modeled by equations which incorporates prior physical knowledge of the linear part into the system, thus, at the beginning of the training, the linear part of the NLSE equation is already correct, allowing the neural network to focus on optimizing the nonlinear part."
        ],
        "final_answer": "By cascading a physically-modeled linear operator after the neural network, FDD offloads all of the linear dispersion and attenuation effects into an analytic block. This decouples the NLSE’s linear and nonlinear parts, so the neural network only needs to learn the remaining nonlinear dynamics. As a result, the fitting complexity is greatly reduced and training becomes easier and more accurate.",
        "relevant_elements": [
            "neural network",
            "linear operator"
        ],
        "id": 928,
        "masked_question": "How does cascading the [mask1] with the linear operator simplify NLSE modeling complexity in FDD?",
        "masked_number": 1,
        "masked_elements": [
            "neural network"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.04511v1_figure_1.png",
        "paperid": "2411.04511v1",
        "paper_path": "./papers/2411.04511v1.json",
        "figure_id": "2411.04511v1_figure_1.png",
        "caption": "Figure 1: Two methods for fitting the NLSE.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does inter-view cross attention balance GPU memory efficiency and multi-view consistency within Multi-view Image Block?",
        "relevant_section_ids": [
            "4.2.2"
        ],
        "relevant_context": [
            "Given the small overlapping between field-of-views of adjacent cameras, we split each image latent z_I into two halves horizontally.",
            "For each view i, its left half z_i^L attends to the right half z_{i-1}^R of its left neighbor view, while its right half z_i^R depends on the left half z_{i+1}^L of its right neighbor.",
            "Compared to full cross-attention in MagicDrive (Gao et al., 2023), our split strategy significantly reduces the per-scene GPU memory cost of inter-view condition from 11GB to 3GB with better multi-view consistency."
        ],
        "final_answer": "Within the Multi-view Image Block, the inter-view cross-attention is implemented by splitting each image latent into left and right halves and only attending each half to its adjacent neighbor’s corresponding half. This ‘half-to-half’ cross-attention reduces the peak GPU memory from 11 GB to 3 GB while still improving consistency across views compared to a full cross-attention approach.",
        "relevant_elements": [
            "Inter-view Cross Attention",
            "Multi-view Image Block"
        ],
        "id": 930,
        "masked_question": "How does inter-view cross attention balance GPU memory efficiency and multi-view consistency within [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "Multi-view Image Block"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.01123v1_figure_2.png",
        "paperid": "2411.01123v1",
        "paper_path": "./papers/2411.01123v1.json",
        "figure_id": "2411.01123v1_figure_2.png",
        "caption": "Figure 2: Overview of our proposed X-Drive framework. We design a dual-branch diffusion model architecture to generate multi-modality data. Cross-modality epipolar condition modules (Fig. 3) are inserted between branches to enhance the cross-modality consistency.",
        "qtype": "Experimental_Results",
        "response": "The inter-view cross-attention module within the Multi-view Image Block [mask1] balances GPU memory efficiency and multi-view consistency through a specific \"split strategy\":\n\n1.  **GPU Memory Efficiency:** Instead of applying full cross-attention across entire views, the module splits each image latent horizontally into two halves. For each view, its left half attends only to the right half of its left neighbor, and its right half attends only to the left half of its right neighbor. This targeted, partial attention significantly reduces the computational overhead and memory footprint compared to full cross-attention, decreasing per-scene GPU memory cost from 1"
    },
    {
        "question": "What potential limitations arise from Fourier embedding in PV box encoder under diverse object scales?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "PV box encoder",
            "Multi-view Image Block"
        ],
        "id": 932,
        "masked_question": "What potential limitations arise from Fourier embedding in [mask1] under diverse object scales?",
        "masked_number": 1,
        "masked_elements": [
            "PV box encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.01123v1_figure_2.png",
        "paperid": "2411.01123v1",
        "paper_path": "./papers/2411.01123v1.json",
        "figure_id": "2411.01123v1_figure_2.png",
        "caption": "Figure 2: Overview of our proposed X-Drive framework. We design a dual-branch diffusion model architecture to generate multi-modality data. Cross-modality epipolar condition modules (Fig. 3) are inserted between branches to enhance the cross-modality consistency.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What privacy risks emerge from sharing mean embedding vectors when constructing cluster models across distributed robots?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "mean embedding vector",
            "cluster model"
        ],
        "id": 933,
        "masked_question": "What privacy risks emerge from sharing [mask1] when constructing cluster models across distributed robots?",
        "masked_number": 1,
        "masked_elements": [
            "mean embedding vector"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.04112v1_figure_1.png",
        "paperid": "2411.04112v1",
        "paper_path": "./papers/2411.04112v1.json",
        "figure_id": "2411.04112v1_figure_1.png",
        "caption": "Figure 1: Workflow of Fed-EC. (a) Participating robots learn and communicates a mean embedding vector and local model weight to the server. The server clusters the robots using the mean embedding vector and aggregates local models in each cluster to learn a model which is shared with the robots based on their cluster identity. (b) The robots navigate to the a given GPS goal using the learnt model which takes as input RGB and depth images from the front facing camera. (c) If a new robot is deployed it computes a mean embedding and shares it with the server. The server assigns a cluster to the robot and sends the respective cluster model to the robot to use.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What scalability challenges emerge in robot clustering and cluster model aggregation as robot fleet scales?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "robot clustering",
            "cluster model"
        ],
        "id": 934,
        "masked_question": "What scalability challenges emerge in [mask1] and cluster model aggregation as robot fleet scales?",
        "masked_number": 1,
        "masked_elements": [
            "robot clustering"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.04112v1_figure_1.png",
        "paperid": "2411.04112v1",
        "paper_path": "./papers/2411.04112v1.json",
        "figure_id": "2411.04112v1_figure_1.png",
        "caption": "Figure 1: Workflow of Fed-EC. (a) Participating robots learn and communicates a mean embedding vector and local model weight to the server. The server clusters the robots using the mean embedding vector and aggregates local models in each cluster to learn a model which is shared with the robots based on their cluster identity. (b) The robots navigate to the a given GPS goal using the learnt model which takes as input RGB and depth images from the front facing camera. (c) If a new robot is deployed it computes a mean embedding and shares it with the server. The server assigns a cluster to the robot and sends the respective cluster model to the robot to use.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates sharing a mean embedding vector along with local model weight?",
        "relevant_section_ids": [
            "1",
            "3.3"
        ],
        "relevant_context": [
            "Unlike previous methods where multiple rounds are needed [16 ###reference_b16###] or multiple models are communicated [17 ###reference_b17###], in each communication round the mean embedding vector which does not incur any additional communication cost is shared along with the local model.",
            "Using embeddings Fed-EC directly encodes the visual information of the local datasets. Similar embeddings represent robots deployed in similar regions or terrains. The mean embeddings are a single vector with small data sizes which are easy to upload."
        ],
        "final_answer": "Sharing the mean embedding alongside the local model enables the system to directly encode each robot’s local data distribution (as a compact visual embedding) so that robots in similar environments can be clustered together, while incurring minimal extra communication overhead due to the small size of the embedding vector.",
        "relevant_elements": [
            "Mean Embedding Vector",
            "Local Model Weight"
        ],
        "id": 935,
        "masked_question": "What motivates sharing a [mask1] along with [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Mean Embedding Vector",
            "Local Model Weight"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.04112v1_figure_1.png",
        "paperid": "2411.04112v1",
        "paper_path": "./papers/2411.04112v1.json",
        "figure_id": "2411.04112v1_figure_1.png",
        "caption": "Figure 1: Workflow of Fed-EC. (a) Participating robots learn and communicates a mean embedding vector and local model weight to the server. The server clusters the robots using the mean embedding vector and aggregates local models in each cluster to learn a model which is shared with the robots based on their cluster identity. (b) The robots navigate to the a given GPS goal using the learnt model which takes as input RGB and depth images from the front facing camera. (c) If a new robot is deployed it computes a mean embedding and shares it with the server. The server assigns a cluster to the robot and sends the respective cluster model to the robot to use.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates varying crossover rate and mutation rate in evolutionary algorithm for SNN privacy leak assessment?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "Using the TennLab framework, we systematically varied parameters such as Population Size, Crossover Rate, Mutation Rate, Processor configurations, and Encoder settings. These variations were implemented to determine their impact on the privacy vulnerability of SNN models (Figure 1, green block)."
        ],
        "final_answer": "The crossover rate and mutation rate are varied in the evolutionary algorithm to determine how these genetic parameters affect the privacy vulnerability of SNN models under membership inference attacks.",
        "relevant_elements": [
            "Crossover Rate",
            "Mutation Rate",
            "Evolutionary Algorithm"
        ],
        "id": 937,
        "masked_question": "What motivates varying [mask1] and [mask2] in evolutionary algorithm for SNN privacy leak assessment?",
        "masked_number": 2,
        "masked_elements": [
            "Crossover Rate",
            "Mutation Rate"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.06613v1_figure_1.png",
        "paperid": "2411.06613v1",
        "paper_path": "./papers/2411.06613v1.json",
        "figure_id": "2411.06613v1_figure_1.png",
        "caption": "Figure 1. Schematic representation of the experimental flow. The framework begins by comparing the privacy risks in ANNs and SNNs through MIA(yellow block). The SNN-specific exploration(green block) space evaluates privacy resilience using surrogate gradient algorithms and evolutionary algorithms with varying parameters. Finally, both ANNs and SNNs undergo DPSGD algorithm(blue block) to assess the privacy-utility tradeoff",
        "qtype": "Design_Rationale",
        "response": "To answer the question, we need to locate the part of the text that discusses the \"Evolutionary Algorithm\" and the parameters [mask1] (Crossover Rate) and [mask2] (Mutation Rate).\n\n1.  **Identify the relevant section:** The question asks about the Evolutionary Algorithm for SNN privacy leak assessment. Section \"4.2. Algorithmic Exploration within the SNN Architecture\" directly addresses this.\n2.  **Locate the specific parameters:** Within section 4.2, under \"Evolutionary Algorithm,\" it states: \"Using the TennLab framework, we systematically varied parameters such as Population Size, Crossover Rate, Mutation Rate, Processor configurations, and Encoder settings.\" This confirms that [mask1] (Crossover Rate) and [mask2] (Mutation Rate) are indeed varied.\n3.  **Find the motivation for variation:** The sentence continues: \"These variations were implemented to determine their impact on the privacy vulnerability of SNN models (Figure 1 ###reference_###, green block).\"\n\nTherefore, the motivation for varying these parameters is to assess their effect on the SNN models' susceptibility to privacy leaks.\n\n**Answer:**\nThe motivation for varying Crossover Rate and Mutation Rate in the evolutionary algorithm for SNN privacy leak assessment is \"to determine their impact on the privacy vulnerability of SNN models.\""
    },
    {
        "question": "What reasoning supports sampling minibatches of training data before applying clipped gradients and Gaussian noise in DPSGD?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Sampling minibatches of training data",
            "Clipped gradients",
            "Gaussian noise"
        ],
        "id": 938,
        "masked_question": "What reasoning supports [mask1] before applying clipped gradients and Gaussian noise in DPSGD?",
        "masked_number": 1,
        "masked_elements": [
            "Sampling minibatches of training data"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.06613v1_figure_1.png",
        "paperid": "2411.06613v1",
        "paper_path": "./papers/2411.06613v1.json",
        "figure_id": "2411.06613v1_figure_1.png",
        "caption": "Figure 1. Schematic representation of the experimental flow. The framework begins by comparing the privacy risks in ANNs and SNNs through MIA(yellow block). The SNN-specific exploration(green block) space evaluates privacy resilience using surrogate gradient algorithms and evolutionary algorithms with varying parameters. Finally, both ANNs and SNNs undergo DPSGD algorithm(blue block) to assess the privacy-utility tradeoff",
        "qtype": "Design_Rationale",
        "response": "The reasoning supporting sampling minibatches of training data before applying clipped gradients and Gaussian noise in Differentially Private"
    },
    {
        "question": "How does evolutionary algorithm use crossover rate and population size to optimize SNN encoder parameters?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Evolutionary Algorithm",
            "Crossover Rate",
            "Population"
        ],
        "id": 939,
        "masked_question": "How does [mask1] use crossover rate and population size to optimize SNN encoder parameters?",
        "masked_number": 1,
        "masked_elements": [
            "Evolutionary Algorithm"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.06613v1_figure_1.png",
        "paperid": "2411.06613v1",
        "paper_path": "./papers/2411.06613v1.json",
        "figure_id": "2411.06613v1_figure_1.png",
        "caption": "Figure 1. Schematic representation of the experimental flow. The framework begins by comparing the privacy risks in ANNs and SNNs through MIA(yellow block). The SNN-specific exploration(green block) space evaluates privacy resilience using surrogate gradient algorithms and evolutionary algorithms with varying parameters. Finally, both ANNs and SNNs undergo DPSGD algorithm(blue block) to assess the privacy-utility tradeoff",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How are per example gradients norm-clipped and averaged prior to Gaussian noise addition in DPSGD?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Per example gradients",
            "Clipped gradients",
            "Gaussian noise"
        ],
        "id": 940,
        "masked_question": "How are [mask1] norm-clipped and averaged prior to [mask2] addition in DPSGD?",
        "masked_number": 2,
        "masked_elements": [
            "Per example gradients",
            "Gaussian noise"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.06613v1_figure_1.png",
        "paperid": "2411.06613v1",
        "paper_path": "./papers/2411.06613v1.json",
        "figure_id": "2411.06613v1_figure_1.png",
        "caption": "Figure 1. Schematic representation of the experimental flow. The framework begins by comparing the privacy risks in ANNs and SNNs through MIA(yellow block). The SNN-specific exploration(green block) space evaluates privacy resilience using surrogate gradient algorithms and evolutionary algorithms with varying parameters. Finally, both ANNs and SNNs undergo DPSGD algorithm(blue block) to assess the privacy-utility tradeoff",
        "qtype": "Implementation_Details",
        "response": "The [mask1] (per-example gradients) are first clipped using an `l2` norm operation to a predefined norm bound `C`, and then these clipped gradients are averaged across the minibatch prior to the [mask2] (Gaussian noise) addition, which ensures differential privacy."
    },
    {
        "question": "How are Predictions influenced by random edge masks in Masked Graphs within the GNN Classifier?",
        "relevant_section_ids": [
            "4.1",
            "4.2"
        ],
        "relevant_context": [
            "Specifically, for each node, we randomly select a proportion ρ of its neighbors to mask through edge masking, and we conduct this random mask operation for M times with replacement. Through this strategy, we generate a set of masked graphs denoted as {G^t}, where G^t represents the masked graph generated in the t-th trial.",
            "Given a graph G^t with node features X and adjacency matrix A^t, the label probability for all nodes can be inferred using the backbone GNN, represented as follows: P^t = GNN(X, A^t), where P^t is the output matrix of the model under the t-th masked graph."
        ],
        "final_answer": "Each prediction is obtained by applying the GNN classifier to a differently masked version of the original graph—where a random subset of edges (neighbors) has been removed. As a result, the model produces a set of predictions (P^1, P^2, …, P^M), each reflecting a distinct neighbor context and thereby reducing the influence of any single (potentially noisy) neighbor.",
        "relevant_elements": [
            "Masked Graphs",
            "GNN Classifier",
            "Predictions"
        ],
        "id": 941,
        "masked_question": "How are [mask1] influenced by random edge masks in Masked Graphs within the GNN Classifier?",
        "masked_number": 1,
        "masked_elements": [
            "Predictions"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.11020v1_figure_1.png",
        "paperid": "2411.11020v1",
        "paper_path": "./papers/2411.11020v1.json",
        "figure_id": "2411.11020v1_figure_1.png",
        "caption": "Figure 1: A comparison between our proposed label ensemble method and existing reliable labeling methods. The colors of the nodes represent their labels, while the symbols ”✓” and ”×” indicate whether the nodes are correctly or incorrectly labeled, respectively. Intuitively, our method avoids directly mistaking erroneous labels as correct by label ensemble. The experimental details of (b) are inline with Section V-E.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Gathered Label resolve conflicting Predictions to build the final label ensemble?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "Subsequently, we ensemble these labels to construct the high‐probability multi‐labels. Concretely, we create a high‐probability multi‐label matrix Y⁺, where Y⁺_{i,c} indicates that the c‐th label is a high‐probability label for node i, otherwise, it indicates that it is not a high‐probability label. This can be formalized as follows: Y⁺ = ⋁_{t=1}ⁿ Y^{t⁺}. Consequently, the i‐th row Y⁺_i corresponds to the high‐probability multi‐labels for node i. This matrix retains predicted labels from different neighbor contexts, avoiding strong misguidance to the model where a single erroneous label is considered correct.",
            "Similarly, the low‐probability multi‐label matrix Y⁻ can be formally expressed as Y⁻ = ⋁_{t=1}ⁿ Y^{t⁻}. Here, Y⁻_{i,c} indicates that label c is a low‐probability label for node i. By ensembling the labeling results from multiple bootstrapped neighbor contexts, we generate both high‐probability and low‐probability multi‐labels for each node."
        ],
        "final_answer": "Instead of picking a single label when different masked graphs predict different classes, LEGNN takes the union (logical OR) of all high‐probability predictions (and separately all low‐probability predictions) across the T bootstrapped masks to form two multi‐label sets per node. In this way, any label predicted under any mask is included in the final ensemble, so conflicting predictions are resolved by retaining all of them as partial labels rather than forcing a single choice.",
        "relevant_elements": [
            "Predictions",
            "Gathered Label"
        ],
        "id": 942,
        "masked_question": "How does [mask1] resolve conflicting Predictions to build the final label ensemble?",
        "masked_number": 1,
        "masked_elements": [
            "Gathered Label"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.11020v1_figure_1.png",
        "paperid": "2411.11020v1",
        "paper_path": "./papers/2411.11020v1.json",
        "figure_id": "2411.11020v1_figure_1.png",
        "caption": "Figure 1: A comparison between our proposed label ensemble method and existing reliable labeling methods. The colors of the nodes represent their labels, while the symbols ”✓” and ”×” indicate whether the nodes are correctly or incorrectly labeled, respectively. Intuitively, our method avoids directly mistaking erroneous labels as correct by label ensemble. The experimental details of (b) are inline with Section V-E.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does label ensemble's Gathered Label module differ from label refinement's Refined Label module in handling erroneous labels?",
        "relevant_section_ids": [
            "1",
            "4.2"
        ],
        "relevant_context": [
            "Section 1: “When the noise level increases, simply encouraging the homophily could be problematic: a node might be similar to many nodes with inaccurate labels; directly using these incorrect signals actually introduces further noise, and eventually leads to unreliable labeling.”",
            "Section 4.2: “This matrix retains predicted labels from different neighbor contexts, avoiding strong misguidance to model where a single erroneous label is considered correct.”"
        ],
        "final_answer": "In contrast to the traditional Refined Label module—which collapses all neighbor information into one single label under the homophily assumption and thus can be driven astray when many neighbors are mislabeled—the Gathered Label module in label ensemble collects multiple label predictions across randomly masked neighbor contexts to form a set of high-probability (and low-probability) candidate labels. By keeping all these bootstrapped predictions rather than picking just one, it prevents any one erroneous neighbor label from dominating and instead dilutes its influence, thereby reducing the risk of propagating a single wrong label.",
        "relevant_elements": [
            "Gathered Label",
            "Refined Label"
        ],
        "id": 943,
        "masked_question": "How does label ensemble's [mask1] module differ from label refinement's [mask2] module in handling erroneous labels?",
        "masked_number": 2,
        "masked_elements": [
            "Gathered Label",
            "Refined Label"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.11020v1_figure_1.png",
        "paperid": "2411.11020v1",
        "paper_path": "./papers/2411.11020v1.json",
        "figure_id": "2411.11020v1_figure_1.png",
        "caption": "Figure 1: A comparison between our proposed label ensemble method and existing reliable labeling methods. The colors of the nodes represent their labels, while the symbols ”✓” and ”×” indicate whether the nodes are correctly or incorrectly labeled, respectively. Intuitively, our method avoids directly mistaking erroneous labels as correct by label ensemble. The experimental details of (b) are inline with Section V-E.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "What relationship exists between Predictions and Gathered Label in reducing label noise relative to confidence-based selection?",
        "relevant_section_ids": [
            "4.1",
            "4.2"
        ],
        "relevant_context": [
            "Section IV-A (Bootstrapped Neighbor Context) – Discussion: \"Suppose a target node with k neighboring nodes, the ratio of neighbors with erroneous labels is r. Directly generating refined labels by averaging neighbors will result in an error rate of r; on the contrary, if we aggregate the bootstrapped neighbor context and then vote, the error rate is ∑_{i=⌈k/2⌉}^k (k choose i)·r^i·(1−r)^{k−i}, which is smaller than r when r<0.5.\"",
            "Section IV-B (Symmetric Label Ensemble): \"By ensembling the labeling results from multiple bootstrapped neighbor contexts, we generate a high-probability and a low-probability multi-labels for each node. This matrix retains predicted labels from different neighbor contexts, avoiding strong misguidance to model where a single erroneous label is considered correct.\""
        ],
        "final_answer": "LEGNN takes the individual Predictions made on multiple randomly masked graphs and aggregates them—via majority voting or symmetric high-/low-probability ensemble—into a single Gathered Label. This ensemble of Predictions lowers the overall error rate (noise) compared to selecting labels solely by single-shot confidence, because the probability that a majority of masked-graph predictions err is much smaller than the error rate of any one prediction when the base noise r<0.5.",
        "relevant_elements": [
            "Predictions",
            "Gathered Label"
        ],
        "id": 944,
        "masked_question": "What relationship exists between [mask1] and Gathered Label in reducing label noise relative to confidence-based selection?",
        "masked_number": 1,
        "masked_elements": [
            "Predictions"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.11020v1_figure_1.png",
        "paperid": "2411.11020v1",
        "paper_path": "./papers/2411.11020v1.json",
        "figure_id": "2411.11020v1_figure_1.png",
        "caption": "Figure 1: A comparison between our proposed label ensemble method and existing reliable labeling methods. The colors of the nodes represent their labels, while the symbols ”✓” and ”×” indicate whether the nodes are correctly or incorrectly labeled, respectively. Intuitively, our method avoids directly mistaking erroneous labels as correct by label ensemble. The experimental details of (b) are inline with Section V-E.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How do Objective Planner and Workflow Planner extend hierarchical decomposition methods from classical task planning approaches?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Objective Planner",
            "Workflow Planner"
        ],
        "id": 945,
        "masked_question": "How do [mask1] and [mask2] extend hierarchical decomposition methods from classical task planning approaches?",
        "masked_number": 2,
        "masked_elements": [
            "Objective Planner",
            "Workflow Planner"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.03743v1_figure_1.png",
        "paperid": "2411.03743v1",
        "paper_path": "./papers/2411.03743v1.json",
        "figure_id": "2411.03743v1_figure_1.png",
        "caption": "Figure 1: (a) The framework of the iterative refinement of PROTEUS . (b) A detailed illustration of the working process of PROTEUS .\nFirst, the Data Description module generates a precise description of the proteomics dataset, based on which the Objective Planner proposes a series of research objectives. Based on each objective, the Workflow Planner then plans a sequence of analytical workflows, such as analyzing expression differences or labeling cell types. These planned workflows are executed using specialized bioinformatics tools and follow a fixed sequence of steps. The Workflow Updater and Objective Updater analyze the system’s latest results, based on which they refine the subsequent workflows and objectives. PROTEUS produces numerous scientific hypotheses for each research objective, and continues its analysis until it reaches a pre-determined maximum number of objectives. These framework designs facilitate a robust, end-to-end proteomics research pipeline.",
        "qtype": "Literature_Background",
        "response": "PROTEUS extends hierarchical decomposition methods from classical task planning approaches through the dynamic and iterative nature orchestrated by its [mask1] (Objective Planner) and [mask2] (Workflow Planner), as detailed in Section 2.1.2 \"System Framework\" and Figure 1:\n\n1.  **Dynamic Generation of Objectives and Workflows:**\n    *   **[mask1] (Objective Planner):** Unlike classical approaches that might rely on predefined hierarchies, the Objective Planner leverages the planning and reasoning capabilities of Large Language Models (LLMs) to **dynamically generate** research objectives. It takes a detailed data description as input and proposes a sequence of potential research objectives, tailoring them to the specific characteristics of the data. This means the high-level goals are not static but are adaptively defined by the system.\n    *   **[mask2] (Workflow Planner):** Building on"
    },
    {
        "question": "How do Workflow Updater and Objective Updater adapt iterative refinement strategies from previous machine learning pipelines?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Workflow Updater",
            "Objective Updater"
        ],
        "id": 946,
        "masked_question": "How do [mask1] and [mask2] adapt iterative refinement strategies from previous machine learning pipelines?",
        "masked_number": 2,
        "masked_elements": [
            "Workflow Updater",
            "Objective Updater"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.03743v1_figure_1.png",
        "paperid": "2411.03743v1",
        "paper_path": "./papers/2411.03743v1.json",
        "figure_id": "2411.03743v1_figure_1.png",
        "caption": "Figure 1: (a) The framework of the iterative refinement of PROTEUS . (b) A detailed illustration of the working process of PROTEUS .\nFirst, the Data Description module generates a precise description of the proteomics dataset, based on which the Objective Planner proposes a series of research objectives. Based on each objective, the Workflow Planner then plans a sequence of analytical workflows, such as analyzing expression differences or labeling cell types. These planned workflows are executed using specialized bioinformatics tools and follow a fixed sequence of steps. The Workflow Updater and Objective Updater analyze the system’s latest results, based on which they refine the subsequent workflows and objectives. PROTEUS produces numerous scientific hypotheses for each research objective, and continues its analysis until it reaches a pre-determined maximum number of objectives. These framework designs facilitate a robust, end-to-end proteomics research pipeline.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Objective Updater interact with Workflow Planner to refine objectives after workflow-level results?",
        "relevant_section_ids": [
            "2.1.2"
        ],
        "relevant_context": [
            "For a certain research objective, we prompt the LLM with the objective, the data description, and a list of descriptions of all available data analysis workflows, then instruct it to plan a series of workflows.",
            "Following each workflow execution, the LLM refers to the newly obtained workflow results to update the original plan in preparation for subsequent workflow execution.",
            "It performs a similar step after analyzing each objective, using the latest results to refine future research objectives."
        ],
        "final_answer": "After the Workflow Planner executes the planned workflows and produces results, the Objective Updater module takes those workflow-level results and feeds them back into the LLM. The LLM then updates the original research objectives based on the new findings, and these refined objectives are passed back to the Workflow Planner to guide and generate the next sequence of workflows.",
        "relevant_elements": [
            "Objective Updater",
            "Workflow Planner"
        ],
        "id": 947,
        "masked_question": "How does [mask1] interact with [mask2] to refine objectives after workflow-level results?",
        "masked_number": 2,
        "masked_elements": [
            "Objective Updater",
            "Workflow Planner"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.03743v1_figure_1.png",
        "paperid": "2411.03743v1",
        "paper_path": "./papers/2411.03743v1.json",
        "figure_id": "2411.03743v1_figure_1.png",
        "caption": "Figure 1: (a) The framework of the iterative refinement of PROTEUS . (b) A detailed illustration of the working process of PROTEUS .\nFirst, the Data Description module generates a precise description of the proteomics dataset, based on which the Objective Planner proposes a series of research objectives. Based on each objective, the Workflow Planner then plans a sequence of analytical workflows, such as analyzing expression differences or labeling cell types. These planned workflows are executed using specialized bioinformatics tools and follow a fixed sequence of steps. The Workflow Updater and Objective Updater analyze the system’s latest results, based on which they refine the subsequent workflows and objectives. PROTEUS produces numerous scientific hypotheses for each research objective, and continues its analysis until it reaches a pre-determined maximum number of objectives. These framework designs facilitate a robust, end-to-end proteomics research pipeline.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Result Analyzer inform Workflow Updater to refine analysis steps after tool execution?",
        "relevant_section_ids": [
            "2.1.2"
        ],
        "relevant_context": [
            "For interpreting results, PROTEUS supports various formats of tool outputs, including text, data files, and visualization plots, and analyzes notable results within the context of the research objective.",
            "Hierarchical Iterative Refinement. Proteomics research is an iterative process in which results from preliminary analysis stages can be conducive to deeper and more detailed exploration. Therefore, we enable PROTEUS to refine its plans after each execution stage. Following each workflow execution, the LLM refers to the newly obtained workflow results to update the original plan in preparation for subsequent workflow execution. It performs a similar step after analyzing each objective, using the latest results to refine future research objectives. These additional steps assist PROTEUS in both handling errors and deepening scientific inquiry."
        ],
        "final_answer": "After a tool finishes executing, the Result Analyzer (an LLM) ingests the raw outputs—be they text summaries, data files, or plots—and distills the statistically or biologically notable findings. It then passes these step-level insights into the Workflow Updater, which re‐examines and adjusts the remaining analysis plan (tool choices, parameters, or sequence of steps) so as to handle any errors, follow up on unexpected but important trends, or pursue more detailed exploration in subsequent stages.",
        "relevant_elements": [
            "Result Analyzer",
            "Workflow Updater"
        ],
        "id": 948,
        "masked_question": "How does [mask1] inform [mask2] to refine analysis steps after tool execution?",
        "masked_number": 2,
        "masked_elements": [
            "Result Analyzer",
            "Workflow Updater"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.03743v1_figure_1.png",
        "paperid": "2411.03743v1",
        "paper_path": "./papers/2411.03743v1.json",
        "figure_id": "2411.03743v1_figure_1.png",
        "caption": "Figure 1: (a) The framework of the iterative refinement of PROTEUS . (b) A detailed illustration of the working process of PROTEUS .\nFirst, the Data Description module generates a precise description of the proteomics dataset, based on which the Objective Planner proposes a series of research objectives. Based on each objective, the Workflow Planner then plans a sequence of analytical workflows, such as analyzing expression differences or labeling cell types. These planned workflows are executed using specialized bioinformatics tools and follow a fixed sequence of steps. The Workflow Updater and Objective Updater analyze the system’s latest results, based on which they refine the subsequent workflows and objectives. PROTEUS produces numerous scientific hypotheses for each research objective, and continues its analysis until it reaches a pre-determined maximum number of objectives. These framework designs facilitate a robust, end-to-end proteomics research pipeline.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does the placement algorithm within Real-time Resource-aware Scheduling process frequency and model size inputs to optimize resource allocation?",
        "relevant_section_ids": [
            "2.4"
        ],
        "relevant_context": [
            "In line 1, we first investigate the frequency and data size of a request. If the current request frequency is larger than the frequency threshold and data size is smaller than the data size threshold, we deploy the request on the serverless platform.",
            "In line 1, we consider deploying the request with large data size on the Docker platform as the requests with large data sizes usually tolerate longer response time.",
            "In line 1, we deploy the requests using Flask (i.e., local web server) if the request has moderate data size and the current request frequency is low.",
            "In lines 1 and 1, requests with moderate data sizes are processed by Docker and serverless platforms only under specific conditions: when Flask is unavailable for more requests and the request frequency is moderate. Within this setup, Docker is given priority. Requests allocated to a Docker container will be run using RESTful APIs."
        ],
        "final_answer": "The algorithm takes each incoming request’s frequency and data (model) size, compares them to predefined thresholds, and then routes the request to the most suitable platform: high‐frequency, small‐size requests go to serverless; large‐size requests go to Docker; low‐frequency, moderate‐size requests run on the local Flask web server; and for moderate‐frequency, moderate‐size requests, Docker is tried first (falling back to serverless if Flask is saturated).",
        "relevant_elements": [
            "Placement Algorithm",
            "Real-time Resource-aware Scheduling"
        ],
        "id": 949,
        "masked_question": "How does the [mask1] within Real-time Resource-aware Scheduling process frequency and model size inputs to optimize resource allocation?",
        "masked_number": 1,
        "masked_elements": [
            "Placement Algorithm"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.18148v2_figure_1.png",
        "paperid": "2407.18148v2",
        "paper_path": "./papers/2407.18148v2.json",
        "figure_id": "2407.18148v2_figure_1.png",
        "caption": "Figure 1: The workflow of StraightLine.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Layer 2's container customization adapt compressed models to heterogeneous infrastructures through RESTful APIs and AWS Lambda?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "StraightLine is designed for hybrid infrastructure so compressed models are implemented in three different ways: 1) local web server, 2) RESTful APIs, or 3) serverless computing. However, it is likely that the hybrid infrastructure cannot offer a compatible environment to many heterogeneous ML applications. Each computing unit in the hybrid infrastructure may run different operating systems, ML application runtime (e.g., TensorFlow [17], PyTorch [18], PyWren [19], etc.), and language environments (e.g., Python, Java, or R). It is imperative to consider the implementation difficulty resulting from software environment conflicts.",
            "We further offer the implementation of containerized ML applications. As shown in Figure 2, a containerized ML application only contains core information (e.g., model weights, and inference requirements) and the target environment (e.g., ML application runtime and language environment). Once a containerized ML application is triggered in the infrastructure, it can connect to the specified target environment and resources. When the task is finished, the provisioned resources will be released back to the infrastructure. Moreover, we can execute cross-platform ML implementation by specifying different target environments, such as different versions of Linux (e.g., Ubuntu), Windows or serverless environments.",
            "In practice, we use the Flask Python library to implement RESTful APIs for ML implementation since most machine learning libraries are built on Python. For serverless computing, we use AWS Lambda [15] to implement ML applications."
        ],
        "final_answer": "Layer 2 packages each compressed model into a lightweight Docker container that includes only its weights and inference code plus a descriptor of the desired runtime (e.g. OS, ML framework, language).  For on-premises or private servers it spins up a Flask-based RESTful API inside the container, and for serverless it wraps the same container as an AWS Lambda function.  In this way the identical compressed model can be deployed unchanged across heterogeneous infrastructures simply by selecting either the RESTful (Flask) endpoint or the AWS Lambda target.",
        "note": "",
        "relevant_elements": [
            "Container Customization",
            "RESTful APIs",
            "AWS Lambda"
        ],
        "id": 950,
        "masked_question": "How does Layer 2's [mask1] adapt compressed models to heterogeneous infrastructures through RESTful APIs and AWS Lambda?",
        "masked_number": 1,
        "masked_elements": [
            "Container Customization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.18148v2_figure_1.png",
        "paperid": "2407.18148v2",
        "paper_path": "./papers/2407.18148v2.json",
        "figure_id": "2407.18148v2_figure_1.png",
        "caption": "Figure 1: The workflow of StraightLine.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What limitations might arise from GPU Cluster Docker’s heavy workload requirement on model containerization?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "GPU Cluster Docker",
            "Model Containerization"
        ],
        "id": 951,
        "masked_question": "What limitations might arise from [mask1]’s heavy workload requirement on [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "GPU Cluster Docker",
            "Model Containerization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.18148v2_figure_1.png",
        "paperid": "2407.18148v2",
        "paper_path": "./papers/2407.18148v2.json",
        "figure_id": "2407.18148v2_figure_1.png",
        "caption": "Figure 1: The workflow of StraightLine.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative strategies could enhance real-time resource-aware scheduling beyond the placement algorithm’s current heuristics?",
        "relevant_section_ids": [
            "4"
        ],
        "relevant_context": [
            "In the future, we plan to explore the following directions: (1) evaluate StraightLine across diverse scenarios and workloads and compare its performance with alternative approaches; (2) enhance StraightLine’s empirical dynamic placing algorithm to consider additional parameters of the models and characteristics of the applications (e.g., SLOs); and (3) further refine StraightLine to dynamically allocate resources based on real-time demand fluctuations and workload patterns, ensuring optimal resource utilization and performance."
        ],
        "final_answer": "Beyond the current threshold‐based placement heuristics, StraightLine could be improved by: (1) incorporating additional model and application characteristics—such as service‐level objectives (SLOs)—into its placement decisions, and (2) moving from static thresholds to a fully dynamic allocation scheme that adapts in real time to demand spikes and evolving workload patterns.",
        "relevant_elements": [
            "Real-time Resource-aware Scheduling",
            "Placement Algorithm"
        ],
        "id": 952,
        "masked_question": "What alternative strategies could enhance [mask1] beyond the [mask2]'s current heuristics?",
        "masked_number": 2,
        "masked_elements": [
            "Real-time Resource-aware Scheduling",
            "Placement Algorithm"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.18148v2_figure_1.png",
        "paperid": "2407.18148v2",
        "paper_path": "./papers/2407.18148v2.json",
        "figure_id": "2407.18148v2_figure_1.png",
        "caption": "Figure 1: The workflow of StraightLine.",
        "qtype": "Others",
        "response": "To enhance Layer 3 beyond the Placement Algorithm's current heuristics, the paper suggests the following strategies:\n\n1.  **Consider additional parameters**: Enhance the empirical dynamic placing algorithm to incorporate more parameters of the models and characteristics of the applications, such as Service Level Objectives (SLOs).\n2.  **Dynamic resource allocation**: Further refine StraightLine to dynamically allocate resources based on real-time demand fluctuations and workload patterns. This would ensure optimal resource utilization and performance, moving beyond fixed or empirically derived placement rules."
    },
    {
        "question": "How could weighted Average Analyses components alter Compensation Index sensitivity to metric variations?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Average Analyses",
            "Compensation Index"
        ],
        "id": 954,
        "masked_question": "How could weighted [mask1] components alter Compensation Index sensitivity to metric variations?",
        "masked_number": 1,
        "masked_elements": [
            "Average Analyses"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.05871v1_figure_2.png",
        "paperid": "2409.05871v1",
        "paper_path": "./papers/2409.05871v1.json",
        "figure_id": "2409.05871v1_figure_2.png",
        "caption": "Figure 2: The workflow of this project. A total of 1372 reaching data are collected from 7 subjects under the unbraced and braced condition, reaching the 49 targets horizontally or vertically. The reaching final pose (final joint locations and angles) and subjects  static anthropometry information are used to calculate four compensatory motion evaluation metrics: average joint location deviation, average joint angle difference, group separability score, and group clustering accuracy score. The four components are combined as the Compensation Index and presented in heatmap format.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What rationale underlies concatenating anthropometry with final pose features before separability score analysis?",
        "relevant_section_ids": [
            "3.2",
            "3.2.1"
        ],
        "relevant_context": [
            "The group performance analyses, utilising a feature vector, take the individual differences into account, reflecting the similarity between the features from the unbraced and the braced conditions.",
            "The feature vector v<sub>i,k</sub> combined the joint location, joint angle, and subjects’ static anthropometry information (height H<sub>i</sub> and arm length L<sub>i</sub>)."
        ],
        "final_answer": "By concatenating each subject’s static anthropometry (height and arm length) with their final‐pose joint locations and angles, the separability analysis can account for inter‐subject body‐size differences. This ensures that the computed separability score reflects genuine compensatory‐motion differences between braced and unbraced conditions rather than variations arising purely from differing anthropometry.",
        "relevant_elements": [
            "Anthropometry",
            "Separability Scores"
        ],
        "id": 955,
        "masked_question": "What rationale underlies concatenating [mask1] with final pose features before [mask2] analysis?",
        "masked_number": 2,
        "masked_elements": [
            "Anthropometry",
            "Separability Scores"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.05871v1_figure_2.png",
        "paperid": "2409.05871v1",
        "paper_path": "./papers/2409.05871v1.json",
        "figure_id": "2409.05871v1_figure_2.png",
        "caption": "Figure 2: The workflow of this project. A total of 1372 reaching data are collected from 7 subjects under the unbraced and braced condition, reaching the 49 targets horizontally or vertically. The reaching final pose (final joint locations and angles) and subjects  static anthropometry information are used to calculate four compensatory motion evaluation metrics: average joint location deviation, average joint angle difference, group separability score, and group clustering accuracy score. The four components are combined as the Compensation Index and presented in heatmap format.",
        "qtype": "Design_Rationale",
        "response": "The rationale for concatenating \"Anthropometry Arm length & Height\" (mask1) with final pose features before \"Separability Scores J\" (mask2) analysis is to incorporate individual differences into the group performance analyses.\n\nHere's a step-by-step breakdown:\n\n1.  **Purpose of Group Performance Analyses:** The text explains in Section III-B, \"Group Performance Analyses,\" that these analyses (including separability and clustering scores) are designed to \"take the individual differences into account\" and \"reflect the similarity between the features from the unbraced and the embraced conditions.\" This is in contrast to the average performance analyses, which might not fully capture the consistency among subjects.\n\n2.  **Formation of the Feature Vector:** Section III-B1, \"Feature Vector,\" explicitly states: \"The feature"
    },
    {
        "question": "Why apply empirical normalization scaling instead of standard min-max to prepare metrics for compensation index?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Regular normalisation methods, such as min-max normalisation, are not suitable. Such a normalisation method would set the maximum value in this research to one, but another experiment with different users/conditions might observe more significant compensatory motions and would exceed that bound of normalisation.",
            "Hence, to make the four components comparable and able to be adapted to other research, they were normalised to the same level using different approaches empirically: L was divided by 100 (equivalent to using ‘meter’ as the unit), A was divided by 10, J and H remained unchanged."
        ],
        "final_answer": "Because a standard min-max normalisation would lock the current study’s maximum to 1 and wouldn’t accommodate future studies with larger observed values, the authors instead chose an empirically scaled normalisation (dividing L by 100, A by 10, leaving J and H unchanged) so that the four metrics remain comparable and the approach remains adaptable to other datasets.",
        "relevant_elements": [
            "Normalise",
            "Compensation Index"
        ],
        "id": 956,
        "masked_question": "Why apply empirical normalization scaling instead of standard min-max to prepare metrics for [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "Compensation Index"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.05871v1_figure_2.png",
        "paperid": "2409.05871v1",
        "paper_path": "./papers/2409.05871v1.json",
        "figure_id": "2409.05871v1_figure_2.png",
        "caption": "Figure 2: The workflow of this project. A total of 1372 reaching data are collected from 7 subjects under the unbraced and braced condition, reaching the 49 targets horizontally or vertically. The reaching final pose (final joint locations and angles) and subjects  static anthropometry information are used to calculate four compensatory motion evaluation metrics: average joint location deviation, average joint angle difference, group separability score, and group clustering accuracy score. The four components are combined as the Compensation Index and presented in heatmap format.",
        "qtype": "Design_Rationale",
        "response": "The reasons for applying empirical normalization scaling instead of standard min-max normalization for the metrics (average joint location deviation $L$, average joint angle difference $A$, group separability score $J$, and group clustering accuracy score $H$) to prepare them for the Compensation Index ([mask1]) are explicitly stated in the \"III-C Compensation Index\" section:\n\n1.  **Comparability across studies:** Min-max normalization would set the maximum observed value in the *current* research to one. However, if another experiment with different users or conditions were to observe *more significant* compensatory motions, those new observations would exceed the [0,1] bound established by min-max normalization on the current data. This would make direct comparisons between different studies or datasets inconsistent.\n2.  **Adaptability to new observations:** Empirical normalization, by dividing $L$ by 100 (treating as meters) and $A$ by 10, along with leaving $J$ and $H$ unchanged, scales the components to a comparable range while explicitly allowing for potentially larger future observations to be included and scaled in the same consistent manner without exceeding a predefined bound based solely on the current dataset's maximum. This ensures the Compensation Index can be readily adapted and applied to other research."
    },
    {
        "question": "Why apply vectorization prior to paired case retrieval in the contrastive strategy?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "Specifically, for each erroneous case e, the vectorized features f_e are used to calculate and retrieve the m most similar correct cases:",
            "where f = vectorized features, d = distance measurement, m = number of pairs, and C^e is the paired set."
        ],
        "final_answer": "Vectorization is applied so that each case (both erroneous and correct) is represented as a feature vector f. This enables the use of a distance metric d(f_e, f_c) to identify and retrieve the m most similar correct cases for the contrastive learning step.",
        "relevant_elements": [
            "Vectorization",
            "paired cases"
        ],
        "id": 958,
        "masked_question": "Why apply [mask1] prior to [mask2] retrieval in the contrastive strategy?",
        "masked_number": 2,
        "masked_elements": [
            "Vectorization",
            "paired cases"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.00497v1_figure_2.png",
        "paperid": "2407.00497v1",
        "paper_path": "./papers/2407.00497v1.json",
        "figure_id": "2407.00497v1_figure_2.png",
        "caption": "Figure 2: Our LLMs-as-Instructors framework consists of four steps in each iteration cycle to improve the target model: 1. Data Selection (Section 2.2), where target data samples are selected to challenge and assess the capabilities we intend to enhance. 2. Result Collection (Section 2.2), involving the evaluation of the target model on these samples and collection of responses for analysis. 3. Instructor Analysis and Data Supply (Section 2.3), where the instructor conducts analysis and generates tailored training data. 4. Target Model Training and Evaluation (Section 2.4), having the target model learn from the errors and conducting the assessment of the improvements.",
        "qtype": "Design_Rationale",
        "response": "To answer the question, let's first identify what [mask1] and [mask2] refer to:\n*   **[mask1]**: The red box in the image points to \"Vectorization\".\n*   **[mask2]**: The blue box in the image points to \"Get Paired\".\n\nThe question is effectively: \"Why apply Vectorization prior to Get Paired retrieval in the contrastive strategy?\"\n\nNow, let's refer to the \"Learning from Errors by Contrast (LEC)\" section in the provided context:\n\"Specifically, for each erroneous case, the vectorized features are used to calculate and retrieve the K most similar correct cases:\nwhere x_e^v = g(x_e) and x_c^v = g(x_c). d(x_e^v, x_c^v) is a distance function... These K retrieved paired cases, along with the incorrect case, form the contrast set.\"\n\nHere's the step-by-step reasoning:\n1.  **Purpose of \"Get Paired\"**: The \"Get Paired\" step aims to find the \"K most similar correct cases\" for a given erroneous case. This implies a need to compare the erroneous case with all available correct cases and quantify their similarity.\n2.  **How Similarity is Measured**: The text explicitly states that \"the **vectorized features** are used to **calculate** and retrieve the... similar correct cases.\" The formula `d(x_e^v, x_c^v)` represents a distance function between `x_e^v` (vectorized erroneous case) and `x_c^v` (vectorized correct case).\n3.  **Role of \"Vectorization\"**: Raw text data (questions and answers) cannot be directly compared using mathematical distance functions. \"Vectorization\" is the process of converting this unstructured text into numerical vector representations (`x_e^v` and"
    },
    {
        "question": "How does Data Selection filter samples to challenge the Target Model's capabilities?",
        "relevant_section_ids": [
            "2",
            "2.2"
        ],
        "relevant_context": [
            "Data Selection (Section 2.2) is the initial step where we meticulously select target data samples designed to evaluate the capabilities we intend to enhance in subsequent iterations.",
            "To initiate the model enhancement process, we first engage in the critical task of measuring and identifying the errors of target model. As outlined in line 4 of Algorithm 1, this is achieved by carefully selecting a subset of the target dataset, denoted as S_t, from the base D."
        ],
        "final_answer": "Data Selection filters samples by choosing a tailored subset (S_t) from the full dataset D that is specifically designed to probe and evaluate the particular capabilities of the target model that we aim to improve.",
        "relevant_elements": [
            "Data Selection",
            "Target Model"
        ],
        "id": 959,
        "masked_question": "How does [mask1] filter samples to challenge the Target Model's capabilities?",
        "masked_number": 1,
        "masked_elements": [
            "Data Selection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.00497v1_figure_2.png",
        "paperid": "2407.00497v1",
        "paper_path": "./papers/2407.00497v1.json",
        "figure_id": "2407.00497v1_figure_2.png",
        "caption": "Figure 2: Our LLMs-as-Instructors framework consists of four steps in each iteration cycle to improve the target model: 1. Data Selection (Section 2.2), where target data samples are selected to challenge and assess the capabilities we intend to enhance. 2. Result Collection (Section 2.2), involving the evaluation of the target model on these samples and collection of responses for analysis. 3. Instructor Analysis and Data Supply (Section 2.3), where the instructor conducts analysis and generates tailored training data. 4. Target Model Training and Evaluation (Section 2.4), having the target model learn from the errors and conducting the assessment of the improvements.",
        "qtype": "Implementation_Details",
        "response": "[mask1] refers to \"Step 1: Data Selection\".\n\nBased on the provided context:\n1.  **\"Data Selection (Section 2.2) is the initial step where we meticulously select target data samples designed to evaluate the capabilities we intend to enhance in subsequent iterations.\"** (From the description of Step 1 in the framework)\n2.  **\"To initiate the model enhancement process, we first engage in the critical task of measuring and identifying the errors of target model. As outlined in line 4 of Algorithm 1, this is achieved by carefully selecting a subset of the target dataset, denoted as, from the base .\"** (From \"Data Selection and Result Collection\" section)\n3.  **\"Data Selection (Section 2.2), where target data samples are selected to challenge and assess the capabilities we intend to enhance.\"** (From the image caption)\n\nTherefore, Step 1: Data Selection filters samples by **meticulously selecting a subset of target data samples that are specifically designed to evaluate and challenge the capabilities of the Target Model that the researchers intend to enhance, aiming to measure and identify the errors of the target model.**"
    },
    {
        "question": "How does vectorization compute distances to identify similar correct samples in Learning from Errors by Contrast?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "Beyond the erroneous cases E, inspired by “Contrastive Learning” Hadsell et al. (2006); Chen et al. (2020), which highlights learning by comparing negative and positive samples, we incorporate correct cases C for contrast to enhance learning from errors.",
            "Specifically, for each erroneous case e_i, the vectorized features v(e_i) are used to calculate and retrieve the k most similar correct cases:",
            "where d(v(e_i), v(c)) measures the distance between the erroneous case’s vector and each correct case’s vector. These k retrieved paired cases, along with the incorrect case, form the contrast set."
        ],
        "final_answer": "Each question (correct or incorrect) is first mapped to a feature vector v(·). To find the k most similar correct samples for a given erroneous case e_i, the framework computes the distance d(v(e_i), v(c)) between the error’s vector and every correct sample’s vector, then selects the k correct cases with the smallest distances.",
        "relevant_elements": [
            "Learning from Errors by Contrast",
            "Vectorization"
        ],
        "id": 960,
        "masked_question": "How does [mask1] compute distances to identify similar correct samples in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Vectorization",
            "Learning from Errors by Contrast"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.00497v1_figure_2.png",
        "paperid": "2407.00497v1",
        "paper_path": "./papers/2407.00497v1.json",
        "figure_id": "2407.00497v1_figure_2.png",
        "caption": "Figure 2: Our LLMs-as-Instructors framework consists of four steps in each iteration cycle to improve the target model: 1. Data Selection (Section 2.2), where target data samples are selected to challenge and assess the capabilities we intend to enhance. 2. Result Collection (Section 2.2), involving the evaluation of the target model on these samples and collection of responses for analysis. 3. Instructor Analysis and Data Supply (Section 2.3), where the instructor conducts analysis and generates tailored training data. 4. Target Model Training and Evaluation (Section 2.4), having the target model learn from the errors and conducting the assessment of the improvements.",
        "qtype": "Implementation_Details",
        "response": "**Step 1: Identify [mask1] and [mask2] in the image.**\n[mask1] (red box) points to \"Vectorization\".\n[mask2] (blue box) points to \"Strategy 2: Learning from Errors by Contrast\".\n\n**Step 2: Locate relevant information in the provided text for \"Learning from Errors by Contrast (LEC)\".**\nThe subsection \"Learning from Errors by Contrast (LEC)\" is the most relevant section.\n\n**Step 3: Analyze how distances are computed within the LEC strategy.**\nThe text states: \"Beyond the erroneous cases , inspired by 'Contrastive Learning' Hadsell et al. (2006 ); Chen et al. (2020 ), which highlights learning by comparing negative and positive samples, we incorporate correct cases for contrast to enhance learning from errors. Specifically, for each erroneous case , the vectorized features are used to calculate and retrieve the most similar correct cases:\nwhere .\"\n\n**Step 4: Interpret the formula provided.**\nThe formula for finding the most similar correct cases is:\n`min_sim(x_inc, X_cor) = argmin_{x_cor \\in X_cor} d(v_{x_inc}, v_{x_cor})`\nHere:\n- `x_inc` is an erroneous case.\n- `X_cor` is the set of all correct cases.\n- `v_{x_inc}` represents the *vectorized features* of the erroneous case `x_inc`.\n- `v_{x_cor}` represents the *vectorized features* of a correct case `x_cor`.\n- `d(⋅,⋅)` is described as a \"distance\" function.\n\nThe text explicitly mentions that \"vectorized features\" are used to \"calculate and retrieve\" the most similar correct cases by computing a \"distance\" (`d(⋅,⋅)`) between the vectorized features of the incorrect case and the vectorized features of the correct cases. The method of \"Vectorization\" is responsible for transforming the questions/samples into these numerical feature vectors. The `d(⋅,⋅)` function then calculates the distance between these vectors. However, the exact type of distance metric (e.g., Euclidean distance, cosine similarity, etc.) is not specified in the provided context, only that a \"distance\" is computed.\n\n**Final Answer:**\n**Vectorization** ([mask1]) computes distances by first transforming the given questions and samples into their **vectorized features**. Then, for each erroneous case, it calculates the **distance** `d(⋅,⋅)` between the vectorized features of"
    },
    {
        "question": "How does f1_θ1 utilize classifier evaluations to adaptively select the optimal synthesis technique?",
        "relevant_section_ids": [
            "3.1",
            "3.1.2"
        ],
        "relevant_context": [
            "The data synthesis block aims to enhance the model’s ability to recognize minority classes in imbalanced datasets by increasing the number of minority class samples. Specifically, this module employs an adaptive algorithm based on the F1 score to evaluate various data synthesis techniques, including SMOTE and CTGAN. This enables the algorithm to automatically select the best-performing technique, ensuring that TriEnhance can choose the optimal synthesis strategy for various financial risk datasets.",
            "Meta-synthetic-data learning initially partitions the dataset D into a sub-training set and validation set, i.e., D_sub and D_val. For each predefined data synthesis technique, we utilize D_sub to generate synthetic data S_m, which is then merged with the sub-training set data to form an augmented dataset D_aug^m. Subsequently, we train a model g_m on this augmented dataset and evaluate it on the validation set D_val to obtain the F1 scores for each technique. After systematically evaluating all candidate techniques, we select the technique with the highest F1 score."
        ],
        "final_answer": "f1_θ1 implements a meta-synthetic-data learning loop: it partitions the data into sub-training and validation sets, applies each candidate synthesis method (e.g., SMOTE, CTGAN) to augment the sub-training set, trains a classifier on each augmented set, computes each classifier’s F1 score on the validation set, and then adaptively selects the synthesis technique that achieves the highest F1 score.",
        "relevant_elements": [
            "f1_θ1",
            "classifier"
        ],
        "id": 961,
        "masked_question": "How does [mask1] utilize classifier evaluations to adaptively select the optimal synthesis technique?",
        "masked_number": 1,
        "masked_elements": [
            "f1_θ1"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.09792v1_figure_2.png",
        "paperid": "2409.09792v1",
        "paper_path": "./papers/2409.09792v1.json",
        "figure_id": "2409.09792v1_figure_2.png",
        "caption": "Figure 2: Overview of the TriEnhance Architecture.",
        "qtype": "Implementation_Details",
        "response": "The `f^1_θ1` component, representing the adaptive algorithm within the Data Synthesis Block, utilizes classifier evaluations to adaptively select the optimal synthesis technique through the following steps:\n\n1.  **Data Partitioning:** It first partitions the original dataset `D` into a sub-training set (`D_sub`) and a validation set (`D_val`).\n2.  **Synthetic Data Generation & Augmentation:** For each predefined data synthesis technique (e.g., SMOTE, CTGAN), it uses the `D_sub` to generate synthetic data (`D_syn`). This synthetic data is then merged with `D_sub` to form an augmented dataset (`D_aug`).\n3.  **Classifier Training:** A classifier (referred to as a \"model M\" in the text) is trained on *each* of these augmented datasets (`D_aug`).\n4.  **Classifier Evaluation:** The performance of each trained classifier is then evaluated on the dedicated validation set"
    },
    {
        "question": "How does f2_θ2 reconcile D7 and D8 inputs to generate high-confidence pseudo-labels?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "D7(x_i,y_i)",
            "D8(x_i,y_i)",
            "f2_θ2"
        ],
        "id": 962,
        "masked_question": "How does [mask1] reconcile D7 and D8 inputs to generate high-confidence pseudo-labels?",
        "masked_number": 1,
        "masked_elements": [
            "f2_θ2"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.09792v1_figure_2.png",
        "paperid": "2409.09792v1",
        "paper_path": "./papers/2409.09792v1.json",
        "figure_id": "2409.09792v1_figure_2.png",
        "caption": "Figure 2: Overview of the TriEnhance Architecture.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Data synthesis block integrate SMOTE's synthetic sampling principles into f1_theta1 mechanism?",
        "relevant_section_ids": [
            "3.1",
            "3.1.2"
        ],
        "relevant_context": [
            "Section 3.1: \"The data synthesis block aims to enhance the model’s ability to recognize minority classes in imbalanced datasets by increasing the number of minority class samples. Specifically, this module employs an adaptive algorithm based on the F1 score to evaluate various data synthesis techniques, including SMOTE and CTGAN. This enables the algorithm to automatically select the best‐performing technique, ensuring that TriEnhance can choose the optimal synthesis strategy for various financial risk datasets.\"",
            "Section 3.1.2: \"Meta-synthetic-data learning initially partitions the dataset D into a sub-training set and validation set. For each predefined data synthesis technique, we utilize D to generate synthetic data D_syn, which is then merged with the sub-training set data to form an augmented dataset. Subsequently, we train a model on this augmented dataset and evaluate it on the validation set to obtain the F1 scores for each technique. After systematically evaluating all candidate techniques, we select the technique with the highest F1 score. Subsequently, we integrate the samples correctly classified by the model on the validation set into the augmented dataset generated by this technique.\""
        ],
        "final_answer": "The Data synthesis block encapsulated in f1_θ1 treats SMOTE as one of its candidate synthesis methods. During the f1_θ1 routine, SMOTE is applied to the sub-training split to generate synthetic minority samples; the classifier is retrained on this augmented data, and its F1 score is measured on a held-out validation fold. If SMOTE achieves the highest F1 among all techniques (e.g., CTGAN), its synthetic samples—specifically those instances the model classifies correctly on validation—are merged back into the main training set. In this way, f1_θ1 integrates SMOTE’s interpolation-based synthetic sampling by adaptively generating, testing, and selecting SMOTE samples according to their F1 performance.",
        "relevant_elements": [
            "Data synthesis block",
            "f1_theta1"
        ],
        "id": 963,
        "masked_question": "How does [mask1] integrate SMOTE's synthetic sampling principles into f1_theta1 mechanism?",
        "masked_number": 1,
        "masked_elements": [
            "Data synthesis block"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.09792v1_figure_2.png",
        "paperid": "2409.09792v1",
        "paper_path": "./papers/2409.09792v1.json",
        "figure_id": "2409.09792v1_figure_2.png",
        "caption": "Figure 2: Overview of the TriEnhance Architecture.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does self-learning block's f2_theta2 pseudo-label mechanism parallel classical pseudo-labeling methodologies?",
        "relevant_section_ids": [
            "2",
            "3.3"
        ],
        "relevant_context": [
            "Section 2, Pseudo-labeling Techniques: \"Pseudo-labeling[14], a semi-supervised learning approach, utilizes unlabeled data by assigning temporary labels based on the predictions of a trained model. The approach involves using the confident predictions of a model to generate labels for unlabeled data, which are then used to retrain the model, progressively improving its accuracy on both labeled and unlabeled datasets.\"",
            "Section 3.3, Self-learning block: \"K-Fold Unknown-label Filtering (KFULF). ... these artificially labeled datasets are combined to form the training data for retraining. Following this, the well-trained model predicts the unlabeled test set, identifying samples with explicit predictions as high-confidence samples. Upon completion of the K-Fold cycle, all high-confidence samples are incorporated into the training set.\"",
            "Section 3.3, Self-learning block: \"Delay-decision Strategy (DDS). ... iteratively assesses unlabeled samples and incorporates the top T highest confidence samples as high-confidence pseudo-labeled samples into the training set, those remaining samples are waiting for the next time precision.\""
        ],
        "final_answer": "The self-learning block’s f2_θ2 mechanism mirrors classical pseudo-labeling by taking a trained model’s high-confidence predictions on unlabeled data as temporary “pseudo-labels” and then retraining on these augmented samples (via K-Fold Unknown-label Filtering and Delay-decision Strategy), exactly as in standard pseudo-labeling schemes where confident model outputs on unlabeled examples are used to expand the labeled training set.",
        "relevant_elements": [
            "self-learning block",
            "f2_theta2"
        ],
        "id": 964,
        "masked_question": "How does [mask1]'s [mask2] pseudo-label mechanism parallel classical pseudo-labeling methodologies?",
        "masked_number": 2,
        "masked_elements": [
            "self-learning block",
            "f2_theta2"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.09792v1_figure_2.png",
        "paperid": "2409.09792v1",
        "paper_path": "./papers/2409.09792v1.json",
        "figure_id": "2409.09792v1_figure_2.png",
        "caption": "Figure 2: Overview of the TriEnhance Architecture.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does HWPE Subsystem utilize multi-port TCDM Interconnect architecture to meet accelerator bandwidth demands?",
        "relevant_section_ids": [
            "3",
            "4.2"
        ],
        "relevant_context": [
            "Each core has one master port with decoupled request and response path connected to the TCDM interconnect, and the HWPE subsystem features a parametric number of master ports to allow the integration accelerators.",
            "As the four streamers are multiplexed in time, ITA requires of maximum bandwidth to fetch two input vectors per cycle; therefore, we use 16 master ports on the TCDM interconnect for the HWPE subsystem."
        ],
        "final_answer": "The HWPE subsystem hooks into the shared 32-bank L1 TCDM through a configurable number of master ports on the TCDM interconnect. In the case of the Integer Transformer Accelerator (ITA), it instantiates 16 master ports—multiplexed across its four HWPE streamers—to supply the peak bandwidth the accelerator requires.",
        "relevant_elements": [
            "HWPE Subsystem",
            "TCDM Interconnect"
        ],
        "id": 965,
        "masked_question": "How does [mask1] utilize multi-port [mask2] architecture to meet accelerator bandwidth demands?",
        "masked_number": 2,
        "masked_elements": [
            "HWPE Subsystem",
            "TCDM Interconnect"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.02473v1_figure_1.png",
        "paperid": "2408.02473v1",
        "paper_path": "./papers/2408.02473v1.json",
        "figure_id": "2408.02473v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed architecture featuring nine RISC-V cores (red), HWPE subsystem (orange), memory hierarchy with two levels of scratchpad memory (blue), an L1 TCDM interconnect and an AXI interconnect connecting the cluster to its host system (green), and peripherals such as the cluster DMA and on-chip peripherals like timers (purple). The ninth Snitch core is a dedicated data mover core coupled with a DMA to manage 1D and 2D data transfers within the cluster. The implemented architecture uses a DAXI,W=512subscript𝐷AXI,W512D_{\\textrm{AXI,W}}=512italic_D start_POSTSUBSCRIPT AXI,W end_POSTSUBSCRIPT = 512-bit wide AXI interconnect to accommodate high bandwidth requirement of Attention-based networks between SoC level data memory and L1 memory. We use a separate DAXI,N=64subscript𝐷AXI𝑁64D_{\\textrm{AXI},N}=64italic_D start_POSTSUBSCRIPT AXI , italic_N end_POSTSUBSCRIPT = 64-bit narrow AXI interconnect for peripherals and communication with the host system, which prevents deterioration in data bandwidth. NHWPE=16subscript𝑁HWPE16N_{\\textrm{HWPE}}=16italic_N start_POSTSUBSCRIPT HWPE end_POSTSUBSCRIPT = 16 ports from the HWPE subsystem are connected to the TCDM to fulfill high bandwidth requirement of Attention accelerator.",
        "qtype": "Literature_Background",
        "response": "The [mask1] (HWPE Subsystem) utilizes the [mask2] (TCDM Interconnect) by providing a parametric number of master ports, specifically 16 ports ($N_{HWPE}=16$), to the TCDM interconnect. This allows the HWPE Subsystem to time-multiplex multiple streamers (special-purpose low-cost DMAs) to a multi-port interface, connecting them to the TCDM Interconnect. This configuration is crucial for fulfilling the high bandwidth requirements of the Attention accelerator (e.g., fetching two input vectors per cycle for the ITA accelerator). The TCDM itself is a multi-banked (32 banks) L1 memory, designed to reduce banking conflicts and provide the high bandwidth needed for accelerators."
    },
    {
        "question": "How does DMA core exploit Wide AXI interconnect width to optimize high-volume data transfers?",
        "relevant_section_ids": [
            "3",
            "4.2"
        ],
        "relevant_context": [
            "The cluster includes two parametrizable AXI interconnects: a wide crossbar with a bit data width and a narrow crossbar with a bit data width. The wide AXI interconnect is used to load instructions into the shared instruction cache and to transfer data from and to the SoC level memory system in conjunction with the DMA.",
            "Moreover, one Snitch core is coupled with a DMA to manage data movements within the cluster, facilitating double buffering to maintain high accelerator utilization.",
            "Consequently, we use a 512-bit wide data AXI interconnect to provide enough bandwidth for the instructions cache and ITA."
        ],
        "final_answer": "The DMA core drives bulk data movements over the wide AXI crossbar—configured as a 512-bit-wide interconnect—to ferry large tiles of weights, activations, and instructions between L2 (SoC) memory and the on-chip cluster. By issuing wide 512-bit bursts and double-buffering transfers, the DMA saturates the high-bandwidth link, minimizing transfer latency and keeping the accelerator continuously supplied with data.",
        "relevant_elements": [
            "DMA",
            "Wide AXI"
        ],
        "id": 966,
        "masked_question": "How does [mask1] core exploit Wide AXI interconnect width to optimize high-volume data transfers?",
        "masked_number": 1,
        "masked_elements": [
            "DMA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.02473v1_figure_1.png",
        "paperid": "2408.02473v1",
        "paper_path": "./papers/2408.02473v1.json",
        "figure_id": "2408.02473v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed architecture featuring nine RISC-V cores (red), HWPE subsystem (orange), memory hierarchy with two levels of scratchpad memory (blue), an L1 TCDM interconnect and an AXI interconnect connecting the cluster to its host system (green), and peripherals such as the cluster DMA and on-chip peripherals like timers (purple). The ninth Snitch core is a dedicated data mover core coupled with a DMA to manage 1D and 2D data transfers within the cluster. The implemented architecture uses a DAXI,W=512subscript𝐷AXI,W512D_{\\textrm{AXI,W}}=512italic_D start_POSTSUBSCRIPT AXI,W end_POSTSUBSCRIPT = 512-bit wide AXI interconnect to accommodate high bandwidth requirement of Attention-based networks between SoC level data memory and L1 memory. We use a separate DAXI,N=64subscript𝐷AXI𝑁64D_{\\textrm{AXI},N}=64italic_D start_POSTSUBSCRIPT AXI , italic_N end_POSTSUBSCRIPT = 64-bit narrow AXI interconnect for peripherals and communication with the host system, which prevents deterioration in data bandwidth. NHWPE=16subscript𝑁HWPE16N_{\\textrm{HWPE}}=16italic_N start_POSTSUBSCRIPT HWPE end_POSTSUBSCRIPT = 16 ports from the HWPE subsystem are connected to the TCDM to fulfill high bandwidth requirement of Attention accelerator.",
        "qtype": "Literature_Background",
        "response": "The DMA exploits the Wide AXI interconnect width to optimize high-volume data transfers in the following ways:\n\n1.  **Purpose of DMA:** The text states that \"one Snitch core is coupled with a DMA to manage data movements within the cluster, facilitating double buffering to maintain high accelerator utilization.\" This implies the DMA is responsible for moving significant amounts of data.\n2.  **Role of Wide AXI:** The \"Wide AXI interconnect\" has a \"512-bit data width\". The caption explicitly states it's \"used to accommodate high bandwidth requirement of Attention-based networks between SoC level data memory and L1 memory.\" The text also notes that it's used \"to transfer data from and to the SoC level memory system in conjunction with the DMA.\"\n3.  **Data Volume:** For the Integer Transformer Accelerator (ITA), the \"DMA needs to fetch at most two 8-bit inputs/weights, 24-bit bias values and write back 8-bit outputs from and to the L2 memory.\" This results in a \"worst-case average bandwidth of towards the SoC memory.\" To handle this, the \"512-bit wide data AXI interconnect\" is used \"to provide enough bandwidth for the instructions cache and ITA.\"\n\nTherefore, the DMA, in conjunction with the 512-bit Wide AXI interconnect, optimizes high-volume data transfers by leveraging its wide data path to provide the necessary high bandwidth for fetching large inputs (e.g., weights, biases) and writing outputs to and from the SoC level memory. This high bandwidth is crucial for the demanding requirements of Attention-based networks and enables efficient data movement, supporting features like double buffering to maintain high accelerator utilization without starvation."
    },
    {
        "question": "How does time-multiplexing sixteen HWPE ports to the TCDM interconnect improve data parallelism?",
        "relevant_section_ids": [
            "3.1",
            "4.2"
        ],
        "relevant_context": [
            "We time-multiplex multiple streamers to a multi-port interface with N ports and connect to the TCDM interconnect.",
            "As the four streamers are multiplexed in time, ITA requires of maximum bandwidth to fetch two input vectors per cycle; therefore, we use 16 master ports on the TCDM interconnect for the HWPE subsystem."
        ],
        "final_answer": "By time-multiplexing the HWPE streamers across sixteen physical TCDM ports, the four logical data channels (three inputs and one output) can share a wider multi-port interface.  Interleaving their accesses allows the accelerator to fetch up to two 8-bit input vectors per cycle and push results back without conflict, effectively boosting the number of simultaneous data transfers and maximizing the use of the multi-banked L1 memory.  This interleaved, cycle-by-cycle sharing of ports increases overall data‐parallel throughput to the HWPE.",
        "relevant_elements": [
            "HWPE Subsystem",
            "TCDM Interconnect"
        ],
        "id": 967,
        "masked_question": "How does time-multiplexing sixteen [mask1] ports to the TCDM interconnect improve data parallelism?",
        "masked_number": 1,
        "masked_elements": [
            "HWPE Subsystem"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.02473v1_figure_1.png",
        "paperid": "2408.02473v1",
        "paper_path": "./papers/2408.02473v1.json",
        "figure_id": "2408.02473v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed architecture featuring nine RISC-V cores (red), HWPE subsystem (orange), memory hierarchy with two levels of scratchpad memory (blue), an L1 TCDM interconnect and an AXI interconnect connecting the cluster to its host system (green), and peripherals such as the cluster DMA and on-chip peripherals like timers (purple). The ninth Snitch core is a dedicated data mover core coupled with a DMA to manage 1D and 2D data transfers within the cluster. The implemented architecture uses a DAXI,W=512subscript𝐷AXI,W512D_{\\textrm{AXI,W}}=512italic_D start_POSTSUBSCRIPT AXI,W end_POSTSUBSCRIPT = 512-bit wide AXI interconnect to accommodate high bandwidth requirement of Attention-based networks between SoC level data memory and L1 memory. We use a separate DAXI,N=64subscript𝐷AXI𝑁64D_{\\textrm{AXI},N}=64italic_D start_POSTSUBSCRIPT AXI , italic_N end_POSTSUBSCRIPT = 64-bit narrow AXI interconnect for peripherals and communication with the host system, which prevents deterioration in data bandwidth. NHWPE=16subscript𝑁HWPE16N_{\\textrm{HWPE}}=16italic_N start_POSTSUBSCRIPT HWPE end_POSTSUBSCRIPT = 16 ports from the HWPE subsystem are connected to the TCDM to fulfill high bandwidth requirement of Attention accelerator.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does LGM-based 3DGS reconstruction integrate with physics-grounded coarse object dynamics?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "3.2: Given a single image as input, our pipeline mainly consists of two parts: 1) we extract coarse 3DGS representation of foreground object, followed by applying a geometry-aware optimization. We generate physics-grounded dynamics of object using a MPM simulator; 2) we apply a diffusion-based video enhancement pipline to generate high-fidelity video with realistic object-background interaction.",
            "3.3: We use LGM [80] to obtain a coarse initial 3DGS reconstruction for the foreground object. … The output of the optimized Gaussians are send to a MPM simulator, resulting in a coarse object dynamics consisting of T frames. We adopt the open-sourced MPM solver [114]."
        ],
        "final_answer": "The pipeline uses LGM to produce a coarse 3D Gaussian Splatting (3DGS) reconstruction of the segmented foreground object, which is then refined via geometry-aware optimization (depth and color supervision). The optimized set of 3D Gaussians is passed directly into a Material Point Method (MPM) simulator to generate a physics-grounded coarse object dynamics sequence.",
        "relevant_elements": [
            "LGM",
            "Physics-grounded coarse object dynamics"
        ],
        "id": 969,
        "masked_question": "How does [mask1]-based 3DGS reconstruction integrate with physics-grounded coarse object dynamics?",
        "masked_number": 1,
        "masked_elements": [
            "LGM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.17189v1_figure_2.png",
        "paperid": "2411.17189v1",
        "paper_path": "./papers/2411.17189v1.json",
        "figure_id": "2411.17189v1_figure_2.png",
        "caption": "Figure 2: \nOverview. Given a single image input 𝐈0superscript𝐈0\\mathbf{I}^{0}bold_I start_POSTSUPERSCRIPT 0 end_POSTSUPERSCRIPT, we introduce a novel pipeline to generate high-fidelity, physics-grounded video with 3D understanding. Our pipeline consists of two main stages: first, we perform a single-view 3DGS reconstruction of the segmented object from the input image, then synthesize a physics-grounded coarse object dynamics {ℐj}j=1Nsuperscriptsubscriptsubscriptℐ𝑗𝑗1𝑁\\{\\mathcal{I}_{j}\\}_{j=1}^{N}{ caligraphic_I start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT (Sec. 3.3); then, we apply diffusion-based video enhancement to produce the final enhanced video {ℐj∗}j=1Nsuperscriptsubscriptsubscriptsuperscriptℐ𝑗𝑗1𝑁\\{\\mathcal{I}^{*}_{j}\\}_{j=1}^{N}{ caligraphic_I start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT with backgrounds (Sec. 3.4), enabling users to create visually compelling, physics-driven video from a single image with an applied conditional force or torque.",
        "qtype": "Experimental_Results",
        "response": "The LGM-based 3DGS reconstruction integrates with physics-grounded coarse object dynamics through the following steps:\n\n1.  **Initial Coarse Reconstruction:** LGM ([mask1]) is initially used to obtain a coarse 3D Gaussian Splatting (3DGS) reconstruction of the foreground object from a single input image.\n2.  **Geometry-Aware Optimization:** This coarse 3DGS reconstruction is then optimized using both depth supervision (derived from multi-view images generated by MVDream) and color supervision (from the original input image). This refinement ensures a spatially consistent 3DGS representation.\n3.  **Physics Simulation Input:** The output of these optimized Gaussians, representing the 3D structure of the object, is then sent to a Material Point Method (MPM) simulator.\n4.  **Dynamics Generation:** The MPM simulator takes this optimized 3DGS representation and generates the physics-grounded coarse object dynamics, resulting in a sequence of coarse frames (ℐj) that capture the simulated motion under applied forces or torques.\n\nIn essence, the LGM-based 3DGS reconstruction provides the fundamental 3D representation of the object, which is then refined and becomes the input for the MPM simulator to generate the physics-grounddriven object dynamics."
    },
    {
        "question": "How do coarse and enhanced video denoising stages collaborate to ensure temporal consistency?",
        "relevant_section_ids": [
            "3.4.2"
        ],
        "relevant_context": [
            "During DDIM+ sampling stage, we perform coarse and enhanced sampling processes simultaneously. Following [82], we switch the output of residual blocks and self-attention blocks in the enhanced sampling stage with corresponding outputs from the coarse sampling stage as … Feature injection is applied to all upsampling layers (i.e. the decoding stage) in the UNet. The timesteps for feature and attention injection is controlled by two hyperparameters, t_f and t_a.",
            "For latent key-frames during enhanced sampling, the self-attention features Q_e (queries), K_e (keys), V_e (values) are concatenated and shared to form the extended attention, with the queries and keys being replaced by the corresponding values in the coarse stage (for simplicity, we denote the V_c as V, where Q_c = K_c = V_c)…",
            "For latent non-key-frames, following [24], we propagate the enhanced key-frames to them, through the extracted Nearest-Neighbor correspondences from the coarse blended video v_coarse. For a spatial location p in the feature map of frame i, we replace its attention block output by a weighted average between neighboring key-frames …"
        ],
        "final_answer": "During DDIM+ sampling both a coarse denoising pass and an enhanced denoising pass run in parallel. At each UNet upsampling layer, the enhanced pass injects residual and self-attention outputs from the coarse pass (controlled by timesteps t_f and t_a). For key-frames, enhanced self-attention reuses the coarse pass’s attention values as its queries and keys, ensuring consistency. For non-key frames, their enhanced attention outputs are replaced by a distance-weighted blend of the nearest enhanced key-frame attention outputs, where the weights come from nearest-neighbor correspondences extracted on the coarse video. This cross-injection and propagation of features from the coarse to the enhanced stage enforces smooth, temporally consistent results.",
        "relevant_elements": [
            "Coarse Video Denoising",
            "Enhanced Video Denoising"
        ],
        "id": 970,
        "masked_question": "How do [mask1] and [mask2] stages collaborate to ensure temporal consistency?",
        "masked_number": 2,
        "masked_elements": [
            "Coarse Video Denoising",
            "Enhanced Video Denoising"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.17189v1_figure_2.png",
        "paperid": "2411.17189v1",
        "paper_path": "./papers/2411.17189v1.json",
        "figure_id": "2411.17189v1_figure_2.png",
        "caption": "Figure 2: \nOverview. Given a single image input 𝐈0superscript𝐈0\\mathbf{I}^{0}bold_I start_POSTSUPERSCRIPT 0 end_POSTSUPERSCRIPT, we introduce a novel pipeline to generate high-fidelity, physics-grounded video with 3D understanding. Our pipeline consists of two main stages: first, we perform a single-view 3DGS reconstruction of the segmented object from the input image, then synthesize a physics-grounded coarse object dynamics {ℐj}j=1Nsuperscriptsubscriptsubscriptℐ𝑗𝑗1𝑁\\{\\mathcal{I}_{j}\\}_{j=1}^{N}{ caligraphic_I start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT (Sec. 3.3); then, we apply diffusion-based video enhancement to produce the final enhanced video {ℐj∗}j=1Nsuperscriptsubscriptsubscriptsuperscriptℐ𝑗𝑗1𝑁\\{\\mathcal{I}^{*}_{j}\\}_{j=1}^{N}{ caligraphic_I start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT with backgrounds (Sec. 3.4), enabling users to create visually compelling, physics-driven video from a single image with an applied conditional force or torque.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What limitations arise from LGM during single-view 3DGS reconstruction under heavy occlusions?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "LGM",
            "single-view 3DGS reconstruction"
        ],
        "id": 971,
        "masked_question": "What limitations arise from [mask1] during single-view 3DGS reconstruction under heavy occlusions?",
        "masked_number": 1,
        "masked_elements": [
            "LGM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.17189v1_figure_2.png",
        "paperid": "2411.17189v1",
        "paper_path": "./papers/2411.17189v1.json",
        "figure_id": "2411.17189v1_figure_2.png",
        "caption": "Figure 2: \nOverview. Given a single image input 𝐈0superscript𝐈0\\mathbf{I}^{0}bold_I start_POSTSUPERSCRIPT 0 end_POSTSUPERSCRIPT, we introduce a novel pipeline to generate high-fidelity, physics-grounded video with 3D understanding. Our pipeline consists of two main stages: first, we perform a single-view 3DGS reconstruction of the segmented object from the input image, then synthesize a physics-grounded coarse object dynamics {ℐj}j=1Nsuperscriptsubscriptsubscriptℐ𝑗𝑗1𝑁\\{\\mathcal{I}_{j}\\}_{j=1}^{N}{ caligraphic_I start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT (Sec. 3.3); then, we apply diffusion-based video enhancement to produce the final enhanced video {ℐj∗}j=1Nsuperscriptsubscriptsubscriptsuperscriptℐ𝑗𝑗1𝑁\\{\\mathcal{I}^{*}_{j}\\}_{j=1}^{N}{ caligraphic_I start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT with backgrounds (Sec. 3.4), enabling users to create visually compelling, physics-driven video from a single image with an applied conditional force or torque.",
        "qtype": "Others",
        "response": "The question asks about limitations arising from [mask1] ("
    },
    {
        "question": "What ethical risks accompany GPT-4o use for extracting textural priors in DDIM+ Inversion?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "GPT-4o",
            "DDIM+ Inversion"
        ],
        "id": 972,
        "masked_question": "What ethical risks accompany [mask1] use for extracting textural priors in DDIM+ Inversion?",
        "masked_number": 1,
        "masked_elements": [
            "GPT-4o"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.17189v1_figure_2.png",
        "paperid": "2411.17189v1",
        "paper_path": "./papers/2411.17189v1.json",
        "figure_id": "2411.17189v1_figure_2.png",
        "caption": "Figure 2: \nOverview. Given a single image input 𝐈0superscript𝐈0\\mathbf{I}^{0}bold_I start_POSTSUPERSCRIPT 0 end_POSTSUPERSCRIPT, we introduce a novel pipeline to generate high-fidelity, physics-grounded video with 3D understanding. Our pipeline consists of two main stages: first, we perform a single-view 3DGS reconstruction of the segmented object from the input image, then synthesize a physics-grounded coarse object dynamics {ℐj}j=1Nsuperscriptsubscriptsubscriptℐ𝑗𝑗1𝑁\\{\\mathcal{I}_{j}\\}_{j=1}^{N}{ caligraphic_I start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT (Sec. 3.3); then, we apply diffusion-based video enhancement to produce the final enhanced video {ℐj∗}j=1Nsuperscriptsubscriptsubscriptsuperscriptℐ𝑗𝑗1𝑁\\{\\mathcal{I}^{*}_{j}\\}_{j=1}^{N}{ caligraphic_I start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT } start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_N end_POSTSUPERSCRIPT with backgrounds (Sec. 3.4), enabling users to create visually compelling, physics-driven video from a single image with an applied conditional force or torque.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations arise from relying on one-shot offline calibration for variable-length grouped Anda activations?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "one-shot offline calibration",
            "variable-length grouped Anda data type"
        ],
        "id": 973,
        "masked_question": "What limitations arise from relying on [mask1] for variable-length grouped Anda activations?",
        "masked_number": 1,
        "masked_elements": [
            "one-shot offline calibration"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15982v1_figure_1.png",
        "paperid": "2411.15982v1",
        "paper_path": "./papers/2411.15982v1.json",
        "figure_id": "2411.15982v1_figure_1.png",
        "caption": "Figure 1: Overview of the drop-in replacement for FP activations using the variable-length grouped Anda data type via a one-shot offline calibration process.\nThis enables online variable-precision LLM inference,\nsignificantly improving speed and energy efficiency through the adaptive precision combination search algorithm and the Anda-aware architecture.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What justifies using optimal Anda precision per LLM module to achieve accuracy-efficiency balance?",
        "relevant_section_ids": [
            "2.3",
            "3.1"
        ],
        "relevant_context": [
            "From section II-C (2.3): “activations from different modules have varying impacts on model accuracy across all three models. Q consistently shows the most significant influence, while K demonstrates low sensitivity in OPT-6.7B but has a more pronounced effect in the LLaMA series models... These observations motivate us to introduce the new variable-length grouped data format for FP activations, along with a methodology for post-training quantization (PTQ) and rapid selection of tolerable reduced mantissa lengths for any LLM.”",
            "From section III-A (3.1): “Its key feature is the ability to dynamically select mantissa lengths for different tensors based on their precision sensitivity, maintaining consistency within each tensor while optimizing the accuracy-efficiency trade-off.”"
        ],
        "final_answer": "Because different LLM modules exhibit different sensitivities to mantissa‐bit reduction, selecting an optimal Anda mantissa length per module (based on each module’s precision sensitivity) preserves overall model accuracy while allowing more aggressive compression—and thus greater computational and storage efficiency—in less sensitive parts of the network.",
        "relevant_elements": [
            "optimal Anda precision per LLM module",
            "accuracy-efficiency balance"
        ],
        "id": 975,
        "masked_question": "What justifies using [mask1] to achieve [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "optimal Anda precision per LLM module",
            "accuracy-efficiency balance"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15982v1_figure_1.png",
        "paperid": "2411.15982v1",
        "paper_path": "./papers/2411.15982v1.json",
        "figure_id": "2411.15982v1_figure_1.png",
        "caption": "Figure 1: Overview of the drop-in replacement for FP activations using the variable-length grouped Anda data type via a one-shot offline calibration process.\nThis enables online variable-precision LLM inference,\nsignificantly improving speed and energy efficiency through the adaptive precision combination search algorithm and the Anda-aware architecture.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What reasons underpin reducing storage & access cost while improving computation efficiency with Anda format?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "As presented in Fig. 8(d), our proposed Anda format computation scheme offers some unique advantages in contrast with the previous approaches.",
            "Firstly, the activations are no longer stored in memory in FP16 format, but directly in the Anda data format, reducing storage overhead and data access overhead while avoiding frequent data conversion.",
            "Secondly, the shared exponent enables INT dot-product operations within a group, followed by FP32 accumulation across groups, reducing the computational overhead of FP-INT GeMMs.",
            "Thirdly, the variable-length mantissa considerably decreases dot-product operations and memory accesses use the minimal necessary word length.",
            "Finally, converting only the final FP32 results back to Anda format before writing to memory minimizes the storage requirement and the additional overhead from switching data format."
        ],
        "final_answer": "Anda reduces storage and access cost by storing activations directly in its compressed format (avoiding repeated FP16↔Anda conversions) and only reconverting the final FP32 outputs. It improves computation efficiency by sharing exponents for group-wise INT dot-products (cutting FP-INT overhead) and by using variable-length mantissas to minimize both dot-product operations and memory accesses.",
        "relevant_elements": [
            "reduced storage & access cost",
            "improved computation efficiency"
        ],
        "id": 976,
        "masked_question": "What reasons underpin [mask1] while [mask2] with Anda format?",
        "masked_number": 2,
        "masked_elements": [
            "reduced storage & access cost",
            "improved computation efficiency"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15982v1_figure_1.png",
        "paperid": "2411.15982v1",
        "paper_path": "./papers/2411.15982v1.json",
        "figure_id": "2411.15982v1_figure_1.png",
        "caption": "Figure 1: Overview of the drop-in replacement for FP activations using the variable-length grouped Anda data type via a one-shot offline calibration process.\nThis enables online variable-precision LLM inference,\nsignificantly improving speed and energy efficiency through the adaptive precision combination search algorithm and the Anda-aware architecture.",
        "qtype": "Design_Rationale",
        "response": "The reasons that underpin **reduced storage & access cost** while **improved computation efficiency** with Anda format are"
    },
    {
        "question": "What rationale supports initial Camera Keyframes Selection prior to Camera Keyframes Parameters Design?",
        "relevant_section_ids": [
            "1",
            "4.1"
        ],
        "relevant_context": [
            "As shown in Figure1, in the actual process of creating dance camera movements, animators first select keyframes on the timeline, then determine the camera parameters of keyframes, and finally modify the tween curves which are used to control the changing speed of the camera parameters from one keyframe to the next.",
            "In the animation community’s dance camera-making procedure, the animators first select keyframes on the timeline when browsing the dance and music. Thus, we imitate this procedure to design a Camera Keyframe Detection stage and solve this problem in a classification manner."
        ],
        "final_answer": "The model follows the animator’s established workflow: animators first pick keyframes to mark important shot boundaries and rhythmic changes in the dance, and then they set the precise camera parameters at those key moments. By selecting keyframes first, the system can segment the performance into coherent shots—capturing both smooth continuous movements and abrupt switches—and then focus on designing the detailed camera settings for each shot.",
        "relevant_elements": [
            "Camera Keyframes Selection",
            "Camera Keyframes Parameters Design"
        ],
        "id": 977,
        "masked_question": "What rationale supports initial [mask1] prior to Camera Keyframes Parameters Design?",
        "masked_number": 1,
        "masked_elements": [
            "Camera Keyframes Selection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.14925v1_figure_1.png",
        "paperid": "2409.14925v1",
        "paper_path": "./papers/2409.14925v1.json",
        "figure_id": "2409.14925v1_figure_1.png",
        "caption": "Figure 1. Hierarchical dance-camera-making procedure by animators. According to the given music and dance, animators first select keyframes on the timeline. Next, animators set the camera parameters at each keyframe to capture the dance details or highlights. Then, for the non-keyframes between keyframes, animators produce the camera movements by editing tween curves that control the camera moving speed from one keyframe to the next. Finally, the 3D engine can render results with camera movements and dance.",
        "qtype": "Design_Rationale",
        "response": "The rationale supporting the initial \"Camera Keyframes Selection\" (referred to as \"Camera Keyframe Detection\" in the text) prior to \"Camera Keyframes Parameters Design\" is based on mimicking the hierarchical dance-camera-making procedure employed by human animators.\n\nAs stated in the text:\n1.  **Imitation of Animator Workflow:** \"As shown in Figure1, in the actual process of creating dance camera movements, animators first select keyframes on the timeline, then determine the camera parameters of keyframes, and finally modify the tween curves...\" Similarly, in Section 4.1, \"Camera Keyframe Detection Stage,\" it explicitly states: \"In the animation community's dance camera-making procedure, the animators first select keyframes on the timeline when browsing the dance and music. Thus, we imitate this procedure to design a Camera Keyframe Detection stage...\"\n2.  **Addressing Challenges (Shots vs. Switches):** Previous methods struggled because camera movements are composed of \"variable-length continuous sequences\" (camera shots) and \"dramatic changes between these sequences\" (camera switches). Treating all frames equally led to \"jittering sequences and shakes.\" By first identifying keyframes, the system can better \"comprehend a complete shot and switch between shots,\" allowing for distinct handling of continuous camera movements within a shot and abrupt changes at shot boundaries (keyframes). This initial selection helps to define where these \"abrupt changes\" or critical viewpoints occur before detailing the camera's exact position and orientation at those specific moments.\n\nIn essence, selecting keyframes first establishes the temporal structure of the camera movements and the points of dramatic change, providing a crucial foundation for subsequent camera parameter design and interpolation."
    },
    {
        "question": "What motivates using a monotonically increasing tween function for non-keyframe interpolation?",
        "relevant_section_ids": [
            "1",
            "4.3"
        ],
        "relevant_context": [
            "After observation, we find that the tween curves are monotonically increasing so that the smoothness of complete shots can be guaranteed.",
            "To overcome the jittering of the camera, we generate tween function values instead of camera parameters in the Tween Function Prediction model so that the camera will move from one keyframe to the next at different speeds without moving in other directions.",
            "…we process the intermediate increments for non-negativization…, calculate the cumulative sum…, and conduct normalization to produce ρ which are monotonically increasing value from 0 to 1."
        ],
        "final_answer": "Using a monotonically increasing tween function ensures that camera motion between keyframes proceeds smoothly and without unintended reversals or jitter. By enforcing monotonic increases from 0 to 1, the method replicates animator practice with Bezier curves—guaranteeing smooth complete shots—and prevents the camera from moving in unwanted directions between keyframes.",
        "relevant_elements": [
            "Camera Tween Function Design",
            "Computing Non-keyframes"
        ],
        "id": 978,
        "masked_question": "What motivates using a monotonically increasing [mask1] for [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Camera Tween Function Design",
            "Computing Non-keyframes"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.14925v1_figure_1.png",
        "paperid": "2409.14925v1",
        "paper_path": "./papers/2409.14925v1.json",
        "figure_id": "2409.14925v1_figure_1.png",
        "caption": "Figure 1. Hierarchical dance-camera-making procedure by animators. According to the given music and dance, animators first select keyframes on the timeline. Next, animators set the camera parameters at each keyframe to capture the dance details or highlights. Then, for the non-keyframes between keyframes, animators produce the camera movements by editing tween curves that control the camera moving speed from one keyframe to the next. Finally, the 3D engine can render results with camera movements and dance.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does Camera Keyframes Selection utilize music and dance embeddings to classify frames as keyframes?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "Given input music and dance poses, we first extract the acoustic features f_t^m from the music following FACT (Li et al., 2021) to use Librosa (McFee et al., 2015) and represent the dance poses with positions of 60 joints as f_t^p. Then we exploit a sliding window to select music–dance context as M_t and P_t and use encoders to encode the above input as \\tilde F_t^a, \\tilde F_t^p, and \\tilde K_t. Using these embeddings, we employ a transformer decoder and a linear layer to obtain the probability sequence of being a keyframe as:\np_t = W^d Dec(\\tilde F^k, \\tilde F^p, \\tilde F^a)_t + b_d\nFollowing this, we can predict whether there is a keyframe at time t by comparing the probabilities as:\ny_t = 1 if p_t > 0.5 else 0"
        ],
        "final_answer": "Camera Keyframe Selection first extracts acoustic features from music and joint‐position features from dance, then uses a sliding window to build music–dance context. These features are encoded into embeddings (for music, dance, and prior keyframe history) and fed into a transformer decoder followed by a linear layer that outputs a per‐frame probability p_t of being a keyframe. Finally, frames with p_t > 0.5 are classified as keyframes.",
        "relevant_elements": [
            "Camera Keyframes Selection",
            "Music",
            "Dance"
        ],
        "id": 979,
        "masked_question": "How does [mask1] utilize [mask2] and dance embeddings to classify frames as keyframes?",
        "masked_number": 2,
        "masked_elements": [
            "Camera Keyframes Selection",
            "Music"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.14925v1_figure_1.png",
        "paperid": "2409.14925v1",
        "paper_path": "./papers/2409.14925v1.json",
        "figure_id": "2409.14925v1_figure_1.png",
        "caption": "Figure 1. Hierarchical dance-camera-making procedure by animators. According to the given music and dance, animators first select keyframes on the timeline. Next, animators set the camera parameters at each keyframe to capture the dance details or highlights. Then, for the non-keyframes between keyframes, animators produce the camera movements by editing tween curves that control the camera moving speed from one keyframe to the next. Finally, the 3D engine can render results with camera movements and dance.",
        "qtype": "Implementation_Details",
        "response": "The Camera Keyframe Detection stage ([mask1]) integrates information from the music ([mask2]) and dance embeddings in the following way to classify frames as keyframes:\n\n1.  **Feature Extraction and Context Selection**: Given the input music and dance poses, acoustic features are extracted from the music, and dance poses are represented by the positions of 60 joints. A sliding window is then employed to select a music-dance context, capturing current frame information, reference history, and window length.\n2.  **Embedding Generation**: Encoders are used to transform the extracted music features (from"
    },
    {
        "question": "How do Camera Keyframes Parameters Design and Camera Tween Function Design jointly enforce smooth inter-keyframe transitions?",
        "relevant_section_ids": [
            "4.2",
            "4.3"
        ],
        "relevant_context": [
            "In the Camera Keyframe Synthesis Stage (Sec. 4.2), we infer the camera parameters at each detected keyframe by decoding music–dance context and the past camera‐movement history: “With these conditions, we use a transformer decoder to generate keyframe camera poses at T₁ and T₂.”",
            "In the Tween Function Prediction Stage (Sec. 4.3), we predict a per‐frame interpolation curve ρ(t) that is forced to be monotonically increasing from 0 to 1.  We do so by predicting non‐negative increments, taking their cumulative sum, and normalizing: “…we first process 𝚫 for non-negativization to obtain Δ denoting the increment of the tween function. Then, we calculate the cumulative sum of Δ as S and conduct normalization to produce ρ which are monotonically increasing value from 0 to 1…”.  Finally, we compute the in-between camera parameters as Cₜ = C_{T₁} + ρ(t)·(C_{T₂} − C_{T₁})."
        ],
        "final_answer": "By first generating precise camera parameters at each keyframe (Sec. 4.2) and then interpolating between those endpoints using a learned, strictly increasing tween function ρ(t) (Sec. 4.3), the method guarantees that camera poses move smoothly from one keyframe to the next without abrupt jumps or jitter.",
        "relevant_elements": [
            "Camera Keyframes Parameters Design",
            "Camera Tween Function Design"
        ],
        "id": 980,
        "masked_question": "How do [mask1] and [mask2] jointly enforce smooth inter-keyframe transitions?",
        "masked_number": 2,
        "masked_elements": [
            "Camera Keyframes Parameters Design",
            "Camera Tween Function Design"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.14925v1_figure_1.png",
        "paperid": "2409.14925v1",
        "paper_path": "./papers/2409.14925v1.json",
        "figure_id": "2409.14925v1_figure_1.png",
        "caption": "Figure 1. Hierarchical dance-camera-making procedure by animators. According to the given music and dance, animators first select keyframes on the timeline. Next, animators set the camera parameters at each keyframe to capture the dance details or highlights. Then, for the non-keyframes between keyframes, animators produce the camera movements by editing tween curves that control the camera moving speed from one keyframe to the next. Finally, the 3D engine can render results with camera movements and dance.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How are pseudo point clouds generated from 2D RGB images without paired depth data?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "Specifically, the entire pipeline consists of two flows: (1) Image → Pseudo PC, by leveraging a large-scale 2D images training set, our method begins by converting images to pseudo point clouds through monocular depth estimation and approximate camera parameter.",
            "Utilizing 2D datasets for 3D detection presents difficulties due to the absence of metric depth images and camera parameters. To overcome these obstacles, we use a metric depth estimation model to obtain single-view depth images. Additionally, we employ fixed camera intrinsics, with the focal length calculated based on a 55-degree field of view and the image dimensions.\n\nHowever, the absence of camera extrinsics (where R is the rotation matrix and t is the translation vector set to 0) results in the arbitrary orientation of point clouds. To correct this, we use a rotation correction module to ensure the ground plane is horizontal. After obtaining the camera intrinsics matrix K and the camera extrinsics matrix [R|t] through the previous steps, depth images are converted into point clouds."
        ],
        "final_answer": "Pseudo point clouds are generated by first running a monocular depth estimation model on the 2D RGB images to produce per-pixel depth maps.  Those depth maps are then lifted into 3D space using fixed camera intrinsics (computed from a 55° field of view) and an estimated camera extrinsics correction (aligning the ground plane via a normal-based rotation module), yielding pseudo point clouds.",
        "relevant_elements": [
            "RGB Images",
            "Pseudo Point Clouds"
        ],
        "id": 981,
        "masked_question": "How are [mask1] generated from 2D [mask2] without paired depth data?",
        "masked_number": 2,
        "masked_elements": [
            "Pseudo Point Clouds",
            "RGB Images"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.24001v1_figure_1.png",
        "paperid": "2410.24001v1",
        "paper_path": "./papers/2410.24001v1.json",
        "figure_id": "2410.24001v1_figure_1.png",
        "caption": "Figure 1: Left: Traditional methods require paired RGB-D data for training and use single-modality point clouds as input during inference. Right: ImOV3D involves using a vast amount of 2D images to generate pseudo point clouds during the training phase, which are then rendered back into images. In the inference phase, with only point clouds as input, we still construct a pseudo-multimodal representation to enhance detection performance.",
        "qtype": "Implementation_Details",
        "response": "To generate pseudo point clouds from 2D RGB images without paired depth data, the following steps are taken, as described in the \"Point Cloud Lifting Module\" section:\n\n1.  **Metric Depth Estimation:** A monocular depth estimation model (specifically ZoeDepth, as mentioned in \"Implementation Details\") is used to obtain single-view metric depth images from the 2D RGB images. This addresses the lack of direct depth information.\n2.  **Camera Intrinsics:** Fixed camera intrinsics are employed. The focal length is calculated based on a 55-degree field of view (FOV) and the image dimensions.\n3.  **Camera Extrinsics and Rotation Correction:** Although camera extrinsics (rotation and translation) are initially absent, a rotation correction module is used. This module estimates surface normal vectors and calculates a rotation matrix to align the estimated horizon surface normal with the canonical horizontal normal, effectively providing corrected camera extrinsics.\n4.  **Conversion to Point Clouds:** Once the depth images, camera intrinsics, and corrected camera extrinsics are obtained, the depth images are converted into 3D point clouds."
    },
    {
        "question": "How does the multimodal detector fuse GT point clouds with pseudo images during inference?",
        "relevant_section_ids": [
            "3.5"
        ],
        "relevant_context": [
            "By leveraging $P^{pc}$ and $P^{img}$, a 3D backbone is trained to obtain seed points $S^{pc}$, where $|S^{pc}|$ represents the number of seeds, along with 3D feature representations $F^{pc}$, with $d$ denoting the feature dimension. Then, seed points are projected back into 2D space via the camera matrix.",
            "These seeds that fall within the 2D bounding boxes $B^{img}$ retrieve the corresponding 2D cues associated with these boxes and bring them back into 3D space. These lifted 2D cues features are represented as $F^{2D}$, where $c$ represents the feature dimension.",
            "Finally, the point cloud features $F^{pc}$ and image features $F^{2D}$ are concatenated, forming the joint representation $F^{joint}$."
        ],
        "final_answer": "During inference, the detector takes the ground-truth point cloud as $P^{pc}$ and the corresponding pseudo image as $P^{img}$. It first runs the point cloud through a 3D backbone to produce seed points and their 3D features $F^{pc}$. Those seed points are projected into the pseudo image via the known camera matrix. For any seed that lies inside a 2D box, the detector samples the associated 2D feature (the “pseudo” image cue) and lifts it back into 3D as $F^{2D}$. Finally, it concatenates the 3D point‐cloud features $F^{pc}$ with the lifted 2D image features $F^{2D}$ to form a joint multimodal representation, which is then used for detection.",
        "relevant_elements": [
            "GT Point Clouds",
            "Pseudo Image",
            "Multimodal Detector"
        ],
        "id": 982,
        "masked_question": "How does the multimodal detector fuse [mask1] with pseudo images during inference?",
        "masked_number": 1,
        "masked_elements": [
            "GT Point Clouds"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.24001v1_figure_1.png",
        "paperid": "2410.24001v1",
        "paper_path": "./papers/2410.24001v1.json",
        "figure_id": "2410.24001v1_figure_1.png",
        "caption": "Figure 1: Left: Traditional methods require paired RGB-D data for training and use single-modality point clouds as input during inference. Right: ImOV3D involves using a vast amount of 2D images to generate pseudo point clouds during the training phase, which are then rendered back into images. In the inference phase, with only point clouds as input, we still construct a pseudo-multimodal representation to enhance detection performance.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the pseudo image complement pseudo point clouds in multimodal detector training compared to paired RGB-D methods?",
        "relevant_section_ids": [
            "1",
            "3.4"
        ],
        "relevant_context": [
            "Existing methods [30, 29, 28, 10, 49] seek help from powerful open-vocabulary 2D detectors. A common method leverages paired RGB-D data together with 2D detectors to generate 3D pseudo labels to address the label scarcity issue ... But they are still restricted by the small scale of existing paired RGB-D data. Moreover, the from scratch trained 3D detector can hardly inherit from powerful open-vocabulary 2D detector models directly due to the modality difference.",
            "Observing that the modality gap prevents a direct knowledge transfer, we propose to leverage a pseudo multi-modal representation to close the gap. On one hand, we can lift a 2D image into a pseudo-3D representation through estimating the depth and camera matrix. On the other hand, we can convert a 3D point cloud into a pseudo-2D representation through rendering. The pseudo RGB image–PC multimodal representation could serve as a common ground for better transferring knowledge from 2D to 3D.",
            "Point cloud data has inherent limitations, such as the inability of sparse point clouds to capture detailed textures. 2D images can enrich 3D data by providing additional texture information that point clouds lack. ... we develop a point cloud renderer to convert point clouds into detailed pseudo images."
        ],
        "final_answer": "Unlike paired RGB-D methods—which only use real RGB and depth to generate 3D pseudo labels for a pure point-cloud detector and still suffer from a modality gap—ImOV3D produces “pseudo images” by rendering its pseudo point clouds, providing exactly the kind of 2D texture and semantic cues that would normally come from an RGB camera. These pseudo images are paired with the pseudo point clouds to form a unified multimodal training input. By jointly learning from both modalities (geometry from the pseudo point cloud and texture/semantic information from the pseudo image), the detector can more effectively transfer powerful 2D detection knowledge into 3D, all without ever needing true RGB-D pairs.",
        "relevant_elements": [
            "pseudo image",
            "pseudo point clouds",
            "multimodal detector"
        ],
        "id": 983,
        "masked_question": "How does the [mask1] complement pseudo point clouds in multimodal detector training compared to paired RGB-D methods?",
        "masked_number": 1,
        "masked_elements": [
            "pseudo image"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.24001v1_figure_1.png",
        "paperid": "2410.24001v1",
        "paper_path": "./papers/2410.24001v1.json",
        "figure_id": "2410.24001v1_figure_1.png",
        "caption": "Figure 1: Left: Traditional methods require paired RGB-D data for training and use single-modality point clouds as input during inference. Right: ImOV3D involves using a vast amount of 2D images to generate pseudo point clouds during the training phase, which are then rendered back into images. In the inference phase, with only point clouds as input, we still construct a pseudo-multimodal representation to enhance detection performance.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How do shared weights facilitate cross-modal learning between point cloud and multimodal detectors relative to point cloud-only inference?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "point cloud detector",
            "multimodal detector",
            "shared weights"
        ],
        "id": 984,
        "masked_question": "How do [mask1] facilitate cross-modal learning between point cloud and [mask2] relative to point cloud-only inference?",
        "masked_number": 2,
        "masked_elements": [
            "shared weights",
            "multimodal detector"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.24001v1_figure_1.png",
        "paperid": "2410.24001v1",
        "paper_path": "./papers/2410.24001v1.json",
        "figure_id": "2410.24001v1_figure_1.png",
        "caption": "Figure 1: Left: Traditional methods require paired RGB-D data for training and use single-modality point clouds as input during inference. Right: ImOV3D involves using a vast amount of 2D images to generate pseudo point clouds during the training phase, which are then rendered back into images. In the inference phase, with only point clouds as input, we still construct a pseudo-multimodal representation to enhance detection performance.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does bi-attention enhance shared R_MP extraction compared to independent self-attention branches for PET and MRI?",
        "relevant_section_ids": [
            "3.1",
            "3.3"
        ],
        "relevant_context": [
            "Section 3.1: “Our proposed framework DiaMond consists of three branches based on pure ViTs to process each of the data space: … receives both MRI and PET, then captures their shared information in data space R_MP, and finally maps those to the latent encoding Z_MP of length L.”",
            "Section 3.3: “A novel bi-attention mechanism Θ is introduced … uniquely designed to focus on capturing their similarities in the high-dimensional feature space … the bi-attention blocks aim to produce features for each modality conditioned on the other, targeting on their potential disease-specific similarities.”",
            "Section 3.3: “Distinct from the conventional cross-attention mechanism, which captures both similarities and dissimilarities between patches in the correlation matrices, our proposed bi-attention selectively preserves only the pronounced similarities, resulting in a sparse representation. This sparsity is achieved by applying a constant threshold τ to the correlation matrix between the query and key matrices from two modalities, filtering out negligible values.”"
        ],
        "final_answer": "Independent self-attention branches each extract unique modality information (R_P from PET, R_M from MRI) by operating within one modality only. In contrast, bi-attention interleaves queries and keys across PET and MRI, thresholds their correlation matrix to keep only the strongest cross-modal correlations, and thus explicitly and sparsely captures the shared feature space R_MP (disease-specific dependencies) that self-attention alone cannot isolate.",
        "relevant_elements": [
            "Bi-Attention",
            "Self-Attention"
        ],
        "id": 985,
        "masked_question": "How does [mask1] enhance shared R_MP extraction compared to independent self-attention branches for PET and MRI?",
        "masked_number": 1,
        "masked_elements": [
            "Bi-Attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.23219v1_figure_1.png",
        "paperid": "2410.23219v1",
        "paper_path": "./papers/2410.23219v1.json",
        "figure_id": "2410.23219v1_figure_1.png",
        "caption": "Figure 1: MRI and PET are two modalities with disease-specific dependency. We introduce a novel framework including self-attention mechanism with multi-modal normalization to capture distinct features from single modalities, and a novel bi-attention mechanism to exclusively extract their similarities.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does RegBN integrate with bi-attention to mitigate redundant dependencies in shared PET-MRI features?",
        "relevant_section_ids": [
            "3.1",
            "3.4"
        ],
        "relevant_context": [
            "3.1: “We extract regions R_P using self-attention mechanisms, together with a recently-developed normalization technique RegBN [10] to ensure feature independence. A novel bi-attention mechanism is introduced to explore the similarities between the two modalities in region R_MP.”",
            "3.4: “Since the proposed bi-attention block focuses explicitly on the underlying similarities between input modalities via the self-attention modules, it is essential to eliminate redundant shared information between them. Otherwise, the neural network may primarily optimize within the overlapped region R_MP, increasing the risk of getting trapped in local minima. Thus, we use RegBN to separate the latent encoding Z_M from Z_P.”",
            "3.4: “RegBN represents one latent encoding in terms of another using a linear regression model: Z_i = P Z_j + R_i, in which P is a projection matrix, and R_i denotes the difference between the input latent encodings, so-called residual. The residual segment contains a portion of Z_i that is independent from Z_j.”"
        ],
        "final_answer": "RegBN is applied to the latent PET and MRI encodings before they enter the bi-attention branch.  By regressing one modality’s latent features on the other and using only the residual (the portion independent of the other modality), RegBN removes redundant overlapping dependencies.  This ensures that the subsequent bi-attention mechanism focuses exclusively on the disease-specific shared information (R_MP) rather than re-encoding already-shared signal, thereby mitigating the risk of overfitting to redundant PET-MRI correlations.",
        "relevant_elements": [
            "RegBN",
            "Bi-Attention"
        ],
        "id": 986,
        "masked_question": "How does [mask1] integrate with bi-attention to mitigate redundant dependencies in shared PET-MRI features?",
        "masked_number": 1,
        "masked_elements": [
            "RegBN"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.23219v1_figure_1.png",
        "paperid": "2410.23219v1",
        "paper_path": "./papers/2410.23219v1.json",
        "figure_id": "2410.23219v1_figure_1.png",
        "caption": "Figure 1: MRI and PET are two modalities with disease-specific dependency. We introduce a novel framework including self-attention mechanism with multi-modal normalization to capture distinct features from single modalities, and a novel bi-attention mechanism to exclusively extract their similarities.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does RegBN improve feature independence across self-attention branches?",
        "relevant_section_ids": [
            "3.2",
            "3.4",
            "6.2"
        ],
        "relevant_context": [
            "Each self-attention branch aims to independently extract unique features from one input modality. To ensure that each branch efficiently identifies distinct modality-dependent features, a normalization technique RegBN [10] is later applied to the latent space, aiming to reduce redundant partial dependency between the self-attention branches.",
            "RegBN represents one latent encoding in terms of another using a linear regression model: in which P is a projection matrix, and r denotes the difference between the input latent encodings, so-called residual. The residual segment contains a portion of M that is independent from P.",
            "RegBN is incorporated into DiaMond as a normalization technique to make self-attention branches independent, aiming to reduce the redundant partial dependency between the input modalities."
        ],
        "final_answer": "RegBN improves feature independence by regressing one modality’s latent features onto another and using the residual as the new encoding. This removes shared (redundant) information between branches, thereby reducing their partial dependency and ensuring each self-attention branch learns distinct, independent features.",
        "relevant_elements": [
            "RegBN",
            "self-attention"
        ],
        "id": 987,
        "masked_question": "How does [mask1] improve feature independence across self-attention branches?",
        "masked_number": 1,
        "masked_elements": [
            "RegBN"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.23219v1_figure_1.png",
        "paperid": "2410.23219v1",
        "paper_path": "./papers/2410.23219v1.json",
        "figure_id": "2410.23219v1_figure_1.png",
        "caption": "Figure 1: MRI and PET are two modalities with disease-specific dependency. We introduce a novel framework including self-attention mechanism with multi-modal normalization to capture distinct features from single modalities, and a novel bi-attention mechanism to exclusively extract their similarities.",
        "qtype": "Experimental_Results",
        "response": "RegBN (multimodal batch normalization with regularization) improves feature independence across self-attention branches by:\n\n1.  **Reducing Redundant Partial Dependency:** It is applied to the latent space after the self-attention branches to reduce redundant partial dependency between the input modalities that might be present due to image acquisition.\n2.  **Employing Linear Regression and Residuals:** RegBN models one latent encoding (e.g., from PET) in terms of another (e.g., from MRI) using a linear regression model. The \"residual\" segment of this model then specifically contains the portion of the latent encoding that is independent from the other.\n3.  **Ensuring Distinct Feature Extraction:** By separating this shared or dependent information, RegBN helps each self-attention branch to efficiently identify and focus on distinct, modality-dependent features (e.g., R_P for PET and R_M for MRI), preventing the neural network from over-optimizing"
    },
    {
        "question": "How does bi-attention selectively extract shared information while avoiding redundant modality features?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Distinct from the conventional cross-attention mechanism, which captures both similarities and dissimilarities between patches in the correlation matrices, our proposed bi-attention selectively preserves only the pronounced similarities, resulting in a sparse representation.",
            "This sparsity is achieved by applying a constant threshold τ to the correlation matrix between the query and key matrices from two modalities, filtering out negligible values.",
            "A novel bi-attention mechanism Aᵦ is introduced in 3.3 to compute the interweaved attention between two modalities M and P, uniquely designed to focus on capturing their similarities in the high-dimensional feature space: Aᵦ = I(Qᴹ (Kᴾ)ᵀ ≥ τ)"
        ],
        "final_answer": "Bi-attention first computes the cross‐modal correlation matrix between the query features of one modality and the key features of the other. It then applies a hard threshold τ (via an indicator function) to that matrix, zeroing out all correlations below τ. By keeping only the strong, above‐threshold correlations, the mechanism yields a sparse attention map that captures pronounced similarities (shared disease‐specific features) while discarding weak or redundant cross‐modal relationships.",
        "relevant_elements": [
            "bi-attention"
        ],
        "id": 988,
        "masked_question": "How does [mask1] selectively extract shared information while avoiding redundant modality features?",
        "masked_number": 1,
        "masked_elements": [
            "bi-attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.23219v1_figure_1.png",
        "paperid": "2410.23219v1",
        "paper_path": "./papers/2410.23219v1.json",
        "figure_id": "2410.23219v1_figure_1.png",
        "caption": "Figure 1: MRI and PET are two modalities with disease-specific dependency. We introduce a novel framework including self-attention mechanism with multi-modal normalization to capture distinct features from single modalities, and a novel bi-attention mechanism to exclusively extract their similarities.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Multi-GraphConv Layer's multi-head convolution affect inter-entity representation aggregation?",
        "relevant_section_ids": [
            "4.2.2"
        ],
        "relevant_context": [
            "Initially, the linear transformation of the adjacency matrix A on the input features H is computed for each head k. Subsequently, the impact of neighboring nodes' features on the present node is determined for each layer l, and the current node's features are consolidated with the previous layer's output.",
            "The feature representation resulting from the output of each head is combined to form the final output of this layer: H^{l+1} = Concat_{k=1 to K}(h^{l+1}_{:,k}) W^{l}, where W^{l} is the weight parameter of the linear transformation applied to the ultimate output."
        ],
        "final_answer": "By deploying multiple graph‐convolution heads, the Multi-GraphConv layer lets each head learn its own adjacency weighting and aggregate neighbor (entity) features independently. The head-wise outputs are then concatenated and linearly transformed, yielding a fused node representation that integrates diverse structural cues and thus produces richer inter-entity representations.",
        "relevant_elements": [
            "Multi-GraphConv Layer"
        ],
        "id": 989,
        "masked_question": "How does [mask1]'s multi-head convolution affect inter-entity representation aggregation?",
        "masked_number": 1,
        "masked_elements": [
            "Multi-GraphConv Layer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.21384v2_figure_2.png",
        "paperid": "2407.21384v2",
        "paper_path": "./papers/2407.21384v2.json",
        "figure_id": "2407.21384v2_figure_2.png",
        "caption": "Figure 2: The overall architecture of our method. The gray circles with different depths belong to different sentences, and the color depth of the square is the basis to distinguish the attention weight score.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] refers to the Multi-GraphConv Layer.\n\nHere's how the Multi-GraphConv Layer's multi-head convolution affects inter-entity representation aggregation:\n\n1.  **Head-specific Aggregation:** Initially, for each independent \"head\" (`h`), a linear transformation is applied to the input features using a distinct adjacency matrix (`A_h`) that has varied weight distributions. This allows each head to focus on different aspects or relationships between entities (nodes in the graph).\n2.  **Neighbor Impact and Consolidation:** Within each head's processing for each layer (`i`), the model determines the \"impact of neighboring nodes' features on the present node\" and consolidates the current node's features with"
    },
    {
        "question": "What limitations arise from dense connectivity in the Multi-GraphConv Layer regarding spurious attention distributions?",
        "relevant_section_ids": [
            "8"
        ],
        "relevant_context": [
            "Firstly, when utilizing Multi-GraphConv Layers to induce multiple fully connected attention distribution matrices, there is a possibility of generating one matrix that differs significantly from others in terms of weight distribution. This could lead to significant deviations in prediction results."
        ],
        "final_answer": "Because the Multi-GraphConv Layer densely connects all nodes to produce multiple attention distribution matrices, it can sometimes generate an individual matrix whose weight distribution is wildly different (i.e., spurious) from the others, leading to substantial deviations in the model’s predictions.",
        "relevant_elements": [
            "Multi-GraphConv Layer"
        ],
        "id": 991,
        "masked_question": "What limitations arise from dense connectivity in the [mask1] regarding spurious attention distributions?",
        "masked_number": 1,
        "masked_elements": [
            "Multi-GraphConv Layer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.21384v2_figure_2.png",
        "paperid": "2407.21384v2",
        "paper_path": "./papers/2407.21384v2.json",
        "figure_id": "2407.21384v2_figure_2.png",
        "caption": "Figure 2: The overall architecture of our method. The gray circles with different depths belong to different sentences, and the color depth of the square is the basis to distinguish the attention weight score.",
        "qtype": "Others",
        "response": "The [mask1] refers to the \"GEGA\" component, specifically the \"Multi-GraphConv Layer\" and \"Sequence/Attention Transformer-enc\" encapsulated within the red box.\n\nThe limitations arising from dense connectivity (referred to as \"fully connected attention distribution matrices\" in the context) regarding spurious attention distributions are:\n\nThe model might generate \"one matrix that differs significantly from others in terms of weight distribution.\" This \"significant deviation\" represents a spurious attention distribution, which \"could lead to significant deviations in prediction results.\""
    },
    {
        "question": "What ethical implications emerge from using retrieved evidence in the Collaborative Prediction Layer for relation extraction?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Collaborative Prediction Layer"
        ],
        "id": 992,
        "masked_question": "What ethical implications emerge from using retrieved evidence in the [mask1] for relation extraction?",
        "masked_number": 1,
        "masked_elements": [
            "Collaborative Prediction Layer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.21384v2_figure_2.png",
        "paperid": "2407.21384v2",
        "paper_path": "./papers/2407.21384v2.json",
        "figure_id": "2407.21384v2_figure_2.png",
        "caption": "Figure 2: The overall architecture of our method. The gray circles with different depths belong to different sentences, and the color depth of the square is the basis to distinguish the attention weight score.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations might local prompts face when regional differences are minimal across classes?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "local prompts"
        ],
        "id": 993,
        "masked_question": "What limitations might [mask1] face when regional differences are minimal across classes?",
        "masked_number": 1,
        "masked_elements": [
            "local prompts"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.04796v1_figure_1.png",
        "paperid": "2409.04796v1",
        "paper_path": "./papers/2409.04796v1.json",
        "figure_id": "2409.04796v1_figure_1.png",
        "caption": "Figure 1: Comparison of prompt learning for OOD detection task. Prompts with global optimization may fail in challenging OOD samples as they are overall similar to ID samples and only have subtle regional differences. For example, cat and tiger are generally similar (blue boxes) and only differ in forehead (red box). Our approach with local outlier knowledge tackles the issue to some extent.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What potential conflicts could arise when optimizing global prompts and local prompts simultaneously?",
        "relevant_section_ids": [
            "1",
            "2.3"
        ],
        "relevant_context": [
            "Others use the same prompts to match both global and local image features [17, 18], so the gap between them may lead to inaccurate local outlier identification.",
            "However, all existing approaches take same prompts for all features. By contrast, our method directly enhances OOD detection with ID-related areas and refines local prompts to leverage local outlier knowledge."
        ],
        "final_answer": "If one tries to optimize a single set of prompts to serve both global (whole‐image) and local (region‐level) representations at once, the two goals can compete. Global prompts are tuned to capture overall semantics, while local prompts must focus on fine‐grained regional cues. Using the same prompts for both can therefore create a mismatch—a ‘gap’—that interferes with the model’s ability to correctly identify subtle local outliers.",
        "relevant_elements": [
            "global prompts",
            "local prompts"
        ],
        "id": 994,
        "masked_question": "What potential conflicts could arise when optimizing [mask1] and local prompts simultaneously?",
        "masked_number": 1,
        "masked_elements": [
            "global prompts"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.04796v1_figure_1.png",
        "paperid": "2409.04796v1",
        "paper_path": "./papers/2409.04796v1.json",
        "figure_id": "2409.04796v1_figure_1.png",
        "caption": "Figure 1: Comparison of prompt learning for OOD detection task. Prompts with global optimization may fail in challenging OOD samples as they are overall similar to ID samples and only have subtle regional differences. For example, cat and tiger are generally similar (blue boxes) and only differ in forehead (red box). Our approach with local outlier knowledge tackles the issue to some extent.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "Why choose regional enhancement alongside global optimization for OOD detection?",
        "relevant_section_ids": [
            "1",
            "2.3"
        ],
        "relevant_context": [
            "The most challenging scene for OOD detection is that one hard OOD sample is similar to a known class on the whole and only has subtle differences locally, which naturally requires the detector to identify outliers through local outlier regions.",
            "Some methods merely focus on utilizing global features only, which ignores local features and inevitably brings about coarse description.",
            "Consequently, it is straightforward that enhancing regional information to empower the model with local outlier knowledge could be significant to OOD detection.",
            "By contrast, our method directly enhances OOD detection with ID-related areas and refines local prompts to leverage local outlier knowledge."
        ],
        "final_answer": "Because challenging OOD samples can look very similar to in-distribution images at a global level but differ in only small regions, relying solely on global prompts misses these subtle local differences. Regional enhancement explicitly captures and leverages local outlier cues, complementing global optimization to more accurately detect such hard OOD cases.",
        "relevant_elements": [
            "regional enhancement",
            "global optimization"
        ],
        "id": 995,
        "masked_question": "Why choose [mask1] alongside global optimization for OOD detection?",
        "masked_number": 1,
        "masked_elements": [
            "regional enhancement"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.04796v1_figure_1.png",
        "paperid": "2409.04796v1",
        "paper_path": "./papers/2409.04796v1.json",
        "figure_id": "2409.04796v1_figure_1.png",
        "caption": "Figure 1: Comparison of prompt learning for OOD detection task. Prompts with global optimization may fail in challenging OOD samples as they are overall similar to ID samples and only have subtle regional differences. For example, cat and tiger are generally similar (blue boxes) and only differ in forehead (red box). Our approach with local outlier knowledge tackles the issue to some extent.",
        "qtype": "Design_Rationale",
        "response": "\"Regional Enhancement\" is chosen alongside global optimization for Out-of-Distribution (OOD) detection because global optimization"
    },
    {
        "question": "What motivates freezing global prompts when fine-tuning local prompts?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "Global prompts can be viewed as coarse guidance for negative augmentation standing for overall representation and are frozen in our framework.",
            "It is worth emphasizing that our approach is orthogonal to all existing global prompt optimization strategies, i.e., global prompts are built without tuning in our structure … Note that our main purpose is to decompose global and local prompts and showcase the effectiveness of local outlier enhancement for OOD detection."
        ],
        "final_answer": "Freezing the global prompts preserves their role as fixed, coarse guidance for both negative‐augmentation selection and OOD scoring. This decouples the global, overall representation (which is already effective) from the fine, local prompt tuning, enabling the model to focus exclusively on learning regional outlier knowledge without disturbing the reliable global semantics.",
        "relevant_elements": [
            "global prompts",
            "local prompts"
        ],
        "id": 996,
        "masked_question": "What motivates freezing [mask1] when fine-tuning local prompts?",
        "masked_number": 1,
        "masked_elements": [
            "global prompts"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.04796v1_figure_1.png",
        "paperid": "2409.04796v1",
        "paper_path": "./papers/2409.04796v1.json",
        "figure_id": "2409.04796v1_figure_1.png",
        "caption": "Figure 1: Comparison of prompt learning for OOD detection task. Prompts with global optimization may fail in challenging OOD samples as they are overall similar to ID samples and only have subtle regional differences. For example, cat and tiger are generally similar (blue boxes) and only differ in forehead (red box). Our approach with local outlier knowledge tackles the issue to some extent.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to \"Global prompts\".\n\nThe motivations for freezing global prompts when fine-tuning local prompts are explained in the text:\n1.  **Coarse Guidance and Overall Representation:** Global prompts are viewed as \"coarse guidance for negative augmentation standing for overall representation\" and are considered \"fairly good for extracting global features,\" justifying their use as basic, fixed components.\n2.  **Orthogonality to Existing Methods:** The proposed"
    },
    {
        "question": "What motivates combining self-supervision and multimodal supervision objectives?",
        "relevant_section_ids": [
            "1",
            "2"
        ],
        "relevant_context": [
            "While both classes of representation learning approaches, i.e., SS and MM, have shown promising results, neither one fully leverages diverse sources of information present in IMU time series.",
            "L_SS ensures that φ remains invariant to noise, similar to those that are introduced by slight changes in sensor position or type (§II-A).",
            "L_MM pushes IMU representations towards aligned text and video representations, allowing φ to learn the rich semantic information present in other modalities (§II-B)."
        ],
        "final_answer": "The two objectives are combined because self-supervision provides invariance to sensor noise and perturbations, while multimodal supervision injects rich semantic signals from aligned video and text; individually they each only capture part of the information in IMU data, but together they leverage complementary strengths to learn more transferable representations.",
        "relevant_elements": [
            "Self-Supervision",
            "Multi-Modal Supervision"
        ],
        "id": 997,
        "masked_question": "What motivates combining [mask1] and multimodal supervision objectives?",
        "masked_number": 1,
        "masked_elements": [
            "Self-Supervision"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15127v1_figure_1.png",
        "paperid": "2411.15127v1",
        "paper_path": "./papers/2411.15127v1.json",
        "figure_id": "2411.15127v1_figure_1.png",
        "caption": "Figure 1: PRIMUS Overview. We use a multi-objective pretraining including three terms, ℒS⁢S,ℒM⁢M,subscriptℒ𝑆𝑆subscriptℒ𝑀𝑀\\mathcal{L}_{SS},\\mathcal{L}_{MM},caligraphic_L start_POSTSUBSCRIPT italic_S italic_S end_POSTSUBSCRIPT , caligraphic_L start_POSTSUBSCRIPT italic_M italic_M end_POSTSUBSCRIPT , and ℒN⁢Nsubscriptℒ𝑁𝑁\\mathcal{L}_{NN}caligraphic_L start_POSTSUBSCRIPT italic_N italic_N end_POSTSUBSCRIPT. Self-supervised losses encourage the IMU encoder to be augmentation invariant, while multimodal and nearest neighbor losses align the IMU data to co-occurring video and/or text data. We use open-source pretrained models developed by others for both text and video encoders.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates integrating a feature queue into nearest neighbor supervision?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "The loss terms introduced so far, L_SS and L_MM, both derive supervision from within the same triplet segment.",
            "To increase the diversity of supervision and go beyond a single instance, we leverage nearest-neighbor supervision [23, 30] (shown in the rightmost block in orange in Fig. 1 and in detail in Fig. 3).",
            "We leverage the video representations for identifying the closest pairs because the video encoder is pretrained on a large dataset, and therefore produces stable representations. Also, videos capture much finer details about human activities compared to text descriptions."
        ],
        "final_answer": "Integrating a feature queue is motivated by the desire to diversify the supervision signal beyond each isolated triplet. By caching and querying nearest-neighbor embeddings—particularly stable, high-fidelity video features—the model can contrast an IMU example not just with its own augmented versions or its text/video pair, but also with semantically similar instances across the dataset.",
        "relevant_elements": [
            "Nearest Neighbor Supervision",
            "Feature Queue"
        ],
        "id": 998,
        "masked_question": "What motivates integrating a [mask1] into [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Feature Queue",
            "Nearest Neighbor Supervision"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15127v1_figure_1.png",
        "paperid": "2411.15127v1",
        "paper_path": "./papers/2411.15127v1.json",
        "figure_id": "2411.15127v1_figure_1.png",
        "caption": "Figure 1: PRIMUS Overview. We use a multi-objective pretraining including three terms, ℒS⁢S,ℒM⁢M,subscriptℒ𝑆𝑆subscriptℒ𝑀𝑀\\mathcal{L}_{SS},\\mathcal{L}_{MM},caligraphic_L start_POSTSUBSCRIPT italic_S italic_S end_POSTSUBSCRIPT , caligraphic_L start_POSTSUBSCRIPT italic_M italic_M end_POSTSUBSCRIPT , and ℒN⁢Nsubscriptℒ𝑁𝑁\\mathcal{L}_{NN}caligraphic_L start_POSTSUBSCRIPT italic_N italic_N end_POSTSUBSCRIPT. Self-supervised losses encourage the IMU encoder to be augmentation invariant, while multimodal and nearest neighbor losses align the IMU data to co-occurring video and/or text data. We use open-source pretrained models developed by others for both text and video encoders.",
        "qtype": "Design_Rationale",
        "response": "The image shows three main blocks: 1. Self-Supervision, 2. Multi-Modal Supervision, and 3. Nearest Neighbor Supervision.\nThe [mask1] highlights the \"Feature Queue\" within the \"Nearest Neighbor Supervision\" block.\nThe [mask2] refers to the \"Nearest Neighbor Supervision\" block as a whole, specifically indicating the \"NN Emb.\" which are *derived from* the feature queue.\n\nFrom the text under \"II-C Nearest Neighbor Supervision\":\n\""
    },
    {
        "question": "How does nearest neighbor supervision retrieve NN Emb. from the Feature Queue to refine IMU encoder outputs?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "During training, we maintain a feature queue Q, where Z^I, Z^V, and Z^T are cached representations of IMU, video, and text produced from their respective encoders.",
            "For every given instance x_i in a batch B, we define k*(i) = argmax_j Q^V_j ⋅ z^I_i which identifies the index k*(i) in Q corresponding to the video embedding that is the most similar to z^I_i.",
            "We then push z^I_i close to z^I_{k*(i)} by L_NN, which consists of a unimodal and multimodal loss similar to L_SS and L_MM."
        ],
        "final_answer": "Nearest neighbor supervision maintains a queue of past IMU, video, and text embeddings. For each new IMU embedding z^I_i, it computes similarities with all video embeddings in the queue and selects the index k*(i) of the most similar video embedding. It then retrieves the corresponding IMU embedding z^I_{k*(i)} from the queue and uses it as the positive example in an additional contrastive loss (L_NN) to refine the IMU encoder’s output.",
        "relevant_elements": [
            "Nearest Neighbor Supervision",
            "Feature Queue"
        ],
        "id": 1000,
        "masked_question": "How does nearest neighbor supervision retrieve NN Emb. from the [mask1] to refine IMU encoder outputs?",
        "masked_number": 1,
        "masked_elements": [
            "Feature Queue"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15127v1_figure_1.png",
        "paperid": "2411.15127v1",
        "paper_path": "./papers/2411.15127v1.json",
        "figure_id": "2411.15127v1_figure_1.png",
        "caption": "Figure 1: PRIMUS Overview. We use a multi-objective pretraining including three terms, ℒS⁢S,ℒM⁢M,subscriptℒ𝑆𝑆subscriptℒ𝑀𝑀\\mathcal{L}_{SS},\\mathcal{L}_{MM},caligraphic_L start_POSTSUBSCRIPT italic_S italic_S end_POSTSUBSCRIPT , caligraphic_L start_POSTSUBSCRIPT italic_M italic_M end_POSTSUBSCRIPT , and ℒN⁢Nsubscriptℒ𝑁𝑁\\mathcal{L}_{NN}caligraphic_L start_POSTSUBSCRIPT italic_N italic_N end_POSTSUBSCRIPT. Self-supervised losses encourage the IMU encoder to be augmentation invariant, while multimodal and nearest neighbor losses align the IMU data to co-occurring video and/or text data. We use open-source pretrained models developed by others for both text and video encoders.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the Similarity-First, Diversity-Aware strategy sample and deduplicate open-source instructions?",
        "relevant_section_ids": [
            "3.4.2",
            "3.4.3"
        ],
        "relevant_context": [
            "We calculate the cross-dataset similarity between $\\mathcal{S}$ and $\\mathcal{C}$ to select a subset $\\mathcal{C}'$ that resembles $\\mathcal{S}$ the most.",
            "Then, we pinpoint top $m$ samples in $\\mathcal{C}$ that share the most similarity with $\\mathcal{S}$ by maximizing along the rows of $D$: $\\mathcal{C}'=\\arg\\max_j D_{ij}$.",
            "We remove duplicates in $\\mathcal{C}'$ to improve its overall diversity for the selected dataset.",
            "We follow the SemDeDup to perform semantic deduplication by thresholding with $\\theta$. If the similarity between any two instructions exceeds $\\theta$, we discard the one whose similarity with $\\mathcal{S}$ is lower."
        ],
        "final_answer": "First, all open-source instructions are encoded into embeddings and a cosine-distance matrix $D$ is computed against the $k$-shot examples. The top $m$ instructions with the highest similarity scores (i.e. those maximizing each row of $D$) form the candidate set. Second, to avoid semantic redundancy, a pairwise similarity matrix is built over this candidate set, and using a threshold $\\theta$ (as in SemDeDup), whenever two instructions exceed $\\theta$ in similarity, the one less similar to the $k$-shot examples is discarded. This yields a final, diverse yet task-relevant augmentation set.",
        "relevant_elements": [
            "Similarity-First",
            "Diversity-Aware"
        ],
        "id": 1002,
        "masked_question": "How does the [mask1], [mask2] strategy sample and deduplicate open-source instructions?",
        "masked_number": 2,
        "masked_elements": [
            "Similarity-First",
            "Diversity-Aware"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.15915v2_figure_1.png",
        "paperid": "2408.15915v2",
        "paper_path": "./papers/2408.15915v2.json",
        "figure_id": "2408.15915v2_figure_1.png",
        "caption": "Figure 1: \nGiven few annotated data from any task of interest (K𝐾Kitalic_K-shot), we aim to advance LLMs in task expertise by leveraging open-source models and datasets.\nWe propose an efficient and scalable pipeline to fully exploit the steering role of K𝐾Kitalic_K-shot throughout model and data selection.\nHighly promising experts are first selected from the model bank by comprehensive consideration of their perplexity and performance on the K𝐾Kitalic_K-shot and intra-group diversity.\nThese experts are initialized as one MoE system.\nSubsequently,\nwe perform data augmentation by selecting diverse open instructions that resemble K𝐾Kitalic_K-shot the most.\nFinally,\nwe fine-tune the MoE system with both K𝐾Kitalic_K-shot and the augmented data,\nwhich not only improves token-wise cooperation between experts but also integrates broad knowledge into the system.\nThe ultimate task expert benefits from the complementary skills and knowledge of constituting experts.",
        "qtype": "Implementation_Details",
        "response": "The **Similarity-First, Diversity-Aware** strategy samples and deduplicates open-source instructions as follows:\n\n1.  **Data Encoding:** First, instruction texts from both the K-shot data and the open-source samples are encoded into an embedding space using a pre-trained model (e.g., BGE model).\n\n2.  **Similarity-First Sampling:**\n    *   A cross-dataset similarity (e.g., cosine distance) is calculated between the K-shot samples and all open-source samples.\n    *   The top `k_1` open-source samples that exhibit the highest similarity to the K-shot data are selected. This forms a candidate set, prioritizing relevance to the task of interest and reducing computational overhead for the next step.\n\n3.  **Diversity-Aware Deduplication:**\n    *   An intra-dataset similarity matrix is computed among the samples within the previously selected candidate set, using the same distance metric.\n    *   Semantic deduplication is performed by applying a threshold (`tau_sim`). If the similarity between any two instructions in the candidate set exceeds this threshold, the instruction that has *lower* similarity with the original K-shot data is discarded. This process eliminates redundant or overly similar instructions, ensuring that the final selected dataset maintains overall diversity while still being relevant to the task.\n\nThis combined approach ensures that the augmented dataset is both relevant to the task of interest (similarity-first) and introduces complementary knowledge to prevent overfitting by removing duplicates (diversity-aware)."
    },
    {
        "question": "How does integrating perplexity-performance-diversity ranking inform expert selection relative to ensemble pruning approaches?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Perplexity",
            "Performance",
            "Diversity"
        ],
        "id": 1003,
        "masked_question": "How does integrating [mask1]-performance-diversity ranking inform expert selection relative to ensemble pruning approaches?",
        "masked_number": 1,
        "masked_elements": [
            "Perplexity"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.15915v2_figure_1.png",
        "paperid": "2408.15915v2",
        "paper_path": "./papers/2408.15915v2.json",
        "figure_id": "2408.15915v2_figure_1.png",
        "caption": "Figure 1: \nGiven few annotated data from any task of interest (K𝐾Kitalic_K-shot), we aim to advance LLMs in task expertise by leveraging open-source models and datasets.\nWe propose an efficient and scalable pipeline to fully exploit the steering role of K𝐾Kitalic_K-shot throughout model and data selection.\nHighly promising experts are first selected from the model bank by comprehensive consideration of their perplexity and performance on the K𝐾Kitalic_K-shot and intra-group diversity.\nThese experts are initialized as one MoE system.\nSubsequently,\nwe perform data augmentation by selecting diverse open instructions that resemble K𝐾Kitalic_K-shot the most.\nFinally,\nwe fine-tune the MoE system with both K𝐾Kitalic_K-shot and the augmented data,\nwhich not only improves token-wise cooperation between experts but also integrates broad knowledge into the system.\nThe ultimate task expert benefits from the complementary skills and knowledge of constituting experts.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does similarity-first diversity-aware data selection affect token-wise cooperation in MoE fine-tuning methodologies?",
        "relevant_section_ids": [
            "3.4",
            "3.4.3"
        ],
        "relevant_context": [
            "It has three advantages including: 1) high cost-efficiency of utilizing the massive and free open-source datasets, 2) prevention of overfitting by introducing diverse and beneficial instructions, and 3) improvement of token-wise collaboration between experts via acquiring novel knowledge.",
            "A greater level of diversity not only improves the token-wise cooperation between experts on broader domains and topics but also reduces the overfitting of the MoE system on -shot datapoints."
        ],
        "final_answer": "By first retrieving the most task-relevant examples (similarity-first) and then removing semantic duplicates to maximize diversity, the selected data introduce novel and varied instruction contexts. This broader, more diverse training set enables the MoE router to assign individual tokens to the most appropriate experts more effectively, thereby improving token-wise cooperation among experts during fine-tuning.",
        "relevant_elements": [
            "Similarity-First Diversity-Aware Data Selection",
            "Mixture-of-Expert Fine-Tuning"
        ],
        "id": 1004,
        "masked_question": "How does [mask1] affect token-wise cooperation in MoE fine-tuning methodologies?",
        "masked_number": 1,
        "masked_elements": [
            "Similarity-First Diversity-Aware Data Selection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.15915v2_figure_1.png",
        "paperid": "2408.15915v2",
        "paper_path": "./papers/2408.15915v2.json",
        "figure_id": "2408.15915v2_figure_1.png",
        "caption": "Figure 1: \nGiven few annotated data from any task of interest (K𝐾Kitalic_K-shot), we aim to advance LLMs in task expertise by leveraging open-source models and datasets.\nWe propose an efficient and scalable pipeline to fully exploit the steering role of K𝐾Kitalic_K-shot throughout model and data selection.\nHighly promising experts are first selected from the model bank by comprehensive consideration of their perplexity and performance on the K𝐾Kitalic_K-shot and intra-group diversity.\nThese experts are initialized as one MoE system.\nSubsequently,\nwe perform data augmentation by selecting diverse open instructions that resemble K𝐾Kitalic_K-shot the most.\nFinally,\nwe fine-tune the MoE system with both K𝐾Kitalic_K-shot and the augmented data,\nwhich not only improves token-wise cooperation between experts but also integrates broad knowledge into the system.\nThe ultimate task expert benefits from the complementary skills and knowledge of constituting experts.",
        "qtype": "Literature_Background",
        "response": "The [mask1] refers to the \"Similarity-First Diversity-Aware\" principle, which guides the process of selecting open-source data for task-oriented argumentation.\n\nHere's how it affects token-wise cooperation in MoE fine-tuning methodologies:\n\n1.  **Data Selection Principle**: The \"Similarity-First Diversity-Aware\" principle is employed to select specific open-source data instances for augmentation. The \"similarity-first\" aspect ensures that the selected data share a similar distribution with the K-shot samples, prioritizing relevance. The \"diversity-aware\" aspect (specifically, by removing semantic duplicates) aims to increase the overall diversity of the selected dataset.\n2.  **Impact on Token-wise Cooperation**: As stated in the text, \"A greater level of diversity not only improves the token-wise cooperation between experts on broader domains and topics but also reduces the overfitting of the MoE system on K-shot datapoints.\"\n3.  **Mechanism**: By introducing diverse and beneficial instructions through this data selection method"
    },
    {
        "question": "How does DDIM Inversion support Mask Propagation for reliable frame mask extension?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "Inspired from DIFT [32], the three upsampling blocks in the UNet are replete with rich semantic information. Therefore, we can retain the feature map F from upsampling block-2 at a given step t during DDIM inversion in the source video, and use them to calculate the pixel correspondences between frames.",
            "Specifically, to pinpoint the pixel in the (i+1)-th frame that most closely resembles a given point p in the i-th frame, we calculate the cosine similarity between the corresponding point in the feature map F_i and all points in the feature map F_{i+1}.",
            "Given an initial object mask for the first frame from the user, we use k-NN [33] to propagate this mask to subsequent frames. For each point in the (i+1)-th frame, we find the k most similar points in the i-th frame using point matching. If the majority of these k points are in the foreground, the corresponding point in the (i+1)-th frame is also classified as foreground; otherwise, it is background."
        ],
        "final_answer": "During DDIM Inversion the model produces intermediate feature maps (from block-2 of the UNet) that carry rich semantic information. By retaining these feature maps for each frame, the method computes cosine similarities between corresponding features in adjacent frames to establish point correspondences. A k-NN vote on these matched points then propagates the initial frame’s mask reliably to subsequent frames.",
        "relevant_elements": [
            "DDIM Inversion",
            "Mask Propagation"
        ],
        "id": 1005,
        "masked_question": "How does [mask1] support Mask Propagation for reliable frame mask extension?",
        "masked_number": 1,
        "masked_elements": [
            "DDIM Inversion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.20084v3_figure_2.png",
        "paperid": "2410.20084v3",
        "paper_path": "./papers/2410.20084v3.json",
        "figure_id": "2410.20084v3_figure_2.png",
        "caption": "Figure 2: Overall framework. It is structured around three main components:\n(1) Point-Matching Mask Propagation, (2) AdaIN-Guided Video Style Transfer(Attention-shift and latent-shift) and (3) Sliding-Window Consistent Smoothing.",
        "qtype": "Literature_Background",
        "response": "The `[mask1]` in the diagram refers to the \"DDIM Inversion\" component applied to the original video in the Content Branch.\n\nAccording to the \"Point-Matching Mask Propagation\" section in the text:\n1.  **Retention of Feature Maps:** \"we can retain the feature map from upsampling block-2 at a given step during DDIM inversion in the source video.\" This indicates that the DDIM Inversion process is leveraged to extract semantically rich feature maps from the video frames.\n2.  **Calculation of Pixel Correspondences:** These retained feature maps are then \"use[d] them to calculate the pixel correspondences between frames.\" The pixel correspondences are determined by calculating the cosine similarity between points in the feature maps of consecutive frames.\n3.  **Support for Mask Propagation:** \"Utilizing this principle, we can propagate the mask from the first frame to all subsequent frames using the mask propagation strategy...\" Specifically, for each point in the (i+1)-th frame, its similarity to points in the i-th frame is assessed using these feature maps via K-NN, allowing the mask classification (foreground/background) to be extended to subsequent frames.\n\nTherefore, `[mask1]` (DDIM Inversion) supports Mask Propagation by providing the rich semantic feature maps from the source video frames, which are essential for calculating accurate pixel correspondences between frames. These correspondences then enable the reliable propagation of the initial mask to all subsequent frames in the video."
    },
    {
        "question": "How does point-matching mask propagation use feature-map correspondences and K-NN voting to propagate masks across frames?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "Inspired from DIFT [32], the three upsampling blocks in the UNet are replete with rich semantic information. Therefore, we can retain the feature map Fi from upsampling block-2 at a given step t during DDIM inversion in the source video, and use them to calculate the pixel correspondences between frames.",
            "Given an initial object mask for the first frame from the user, we use K-NN [33] to propagate this mask to subsequent frames. For each point in the j-th frame, we find the K most similar points in the i-th frame using point matching. If the majority of these K points are in the foreground, the corresponding point in the j-th frame is also classified as foreground; otherwise, it is background."
        ],
        "final_answer": "During inversion, the model saves intermediate feature maps (from upsampling block-2) for each frame. To transfer the mask from a source frame to a target frame, it computes cosine similarities between every pixel’s feature vector in the target and all feature vectors in the source, thereby establishing point correspondences. Then, for each target pixel, it picks its K most similar source pixels and performs a majority vote: if more than half of those K neighbors lie inside the source’s mask (foreground), the target pixel is labeled foreground; otherwise it is labeled background.",
        "relevant_elements": [
            "Point-Matching Mask Propagation",
            "Feature Maps",
            "K-NN"
        ],
        "id": 1007,
        "masked_question": "How does [mask1] use [mask2] and K-NN voting to propagate masks across frames?",
        "masked_number": 2,
        "masked_elements": [
            "Point-Matching Mask Propagation",
            "Feature Maps"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.20084v3_figure_2.png",
        "paperid": "2410.20084v3",
        "paper_path": "./papers/2410.20084v3.json",
        "figure_id": "2410.20084v3_figure_2.png",
        "caption": "Figure 2: Overall framework. It is structured around three main components:\n(1) Point-Matching Mask Propagation, (2) AdaIN-Guided Video Style Transfer(Attention-shift and latent-shift) and (3) Sliding-Window Consistent Smoothing.",
        "qtype": "Experimental_Results",
        "response": "The \"Point-Matching Mask Propagation\" ([mask1]) uses \"feature maps\" ([mask2]) and K-NN voting to propagate masks across frames through the following steps:\n\n1.  **Point Matching using Feature Maps ([mask2]):** The method first extracts feature maps from upsampling block-2 during DDIM inversion for both the current (`i`-th) and previous (`(i-1)`-th) frames. These feature maps are used to calculate the pixel correspondences between frames. Specifically, to find the pixel in the `i`-th frame that most closely resembles a point in the `(i-1)`-th frame, the cosine similarity between their corresponding points in the feature maps is calculated.\n\n2.  **K-NN Voting for Mask Propagation:** Given an initial object mask for the first frame, K-NN (K-Nearest Neighbors) is employed to propagate this mask to subsequent frames. For each point in the `i`-th frame, the method identifies the K most similar points in the `(i-1)`-th frame using the point matching performed with the feature maps.\n\n3.  **Classification based on Majority Vote:** Based on these K similar points in the previous frame, a voting mechanism is applied. If the majority of these K points are classified as foreground in the"
    },
    {
        "question": "How might reliance on KL divergence hinder Augmented Alignment robustness under class imbalance?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "Augmented Alignment",
            "KL divergence"
        ],
        "id": 1011,
        "masked_question": "How might reliance on [mask1] hinder Augmented Alignment robustness under class imbalance?",
        "masked_number": 1,
        "masked_elements": [
            "KL divergence"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.14336v1_figure_1.png",
        "paperid": "2409.14336v1",
        "paper_path": "./papers/2409.14336v1.json",
        "figure_id": "2409.14336v1_figure_1.png",
        "caption": "Figure 1: (a) Traditional skeleton-based zero-shot action recognition methods use a single alignment model to align the two modalities.\n(b) Our DVTA approach employs a dual alignment strategy, where Direct Alignment is used for initial alignment to strengthen the association between modalities, and distribution alignment is further applied to enhance generalization to unseen classes. KL divergence is employed to generate more positive examples, facilitating the joint optimization of the two spaces.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations might Octree-based geometry compression introduce in preserving fine-grained spatial details?",
        "relevant_section_ids": [
            "2.5"
        ],
        "relevant_context": [
            "After geometry compression, multiple points within a voxel in Octree are merged into a single point. To maintain color consistency, the reconstructed points are recolored by applying the attributes of the nearest Gaussian from the original 3D GS."
        ],
        "final_answer": "By merging all Gaussians within the same voxel into a single representative point, the Octree discretization loses any spatial variations among those points and therefore cannot preserve fine-grained structure inside each voxel.",
        "relevant_elements": [
            "Octree"
        ],
        "id": 1013,
        "masked_question": "What limitations might [mask1]-based geometry compression introduce in preserving fine-grained spatial details?",
        "masked_number": 1,
        "masked_elements": [
            "Octree"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.06976v1_figure_1.png",
        "paperid": "2411.06976v1",
        "paper_path": "./papers/2411.06976v1.json",
        "figure_id": "2411.06976v1_figure_1.png",
        "caption": "Figure 1: Framework of HGSC. Q𝑄Qitalic_Q and Q−1superscript𝑄1Q^{-1}italic_Q start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT denote the processes of quantization and dequantization, respectively.",
        "qtype": "Others",
        "response": "The [mask1] refers to the Octree structure used for geometry compression.\n\n**Chain of thought:**\n1.  **Understand the role of Octree in geometry compression:** The text in section \"II-D Geometry Compression\" states: \"After pruning, we compress the 3D positions with Octree. The whole space is recursively divided into 8 subvoxels up to the depth of *d*.\" This means the continuous 3D space where Gaussian centers reside is discretized into a grid of voxels.\n2.  **Look for details regarding how points are handled within voxels:** Section \"II-E Attributes pre-processing\" provides a critical clue: \"After geometry compression, multiple points within a voxel in Octree are merged into a single point.\"\n3.  **Infer the impact on fine-grained spatial details:** When multiple original Gaussian centers (or parts of them) fall into the same voxel at the deepest level of the Octree, they are effectively mapped or \"merged\" into a single, representative point for that voxel. This process is a form of quantization.\n4.  **Identify the limitation:** This quantization inherently means that any spatial details or distinct positions that are smaller than the resolution of the smallest voxel (determined by the maximum depth *d* of the Octree) will be lost. The original precise positions of individual Gaussians within such a voxel cannot be perfectly retained, leading to a loss of fine-grained spatial details.\n\n**Limitations:**\nThe Octree-based geometry compression quantizes the 3D positions of Gaussians into discrete voxels. This introduces limitations in preserving fine-grained spatial details because:\n1.  **Loss of Precision:** Any information about the exact spatial position of a Gaussian that is smaller than the resolution of the smallest voxel (at the maximum Octree depth *d*) is lost.\n2.  **Merging of Points:** As stated in the text, \"multiple points within a voxel in Octree are merged into a single point.\" This means that distinct Gaussian centers that were originally very close but still separate will be approximated as a single point if they fall into the same terminal voxel, thereby sacrificing their individual fine-grained spatial relationships."
    },
    {
        "question": "What alternative partitioning strategies could enhance anchor primitive sampling beyond KD-tree and FPS?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "KD-tree",
            "FPS"
        ],
        "id": 1014,
        "masked_question": "What alternative partitioning strategies could enhance anchor primitive sampling beyond [mask1] and FPS?",
        "masked_number": 1,
        "masked_elements": [
            "KD-tree"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.06976v1_figure_1.png",
        "paperid": "2411.06976v1",
        "paper_path": "./papers/2411.06976v1.json",
        "figure_id": "2411.06976v1_figure_1.png",
        "caption": "Figure 1: Framework of HGSC. Q𝑄Qitalic_Q and Q−1superscript𝑄1Q^{-1}italic_Q start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT denote the processes of quantization and dequantization, respectively.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What drives the use of recoloring pruned Gaussians with nearest original attributes for consistency?",
        "relevant_section_ids": [
            "2.5"
        ],
        "relevant_context": [
            "After geometry compression, multiple points within a voxel in Octree are merged into a single point. To maintain color consistency, the reconstructed points are recolored by applying the attributes of the nearest Gaussian from the original 3D GS."
        ],
        "final_answer": "The recoloring is driven by the need to maintain color consistency after merging multiple points within an Octree voxel.",
        "relevant_elements": [
            "Pruned Gaussians",
            "Recoloring"
        ],
        "id": 1015,
        "masked_question": "What drives the use of recoloring [mask1] with nearest original attributes for consistency?",
        "masked_number": 1,
        "masked_elements": [
            "Pruned Gaussians"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.06976v1_figure_1.png",
        "paperid": "2411.06976v1",
        "paper_path": "./papers/2411.06976v1.json",
        "figure_id": "2411.06976v1_figure_1.png",
        "caption": "Figure 1: Framework of HGSC. Q𝑄Qitalic_Q and Q−1superscript𝑄1Q^{-1}italic_Q start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT denote the processes of quantization and dequantization, respectively.",
        "qtype": "Design_Rationale",
        "response": "The diagram shows \"Recoloring\" as a step under \"Attributes Pre-processing\". The text explains the motivation for this step in the \"II-E Attributes Compression: Attributes pre-processing\" subsection:\n\n\"After geometry compression, multiple points within a voxel in Octree are merged into a single point. To maintain color consistency, the reconstructed points are recolored by applying the attributes of the nearest Gaussian from the original 3D GS.\"\n\nTherefore, the use of recoloring with nearest original attributes is driven by the need to **maintain color consistency** after multiple points within an Octree voxel have been merged into a single point during the geometry compression phase."
    },
    {
        "question": "What rationale underlies KD-tree and FPS partitioning before Attributes Coding to reduce spatial redundancy?",
        "relevant_section_ids": [
            "2.5"
        ],
        "relevant_context": [
            "Considering Octree may create numerous empty cubes due to the uneven spatial distribution of Gaussians, we employ KD-tree to divide the 3D GS into blocks, ensuring a more uniform distribution of points within each block.",
            "To ensure that the anchor primitives provide comprehensive coverage as reference points, we apply FPS within each block to select the anchor primitives."
        ],
        "final_answer": "KD-tree is used to split the Gaussians into spatial blocks so that points are more uniformly distributed (avoiding many empty voxels), and within each block FPS is applied to choose anchor primitives that cover the block evenly. This partitioning ensures representative anchors and reduces spatial redundancy when coding the remaining (non-anchor) attributes.",
        "relevant_elements": [
            "KD-tree & FPS",
            "Attributes Coding"
        ],
        "id": 1016,
        "masked_question": "What rationale underlies [mask1] partitioning before [mask2] to reduce spatial redundancy?",
        "masked_number": 2,
        "masked_elements": [
            "KD-tree & FPS",
            "Attributes Coding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.06976v1_figure_1.png",
        "paperid": "2411.06976v1",
        "paper_path": "./papers/2411.06976v1.json",
        "figure_id": "2411.06976v1_figure_1.png",
        "caption": "Figure 1: Framework of HGSC. Q𝑄Qitalic_Q and Q−1superscript𝑄1Q^{-1}italic_Q start_POSTSUPERSCRIPT - 1 end_POSTSUPERSCRIPT denote the processes of quantization and dequantization, respectively.",
        "qtype": "Design_Rationale",
        "response": "The rationale for partitioning using KD-tree and FPS ([mask1]) before attribute coding ([mask2]) to reduce spatial redundancy is to establish a hierarchical structure that facilitates predictive coding.\n\n1.  **Identify Spatial Redundancy**: The text states, \"Based on a comprehensive visual analysis, we have identified spatial redundancy among attributes within the 3D GS.\"\n"
    },
    {
        "question": "What motivates integrating KG-Trie into graph-constrained decoding to enforce faithful LLM reasoning paths?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "KG-Trie",
            "graph-constrained decoding"
        ],
        "id": 1017,
        "masked_question": "What motivates integrating [mask1] into [mask2] to enforce faithful LLM reasoning paths?",
        "masked_number": 2,
        "masked_elements": [
            "KG-Trie",
            "graph-constrained decoding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.13080v1_figure_2.png",
        "paperid": "2410.13080v1",
        "paper_path": "./papers/2410.13080v1.json",
        "figure_id": "2410.13080v1_figure_2.png",
        "caption": "Figure 2: Illustration of existing KG-enhanced LLM reasoning paradigms and proposed graph-constrained reasoning (GCR). 1) First, given a KG, we convert it into the KG-Trie, serving as a structured index to facilitate efficient reasoning path searches using LLMs. 2) Then, we design a graph-constrained decoding process that employs a lightweight KG-specialized LLM to generate multiple KG-grounded reasoning paths and hypothesis answers. This ensures the faithfulness of the reasoning process while leveraging the strong capabilities of LLMs to efficiently explore reasoning paths within KGs. 3) Finally, we input the generated reasoning paths and hypothesis answers into a powerful general LLM to utilize its inductive reasoning ability to produce final answers.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does graph-constrained decoding utilize KG-Trie to restrict LLM token generation per step?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "KG-Trie",
            "graph-constrained decoding"
        ],
        "id": 1019,
        "masked_question": "How does graph-constrained decoding utilize [mask1] to restrict LLM token generation per step?",
        "masked_number": 1,
        "masked_elements": [
            "KG-Trie"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.13080v1_figure_2.png",
        "paperid": "2410.13080v1",
        "paper_path": "./papers/2410.13080v1.json",
        "figure_id": "2410.13080v1_figure_2.png",
        "caption": "Figure 2: Illustration of existing KG-enhanced LLM reasoning paradigms and proposed graph-constrained reasoning (GCR). 1) First, given a KG, we convert it into the KG-Trie, serving as a structured index to facilitate efficient reasoning path searches using LLMs. 2) Then, we design a graph-constrained decoding process that employs a lightweight KG-specialized LLM to generate multiple KG-grounded reasoning paths and hypothesis answers. This ensures the faithfulness of the reasoning process while leveraging the strong capabilities of LLMs to efficiently explore reasoning paths within KGs. 3) Finally, we input the generated reasoning paths and hypothesis answers into a powerful general LLM to utilize its inductive reasoning ability to produce final answers.",
        "qtype": "Implementation_Details",
        "response": "[mask1] refers to the **KG-Trie**.\n\nHere's how graph-constrained decoding utilizes the KG-Trie to restrict LLM token generation per step:\n\n1.  **KG-Trie Construction:** First, the Knowledge Graph (KG) is converted into a structured index called a KG-Trie. This KG-Trie encodes valid reasoning paths from the KG as formatted strings.\n2.  **Constraint Function:** During the LLM's decoding process (token generation), a constraint function checks whether the currently generated tokens form a valid prefix of a reasoning path that exists within the KG-Trie.\n3.  **Token Restriction:** By applying this constraint, the graph-constrained decoding ensures that the LLM is restricted to generating only those tokens that are valid prefixes of actual reasoning paths grounded in the KG. This guides the LLM to explore and generate paths that are valid in the KGs, eliminating hallucinations and ensuring faithful reasoning."
    },
    {
        "question": "How does the lightweight KG-specialized LLM incorporate hypothesis answers into reasoning path generation?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "lightweight KG-specialized LLM",
            "hypothesis answers"
        ],
        "id": 1020,
        "masked_question": "How does the [mask1] incorporate hypothesis answers into reasoning path generation?",
        "masked_number": 1,
        "masked_elements": [
            "lightweight KG-specialized LLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.13080v1_figure_2.png",
        "paperid": "2410.13080v1",
        "paper_path": "./papers/2410.13080v1.json",
        "figure_id": "2410.13080v1_figure_2.png",
        "caption": "Figure 2: Illustration of existing KG-enhanced LLM reasoning paradigms and proposed graph-constrained reasoning (GCR). 1) First, given a KG, we convert it into the KG-Trie, serving as a structured index to facilitate efficient reasoning path searches using LLMs. 2) Then, we design a graph-constrained decoding process that employs a lightweight KG-specialized LLM to generate multiple KG-grounded reasoning paths and hypothesis answers. This ensures the faithfulness of the reasoning process while leveraging the strong capabilities of LLMs to efficiently explore reasoning paths within KGs. 3) Finally, we input the generated reasoning paths and hypothesis answers into a powerful general LLM to utilize its inductive reasoning ability to produce final answers.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Task Classification Agent handle ambiguous user intents during intent determination and task matching?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Task Classification Agent"
        ],
        "id": 1021,
        "masked_question": "How does [mask1] handle ambiguous user intents during intent determination and task matching?",
        "masked_number": 1,
        "masked_elements": [
            "Task Classification Agent"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.11531v1_figure_1.png",
        "paperid": "2410.11531v1",
        "paper_path": "./papers/2410.11531v1.json",
        "figure_id": "2410.11531v1_figure_1.png",
        "caption": "Figure 1: AGENTiGraph Framework: A multi-agent system for intelligent KG interaction and management.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Knowledge Graph Fusion or Construction Agent resolve conflicting relations during graph merging?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "Knowledge Graph Fusion or Construction Agent"
        ],
        "id": 1022,
        "masked_question": "How does [mask1] resolve conflicting relations during graph merging?",
        "masked_number": 1,
        "masked_elements": [
            "Knowledge Graph Fusion or Construction Agent"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.11531v1_figure_1.png",
        "paperid": "2410.11531v1",
        "paper_path": "./papers/2410.11531v1.json",
        "figure_id": "2410.11531v1_figure_1.png",
        "caption": "Figure 1: AGENTiGraph Framework: A multi-agent system for intelligent KG interaction and management.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How do Task Classification and Key Concept Extraction draw on precedent NLP decomposition frameworks?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Task Classification Agent",
            "Key Concept Extraction Agent"
        ],
        "id": 1023,
        "masked_question": "How do [mask1] and [mask2] draw on precedent NLP decomposition frameworks?",
        "masked_number": 2,
        "masked_elements": [
            "Task Classification",
            "Key Concept Extraction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.11531v1_figure_1.png",
        "paperid": "2410.11531v1",
        "paper_path": "./papers/2410.11531v1.json",
        "figure_id": "2410.11531v1_figure_1.png",
        "caption": "Figure 1: AGENTiGraph Framework: A multi-agent system for intelligent KG interaction and management.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does semantic field embedding unify materials and illumination modeling compared to separate Material MLP and Illumination MLP pipelines?",
        "relevant_section_ids": [
            "1",
            "3.3",
            "3.4"
        ],
        "relevant_context": [
            "Section 1: As a result, our UniVoxel is able to estimate the materials and illumination of a scene based on the voxelization of the semantic field by learning lightweight MLP networks while the surface normal and opacity for an arbitrary 3D point can be easily derived from the voxelization of the SDF field.",
            "Section 3.3: Based on the learned volumetric semantic field, our UniVoxel models the albedo and roughness using two lightweight MLP networks: m_color(p)=T_alb(f_sem^p), m_rough(p)=T_rough(f_sem^p).",
            "Section 3.4: We model the essential component of the SG parameters in a unified learning manner with the modeling of the geometry and materials as shown in Sec. 3.3 based on the voxelization of the scene representation: m_l(p)=T_phi(f_sem^p)."
        ],
        "final_answer": "Instead of using two independently trained MLPs—one that takes raw 3D coordinates to predict materials and another that takes the same coordinates to predict illumination—UniVoxel first embeds every location into a shared \"semantic field\" of latent voxel features. Two very small MLP decoders then read out material parameters (albedo and roughness) from that same feature, and a third tiny MLP reads out illumination parameters (the Spherical Gaussian lobes). In this way, both the material‐ and illumination‐prediction MLPs share the same underlying semantic embedding, unifying the two pipelines into a single, compact voxelized representation.",
        "relevant_elements": [
            "Semantic Field",
            "Material MLP",
            "Illumination MLP"
        ],
        "id": 1025,
        "masked_question": "How does [mask1] embedding unify materials and illumination modeling compared to separate Material MLP and Illumination MLP pipelines?",
        "masked_number": 1,
        "masked_elements": [
            "Semantic Field"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.19542v1_figure_1.png",
        "paperid": "2407.19542v1",
        "paper_path": "./papers/2407.19542v1.json",
        "figure_id": "2407.19542v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed UniVoxel. Typical methods [9, 45, 47] for inverse rendering learn implicit neural scene representations from spatial field by modeling the geometry, materials and illumination individually employing deep MLP networks. In contrast, our UniVoxel learns explicit scene representations by performing voxelization towards two essential scene elements: SDF field and semantic field, based on which the geometry, materials and illumination can be learned with lightweight networks in a unified manner, boosting the optimization efficiency of inverse rendering substantially.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does SDF Field representation accelerate geometry reconstruction compared to implicit SDF/Normal MLP methodologies?",
        "relevant_section_ids": [
            "2.2",
            "3.3"
        ],
        "relevant_context": [
            "Learning implicit neural representations for scenes with MLP networks typically introduces substantial computation, leading to slow training and rendering. To address this limitation, explicit representation ... have been explored to model the radiance field for a scene.",
            "The SDF value f and semantic features g for a position x in the space can be queried by trilinear interpolation on its eight neighboring voxels.",
            "The surface normal at position x can be easily derived based on the learned SDF field of the neighboring samples. For example, we approximate the -component of the surface normal of x as:\n    n_x = \\frac{SDF(x+e) - SDF(x-e)}{2 \\Delta_v}\nwhere Δ_v is the voxel size."
        ],
        "final_answer": "By storing signed‐distance values in an explicit voxel grid, UniVoxel can reconstruct geometry by fast trilinear look‐ups and simple finite‐difference approximations of normals, instead of repeatedly evaluating a deep SDF/Normal MLP. This explicit SDF field thus dramatically cuts the per‐point computation and speeds up geometry reconstruction compared to implicit MLP-based methods.",
        "relevant_elements": [
            "SDF Field",
            "SDF/Normal MLP",
            "Geometry"
        ],
        "id": 1026,
        "masked_question": "How does [mask1] representation accelerate geometry reconstruction compared to implicit SDF/Normal MLP methodologies?",
        "masked_number": 1,
        "masked_elements": [
            "SDF Field"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.19542v1_figure_1.png",
        "paperid": "2407.19542v1",
        "paper_path": "./papers/2407.19542v1.json",
        "figure_id": "2407.19542v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed UniVoxel. Typical methods [9, 45, 47] for inverse rendering learn implicit neural scene representations from spatial field by modeling the geometry, materials and illumination individually employing deep MLP networks. In contrast, our UniVoxel learns explicit scene representations by performing voxelization towards two essential scene elements: SDF field and semantic field, based on which the geometry, materials and illumination can be learned with lightweight networks in a unified manner, boosting the optimization efficiency of inverse rendering substantially.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does the Semantic Field inform lightweight MLP networks for unified estimation of materials and illumination?",
        "relevant_section_ids": [
            "3.3",
            "3.4"
        ],
        "relevant_context": [
            "Based on the learned volumetric semantic field, our UniVoxel models the albedo and roughness using two lightweight MLP networks: a(x_i) = f^{albedo}_φ(f^s(x_i)), r(x_i) = f^{rough}_φ(f^s(x_i)), where a and r are the learned albedo and roughness at the position x_i, respectively.",
            "Herein, we model the essential component of the SG parameters p_k(x_i) in a unified learning manner with the modeling of the geometry and materials as shown in Sec. 3.3 based on the voxelization of the scene representation: p_k(x_i) = f^{SG}_φ(f^s(x_i)), where f^{SG}_φ denotes a lightweight MLP network."
        ],
        "final_answer": "The Semantic Field is trilinearly interpolated to yield per-point semantic feature embeddings f^s(x_i), which are then fed into lightweight MLPs: two separate MLPs decode material properties (diffuse albedo and roughness), and a third MLP decodes Spherical Gaussian illumination parameters. This unified use of the same semantic features allows joint prediction of materials and illumination.",
        "relevant_elements": [
            "Semantic Field",
            "Lightweight MLPs"
        ],
        "id": 1027,
        "masked_question": "How does the [mask1] inform [mask2] networks for unified estimation of materials and illumination?",
        "masked_number": 2,
        "masked_elements": [
            "Semantic Field",
            "Lightweight MLPs"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.19542v1_figure_1.png",
        "paperid": "2407.19542v1",
        "paper_path": "./papers/2407.19542v1.json",
        "figure_id": "2407.19542v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed UniVoxel. Typical methods [9, 45, 47] for inverse rendering learn implicit neural scene representations from spatial field by modeling the geometry, materials and illumination individually employing deep MLP networks. In contrast, our UniVoxel learns explicit scene representations by performing voxelization towards two essential scene elements: SDF field and semantic field, based on which the geometry, materials and illumination can be learned with lightweight networks in a unified manner, boosting the optimization efficiency of inverse rendering substantially.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does voxelizing the SDF Field facilitate direct geometry estimation within the framework?",
        "relevant_section_ids": [
            "3.1",
            "3.3"
        ],
        "relevant_context": [
            "In Sec. 3.1: “Meanwhile, the surface normal and opacity of the sampled point can be easily derived from the voxelization of the SDF field.”",
            "In Sec. 3.3: “The SDF value s(x) … can be queried by trilinear interpolation on its eight neighboring voxels. The surface normal at position x can be easily derived based on the learned SDF field of the neighboring samples. For example, we approximate the i-component of the surface normal of x as: (d(x+he_i)−d(x−he_i))/(2h), where h denotes the size of one voxel.”"
        ],
        "final_answer": "By storing the SDF as learnable embeddings on a voxel grid, the framework can interpolate signed‐distance values at any point via trilinear interpolation and then compute geometry directly.  Surface normals emerge from finite differences of neighboring voxel SDF values, and opacity is obtained from the interpolated SDF, enabling direct and efficient geometry estimation without additional geometry MLPs.",
        "relevant_elements": [
            "SDF Field",
            "Geometry"
        ],
        "id": 1028,
        "masked_question": "How does voxelizing the [mask1] facilitate direct geometry estimation within the framework?",
        "masked_number": 1,
        "masked_elements": [
            "SDF Field"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.19542v1_figure_1.png",
        "paperid": "2407.19542v1",
        "paper_path": "./papers/2407.19542v1.json",
        "figure_id": "2407.19542v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed UniVoxel. Typical methods [9, 45, 47] for inverse rendering learn implicit neural scene representations from spatial field by modeling the geometry, materials and illumination individually employing deep MLP networks. In contrast, our UniVoxel learns explicit scene representations by performing voxelization towards two essential scene elements: SDF field and semantic field, based on which the geometry, materials and illumination can be learned with lightweight networks in a unified manner, boosting the optimization efficiency of inverse rendering substantially.",
        "qtype": "Experimental_Results",
        "response": "The voxelization of the SDF field facilitates direct geometry estimation within the UniVoxel framework in the following ways:\n\n1.  **Explicit Scene Representation:** Instead of using implicit neural representations that require a deep MLP to map coordinates to SDF values, UniVoxel directly learns \"volumetric embeddings\" for the SDF field. This means each voxel explicitly stores information related to the signed distance function.\n2.  **Efficient SDF Value Querying:** For any arbitrary 3D position, its SDF value can be efficiently obtained by performing \"trilinear interpolation\" on the learned embeddings of its eight neighboring voxels. This provides a direct and fast way to query the SDF at any point in space.\n3.  **Geometry as Zero-Level Set:** The scene's geometry is implicitly defined as the \"zero-level set\" of this learned SDF field. Points where the SDF value is zero lie on the surface of the object.\n4.  **Direct Surface Normal Derivation:** The surface normal at any given position can be easily derived from the learned SDF field by calculating its gradient (approximated, for example, by finite differences across neighboring SDF values).\n5.  **Opacity Calculation:** The opacity value for sampled points along a camera ray, crucial for volumetric rendering, is directly calculated from the SDF values using a specific formula (e.g., following NeuS).\n\nIn essence, by voxelizing the SDF field and learning explicit embeddings, UniVoxel allows for direct, efficient querying of SDF values, from which geometry (as a zero-level set), surface normals, and opacity can be readily and explicitly derived."
    },
    {
        "question": "How does instruction tuning improve the local LLM’s identification of malicious edges?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "In this section, we propose a novel LLM-based robust graph structure inference framework, LLM4RGNN. As shown in Figure 2, LLM4RGNN distills the inference capabilities of GPT-4 into a local LLM for identifying malicious edges and an edge predictor for finding missing important edges, so as to recover a robust graph structure, making various GNNs more robust.",
            "Thus, we hope to distill the inference capability of GPT-4 into a local LLM, to identify malicious edges. To this end, instruction tuning based on GPT-4 is a popular fine-tuning technique (xu2024survey; chen2023label), which utilizes GPT-4 to construct an instruction dataset, and then further trains a local LLM in a supervised fashion.",
            "In the “System prompt”, we provide background knowledge about tasks and the specific roles played by LLMs in the prompt, which can more effectively harness the inference capability of GPT-4 (he2023harnessing; yu2023empower). Additionally, we require GPT-4 to provide a fine-grained rating of the maliciousness of edges on a scale from 1 to 6, where a lower score indicates more malicious, and a higher score indicates more important. The concept of “Analysis” is particularly crucial, as it not only facilitates an inference process in GPT-4 regarding prediction results, but also serves as a key to distilling the inference capability of GPT-4 into local LLMs.",
            "The refined instruction dataset is then used to fine-tune a local LLM, such as Mistral-7B or Llama3-8B. After that, the well-tuned LLM is able to infer the maliciousness of edges similar to GPT-4."
        ],
        "final_answer": "By instruction tuning we first use GPT-4 to generate a large, high-quality instruction dataset—each example pairing a natural-language ‘System prompt’ (task definition and background), the textual node-pair input, and GPT-4’s detailed ‘Analysis’ plus fine-grained relevance score. We then filter for the clearest labels and fine-tune a local LLM on this distilled data. The result is a local model that has effectively absorbed GPT-4’s reasoning patterns and can accurately identify and score malicious edges at inference time.",
        "relevant_elements": [
            "Instruction tuning",
            "local LLM"
        ],
        "id": 1029,
        "masked_question": "How does instruction tuning improve the [mask1]’s identification of malicious edges?",
        "masked_number": 1,
        "masked_elements": [
            "local LLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.08685v1_figure_2.png",
        "paperid": "2408.08685v1",
        "paper_path": "./papers/2408.08685v1.json",
        "figure_id": "2408.08685v1_figure_2.png",
        "caption": "Figure 2. The framework of LLM4RGNN, which involves three main parts: (a) instruction tuning a local LLM, which distills the inference capability from GPT-4 into a local LLM for identifying malicious edges; (b) training an LM-based edge predictor, which further distills the inference capability from the local LLM into LM-based edge predictor for finding missing important edges; (c) purifying the graph structure by removing malicious edges and adding important edges, making GNNs more robust.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] refers to \"Local LLMs (Mistral)\".\n\nInstruction tuning improves the **Local LLMs' (Mistral)** identification of malicious edges by:\n\n1.  **Distilling GPT-4's Inference Capability:** It creates an instruction dataset by prompting a powerful LLM like GPT-4 to provide an \"Analysis\" and \"Relevance Score\" for the maliciousness of edges. This \"Analysis\" is crucial as it helps distill GPT-4's reasoning process into the local LLMs.\n2.  **Supervised Fine-tuning:** This carefully constructed and post-processed instruction dataset, consisting of (instruction, input, output) instances where output includes GPT-4's analysis and relevance scores for edge maliciousness, is then used to fine-tune the local LLM (e.g., Mistral-7B) in a supervised"
    },
    {
        "question": "How does training the LM-based edge predictor enhance discovery of missing important edges?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "Although the local LLM can identify important edges with higher relevance scores, it is still very time and resource-consuming with |E'_m| edges. Therefore, we further design an LM-based edge predictor, as depicted in Figure 2 (b), which utilizes Sentence Bert (reimers2019sentence, reference_b30) as the text encoder and trains a multilayer perceptron (MLP) to find missing important edges.",
            "Firstly, we introduce how to construct the feature of each edge. … For each node v_i, we adopt a sentence embedding model LM as text encoder to extract representations h_i from the raw text t_i, i.e., h_i = LM(t_i). We concatenate the representations of the node i and j as the feature for the corresponding edge.",
            "Next, we feed the feature of each edge into an MLP to obtain the prediction probability ŷ_{i,j}. The cross-entropy loss function is used to optimize the parameters of MLP … After training the edge predictor, we input any node pair (i, j) that does not exist in G' into it to obtain the prediction probability of edge existence. … we can select the top K_i neighbors for the current node i with predicted score greater than threshold γ, to establish the most important edges for i as possible."
        ],
        "final_answer": "By using the LLM to annotate a subset of edges and then training a lightweight MLP on their sentence-embedding-based features, the LM-based edge predictor learns to generalize the LLM’s relevance judgments. Once trained, it can efficiently score every potential (i,j) pair in the attacked graph and select the top-scoring pairs as missing important edges—thus recovering deleted but valuable connections without the heavy cost of running the LLM on all candidate edges.",
        "relevant_elements": [
            "LM-based edge predictor",
            "important edges"
        ],
        "id": 1030,
        "masked_question": "How does training the [mask1] enhance discovery of missing important edges?",
        "masked_number": 1,
        "masked_elements": [
            "LM-based edge predictor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.08685v1_figure_2.png",
        "paperid": "2408.08685v1",
        "paper_path": "./papers/2408.08685v1.json",
        "figure_id": "2408.08685v1_figure_2.png",
        "caption": "Figure 2. The framework of LLM4RGNN, which involves three main parts: (a) instruction tuning a local LLM, which distills the inference capability from GPT-4 into a local LLM for identifying malicious edges; (b) training an LM-based edge predictor, which further distills the inference capability from the local LLM into LM-based edge predictor for finding missing important edges; (c) purifying the graph structure by removing malicious edges and adding important edges, making GNNs more robust.",
        "qtype": "Experimental_Results",
        "response": "The masked component is the **LM-based Edge Predictor**.\n\nTraining the LM-based Edge Predictor enhances the discovery of missing important edges in the following ways:\n\n1.  **Distillation of Inference Capability**: It further distills the inference capability from the already instruction-tuned Local LLM. The Local LLM acts as an \"edge annotator,\" providing labels (based on relevance scores it predicts for edges) that define what constitutes a \"positive\" (important) or \"negative\" (less important/malicious) edge. This allows the"
    },
    {
        "question": "What biases might emerge when distilling GPT-4's maliciousness ratings into local LLMs?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "GPT-4",
            "Local LLMs"
        ],
        "id": 1031,
        "masked_question": "What biases might emerge when distilling [mask1]'s maliciousness ratings into local LLMs?",
        "masked_number": 1,
        "masked_elements": [
            "GPT-4"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.08685v1_figure_2.png",
        "paperid": "2408.08685v1",
        "paper_path": "./papers/2408.08685v1.json",
        "figure_id": "2408.08685v1_figure_2.png",
        "caption": "Figure 2. The framework of LLM4RGNN, which involves three main parts: (a) instruction tuning a local LLM, which distills the inference capability from GPT-4 into a local LLM for identifying malicious edges; (b) training an LM-based edge predictor, which further distills the inference capability from the local LLM into LM-based edge predictor for finding missing important edges; (c) purifying the graph structure by removing malicious edges and adding important edges, making GNNs more robust.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "Could rule-based heuristics complement local LLMs decisions in purifying graph structure to improve robustness?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Local LLMs",
            "Purifying Graph Structure"
        ],
        "id": 1032,
        "masked_question": "Could rule-based heuristics complement [mask1] decisions in [mask2] to improve robustness?",
        "masked_number": 2,
        "masked_elements": [
            "Local LLMs",
            "Purifying Graph Structure"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.08685v1_figure_2.png",
        "paperid": "2408.08685v1",
        "paper_path": "./papers/2408.08685v1.json",
        "figure_id": "2408.08685v1_figure_2.png",
        "caption": "Figure 2. The framework of LLM4RGNN, which involves three main parts: (a) instruction tuning a local LLM, which distills the inference capability from GPT-4 into a local LLM for identifying malicious edges; (b) training an LM-based edge predictor, which further distills the inference capability from the local LLM into LM-based edge predictor for finding missing important edges; (c) purifying the graph structure by removing malicious edges and adding important edges, making GNNs more robust.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What are the limitations of local and global parameter averaging against malicious participant attacks?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Local Model",
            "Global Model",
            "Malicious Participant"
        ],
        "id": 1033,
        "masked_question": "What are the limitations of [mask1] and global parameter averaging against malicious participant attacks?",
        "masked_number": 1,
        "masked_elements": [
            "Local Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.01140v2_figure_1.png",
        "paperid": "2411.01140v2",
        "paper_path": "./papers/2411.01140v2.json",
        "figure_id": "2411.01140v2_figure_1.png",
        "caption": "Figure 1: Federated Learning Structure with Potential Attacks. A federated learning setup where artificial intelligence and machine learning models are trained locally, with parameters aggregated on a central server. Potential attacks include eavesdropping, malicious participants, untrusted servers, and server breaches, all of which may expose local or global models. These attacks exploit model inversion and membership inference techniques to extract sensitive information about the training samples.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How could local and global model aggregation be enhanced to reduce eavesdropping vulnerabilities?",
        "relevant_section_ids": [
            "1",
            "4.2"
        ],
        "relevant_context": [
            "In a FL structure, as depicted in Figure 2, DP can be applied to local models before they are transmitted to the central server. As a result, these secured local models contribute to the global model, which is formed by aggregating the secured local models, thereby maintaining the security of the global model as well. The communication between the server and clients is secure because the updates exchanged are already secured, rendering eavesdropping attacks ineffective.",
            "In the FL structure, class hypervectors are exchanged between clients and a central server. Without a privacy-preserving mechanism, this process can expose sensitive training data to model inversion and membership inference attacks. To protect this confidential information, Gaussian noise is added to the HD models. … Since this is the first round, each client’s noise-perturbed updates are already sufficient to secure the aggregated global model, and no additional noise needs to be added at the server side."
        ],
        "final_answer": "By incorporating Differential Privacy into both local and global aggregation steps—specifically, adding carefully calibrated Gaussian noise to each client’s model updates before they are sent and relying on those noisy updates for aggregation—the exchanged updates become noise-perturbed. This enhancement ensures that even if an adversary eavesdrops on the communication, they cannot reconstruct or infer sensitive information from the intercepted model parameters.",
        "relevant_elements": [
            "Local Model",
            "Global Model",
            "Eavesdropping"
        ],
        "id": 1034,
        "masked_question": "How could [mask1] and [mask2] aggregation be enhanced to reduce eavesdropping vulnerabilities?",
        "masked_number": 2,
        "masked_elements": [
            "Local Model",
            "Global Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.01140v2_figure_1.png",
        "paperid": "2411.01140v2",
        "paper_path": "./papers/2411.01140v2.json",
        "figure_id": "2411.01140v2_figure_1.png",
        "caption": "Figure 1: Federated Learning Structure with Potential Attacks. A federated learning setup where artificial intelligence and machine learning models are trained locally, with parameters aggregated on a central server. Potential attacks include eavesdropping, malicious participants, untrusted servers, and server breaches, all of which may expose local or global models. These attacks exploit model inversion and membership inference techniques to extract sensitive information about the training samples.",
        "qtype": "Others",
        "response": "To enhance the aggregation of [mask1] (local models `W1, ..., WK`) and [mask2] (the global model `W_global`) to reduce eavesdropping vulnerabilities, Differential Privacy (DP) can be incorporated.\n\nHere's the step-by-step enhancement:\n\n1.  **Apply DP to Local Models ([mask1])**: Differential Privacy is applied to the local models (`W1` to `WK`) at each client *before* they are transmitted to the central server. This involves adding carefully calibrated noise to the local model parameters.\n2."
    },
    {
        "question": "What motivates averaging Local Model updates to form the Global Model under potential attacks?",
        "relevant_section_ids": [
            "4.1",
            "4.2"
        ],
        "relevant_context": [
            "In each round, every client uses a fixed number of samples, L, to retrain their local model. Both local and global models consist of K class hypervectors, each representing a specific class. During the first round, each client builds its local model using L samples and then sends these local models to the server. The server aggregates the local models by calculating the element-wise average of the class hypervectors, as shown in Equation (9) for t: ... This process ensures that information from all training samples is preserved because the global model is continuously updated rather than being retrained from scratch. This approach not only aligns the global model closely with new samples, improving accuracy, but also retains the knowledge from previous rounds, thereby enhancing the overall robustness of the model.",
            "Once the local models have been aggregated in the first round, the server does not need to add any additional noise to the global model. The noise introduced in the local models is sufficient to ensure the privacy of the global model. ... Since σ_C is always greater than one (σ_C>1), the noise received from the clients is sufficient to secure the global model, and no additional noise needs to be added to the global model."
        ],
        "final_answer": "Averaging the clients’ noisy local updates (as in FedAvg) serves two purposes under adversarial threat models: (1) by taking the element-wise mean of all clients’ hypervector updates, the server continuously integrates new knowledge while preserving information from every client and maintaining model accuracy and robustness; and (2) because each client has already injected sufficient differential-privacy noise into its update, the aggregated noise in the averaged global model is itself enough to thwart model-inversion or membership-inference attacks, removing any need for extra noise at the server.",
        "relevant_elements": [
            "Local Model",
            "Global Model"
        ],
        "id": 1035,
        "masked_question": "What motivates averaging [mask1] updates to form the [mask2] under potential attacks?",
        "masked_number": 2,
        "masked_elements": [
            "Local Model",
            "Global Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.01140v2_figure_1.png",
        "paperid": "2411.01140v2",
        "paper_path": "./papers/2411.01140v2.json",
        "figure_id": "2411.01140v2_figure_1.png",
        "caption": "Figure 1: Federated Learning Structure with Potential Attacks. A federated learning setup where artificial intelligence and machine learning models are trained locally, with parameters aggregated on a central server. Potential attacks include eavesdropping, malicious participants, untrusted servers, and server breaches, all of which may expose local or global models. These attacks exploit model inversion and membership inference techniques to extract sensitive information about the training samples.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does the methodology limit information extraction through eavesdropping-enabled model inversion attacks?",
        "relevant_section_ids": [
            "1"
        ],
        "relevant_context": [
            "In a FL structure, as depicted in Figure 2, DP can be applied to local models before they are transmitted to the central server. As a result, these secured local models contribute to the global model, which is formed by aggregating the secured local models, thereby maintaining the security of the global model as well.",
            "Additionally, the communication between the server and clients is secure because the updates exchanged are already secured, rendering eavesdropping attacks ineffective."
        ],
        "final_answer": "By applying carefully calibrated differential‐privacy noise to each local model before it is sent, all model updates on the communication channel are already “secured” with noise. Even if an adversary eavesdrops on the channel and captures these noisy updates, they cannot perform a meaningful model inversion attack to reconstruct the original training data.",
        "relevant_elements": [
            "Eavesdropping",
            "Model Inversion Attack"
        ],
        "id": 1036,
        "masked_question": "How does the methodology limit information extraction through [mask1]-enabled model inversion attacks?",
        "masked_number": 1,
        "masked_elements": [
            "Eavesdropping"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.01140v2_figure_1.png",
        "paperid": "2411.01140v2",
        "paper_path": "./papers/2411.01140v2.json",
        "figure_id": "2411.01140v2_figure_1.png",
        "caption": "Figure 1: Federated Learning Structure with Potential Attacks. A federated learning setup where artificial intelligence and machine learning models are trained locally, with parameters aggregated on a central server. Potential attacks include eavesdropping, malicious participants, untrusted servers, and server breaches, all of which may expose local or global models. These attacks exploit model inversion and membership inference techniques to extract sensitive information about the training samples.",
        "qtype": "Design_Rationale",
        "response": "The methodology, FedHDPrivacy, limits information extraction through **eavesdropping**-enabled model inversion attacks by integrating Differential Privacy (DP).\n\nHere's a step-"
    },
    {
        "question": "What is the motivation for predicting batch times instead of executing on the inference system?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "However, this approach requires substantial development effort to establish a unified interface, enabling output from various schedulers to be sent across different inference systems, as well as for standardizing execution results for performance evaluation. Running every schedule on GPUs also incurs high computational costs.",
            "To address these challenges, we adopt an alternative approach in this study, predicting batch execution times based on the number of tokens processed and the KV caches accessed (5), using results from Vidur (6)."
        ],
        "final_answer": "Predicting batch times avoids the high development overhead of integrating multiple schedulers with diverse inference systems and the substantial computational cost of running every schedule on real GPUs.",
        "relevant_elements": [
            "batch_time",
            "Inference System"
        ],
        "id": 1037,
        "masked_question": "What is the motivation for predicting [mask1] instead of executing on the inference system?",
        "masked_number": 1,
        "masked_elements": [
            "batch_time"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.07447v2_figure_2.png",
        "paperid": "2411.07447v2",
        "paper_path": "./papers/2411.07447v2.json",
        "figure_id": "2411.07447v2_figure_2.png",
        "caption": "Figure 2: Overview of InferMax. We focus on the flows with solid arrows in the paper.",
        "qtype": "Design_Rationale",
        "response": "The content highlighted by the red box is \"batch_time(# tokens, # KV's), ...\" which is described as a \"Cost model\" for \"predicting batch execution times\".\n\nAccording to the \"InferMax\" section of the text, the traditional approach involves dispatching schedules to inference systems (3) to execute and measure performance (4). However, the text explicitly states the motivations for adopting an alternative approach of predicting batch execution times (5) instead of executing them on the inference system:\n\n1.  **Requires substantial development effort**: \"this approach requires substantial development effort to establish a unified interface, enabling output from various schedulers to be sent across different inference systems, as well as for standardizing execution results for performance evaluation.\"\n2.  **Incurs high computational costs**: \"Running every schedule on GPUs also incurs high computational costs.\"\n\nTherefore, the motivation for predicting **batch_time(# tokens, # KV's), ...** instead of executing on the inference system is to **reduce substantial development effort needed for a unified interface and standardization of results, and to avoid high computational costs associated with running every schedule on GPUs.**"
    },
    {
        "question": "What design insights drive integrating CSP with the batch_time cost model?",
        "relevant_section_ids": [
            "3",
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "Section 3: “To address these challenges, we adopt an alternative approach in this study, predicting batch execution times based on the number of tokens processed and the KV caches accessed (5), using results from Vidur (6).”",
            "Section 3: “We formulate the problem of finding optimal schedules for the first time using the constraint satisfaction problem (CSP) … Here, one can force particular scheduling policies in forms of constraints and optimize latency, throughput, or any objective that can be represented as a formula.”",
            "Section 3.2: “To predict batch time, we sum the costs of non-attention operators and the attention costs, using either prefill- or decode-attention based on the request phase. … The figures demonstrate that linear regression effectively models these operator costs.”",
            "Section 3.3: “Rather than seeking a better scheduling algorithm without assured performance outcomes, solving the CSP approach directs us toward optimal schedules, allowing for a more goal-oriented development process, as illustrated in Figure 1.”",
            "Section 3.3: “The CSP objective can be set to minimize total latency, utilizing our batch time prediction model from Section 3.2. … Alternative objectives … can be represented in a formula.”"
        ],
        "final_answer": "The main design insights are: (1) using a lightweight linear batch_time cost model lets us cheaply predict the GPU execution time of any candidate batch without running it on hardware; (2) expressing scheduling as a CSP—including eviction, batching, and phase‐switch constraints—provides a systematic way to enforce or prohibit specific policies; and (3) coupling the CSP with the batch_time model as its objective produces provably optimal schedules (or bounds) for latency, throughput, or other metrics, thereby turning scheduler design into a goal‐oriented, constraint‐driven optimization problem.",
        "relevant_elements": [
            "CSP",
            "batch_time"
        ],
        "id": 1038,
        "masked_question": "What design insights drive integrating [mask1] with the [mask2] cost model?",
        "masked_number": 2,
        "masked_elements": [
            "CSP",
            "batch_time"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.07447v2_figure_2.png",
        "paperid": "2411.07447v2",
        "paper_path": "./papers/2411.07447v2.json",
        "figure_id": "2411.07447v2_figure_2.png",
        "caption": "Figure 2: Overview of InferMax. We focus on the flows with solid arrows in the paper.",
        "qtype": "Design_Rationale",
        "response": "The content in the red box [mask1] refers to \"CSP\" (Constraint Satisfaction Problem). The content in the blue box [mask2] refers to \"batch_time(# tokens, # KV's), ...\" which is identified as a \"Cost model\" in the diagram.\n\nAccording to the \"Optimal Scheduling as Constraint Satisfaction Problem\" section in the text:\n1.  **Purpose of CSP**: CSP is applied \"to determine optimal schedules\" and \"directs us toward optimal schedules, allowing for a more goal-oriented development process.\" It can be used to \"validate whether a better scheduler exists that could reduce the latency of current schedulers by 10%\" or to optimize for \"latency, throughput, or fairness.\"\n2.  **Role of Cost Model in CSP**: The text explicitly states, \"The CSP objective can be set to minimize total latency, utilizing our batch time prediction model from Section 3.2.\" Section 3.2 is titled \"Cost Models for Batch Times.\" The `batch_time` function is the core of this prediction model, estimating batch execution times based on parameters like the number of tokens and KV caches.\n\nTherefore, the design insight driving the integration of CSP with the batch time cost model is to enable the CSP to accurately predict and optimize for performance objectives (such as minimizing total latency) when determining optimal schedules. The cost model provides the necessary quantitative estimation of batch execution times, which the CSP then uses as a component of its objective function."
    },
    {
        "question": "How does batch_time integrate # tokens and # KV’s to predict batch execution times?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "To predict batch time, we sum the costs of non-attention operators and the attention costs, using either prefill- or decode-attention based on the request phase. For hybrid batches, both prefill- and decode-attention costs are included.",
            "The figures demonstrate that linear regression effectively models these operator costs. This linear relationship is reasonable, as matrix multiplications and data transfers scale linearly with input vector size, and hence with the number of tokens. Decode-attention, being memory-bound, is limited by KV read speed, while prefill-attention is compute-bound, exhibiting quadratic complexity."
        ],
        "final_answer": "batch_time takes as inputs the number of tokens and the number of KV entries in the batch and predicts execution time by summing: (a) a linear cost for non-attention operators (proportional to #tokens), (b) an attention cost that is quadratic in #tokens for prefill-phase requests, and (c) an attention cost that is linear in #KV’s for decode-phase requests. For hybrid batches it includes both the prefill and decode attention terms. All coefficients and biases are learned via linear regression.",
        "relevant_elements": [
            "batch_time",
            "# tokens",
            "# KV’s"
        ],
        "id": 1039,
        "masked_question": "How does [mask1] integrate # tokens and # KV’s to predict batch execution times?",
        "masked_number": 1,
        "masked_elements": [
            "batch_time"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.07447v2_figure_2.png",
        "paperid": "2411.07447v2",
        "paper_path": "./papers/2411.07447v2.json",
        "figure_id": "2411.07447v2_figure_2.png",
        "caption": "Figure 2: Overview of InferMax. We focus on the flows with solid arrows in the paper.",
        "qtype": "Implementation_Details",
        "response": "The component masked as `batch_time(# tokens, # KV's), ...` effectively integrates the number of tokens and KV caches"
    },
    {
        "question": "How does CSP leverage batch_time outputs to refine scheduling constraints?",
        "relevant_section_ids": [
            "3",
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "To address these challenges, we adopt an alternative approach in this study, predicting batch execution times based on the number of tokens processed and the KV caches accessed (5), using results from Vidur (6).",
            "To predict batch time, we sum the costs of non-attention operators and the attention costs, using either prefill- or decode-attention based on the request phase. For hybrid batches, both prefill- and decode-attention costs are included.",
            "The CSP objective can be set to minimize total latency, utilizing our batch time prediction model from Section 3.2.",
            "Supporting an online setting, where each request r has an arrival time tr, is straightforward. We add variable τ to track accumulated batch times and set τ_{j+1} = τ_j + batch_time."
        ],
        "final_answer": "The CSP takes the batch_time predictions from the cost model and feeds them directly into its linear program.  First, those predicted per-batch execution times become the coefficients in the objective (e.g. minimizing total latency).  Second, by introducing timing variables such as τ and constraining τ_{j+1} = τ_j + batch_time, the CSP can enforce arrival-time constraints and per-request targets (e.g. Time-to-First-Token or overall latency budgets).  In this way, the estimated batch durations refine both the objective and the scheduling constraints to guarantee that any solution meets the specified performance goals.",
        "relevant_elements": [
            "CSP",
            "batch_time"
        ],
        "id": 1040,
        "masked_question": "How does [mask1] leverage [mask2] outputs to refine scheduling constraints?",
        "masked_number": 2,
        "masked_elements": [
            "CSP",
            "batch_time"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.07447v2_figure_2.png",
        "paperid": "2411.07447v2",
        "paper_path": "./papers/2411.07447v2.json",
        "figure_id": "2411.07447v2_figure_2.png",
        "caption": "Figure 2: Overview of InferMax. We focus on the flows with solid arrows in the paper.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the LDF module merge early backbone features with ASPP outputs for dense guidance?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "To overcome these challenges, we introduce the Low-level Dense Feature Extractor (LDF) module. LDF leverages early blocks of the backbone network, where low-level information associated with small/thin parts are more prominent.",
            "To capture dense features of these small/thin parts, LDF includes (a) convolutional layers to enhance the features extracted from the initial stages of the backbone (b) an upsampling layer to maintain consistent feature map size (c) Atrous Spatial Pyramid Pooling (ASPP) [7] to capture contextual information at multiple scales (see Figure 3). This enables the model to extract dense low-level features at various spatial resolutions and consider context at different scales, including context relevant to small/thin parts.",
            "LDF can be formalized as:\nwhere F₁ and F₂ are the features from the first and second block of the backbone, conv₁×₁ and conv₃×₃ are convolutions applied to those early features, ASPP(·) denotes the Atrous Spatial Pyramid Pooling block, and ⨁ represents the concatenation operation. Finally, an Upsample Convolution layer is applied to the concatenated output to yield the dense guidance map."
        ],
        "final_answer": "The LDF module first applies 1×1 and 3×3 convolutions to the features from the first two backbone blocks, then feeds the deeper one through an ASPP block. It merges (concatenates) the ASPP output with the processed shallow features and finally runs this concatenation through an upsample‐convolution to produce dense low-level guidance.",
        "relevant_elements": [
            "LDF",
            "ASPP"
        ],
        "id": 1042,
        "masked_question": "How does the [mask1] module merge early backbone features with ASPP outputs for dense guidance?",
        "masked_number": 1,
        "masked_elements": [
            "LDF"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.02858v1_figure_1.png",
        "paperid": "2411.02858v1",
        "paper_path": "./papers/2411.02858v1.json",
        "figure_id": "2411.02858v1_figure_1.png",
        "caption": "Figure 1: The recipe for OLAF, our plug-and-play framework for enhanced multi-object multi-part scene parsing:  1 Augment RGB input with object-based channels (fg/bg, boundary edges) obtained from frozen pre-trained models (MO,MEsubscript𝑀𝑂subscript𝑀𝐸M_{O},M_{E}italic_M start_POSTSUBSCRIPT italic_O end_POSTSUBSCRIPT , italic_M start_POSTSUBSCRIPT italic_E end_POSTSUBSCRIPT)  2 Use Low-level Dense Feature guidance from segmentation encoder (LDF, shaded green)  3 Employ targeted weight adaptation for stable optimization with augmented input. We show that following this recipe leads to significant gains (up to 4.04.0\\mathbf{4.0}bold_4.0 mIoU) across multiple architectures and across multiple challenging datasets.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] module, identified as LDF (Low-level Dense Feature Extractor), merges early backbone features with ASPP outputs using a concatenation operation.\n\nSpecifically, the LDF module takes features from the first (`F1`) and second (`F2`) blocks of the backbone network.\n1.  **Processing `F1`**: It applies a 3x3 convolution (`Conv3x3`) to `F1`, followed by an Upsample Convolution layer (`UpConv`) to enhance and maintain a consistent feature map size.\n2.  **Processing `F2`**: It applies a 1x1 convolution (`Conv1x1`) to `F2`, and then feeds the result into an Atrous Spatial Pyramid Pooling (ASPP) module to capture multi-scale contextual information.\n3.  **Merging**: The outputs from these two parallel pathways, the processed `F1` and the ASPP output from the processed `F2`, are then **concatenated** (`C` in the formula) to produce the final LDF output. This enables dense low-level feature guidance by combining enhanced early backbone features with multi-scale contextual information."
    },
    {
        "question": "How does feeding M_O and M_E outputs as input channels compare to auxiliary loss–based guidance methods?",
        "relevant_section_ids": [
            "2",
            "3.1"
        ],
        "relevant_context": [
            "In contrast, our work OLAF adds object segmentation and edge information directly as additional channels to the input which is observed to be more beneficial.",
            "Conventional segmentation approaches typically include auxiliary tasks to learn foreground/background [44] and edges during training [74]. However, directly including foreground/background and edges as part of the input can be thought of as a structural inductive bias for the task. These masks provide strong boundary cues throughout the optimization process. In addition, they eliminate the issue of irregular gradient flow arising from ad-hoc scaling of task-related losses [14] in existing (RGB input only) approaches."
        ],
        "final_answer": "Feeding the M_O (foreground) and M_E (edge) masks as extra input channels acts as a structural inductive bias that provides strong boundary cues throughout training, avoids the irregular gradient‐scaling issues of auxiliary‐loss methods, and is empirically more beneficial than using those cues via auxiliary losses.",
        "relevant_elements": [
            "M_O",
            "M_E"
        ],
        "id": 1043,
        "masked_question": "How does feeding [mask1] and [mask2] outputs as input channels compare to auxiliary loss–based guidance methods?",
        "masked_number": 2,
        "masked_elements": [
            "M_O",
            "M_E"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.02858v1_figure_1.png",
        "paperid": "2411.02858v1",
        "paper_path": "./papers/2411.02858v1.json",
        "figure_id": "2411.02858v1_figure_1.png",
        "caption": "Figure 1: The recipe for OLAF, our plug-and-play framework for enhanced multi-object multi-part scene parsing:  1 Augment RGB input with object-based channels (fg/bg, boundary edges) obtained from frozen pre-trained models (MO,MEsubscript𝑀𝑂subscript𝑀𝐸M_{O},M_{E}italic_M start_POSTSUBSCRIPT italic_O end_POSTSUBSCRIPT , italic_M start_POSTSUBSCRIPT italic_E end_POSTSUBSCRIPT)  2 Use Low-level Dense Feature guidance from segmentation encoder (LDF, shaded green)  3 Employ targeted weight adaptation for stable optimization with augmented input. We show that following this recipe leads to significant gains (up to 4.04.0\\mathbf{4.0}bold_4.0 mIoU) across multiple architectures and across multiple challenging datasets.",
        "qtype": "Literature_Background",
        "response": "Feeding [mask1] (foreground/background mask) and [mask2] (edge mask) outputs as input channels, as done by OLAF, compares favorably to auxiliary loss-based guidance methods in the following ways:\n\n1.  **Structural Inductive Bias:** Directly including foreground/background and edge masks as input channels acts as a structural inductive bias for the task, providing strong boundary cues throughout the entire optimization process.\n2.  **Beneficial Performance:** The paper explicitly states that adding object segmentation and edge information directly as additional channels to the input is \"observed to be more beneficial\" compared to auxiliary task or feature guidance approaches.\n3.  **Gradient Flow Stability:** It eliminates the issue of irregular gradient flow that can arise from ad-hoc scaling of task-related losses, which is a common problem in existing auxiliary loss-based methods that rely on RGB input only.\n\nIn summary, OLAF's method of incorporating these masks directly into the input channels offers more stable optimization and improved performance by providing strong boundary cues from the outset, unlike auxiliary loss-based methods that might suffer from irregular gradient flow."
    },
    {
        "question": "How does LDF's use of ASPP relate to existing multi-scale context extraction techniques?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "To overcome these challenges, we introduce the Low-level Dense Feature Extractor (LDF) module. LDF leverages early blocks of the backbone network, where low-level information associated with small/thin parts are more prominent. To capture dense features of these small/thin parts, LDF includes (a) convolutional layers to enhance the features extracted from the initial stages of the backbone (b) an upsampling layer to maintain consistent feature map size (c) Atrous Spatial Pyramid Pooling (ASPP) [7] to capture contextual information at multiple scales (see Figure 3).",
            "This enables the model to extract dense low-level features at various spatial resolutions and consider context at different scales, including context relevant to small/thin parts."
        ],
        "final_answer": "LDF incorporates Atrous Spatial Pyramid Pooling (ASPP)—a well-known multi-scale context extraction module—directly into its low-level feature extractor. By applying ASPP to early backbone features, LDF captures context at multiple dilation rates (i.e. multiple spatial scales), much as prior approaches have done for high-level features, but here specifically to enrich the representation of small and thin parts.",
        "relevant_elements": [
            "LDF",
            "ASPP"
        ],
        "id": 1044,
        "masked_question": "How does [mask1]'s use of [mask2] relate to existing multi-scale context extraction techniques?",
        "masked_number": 2,
        "masked_elements": [
            "LDF",
            "ASPP"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.02858v1_figure_1.png",
        "paperid": "2411.02858v1",
        "paper_path": "./papers/2411.02858v1.json",
        "figure_id": "2411.02858v1_figure_1.png",
        "caption": "Figure 1: The recipe for OLAF, our plug-and-play framework for enhanced multi-object multi-part scene parsing:  1 Augment RGB input with object-based channels (fg/bg, boundary edges) obtained from frozen pre-trained models (MO,MEsubscript𝑀𝑂subscript𝑀𝐸M_{O},M_{E}italic_M start_POSTSUBSCRIPT italic_O end_POSTSUBSCRIPT , italic_M start_POSTSUBSCRIPT italic_E end_POSTSUBSCRIPT)  2 Use Low-level Dense Feature guidance from segmentation encoder (LDF, shaded green)  3 Employ targeted weight adaptation for stable optimization with augmented input. We show that following this recipe leads to significant gains (up to 4.04.0\\mathbf{4.0}bold_4.0 mIoU) across multiple architectures and across multiple challenging datasets.",
        "qtype": "Literature_Background",
        "response": "LDF (Low-level Dense Feature Extractor) incorporates ASPP (Atrous Spatial Pyramid Pooling) as a crucial component to capture contextual information at multiple scales.\n\nThis design aims to address the limitations of existing multi-scale context extraction techniques, such as skip-connections or direct concatenation of early backbone outputs with the decoder. While these conventional methods help flow low-level features, the text"
    },
    {
        "question": "How does the HE Adapter reconcile histogram equalization with transformer-based image encoder adaptation methodologies?",
        "relevant_section_ids": [
            "3.1",
            "3.1.1"
        ],
        "relevant_context": [
            "To facilitate the image encoder adaptation, we design an histogram equalization adapter laterally connected with the image encoder.",
            "The internal structure of the enhanced-image adapter module is presented in Fig. 3 (a), which mainly consists of a histogram equalization, a high-frequency filter and MLP blocks.",
            "Given that the features of water are not pronounced in most challenging scenarios, we first conduct histogram equalization operation to highlight the contrast and texture of input image.",
            "The enhanced image is then passed through a high-frequency filter to extract high-frequency information beneficial for segmentation, and converted into frequency patch embedding.",
            "The patch embedding of original input image is reduced in dimension by fully-connected layer (FC) and added to the frequency patch embedding.",
            "This fused feature is mapped by individual MLP blocks and one parameter-shared MLP, and then merged with the original features of each transformer block in the SAM image encoder."
        ],
        "final_answer": "The HE-Adapt module sits alongside the SAM transformer backbone. It first applies histogram equalization to boost contrast and texture, then uses a high-frequency filter to extract frequency-domain information. This frequency patch embedding is fused (via a small FC) with the standard patch embeddings of the input image. The combined embedding is run through MLP adapter blocks and then injected into each transformer block of the frozen SAM image encoder, effectively adapting the transformer to better capture water-related features.",
        "relevant_elements": [
            "HE Adapter Module",
            "Image Encoder"
        ],
        "id": 1045,
        "masked_question": "How does the [mask1] reconcile histogram equalization with transformer-based image encoder adaptation methodologies?",
        "masked_number": 1,
        "masked_elements": [
            "HE Adapter Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.08109v1_figure_2.png",
        "paperid": "2407.08109v1",
        "paper_path": "./papers/2407.08109v1.json",
        "figure_id": "2407.08109v1_figure_2.png",
        "caption": "Figure 2: The proposed Large-Small Model Co-adapter Paradigm, which include a histogram equalization adapter, a triple-S prompt adapter and a dynamic prompt combiner. All components except the image encoder of SAM are trained for prompt generation, learning and adaptation, toward adverse waterlogging detection.",
        "qtype": "Literature_Background",
        "response": "The Image Encoder (which"
    },
    {
        "question": "How does the Dynamic Prompt Combiner's adaptive embedding mechanism align with prior weighted prompt fusion methodologies?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Dynamic Prompt Combiner",
            "Adaptive Embedding"
        ],
        "id": 1046,
        "masked_question": "How does the [mask1]'s adaptive embedding mechanism align with prior weighted prompt fusion methodologies?",
        "masked_number": 1,
        "masked_elements": [
            "Dynamic Prompt Combiner"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.08109v1_figure_2.png",
        "paperid": "2407.08109v1",
        "paper_path": "./papers/2407.08109v1.json",
        "figure_id": "2407.08109v1_figure_2.png",
        "caption": "Figure 2: The proposed Large-Small Model Co-adapter Paradigm, which include a histogram equalization adapter, a triple-S prompt adapter and a dynamic prompt combiner. All components except the image encoder of SAM are trained for prompt generation, learning and adaptation, toward adverse waterlogging detection.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does the HE Adapter Module fuse frequency patch embeddings with original features across transformer blocks?",
        "relevant_section_ids": [
            "3.1.1"
        ],
        "relevant_context": [
            "The enhanced image is then passed through a high-frequency filter to extract high-frequency information beneficial for segmentation, and converted into frequency patch embedding. The patch embedding of original input image is reduced in dimension by fully-connected layer (FC) and added to the frequency patch embedding. This fused feature is mapped by individual MLP blocks and one parameter-shared MLP, and then merged with the original features of each transformer block in the SAM image encoder."
        ],
        "final_answer": "The HE Adapter first extracts a frequency patch embedding from the histogram‐equalized image, then reduces the dimensionality of the original patch embedding via a fully connected layer and adds it to the frequency embedding. The sum is passed through per-block MLPs (plus one shared MLP) and finally merged laterally into every transformer block’s features in the SAM image encoder.",
        "relevant_elements": [
            "HE Adapter Module",
            "Transformer Block"
        ],
        "id": 1047,
        "masked_question": "How does the [mask1] fuse frequency patch embeddings with original features across transformer blocks?",
        "masked_number": 1,
        "masked_elements": [
            "HE Adapter Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.08109v1_figure_2.png",
        "paperid": "2407.08109v1",
        "paper_path": "./papers/2407.08109v1.json",
        "figure_id": "2407.08109v1_figure_2.png",
        "caption": "Figure 2: The proposed Large-Small Model Co-adapter Paradigm, which include a histogram equalization adapter, a triple-S prompt adapter and a dynamic prompt combiner. All components except the image encoder of SAM are trained for prompt generation, learning and adaptation, toward adverse waterlogging detection.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does the dynamic prompt combiner adjust weights among spatial, semantic, and style prompt embeddings during training?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "The dynamic prompt combiner (DPC) is designed to find the optimal combination of the above three types of prompts. DPC comprises three sets of dynamic weights w₁, w₂, w₃ assigned to spatial, semantic and style prompt, respectively, and an adaptive embedding Eₗₑₐᵣₙₐbₗₑ to improve potential bias.",
            "During training, the weights are dynamically updated to encourage well-performing prompts while diminishing less-effective prompts."
        ],
        "final_answer": "The DPC maintains three learnable weights (w₁, w₂, w₃) over the spatial, semantic and style embeddings, and during training it dynamically updates these weights so that prompts that boost segmentation performance receive higher weights, while those that are less effective are down-weighted. The weighted embeddings (along with an added adaptive bias embedding) are then concatenated to form the final prompt.",
        "relevant_elements": [
            "Dynamic Prompt Combiner"
        ],
        "id": 1048,
        "masked_question": "How does the [mask1] adjust weights among spatial, semantic, and style prompt embeddings during training?",
        "masked_number": 1,
        "masked_elements": [
            "Dynamic Prompt Combiner"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.08109v1_figure_2.png",
        "paperid": "2407.08109v1",
        "paper_path": "./papers/2407.08109v1.json",
        "figure_id": "2407.08109v1_figure_2.png",
        "caption": "Figure 2: The proposed Large-Small Model Co-adapter Paradigm, which include a histogram equalization adapter, a triple-S prompt adapter and a dynamic prompt combiner. All components except the image encoder of SAM are trained for prompt generation, learning and adaptation, toward adverse waterlogging detection.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does domain embedding via AdaIN in Denoising Network D_t encourage learning multiple diffusion trajectories?",
        "relevant_section_ids": [
            "3.1",
            "3.2",
            "4.4"
        ],
        "relevant_context": [
            "In Section 3.1: “We introduced a denoising diffusion model based multi-domain harmonization framework (Figure 1) which includes a domain invariant condition extractor and a denoising network. Both modules were controlled by the domain embedding which determines the diffusion trajectory.”",
            "In Section 3.2: “To correlate the domain embedding with the denoising network and the condition extractor, we utilized Adaptive Instance Normalization (AdaIN) to normalize each layer in the target layers of the modules.”",
            "In Section 4.4: “Domain embedding controls diffusion model to learn multiple diffusion trajectories at once which enables multi-domain harmonization with single model.”"
        ],
        "final_answer": "By injecting the domain embedding into each layer of the denoising U-Net via AdaIN, the network’s normalization statistics are modulated differently for each domain. This layer-wise modulation steers the denoising process along distinct, domain-specific pathways, thereby enabling the model to learn and execute multiple diffusion trajectories in a single network.",
        "relevant_elements": [
            "domain embedding",
            "AdaIN",
            "Denoising Network D_t"
        ],
        "id": 1049,
        "masked_question": "How does [mask1] via AdaIN in Denoising Network D_t encourage learning multiple diffusion trajectories?",
        "masked_number": 1,
        "masked_elements": [
            "domain embedding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.00807v1_figure_1.png",
        "paperid": "2409.00807v1",
        "paper_path": "./papers/2409.00807v1.json",
        "figure_id": "2409.00807v1_figure_1.png",
        "caption": "Figure 1: The overall framework of the proposed method with training and sampling details.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What limitations arise from using edge maps as learned domain invariant conditions?",
        "relevant_section_ids": [
            "5.1"
        ],
        "relevant_context": [
            "For our experiment, the learned domain condition edge map for the diffusion model has been only tested for the images acquired under the same field strength and harmonization focused on the imaging texture heterogeneities.",
            "In this study, we did not perform the harmonization tasks on images acquired under different field strengths or incorporating the super-resolution, nor the reliability of learned domain condition edge map has been tested in those cases.",
            "Also, proposed method was only tested on the neuroimaging data, which is the focus of this study."
        ],
        "final_answer": "Using edge maps as the domain invariant condition was only validated on images acquired at a single field strength and focusing on texture heterogeneity. It has not been tested on data from different field strengths or with super-resolution, and its reliability in those scenarios remains unverified. Moreover, this approach has only been evaluated on neuroimaging data.",
        "relevant_elements": [
            "Domain invariant condition extractor C",
            "Edge map"
        ],
        "id": 1051,
        "masked_question": "What limitations arise from using [mask1] as learned [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Edge map",
            "Domain invariant condition extractor C"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.00807v1_figure_1.png",
        "paperid": "2409.00807v1",
        "paper_path": "./papers/2409.00807v1.json",
        "figure_id": "2409.00807v1_figure_1.png",
        "caption": "Figure 1: The overall framework of the proposed method with training and sampling details.",
        "qtype": "Others",
        "response": "The question asks about the limitations of using the \"Edge map\" (mask1) as the \"Domain invariant Condition Y\" (mask2).\n\n1.  **Identify mask1 and mask2:** From the image, `mask1` is \"Edge map\" and `mask2` is \"Domain invariant Condition Y\". The diagram shows an arrow from \"Domain invariant Condition Y\" entering the Denoising Network and an L1 loss between the output of the Denoising Network and \"Edge map\". This confirms that the \"Domain invariant Condition Y\" is indeed the \"Edge map\" or a representation derived from it that the model conditions on.\n2.  **Locate relevant information in the Context:** In the \"Limitations\" section, the text explicitly mentions: \"the learned domain condition edge map for the diffusion model has been only tested for the images acquired under the same field strength and harmonization focused on the imaging texture heterogeneities. In this study, we did not perform the harmonization tasks on images acquired under different field strengths or incorporating the super-resolution, nor the reliability of learned domain condition edge map has been tested in those cases.\"\n3.  **Synthesize the limitation:** The limitation is that the \"learned domain condition edge map\" (which is the \"Edge map\" used as the \"Domain invariant Condition Y\") has only been tested for images acquired under the same field strength, and its reliability for tasks involving images acquired under different field strengths or for super-resolution tasks has not been tested.\n\n**Answer:**\nThe limitations arise from using the \"Edge map\" as learned \"Domain invariant Condition Y\" because:\nIt has only been tested for images acquired under the same field strength, and its reliability has not been tested for images acquired under different field strengths or for tasks incorporating super-resolution."
    },
    {
        "question": "How might alternative cross-attention mechanisms mitigate limitations of concat. in joint latent space?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "cross-attention",
            "concat."
        ],
        "id": 1053,
        "masked_question": "How might alternative [mask1] mechanisms mitigate limitations of concat. in joint latent space?",
        "masked_number": 1,
        "masked_elements": [
            "cross-attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.08196v1_figure_1.png",
        "paperid": "2411.08196v1",
        "paper_path": "./papers/2411.08196v1.json",
        "figure_id": "2411.08196v1_figure_1.png",
        "caption": "Figure 1: (a) UNet-based models align text embeddings with image embeddings via cross-attention layers. In contrast, DiT creates a joint latent space by combining the text embedding and image embedding, then feeds them into the denoising block. (b) DiT’s has semantic disentangled latent space, where intensities of image semantics in generated images are controlled by separate directions, which can be easily identified.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What ethical risks emerge when manipulating facial attributes via editing direction n?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "editing direction n"
        ],
        "id": 1054,
        "masked_question": "What ethical risks emerge when manipulating facial attributes via [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "editing direction n"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.08196v1_figure_1.png",
        "paperid": "2411.08196v1",
        "paper_path": "./papers/2411.08196v1.json",
        "figure_id": "2411.08196v1_figure_1.png",
        "caption": "Figure 1: (a) UNet-based models align text embeddings with image embeddings via cross-attention layers. In contrast, DiT creates a joint latent space by combining the text embedding and image embedding, then feeds them into the denoising block. (b) DiT’s has semantic disentangled latent space, where intensities of image semantics in generated images are controlled by separate directions, which can be easily identified.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What advantage motivates concatenating image and text embeddings before self-attention in diffusion transformers?",
        "relevant_section_ids": [
            "1",
            "2.1"
        ],
        "relevant_context": [
            "In contrast, DiT’s self-attention architecture projects image and text inputs into a joint latent space, potentially enabling direct link between image semantics and text prompts.",
            "Before the de-noising loops, z_t and c are combined into a joint latent embedding and input into the de-noising transformer. Here, the image and text latent embedding dimension are chosen to be the same in order to project both modalities into the joint latent space."
        ],
        "final_answer": "By concatenating the image and text embeddings up‐front, diffusion transformers build a single joint latent space where visual and linguistic features attend to each other. This unified representation enables a direct link between image semantics and text prompts and underpins the improved controllability and semantic disentanglement observed in text–to–image generation.",
        "relevant_elements": [
            "concat.",
            "Self-Attn Blocks"
        ],
        "id": 1055,
        "masked_question": "What advantage motivates [mask1] image and text embeddings before [mask2] in diffusion transformers?",
        "masked_number": 2,
        "masked_elements": [
            "concat.",
            "Self-Attn Blocks"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.08196v1_figure_1.png",
        "paperid": "2411.08196v1",
        "paper_path": "./papers/2411.08196v1.json",
        "figure_id": "2411.08196v1_figure_1.png",
        "caption": "Figure 1: (a) UNet-based models align text embeddings with image embeddings via cross-attention layers. In contrast, DiT creates a joint latent space by combining the text embedding and image embedding, then feeds them into the denoising block. (b) DiT’s has semantic disentangled latent space, where intensities of image semantics in generated images are controlled by separate directions, which can be easily identified.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What is the rationale for introducing a joint latent space instead of separate text and image embeddings?",
        "relevant_section_ids": [
            "1",
            "2.1"
        ],
        "relevant_context": [
            "Recently, Diffusion Transformers (DiT) introduced a new architecture that combines input image and text embeddings into a joint latent space and processes them through stacked self-attention layers.",
            "In contrast, DiT’s self-attention architecture projects image and text inputs into a joint latent space, potentially enabling direct link between image semantics and text prompts.",
            "Here, the image and text latent embedding dimension are chosen to be the same in order to project both modalities into the joint latent space. They are concatenated to obtain z, creating a joint latent space."
        ],
        "final_answer": "By embedding both modalities into the same space and processing them jointly with self-attention, the model can directly link image semantics and text prompts, uncover disentangled semantic subspaces, and thereby enable more precise, controllable editing than treating text and image embeddings separately.",
        "relevant_elements": [
            "joint latent space",
            "text embedding",
            "image embedding"
        ],
        "id": 1056,
        "masked_question": "What is the rationale for introducing a [mask1] instead of separate text and [mask2] embeddings?",
        "masked_number": 2,
        "masked_elements": [
            "joint latent space",
            "image embedding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.08196v1_figure_1.png",
        "paperid": "2411.08196v1",
        "paper_path": "./papers/2411.08196v1.json",
        "figure_id": "2411.08196v1_figure_1.png",
        "caption": "Figure 1: (a) UNet-based models align text embeddings with image embeddings via cross-attention layers. In contrast, DiT creates a joint latent space by combining the text embedding and image embedding, then feeds them into the denoising block. (b) DiT’s has semantic disentangled latent space, where intensities of image semantics in generated images are controlled by separate directions, which can be easily identified.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What is the rationale for clustering diverse plans into representative plans using embedding?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "After brainstorming through multiple sampling, we select m representative plans as candidates. Specifically, we first divide all k samples into m clusters using a text embedding model and the classical k-means++ algorithm (Arthur and Vassilvitskii, 2007), and then select the plan closest to the cluster centroid from each cluster (Line 3).",
            "Intuitively, the Navigator groups similar plans together and selects representative ones, ensuring a diverse set of high-level solution plans."
        ],
        "final_answer": "By embedding and clustering the sampled plans, the Navigator groups similar solutions together and picks the centroid plan from each cluster. This process ensures that the remaining candidate plans are both representative and diverse, avoiding near-duplicate strategies while covering different high-level solution approaches.",
        "relevant_elements": [
            "Diverse plans",
            "Embedding",
            "Clustering"
        ],
        "id": 1057,
        "masked_question": "What is the rationale for clustering [mask1] into representative plans using embedding?",
        "masked_number": 1,
        "masked_elements": [
            "Diverse plans"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.05001v1_figure_2.png",
        "paperid": "2409.05001v1",
        "paper_path": "./papers/2409.05001v1.json",
        "figure_id": "2409.05001v1_figure_2.png",
        "caption": "Figure 2. Overview of our PairCoder, in which a Navigator agent and a Driver agent collaborate on code generation.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to \"Diverse plans\" as indicated by the red box in the image.\n\nThe rationale for clustering \"Diverse plans\" into representative plans using embedding is described in the \"Navigator Agent\" section (3.2), specifically regarding Step 1 of proposing promising plans:\n\n1.  **Grouping similar plans:** \"the Navigator groups similar plans together\"\n2.  **Selecting representative ones:** \"and selects representative ones\"\n3.  **Ensuring diversity:** \"ensuring a diverse set of high-level solution plans.\"\n\nIn summary, the clustering process helps to group similar diverse plans generated by the LLM and then select a representative plan from each cluster. This ensures that the final set of candidate plans presented to the selection stage is diverse, covering various high-level solution strategies (e.g., brute force, greedy algorithm) while avoiding redundancy from multiple similar options."
    },
    {
        "question": "What motivates leveraging historical memory and execution feedback to decide plan changes?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "We observe that code refinement tends to get stuck in a dead-end loop if the generated code or execution feedback has already occurred in the past.",
            "Therefore, we introduce a long-term memory module to systematically store and maintain the coding and execution history under the current solution plan.",
            "Given the buggy code and its execution feedback, the current solution plan will be considered unpromising if any of them has already occurred in the historical memory, leading to a re-selection of the optimal plan."
        ],
        "final_answer": "Because code refinement can become trapped in repetitive dead-end loops when the same buggy code or feedback recurs, the framework uses historical memory and execution feedback to detect unpromising plans and trigger plan changes.",
        "relevant_elements": [
            "historical memory",
            "execution feedback"
        ],
        "id": 1058,
        "masked_question": "What motivates leveraging [mask1] and execution feedback to decide plan changes?",
        "masked_number": 1,
        "masked_elements": [
            "historical memory"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.05001v1_figure_2.png",
        "paperid": "2409.05001v1",
        "paper_path": "./papers/2409.05001v1.json",
        "figure_id": "2409.05001v1_figure_2.png",
        "caption": "Figure 2. Overview of our PairCoder, in which a Navigator agent and a Driver agent collaborate on code generation.",
        "qtype": "Design_Rationale",
        "response": "To understand what motivates leveraging [mask1] (Historical memory) and execution feedback to decide plan changes, we refer to the \"3.2. Navigator Agent\" section, specifically the part discussing \"5. Direct next iteration\".\n\n1.  **Purpose of Historical Memory and Execution Feedback in Step 5:** The text states, \"the Navigator can timely adjust the solution plan to seek a turnaround\" when the generated code fails tests. This adjustment is based on \"execution feedback and historical memory.\"\n2.  **Problem Identified:** The key motivation is explicitly stated: \"We observe that code refinement tends to get stuck in a dead-end loop if the generated code or execution feedback has already occurred in the past.\"\n3.  **Solution Strategy:** To prevent this, a \"long-term memory module\" (Historical memory) is introduced to store \"the coding and execution history.\"\n4.  **Decision-Making Heuristic:** The text explains how this works: \"Given the buggy code and its execution feedback, the current solution plan will be considered unpromising if any of them has already occurred in the historical memory... leading to a re-selection of the optimal plan in Step 2.\"\n\nTherefore, the motivation for leveraging historical memory and execution feedback to decide plan changes is **to prevent the code refinement process from getting stuck in a dead-end loop, which occurs when the system attempts to fix a bug that has already been encountered (either the same buggy code or the same execution feedback"
    },
    {
        "question": "How does clustering group plan embeddings to ensure diversity in representative plan selection?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "After brainstorming through multiple sampling, we select k representative plans as candidates. Specifically, we first divide all m samples into k clusters using a text embedding model and the classical k-means++ algorithm (Arthur and Vassilvitskii, 2007), and then select the plan closest to the cluster centroid from each cluster (Line 3).",
            "Intuitively, the Navigator groups similar plans together and selects representative ones, ensuring a diverse set of high-level solution plans."
        ],
        "final_answer": "The Navigator embeds each sampled plan into a vector space, runs k-means++ to partition the m embedded plans into k clusters, and then picks the single plan whose embedding is closest to each cluster’s centroid. By choosing one plan per cluster, it ensures that the final set of k plans covers diverse strategies rather than many similar ones.",
        "relevant_elements": [
            "Embedding",
            "Clustering"
        ],
        "id": 1059,
        "masked_question": "How does [mask1] group plan [mask2] to ensure diversity in representative plan selection?",
        "masked_number": 2,
        "masked_elements": [
            "Clustering",
            "Embedding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.05001v1_figure_2.png",
        "paperid": "2409.05001v1",
        "paper_path": "./papers/2409.05001v1.json",
        "figure_id": "2409.05001v1_figure_2.png",
        "caption": "Figure 2. Overview of our PairCoder, in which a Navigator agent and a Driver agent collaborate on code generation.",
        "qtype": "Implementation_Details",
        "response": "The `Clustering` (red box) groups the `Embedding` (blue box) by first transforming all diverse plan samples into numerical representations using a text embedding model. Then, it applies the classical **k-means++ algorithm** to these embeddings to divide the samples into distinct clusters. To ensure diversity in representative plan selection, the `Clustering` step then selects the plan closest to the cluster centroid from each of these clusters. This process ensures that the selected representative plans come from different conceptual groups of solutions, thus promoting diversity."
    },
    {
        "question": "How are test outcomes from Perform code testing used by Direct next iteration to update plan or repair strategy?",
        "relevant_section_ids": [
            "3.3",
            "3.2"
        ],
        "relevant_context": [
            "In contrast to the high-level planning of the Navigator, the Driver agent focuses all its attention on specific code tasks, including generating initial code guided by a new plan (Step 3), testing code on public test cases (Step 4), and repairing the buggy code (Step 6). … If the execution feedback is Pass, we will terminate the iterative process and consider P as the final output (Line 16); Otherwise, the Driver will deliver the current program P and execution feedback r to the Navigator, which are used to direct the next iteration in Step 5.",
            "Once the generated code P in the last iteration does not pass all the public test cases T, it is the Navigator’s turn to direct the next iteration. Instead of stubbornly persisting in a single solving path to repair the incorrect code … the Navigator can timely adjust the solution plan to seek a turnaround. … We apply a simple but effective heuristic strategy to determine whether to change the solution plan. Given the buggy code and its execution feedback, the current solution plan will be considered unpromising if any of them has already occurred in the historical memory … leading to a re-selection of the optimal plan. … Another potential iteration direction is to repair the buggy code, which pursues gradual progress without abandoning a promising solution plan. Based on the execution feedback, the Navigator leverages the reasoning ability of LLMs to propose a directive repair strategy."
        ],
        "final_answer": "After the Driver runs the code on the public tests, it classifies the outcome (Pass, Runtime Error, Wrong Answer or Time Limit Exceeded) and hands the buggy program plus the execution feedback back to the Navigator. The Navigator then consults its long-term memory to see if the same bug or feedback has already occurred under the current plan. If it has, the plan is deemed unpromising, discarded, and a new plan is selected; otherwise the Navigator uses the specific type of feedback to prompt the LLM to generate a tailored repair strategy (e.g. syntax/exception fixes for runtime errors, logic corrections for wrong answers, performance optimizations for time-outs).",
        "relevant_elements": [
            "Perform code testing",
            "Direct next iteration"
        ],
        "id": 1060,
        "masked_question": "How are test outcomes from [mask1] used by Direct next iteration to update plan or repair strategy?",
        "masked_number": 1,
        "masked_elements": [
            "Perform code testing"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.05001v1_figure_2.png",
        "paperid": "2409.05001v1",
        "paper_path": "./papers/2409.05001v1.json",
        "figure_id": "2409.05001v1_figure_2.png",
        "caption": "Figure 2. Overview of our PairCoder, in which a Navigator agent and a Driver agent collaborate on code generation.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does preprocessing use padding and deduplication to standardize contour sketches and remove redundancies?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Generated contour sketches are not directly suitable for subsequent processes. By padding, we ensure all sketches are presented in appropriate proportions.",
            "Given that most mechanical components exhibit symmetry, the same sketch may be rendered from different perspectives. We utilize ImageHash technology for deduplication."
        ],
        "final_answer": "Preprocessing first pads each contour sketch to a consistent size and aspect ratio so that all sketches are standardized in proportion. Then it applies ImageHash–based deduplication to detect and remove sketches that are effectively duplicates (e.g., arising from symmetric viewpoints), leaving only unique, informative contours for downstream processing.",
        "relevant_elements": [
            "Padding",
            "Deduplication"
        ],
        "id": 1061,
        "masked_question": "How does preprocessing use [mask1] and deduplication to standardize contour sketches and remove redundancies?",
        "masked_number": 1,
        "masked_elements": [
            "Padding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.05966v2_figure_2.png",
        "paperid": "2408.05966v2",
        "paper_path": "./papers/2408.05966v2.json",
        "figure_id": "2408.05966v2_figure_2.png",
        "caption": "Figure 2. An overview of our method. (1) Stage-One: we generate contour sketches based on 26 viewpoints (represented by colorful points) of a cube (grey) . After that, Preprocessing and View Selection export appropriate contour sketches.\n(2) Stage-Two: By receiving initial strokes and features captured by our encoder from regular contour sketch, the stroke generator produces a set of strokes, which are next fed to a differentiable rasterizer to create a vector freehand sketch.",
        "qtype": "Implementation_Details",
        "response": "The preprocessing step in Stage-One uses padding and deduplication to standardize contour sketches and remove redundancies as follows:\n\n1.  **Padding ([mask1]):** The generated contour sketches are not directly suitable for subsequent processes due to potentially varying proportions. By applying padding, the system ensures that \"all sketches are presented in appropriate proportions,\" thereby standardizing their size and aspect ratio for consistent processing.\n\n2.  **Deduplication:** Mechanical components often exhibit symmetry, leading to the same sketch being rendered from multiple different perspectives. To remove these redundant, identical sketches that result from symmetrical viewpoints, the system employs \"ImageHash technology for deduplication.\" This process identifies and eliminates duplicate sketches, ensuring that only unique and distinct contour sketches are passed on."
    },
    {
        "question": "How does stroke generator leverage encoder outputs and initial strokes to progressively generate freehand sketches?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "As illustrated in Figure 2, freehand sketch generator consists of four components: an encoder, a stroke generator, a guidance sketch generator, and a differentiable rasterizer.",
            "Our encoder utilizes CLIP ViT-B/32 (Radford et al., 2021) and an adapter to extract essential vision and semantic information from input.",
            "Our stroke generator consists of eight transformer decoder layers and two MLP decoder layers. During training, to guarantee the stroke generator learns features better, process sketches (K=8 in this paper) extracted from each intermediate layer are guided by guidance sketches generated at the corresponding intermediate step of the optimization process in the guidance sketch generator. In the inference phase, the stroke generator optimizes initial strokes generated from trainable parameters into a set of n Bézier curves. These strokes are then fed into the differentiable rasterizer to produce a vector sketch."
        ],
        "final_answer": "The stroke generator first receives the encoded contour‐sketch features from the CLIP ViT-B/32 + adapter encoder together with a small set of learned initial stroke vectors. These are fed into a sequence of eight transformer decoder layers (with two final MLP decoders) that cross-attend to the encoder outputs and iteratively refine the stroke representations. At each decoder layer, intermediate “process sketches” are extracted and compared against corresponding guidance sketches to guide learning. In inference, the same decoder stack progressively transforms the initial strokes into final Bézier‐curve control points, which are then rasterized to produce the freehand sketch.",
        "relevant_elements": [
            "Encoder",
            "Stroke Generator"
        ],
        "id": 1062,
        "masked_question": "How does [mask1] leverage [mask2] outputs and initial strokes to progressively generate freehand sketches?",
        "masked_number": 2,
        "masked_elements": [
            "Stroke Generator",
            "Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.05966v2_figure_2.png",
        "paperid": "2408.05966v2",
        "paper_path": "./papers/2408.05966v2.json",
        "figure_id": "2408.05966v2_figure_2.png",
        "caption": "Figure 2. An overview of our method. (1) Stage-One: we generate contour sketches based on 26 viewpoints (represented by colorful points) of a cube (grey) . After that, Preprocessing and View Selection export appropriate contour sketches.\n(2) Stage-Two: By receiving initial strokes and features captured by our encoder from regular contour sketch, the stroke generator produces a set of strokes, which are next fed to a differentiable rasterizer to create a vector freehand sketch.",
        "qtype": "Implementation_Details",
        "response": "The Stroke Generator [mask1] leverages the Encoder's [mask2] outputs and initial strokes to progressively generate freehand sketches as follows:\n\n1.  **Encoder's [mask2] Outputs**: The Encoder, specifically the Vision Transformer and Adapter, processes the input Contour Sketch to extract essential vision and semantic information. These extracted features serve as crucial input to the Stroke Generator.\n2.  **Initial Strokes**: The Stroke Generator receives \"Initial Strokes,\" which are generated from trainable parameters. These initial strokes act as the starting point for the sketch generation process.\n3.  **Progressive Generation**: The Stroke Generator [mask1] itself is composed of multiple (eight) Transformer Decoder layers and two MLP decoder layers, indicating a layered, progressive refinement process.\n    *   In the **inference phase**, the Stroke Generator takes the initial strokes and, informed by the features from the Encoder, iteratively optimizes them through its Transformer Decoder layers to produce a set of final Bézier curves, which represent the generated freehand sketch.\n    *   During **training**, the progressive nature is explicitly guided: \"process sketches\" (P1 to Pk, where K=8) are extracted from each intermediate layer of the Stroke Generator. These process sketches are then guided by \"guidance sketches\" (G1 to Gk) generated at corresponding intermediate steps from the Guidance Sketch Generator. This intermediate supervision"
    },
    {
        "question": "How can the view selection module adapt traditional occluding contour methods for selecting informative viewpoints?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "As shown in Figure 2 Stage-One, we can imagine placing a mechanical component within a cube and selecting centers of the six faces, midpoints of the twelve edges, and eight vertices of the cube as 26 viewpoints. Subsequently, we use PythonOCC (Paviot, 2018 ###reference_b47###), a Python wrapper for the CAD-Kernel OpenCASCADE, to infer engineering modeling information and render regular contour sketches of the model from these 26 viewpoints.",
            "Generated contour sketches are not directly suitable for subsequent processes. … Therefore, we design a viewpoint selector based on ICNet (Zhao et al., 2018 ###reference_b70###), which is trained by excellent viewpoint sketches picked out by modeling experts, to simulate the viewpoint selection task engineers face during sketching."
        ],
        "final_answer": "The module first generates occluding‐contour sketches from 26 canonical views (faces, edges, and corners of a bounding cube) via the OpenCASCADE kernel. It then applies an ICNet‐based selector—trained on expert‐labeled “good” sketches—to pick the most informative contour views for downstream sketch generation.",
        "relevant_elements": [
            "Contour Sketch Generator",
            "View Selection"
        ],
        "id": 1063,
        "masked_question": "How can the [mask1] module adapt traditional occluding contour methods for selecting informative viewpoints?",
        "masked_number": 1,
        "masked_elements": [
            "View Selection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.05966v2_figure_2.png",
        "paperid": "2408.05966v2",
        "paper_path": "./papers/2408.05966v2.json",
        "figure_id": "2408.05966v2_figure_2.png",
        "caption": "Figure 2. An overview of our method. (1) Stage-One: we generate contour sketches based on 26 viewpoints (represented by colorful points) of a cube (grey) . After that, Preprocessing and View Selection export appropriate contour sketches.\n(2) Stage-Two: By receiving initial strokes and features captured by our encoder from regular contour sketch, the stroke generator produces a set of strokes, which are next fed to a differentiable rasterizer to create a vector freehand sketch.",
        "qtype": "Literature_Background",
        "response": "The [mask1] refers to the \"View Selection\" module shown in the diagram."
    },
    {
        "question": "How does the Distribution Selection Module incorporate Softmax outputs into Gumbel-Softmax sampling?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "The output of the optimal distribution selection network is formulated as follows: a = softmax(Wᵀh + b).",
            "However, this discrete selection is non-differentiable due to the argmax operation. To tackle this, we employ the straight-through Gumbel-softmax (Jang et al., 2016): ŷ = softmax((log α + g)/τ), where τ is the temperature parameter, which controls the approximation degree between the Gumbel-softmax distribution and the discrete distribution."
        ],
        "final_answer": "The module first computes a softmax probability vector α from the MLP outputs. It then draws Gumbel noise g, adds it to log α, divides by a temperature τ, and applies softmax again. This straight-through Gumbel-Softmax step produces a differentiable, approximately one-hot selection mask from the original softmax probabilities.",
        "relevant_elements": [
            "Distribution Selection Module",
            "Gumbel-Softmax"
        ],
        "id": 1065,
        "masked_question": "How does the [mask1] incorporate Softmax outputs into Gumbel-Softmax sampling?",
        "masked_number": 1,
        "masked_elements": [
            "Distribution Selection Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.08585v1_figure_2.png",
        "paperid": "2408.08585v1",
        "paper_path": "./papers/2408.08585v1.json",
        "figure_id": "2408.08585v1_figure_2.png",
        "caption": "Figure 2. The overall framework of our proposed OptDist.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does the Alignment mechanism balance hard and soft pseudo labels when optimizing DSM?",
        "relevant_section_ids": [
            "3.5"
        ],
        "relevant_context": [
            "By normalizing the loss values generated by different SDNs for each user, the alignment mechanism can generate pseudo labels to guide the training of the DSM, reducing the difficulty of searching for the optimal sub-distribution for DSM. As Fig. 3 illustrated, when a set of loss values on possible distribution L is given, we can obtain the hard pseudo labels y^p_u from these loss values. First, the hard label y^p_u can construct a cross-entropy loss. In addition, considering that in practical applications, the classification of CLTV is imbalanced, which may result in the cross-entropy of high-value users being overlooked, making it challenging for DSM to distinguish them. Therefore, to mitigate this issue, we have introduced a variant of focal weight (Lin et al., 2017) in the cross-entropy loss.",
            "Then, we generate soft labels y^ω_u based on the losses for each sub-distribution: the larger the ℓ_{u,i}, the more suitable the i-th sub-distribution is for user u according to DLM. Then, we adopt Kullback–Leibler (KL) divergence (Bishop, [n.d.]) between DLM and DSM. The advantage of considering both hard and soft labels here lies in that a hard label can make DSM focus on DLM information while ignoring other label information, which is complemented by soft labels."
        ],
        "final_answer": "The alignment mechanism first derives a hard pseudo label (the best sub-distribution according to normalized losses) and uses it in a focal-weighted cross-entropy loss to train DSM. It also forms a soft pseudo-label distribution by normalizing the per-sub-distribution losses and applies a KL-divergence loss to align DSM’s output to this soft distribution. By summing both the focal-weighted cross-entropy on the hard labels and the KL-divergence on the soft labels, DSM is guided by both crisp and smooth supervisory signals.",
        "relevant_elements": [
            "Alignment",
            "DSM"
        ],
        "id": 1066,
        "masked_question": "How does the [mask1] mechanism balance hard and soft pseudo labels when optimizing DSM?",
        "masked_number": 1,
        "masked_elements": [
            "Alignment"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.08585v1_figure_2.png",
        "paperid": "2408.08585v1",
        "paper_path": "./papers/2408.08585v1.json",
        "figure_id": "2408.08585v1_figure_2.png",
        "caption": "Figure 2. The overall framework of our proposed OptDist.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does alignment mechanism leverage hard and soft pseudo labels to optimize DSM?",
        "relevant_section_ids": [
            "3.5"
        ],
        "relevant_context": [
            "By normalizing the loss values generated by different SDNs for each user, the alignment mechanism can generate pseudo labels to guide the training of the DSM, reducing the difficulty of searching for the optimal sub-distribution for DSM.",
            "First, the hard label y^p can construct a cross-entropy loss. In addition, considering that in practical applications, the classification of CLTV is imbalanced, which may result in the cross-entropy of high-value users being overlooked, making it challenging for DSM to distinguish them. Therefore, to mitigate this issue, we have introduced a variant of focal weight (Lin et al., 2017). The loss function can be defined as:",
            "Then, we generate soft labels based on the losses for each sub-distribution: The larger the y^ω_u, the more suitable the j-th sub-distribution is for user u according to DLM. Then, we adopt Kullback-Leibler (KL) divergence (Bishop, [n.d.]) between DLM and DSM:",
            "The advantage of considering both hard and soft labels here lies in that a hard label can make DSM focus on DLM information while ignoring other label information, which is complemented by soft labels."
        ],
        "final_answer": "The alignment mechanism first normalizes the per‐SDN losses for each user and selects the sub‐distribution with the lowest loss to form a one-hot (hard) pseudo label y^p_u, which is used to supervise the DSM via a focal-weighted cross-entropy loss. It then converts the same normalized losses into a soft label distribution y^ω_u and aligns the DSM’s output to this soft distribution by minimizing their KL divergence. In this way the hard labels force DSM to focus on the best sub‐distribution while the soft labels provide additional gradient signal from all candidates.",
        "relevant_elements": [
            "Alignment Mechanism",
            "Distribution Selection Module"
        ],
        "id": 1068,
        "masked_question": "How does [mask1] leverage hard and soft pseudo labels to optimize DSM?",
        "masked_number": 1,
        "masked_elements": [
            "Alignment Mechanism"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.08585v1_figure_2.png",
        "paperid": "2408.08585v1",
        "paper_path": "./papers/2408.08585v1.json",
        "figure_id": "2408.08585v1_figure_2.png",
        "caption": "Figure 2. The overall framework of our proposed OptDist.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does the optical-flow model interact with the temporal module to stabilize video predictions?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "“we design a novel training strategy (Fig. 4) that employs two different types of losses: A regularization loss that forces the model to produce results aligned with the image model, and an optical flow based stabilization loss as described in Section 3.2.”",
            "“The overall training loss is: L = λ L_regularize + L_stable, where λ is the weight for per-frame regularization with pretrained single-view depth or normal predictors, and L_stable is the optical flow based temporal stabilization loss defined in Sec. 3.2.”",
            "“During training, a fixed pre-trained image model and an optical flow model are also deployed aside from the trained video model. We calculate the single frame prediction and the optical flow maps in a just-in-time manner.”",
            "“We apply a pre-trained optical flow estimator to calculate the correspondence between adjacent frames for the temporal consistency stabilization. Specifically, given the predicted optical flow maps between two adjacent frames F_{i→i+1} and F_{i→i−1}, a stabilization loss between the two frames can be defined as: L_stable = …”",
            "“To prevent that [inaccurate flows] from harming the effectiveness of the loss, we add two filtering methods to curate the correctly corresponded pixels across the frames.”"
        ],
        "final_answer": "The video model contains lightweight temporal blocks inserted between the frozen image‐model layers; these temporal blocks are the only parts of the network receiving gradients during training. A pre-trained optical-flow estimator runs alongside the video model to predict pixel correspondences between adjacent frames. Those flow maps are used to warp one frame’s depth (or normal) prediction into the coordinate frame of its neighbor, and the difference between the warped prediction and the neighbor’s own prediction defines an optical-flow stabilization loss. This loss is back-propagated through the video model—specifically through the temporal blocks—thereby forcing the temporal module to learn to produce outputs that remain consistent across time.",
        "relevant_elements": [
            "Pre-trained Video Optical-Flow Model",
            "Temporal Module"
        ],
        "id": 1069,
        "masked_question": "How does the optical-flow model interact with the [mask1] to stabilize video predictions?",
        "masked_number": 1,
        "masked_elements": [
            "Temporal Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.17249v1_figure_2.png",
        "paperid": "2411.17249v1",
        "paper_path": "./papers/2411.17249v1.json",
        "figure_id": "2411.17249v1_figure_2.png",
        "caption": "Figure 2: Visualization of Our Training Pipeline. Our pipeline consists of three branches: an optical flow network that extracts optical flow from input video to guide temporal smoothness; a fixed single-frame image model for regularization, and the trained video model that integrates a fine-tuned image backbone with temporal layers.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does using randomly sampled frames influence the fixed image model's regularization consistency?",
        "relevant_section_ids": [
            "3.1",
            "4.3"
        ],
        "relevant_context": [
            "To speed up training, we randomly select one frame from the video in each iteration and calculate the regularization loss on this frame only.",
            "Interestingly, Ours all frames shows similar performance to our standard model, suggesting that single-frame regularization sufficiently maintains alignment with the image prior."
        ],
        "final_answer": "By randomly sampling a single frame per iteration for the fixed image model’s regularization loss, the training is accelerated without sacrificing consistency: single-frame regularization is sufficient to keep the video model aligned with the fixed image model’s prior.",
        "relevant_elements": [
            "Randomly Sampled Frame",
            "Fixed Image Model"
        ],
        "id": 1070,
        "masked_question": "How does using [mask1] influence the fixed image model's regularization consistency?",
        "masked_number": 1,
        "masked_elements": [
            "Randomly Sampled Frame"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.17249v1_figure_2.png",
        "paperid": "2411.17249v1",
        "paper_path": "./papers/2411.17249v1.json",
        "figure_id": "2411.17249v1_figure_2.png",
        "caption": "Figure 2: Visualization of Our Training Pipeline. Our pipeline consists of three branches: an optical flow network that extracts optical flow from input video to guide temporal smoothness; a fixed single-frame image model for regularization, and the trained video model that integrates a fine-tuned image backbone with temporal layers.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What limitations emerge when only using Pre-trained Video Optical-Flow Model for temporal consistency?",
        "relevant_section_ids": [
            "3.2",
            "5"
        ],
        "relevant_context": [
            "In practice, however, the optical flow prediction can be inaccurate or wrong due to the limitations of the pretrained model, harming the effectiveness of the loss as Fig. 3 shows.",
            "Second, while optical flow provides smoothness and temporal consistency between adjacent frames, it only account for correlations across continuous frames. It may fail to, for instance, capture consistent depth information for objects that temporarily leave and re-enter the scene."
        ],
        "final_answer": "Relying solely on a pre-trained optical-flow model can be problematic because its flow estimates are sometimes inaccurate or outright wrong—undermining the stabilization loss—and it only enforces consistency between adjacent frames, failing to capture longer-range or re-entry motions when objects leave and return to the scene.",
        "relevant_elements": [
            "Pre-trained Video Optical-Flow Model"
        ],
        "id": 1071,
        "masked_question": "What limitations emerge when only using [mask1] for temporal consistency?",
        "masked_number": 1,
        "masked_elements": [
            "Pre-trained Video Optical-Flow Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.17249v1_figure_2.png",
        "paperid": "2411.17249v1",
        "paper_path": "./papers/2411.17249v1.json",
        "figure_id": "2411.17249v1_figure_2.png",
        "caption": "Figure 2: Visualization of Our Training Pipeline. Our pipeline consists of three branches: an optical flow network that extracts optical flow from input video to guide temporal smoothness; a fixed single-frame image model for regularization, and the trained video model that integrates a fine-tuned image backbone with temporal layers.",
        "qtype": "Others",
        "response": "The [mask1] in the image refers to \"Video Optical Flows.\" The provided context discusses the use of optical flow for temporal consistency and its limitations.\n\nHere are the limitations that emerge when only using optical flow ([mask1]) for temporal consistency, as described in the text:\n\n1.  **Inaccuracy of Optical Flow Predictions:** The pre-trained optical flow model can sometimes produce inaccurate or wrong predictions, which can negatively impact the effectiveness of the temporal stabilization loss.\n2.  **Limited to Adjacent Frames:** Optical flow primarily accounts for correlations between *continuous* (adjacent) frames. This means it may not be sufficient to maintain long-term consistency across longer video sequences.\n3.  **Failure with Disappearing/Re-appearing Objects:** Due to its focus on continuous frames, optical flow may fail to capture consistent information (e.g., depth) for objects that temporarily leave the scene and then re-enter, as their correlation isn't maintained across the non-consecutive frames where they are absent."
    },
    {
        "question": "What alternatives could supplement Single Frame Image Model Output for guiding Video Model Output regularization?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "In order to satisfy both per-frame accuracy (aligning with an image model) and temporal consistency, we design a novel training strategy that employs two different types of losses: a regularization loss that forces the model to produce results aligned with the image model, and an optical flow based stabilization loss as described in Section 3.2.",
            "Specifically, given the predicted optical flow maps between two adjacent frames, we define a stabilization loss between the two frames.  To make this loss robust, we apply cycle-validation to select correctly matched pixels and filter out regions near depth edges (via a Canny detector) before computing the flow-alignment term."
        ],
        "final_answer": "Beyond the single-frame image-model regularization loss, the authors introduce an optical-flow-based temporal stabilization loss—computed using a fixed, pre-trained video optical-flow model and further refined by cycle-validation and Canny-edge filtering—to guide and regularize the video model’s output.",
        "relevant_elements": [
            "Single Frame Image Model Output",
            "Video Model Output"
        ],
        "id": 1072,
        "masked_question": "What alternatives could supplement [mask1] for guiding [mask2] regularization?",
        "masked_number": 2,
        "masked_elements": [
            "Single Frame Image Model Output",
            "Video Model Output"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.17249v1_figure_2.png",
        "paperid": "2411.17249v1",
        "paper_path": "./papers/2411.17249v1.json",
        "figure_id": "2411.17249v1_figure_2.png",
        "caption": "Figure 2: Visualization of Our Training Pipeline. Our pipeline consists of three branches: an optical flow network that extracts optical flow from input video to guide temporal smoothness; a fixed single-frame image model for regularization, and the trained video model that integrates a fine-tuned image backbone with temporal layers.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations stem from relying on Search Logs for LLM generator to create annotation guidelines?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Search Logs",
            "LLM generator"
        ],
        "id": 1073,
        "masked_question": "What limitations stem from relying on [mask1] for LLM generator to create annotation guidelines?",
        "masked_number": 1,
        "masked_elements": [
            "Search Logs"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.11860v1_figure_1.png",
        "paperid": "2409.11860v1",
        "paper_path": "./papers/2409.11860v1.json",
        "figure_id": "2409.11860v1_figure_1.png",
        "caption": "Figure 1: \nOur proposed framework works by extracting a query-product pair from our search query-click logs (1). The query (e.g. black sneakers) is then passed on to the LLM generator (2). The LLM generator creates specific annotation instructions for the given query. The query-specific annotation guidelines and the query-product pair (e.g. black sneakers and the retrieved product) are provided as input to the LLM annotator (3). Lastly, the annotated query-product pair is forwarded to the search engine evaluation module (4).",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might annotation errors from the LLM annotator propagate through Search engine evaluation and affect fairness?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "LLM annotator",
            "Search engine evaluation"
        ],
        "id": 1074,
        "masked_question": "How might annotation errors from the [mask1] propagate through Search engine evaluation and affect fairness?",
        "masked_number": 1,
        "masked_elements": [
            "LLM annotator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.11860v1_figure_1.png",
        "paperid": "2409.11860v1",
        "paper_path": "./papers/2409.11860v1.json",
        "figure_id": "2409.11860v1_figure_1.png",
        "caption": "Figure 1: \nOur proposed framework works by extracting a query-product pair from our search query-click logs (1). The query (e.g. black sneakers) is then passed on to the LLM generator (2). The LLM generator creates specific annotation instructions for the given query. The query-specific annotation guidelines and the query-product pair (e.g. black sneakers and the retrieved product) are provided as input to the LLM annotator (3). Lastly, the annotated query-product pair is forwarded to the search engine evaluation module (4).",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What advantages arise from separating the LLM generator for query-specific annotation guidelines?",
        "relevant_section_ids": [
            "1",
            "2"
        ],
        "relevant_context": [
            "Additionally, our pipeline’s modular design allows for caching and parallel processing, which is crucial for scaling up to larger systems.",
            "As illustrated with dashed lines in Fig. 2, all outputs and intermediate steps are stored in a database. This caching serves two key functions in our pipeline. Firstly, it facilitates efficient retrieval and reuse. When evaluating a new search engine configuration (or a variation of existing ones), the database is queried to retrieve relevant pieces of information, including the query requirement list, query-specific annotation guidance, textual and visual product descriptions, and relevance scores. We only compute the missing pieces of information. Secondly, it ensures consistent evaluation across different search engines, as intermediate steps (such as query-specific annotation guidelines) are computed only once and then used to evaluate various search engines."
        ],
        "final_answer": "By separating the LLM generator for query-specific guidelines into its own module, the system becomes cacheable and parallelizable. All intermediate outputs (e.g. guidelines and requirements lists) are stored once and then efficiently retrieved and reused. This avoids redundant computations when evaluating variants of the search engine and guarantees consistency across evaluations, enabling the framework to scale up to large deployments.",
        "relevant_elements": [
            "LLM generator",
            "query-specific annotation guidelines"
        ],
        "id": 1075,
        "masked_question": "What advantages arise from separating the [mask1] for query-specific annotation guidelines?",
        "masked_number": 1,
        "masked_elements": [
            "LLM generator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.11860v1_figure_1.png",
        "paperid": "2409.11860v1",
        "paper_path": "./papers/2409.11860v1.json",
        "figure_id": "2409.11860v1_figure_1.png",
        "caption": "Figure 1: \nOur proposed framework works by extracting a query-product pair from our search query-click logs (1). The query (e.g. black sneakers) is then passed on to the LLM generator (2). The LLM generator creates specific annotation instructions for the given query. The query-specific annotation guidelines and the query-product pair (e.g. black sneakers and the retrieved product) are provided as input to the LLM annotator (3). Lastly, the annotated query-product pair is forwarded to the search engine evaluation module (4).",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "Why is annotation performed by an LLM annotator before search engine evaluation?",
        "relevant_section_ids": [
            "1",
            "2"
        ],
        "relevant_context": [
            "A prerequisite for this evaluation is the availability of a large enough pool of query-product relevance labels Voorhees (2001 ###reference_b24###); Halvey et al. (2015 ###reference_b10###), which indicate whether a retrieved product is semantically relevant to the query.",
            "The LLM assigns a relevance score to the query-product pair using a set of predefined labels. In its simplest form, the output is a database with one row for each (query, product, relevance score)."
        ],
        "final_answer": "Annotation is performed first in order to generate the query–product relevance labels (the “ground truth” scores) that are required to evaluate and compare search engine performance.",
        "relevant_elements": [
            "LLM annotator",
            "Search engine evaluation"
        ],
        "id": 1076,
        "masked_question": "Why is annotation performed by a [mask1] before [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "LLM annotator",
            "Search engine evaluation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.11860v1_figure_1.png",
        "paperid": "2409.11860v1",
        "paper_path": "./papers/2409.11860v1.json",
        "figure_id": "2409.11860v1_figure_1.png",
        "caption": "Figure 1: \nOur proposed framework works by extracting a query-product pair from our search query-click logs (1). The query (e.g. black sneakers) is then passed on to the LLM generator (2). The LLM generator creates specific annotation instructions for the given query. The query-specific annotation guidelines and the query-product pair (e.g. black sneakers and the retrieved product) are provided as input to the LLM annotator (3). Lastly, the annotated query-product pair is forwarded to the search engine evaluation module (4).",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What reasoning underlies distilling GPT-4 outputs into SEA-S using Mistral-7B?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "We empirically observe that Mistral-7B and GPT-3.5 tend to simply concatenate the original contents. In contrast, GPT-4 leads them by integrating reviews in an unified format and providing detailed evidence for each argument.",
            "However, the API for GPT-4 is costly and inflexible. Inspired by Alpaca, we distill GPT-4’s excellent data standardization capabilities into open-source models."
        ],
        "final_answer": "The authors found that GPT-4 substantially outperforms open-source models (like Mistral-7B and GPT-3.5) at integrating multiple peer reviews into a unified format with detailed evidence, but using GPT-4 via its API is expensive and inflexible. Therefore, they distilled GPT-4’s superior standardization capabilities into Mistral-7B (forming SEA-S) so as to obtain high-quality, unified review outputs in a more cost-effective and flexible open-source model.",
        "relevant_elements": [
            "GPT-4",
            "SEA-S",
            "Mistral-7B"
        ],
        "id": 1077,
        "masked_question": "What reasoning underlies distilling [mask1] outputs into SEA-S using Mistral-7B?",
        "masked_number": 1,
        "masked_elements": [
            "GPT-4"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.12857v2_figure_2.png",
        "paperid": "2407.12857v2",
        "paper_path": "./papers/2407.12857v2.json",
        "figure_id": "2407.12857v2_figure_2.png",
        "caption": "Figure 2: The overall framework of SEA consists of three modules:\nStandardization, Evaluation and Analysis.",
        "qtype": "Design_Rationale",
        "response": "The reasoning underlying distilling GPT-4 outputs into SEA-S using Mistral-7B is two-fold:\n\n1.  **Leverage GPT-4's Superior Standardization Capability:** The text states, \"We empirically observe that Mistral-7B and GPT-3.5 tend to simply concatenate the original contents. In contrast, GPT-4 leads them by integrating reviews in an unified format and providing detailed evidence for each argument.\" This demonstrates that GPT-4 is highly effective at standardizing multiple peer reviews into a single, comprehensive, and consistent format.\n2.  **Mitigate GPT-4's Practical Limitations:** Despite its effectiveness, the text notes that \"the API for GPT-4 is costly and inflexible.\" Therefore, to make the data standardization process more practical, cost-effective, and flexible, its capabilities are distilled (\"Inspired by Alpaca... we distill GPT-4 s excellent data standardization capabilities into open-source models\") into an open-source model like Mistral-7B, which serves as the base for SEA-S.\n\nIn summary, the distillation is performed to leverage GPT-4's high-quality review standardization while overcoming its cost and inflexibility by enabling a more accessible and efficient open-source model (Mistral-7B in SEA-S) to perform the same task."
    },
    {
        "question": "What reasoning underlies employing SEA-A mismatch-driven self-correction to refine SEA-E reviews?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Now, we step into the Analysis module, where a mismatch score is proposed to measure the consistency between papers and their generated reviews.",
            "The smaller the absolute value of the mismatch score, the higher the consistency between the review and the paper.",
            "After SEA-A is trained, we further introduce a self-correction strategy to analyze each review generated by SEA-E. When the estimated mismatch score is larger than a pre-set threshold θ, we regenerate the review by adding the current mismatch score as additional prompt to ensure the consistency between the paper and the review."
        ],
        "final_answer": "SEA-A computes a mismatch score to quantify how much a generated review deviates from the paper’s content, under the assumption that larger deviations imply lower consistency and review quality. When this mismatch exceeds a predefined threshold, the framework automatically triggers a self-correction—re‐invoking SEA-E with the mismatch feedback—to produce a more consistent and better‐aligned review.",
        "relevant_elements": [
            "SEA-A",
            "self-correction",
            "SEA-E"
        ],
        "id": 1078,
        "masked_question": "What reasoning underlies employing [mask1] mismatch-driven self-correction to refine SEA-E reviews?",
        "masked_number": 1,
        "masked_elements": [
            "SEA-A"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.12857v2_figure_2.png",
        "paperid": "2407.12857v2",
        "paper_path": "./papers/2407.12857v2.json",
        "figure_id": "2407.12857v2_figure_2.png",
        "caption": "Figure 2: The overall framework of SEA consists of three modules:\nStandardization, Evaluation and Analysis.",
        "qtype": "Design_Rationale",
        "response": "The reasoning behind employing SEA-A mismatch-driven self-correction to refine SEA-E reviews is to **ensure and improve the consistency between the generated review (from SEA-E) and the original paper**.\n\nHere's a step-by-step breakdown from the context:\n1.  **SEA-A's Purpose:** The \"Analysis\" module (SEA-A) is designed to \"measure the consistency between papers and their generated reviews.\" It trains a lightweight regression model to estimate a \"mismatch score\".\n2.  **Mismatch Score Interpretation:** A larger absolute value of the mismatch score indicates lower consistency between the review and the paper, implying lower review quality. Conversely, a smaller absolute value means higher consistency.\n3.  **Self-Correction Mechanism:** \"After SEA-A is trained, we further introduce a self-correction strategy to analyze each review generated by SEA-E.\" If the estimated mismatch score (from SEA-A) \"is larger than a pre-set threshold,\" the review is regenerated.\n4.  **Goal of Regeneration:** The regeneration is done \"by adding the current mismatch score as additional prompt to ensure the consistency between the paper and the review.\"\n\nIn summary, SEA-A identifies how inconsistent a SEA-E generated review is with its corresponding paper. If a significant inconsistency (high mismatch) is detected, the self-correction mechanism uses this feedback to prompt SEA-E to regenerate the review, aiming to produce a more consistent and thus higher-quality review."
    },
    {
        "question": "What steps convert GPT-4's integrated multi-review outputs into SEA-S's fine-tuning dataset for Mistral-7B?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "Specifically, we first randomly select 20% of the papers from the training set along with their reviews, where m is the number of selected papers and n_i is the number of reviews corresponding to paper i.",
            "Next, for each paper i, we input all its reviews along with the customized instruction s into GPT-4, which in turn yields the standardized review r_i.",
            "In this way, we can construct the instruction dataset for the data standardization model SEA-S that takes Mistral-7B as the base model.",
            "Formally, the triplet in the dataset is <instruction, multiple reviews, standardized review>, which is further served for SFT."
        ],
        "final_answer": "They randomly sample 20% of the papers and their reviews, send each paper’s full set of reviews plus a custom instruction to GPT-4 to produce a single integrated (standardized) review, and collect for each paper the tuple (instruction, original reviews, GPT-4’s standardized review) as the SFT training examples to fine-tune Mistral-7B (SEA-S).",
        "relevant_elements": [
            "GPT-4",
            "SEA-S",
            "Mistral-7B"
        ],
        "id": 1079,
        "masked_question": "What steps convert [mask1]'s integrated multi-review outputs into SEA-S's fine-tuning dataset for Mistral-7B?",
        "masked_number": 1,
        "masked_elements": [
            "GPT-4"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.12857v2_figure_2.png",
        "paperid": "2407.12857v2",
        "paper_path": "./papers/2407.12857v2.json",
        "figure_id": "2407.12857v2_figure_2.png",
        "caption": "Figure 2: The overall framework of SEA consists of three modules:\nStandardization, Evaluation and Analysis.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does SEA-A's mismatch score inform SEA-E's regeneration mechanism during self-correction?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "After SEA-A is trained, we further introduce a self-correction strategy to analyze each review generated by SEA-E. When the estimated mismatch score is larger than a pre-set threshold, we regenerate the review by adding the current mismatch score as additional prompt to ensure the consistency between the paper and the review."
        ],
        "final_answer": "SEA-A computes a mismatch score that measures how inconsistent a generated review is with its paper. If this score exceeds a predefined threshold, the system triggers SEA-E to regenerate the review, supplying the computed mismatch score as an extra prompt to guide the new review toward better consistency.",
        "relevant_elements": [
            "SEA-A",
            "SEA-E",
            "self-correction"
        ],
        "id": 1080,
        "masked_question": "How does [mask1]'s mismatch score inform SEA-E's regeneration mechanism during self-correction?",
        "masked_number": 1,
        "masked_elements": [
            "SEA-A"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.12857v2_figure_2.png",
        "paperid": "2407.12857v2",
        "paper_path": "./papers/2407.12857v2.json",
        "figure_id": "2407.12857v2_figure_2.png",
        "caption": "Figure 2: The overall framework of SEA consists of three modules:\nStandardization, Evaluation and Analysis.",
        "qtype": "Implementation_Details",
        "response": "[mask1] refers to SEA-A.\n\n**Chain of Thought:**\n1.  **Identify [mask1]:** From the provided image and crops, [mask1] is clearly labeled as \"SEA-A\" and is highlighted by a red box.\n2.  **Locate relevant section in context:** The question asks about SEA-A's mismatch score informing SEA-E's regeneration mechanism during self-correction. I should look into the \"SEA-A: Analysis\" section of the provided text, as it discusses mismatch scores and self-correction.\n3.  **Find details about mismatch score and SEA-A:** The text states, \"Now, we step into the Analysis module, where a mismatch score is proposed to measure the consistency between papers and their generated reviews.\" and \"To estimate the mismatch score, we train a lightweight regression model SEA-A.\"\n4.  **Find details about self-correction and regeneration:** The text directly addresses this: \"After SEA-A is trained, we further introduce a self-correction strategy to analyze each review generated by SEA-E. When the estimated mismatch score is larger than a pre-set threshold , we regenerate the review by adding the current mismatch score as additional prompt to ensure the consistency between the paper and the review.\"\n\n**Answer:**\nSEA-A estimates a mismatch score that measures the consistency between a paper and its generated review. During the self-correction strategy, if this estimated mismatch score (from SEA-A) is larger than a pre-set threshold, SEA-E regenerates the review. This regeneration is informed by adding the current mismatch score as an additional prompt to guide SEA-E in ensuring greater consistency between the regenerated review and the paper."
    },
    {
        "question": "What is the motivation behind fusing semantic, driving, and context data before generating complexity-infused features?",
        "relevant_section_ids": [
            "1",
            "1"
        ],
        "relevant_context": [
            "Driving behavior, such as speed adjustments in response to poor visibility or narrow lanes, is also influenced by scene complexity. Speed and acceleration patterns adjust based on obstacles and conditions [12]. Integrating behavior data with scene information deepens our understanding of driver interactions with their environment, improving crash risk modeling.",
            "Extracting hidden context from this combined data is essential. Previous studies have shown that fusing situational and memory-based features [27], as well as road graph and motion history data [16], enhances situation awareness and motion prediction, respectively. Building on this, we incorporate feature fusion to capture both explicit and implicit features of roadway scenes."
        ],
        "final_answer": "The fusion of semantic, driving, and contextual features is motivated by the need to form a richer, more holistic representation of roadway complexity. By combining imagery-derived semantics with driver behavior and higher-level context, the model can extract both explicit and hidden (implicit) scene characteristics. This fused feature set improves our understanding of how drivers interact with complex environments and, as a result, enhances the accuracy of crash-risk prediction.",
        "relevant_elements": [
            "Semantic",
            "Driving",
            "Context"
        ],
        "id": 1,
        "masked_question": "What is the motivation behind fusing [mask1], [mask2], and context data before generating complexity-infused features?",
        "masked_number": 2,
        "masked_elements": [
            "Semantic",
            "Driving"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.17886v1_figure_1.png",
        "paperid": "2411.17886v1",
        "paper_path": "./papers/2411.17886v1.json",
        "figure_id": "2411.17886v1_figure_1.png",
        "caption": "Figure 1: The model structure. The model takes raw images as input and generates semantic, driving, and contextual features from various sources to predict the crash likelihood as the output. It consists of an encoder that learns hidden features from the semantic, driving, and contextual data, which are infused with the complexity index. The prediction model then utilizes all the available features, including the complexity-infused features, to predict the crash likelihood. Example data is shown above each feature source.",
        "qtype": "Design_Rationale",
        "response": "The motivation behind fusing semantic, driving, and context data before generating complexity-infused features is explicitly stated in the context:\n\n1.  **Holistic Approach to Roadway Complexity:** The paper aims for a \"holistic approach to studying roadway complexity by considering both imagery information, i.e., specifically, scene-level semantic and contextual features, and driving behavioral data.\" Fusing these elements allows for a more comprehensive understanding of roadway complexity.\n2.  **Learning Hidden Features/Context:** The framework \"learns hidden features from the fusion of scene-level semantic, driving-level, and contextual features.\" This fusion helps to \""
    },
    {
        "question": "What rationale supports integrating Amazon Mechanical Turk and GPT-4o for complexity index generation?",
        "relevant_section_ids": [
            "1",
            "3.3.1"
        ],
        "relevant_context": [
            "We compare the complexity index annotations from Amazon Mechanical Turk and Large Language Models (LLMs) in terms of their capability to predict crash likelihood and find that LLMs-generated annotations consistently exhibited better predictive performance. This can enhance the development of real-time crash prediction systems and inspire the integration of automated annotation tools for improved accuracy and scalability.",
            "The complexity index was generated from two sources: AI and humans. For AI, the GPT-4o-2024-08-06 model was used along with the contextual feature generation process, as shown in Fig. 3. In this approach, the model generated a complexity score on a scale from 0 to 10 to describe the complexity and demanding level of the roadway scenes.",
            "The human-generated complexity indices relied on Amazon Mechanical Turk (MTurk) for annotations. The task was designed to assess the complexity level of roadway scenes. Workers were shown image frames and asked to rate the complexity of each scene on a scale from 1 to 10. Only workers with a high approval rating, at least 500 completed tasks, and residing in the US were selected. A pilot study was conducted with 500 images, where 10 workers annotated the same image. The results showed a relatively high level of agreement among workers. Based on this, in the official round, each scene was annotated by 3 workers, and the final complexity score was determined by averaging their responses."
        ],
        "final_answer": "By collecting complexity ratings both from human annotators on Mechanical Turk and from the GPT-4o model, the authors anchor their ground‐truth in human perception while simultaneously exploiting the scalability and consistency of an automated LLM.  They then compare the two sets of scores—and find that the GPT-4o–generated complexity index not only aligns well with human judgments (as demonstrated by the high MTurk inter‐rater agreement) but also yields better crash‐prediction performance—thereby justifying the integration of both sources.",
        "relevant_elements": [
            "Amazon Mechanical Turk",
            "GPT-4o",
            "Complexity Index"
        ],
        "id": 2,
        "masked_question": "What rationale supports integrating [mask1] and GPT-4o for complexity index generation?",
        "masked_number": 1,
        "masked_elements": [
            "Amazon Mechanical Turk"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.17886v1_figure_1.png",
        "paperid": "2411.17886v1",
        "paper_path": "./papers/2411.17886v1.json",
        "figure_id": "2411.17886v1_figure_1.png",
        "caption": "Figure 1: The model structure. The model takes raw images as input and generates semantic, driving, and contextual features from various sources to predict the crash likelihood as the output. It consists of an encoder that learns hidden features from the semantic, driving, and contextual data, which are infused with the complexity index. The prediction model then utilizes all the available features, including the complexity-infused features, to predict the crash likelihood. Example data is shown above each feature source.",
        "qtype": "Design_Rationale",
        "response": "The red box [mask1] in the diagram represents the two sources through which the Complexity Index is generated: AI (specifically GPT-4o) and human annotators (via Amazon Mechanical Turk).\n\nThe rationale for integrating/comparing these two sources for complexity index generation is explicitly stated in the \"Contributions\" section of the Introduction:\n\n1.  **Comparison and Evaluation (Primary Rationale):** The authors compare the complexity index annotations from Amazon Mechanical Turk (human-generated) and Large Language Models (LLMs, specifically GPT-4o for AI-generated) to evaluate"
    },
    {
        "question": "How does the encoder integrate semantic, driving, and context features to compute the complexity index?",
        "relevant_section_ids": [
            "3.4.1"
        ],
        "relevant_context": [
            "The complexity-infused encoder uses a fully connected neural network structure with either 16 or 32 hidden neurons.",
            "The input to the network is threefold: (1) the 17 semantic features, (2) the combination of the 17 semantic features and 9 driving features, or (3) the combination of all features—17 semantic features, 9 driving features, and 19 contextual features.",
            "The input variables are normalized to a 0-1 range to ensure consistency across features and improve the stability of the model during training.",
            "After the hidden layer, a ReLU activation function is applied.",
            "The output of the network is the complexity index."
        ],
        "final_answer": "The encoder first concatenates and normalizes the chosen features (either semantic alone, semantic plus driving, or all three—semantic, driving, and contextual) into a single input vector. It then feeds this vector through a fully-connected neural network (with 16 or 32 hidden units and a ReLU activation) whose output node produces the final complexity index.",
        "relevant_elements": [
            "Encoder",
            "Complexity Index"
        ],
        "id": 3,
        "masked_question": "How does the [mask1] integrate semantic, driving, and context features to compute the complexity index?",
        "masked_number": 1,
        "masked_elements": [
            "Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.17886v1_figure_1.png",
        "paperid": "2411.17886v1",
        "paper_path": "./papers/2411.17886v1.json",
        "figure_id": "2411.17886v1_figure_1.png",
        "caption": "Figure 1: The model structure. The model takes raw images as input and generates semantic, driving, and contextual features from various sources to predict the crash likelihood as the output. It consists of an encoder that learns hidden features from the semantic, driving, and contextual data, which are infused with the complexity index. The prediction model then utilizes all the available features, including the complexity-infused features, to predict the crash likelihood. Example data is shown above each feature source.",
        "qtype": "Implementation_Details",
        "response": "The [mask1], which refers to the \"Encoder\" outlined by the red box in the diagram, integrates semantic, driving, and context features to compute the complexity index as follows:\n\n1.  **Input Features:** The encoder takes the generated features as input. This can be:\n    *   The 17 semantic features.\n    *   A combination of the 17 semantic features and 9 driving features.\n    *   A combination of all features: 17 semantic features, 9 driving features, and 19 contextual features.\n    These input variables are first normalized to a 0-1 range.\n2.  **Neural Network Structure:** The encoder itself is a fully connected neural network.\n3.  **Processing:** These normalized features are fed into this neural network, which has either 16 or 32 hidden neurons.\n4.  **Complexity-infused Features:** After the hidden layer, a ReLU activation function is applied. The resulting features at this stage are referred to as \"complexity-infused features.\"\n5.  **Output (Complexity Index):** The final output of this fully connected neural network is the \"complexity index,\" which can be treated as"
    },
    {
        "question": "How does the crash prediction module combine complexity-infused and semantic features to produce the crash likelihood output?",
        "relevant_section_ids": [
            "3.4.2"
        ],
        "relevant_context": [
            "After generating the complexity-infused features from the encoder, they were used to predict the level of crash likelihood in combination with the corresponding input feature sets.",
            "For example, if the complexity-infused features were trained on only semantic features, the input for the crash prediction model would consist of both the complexity-infused and semantic features."
        ],
        "final_answer": "The crash prediction module concatenates the complexity-infused features with the semantic features to form the input vector. This combined feature set is normalized and then fed into a prediction model (e.g., a seven-layer fully connected neural network or other classifiers), which produces the crash likelihood output.",
        "relevant_elements": [
            "Complexity-infused Features",
            "Crash Likelihood"
        ],
        "id": 4,
        "masked_question": "How does the crash prediction module combine [mask1] and semantic features to produce the [mask2] output?",
        "masked_number": 2,
        "masked_elements": [
            "Complexity-infused Features",
            "Crash Likelihood"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.17886v1_figure_1.png",
        "paperid": "2411.17886v1",
        "paper_path": "./papers/2411.17886v1.json",
        "figure_id": "2411.17886v1_figure_1.png",
        "caption": "Figure 1: The model structure. The model takes raw images as input and generates semantic, driving, and contextual features from various sources to predict the crash likelihood as the output. It consists of an encoder that learns hidden features from the semantic, driving, and contextual data, which are infused with the complexity index. The prediction model then utilizes all the available features, including the complexity-infused features, to predict the crash likelihood. Example data is shown above each feature source.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Relevance prediction task leverage Encoder and Decoder to contrast positive and negative docids?",
        "relevant_section_ids": [
            "3.3.2"
        ],
        "relevant_context": [
            "To generate high-quality pseudo-queries for the original documents, we employ a LLM using the prompt: “Given the following document {d}, generate {X} insightful queries that a reader might have after reading the content. Ensure the queries cover key concepts.” When the prompt is combined with a document d and the required number of pseudo-queries X as input, we obtain well-written pseudo-queries. They share the same docids as the input original document.",
            "Similarly, we ensure that the model tends to generate relevant docids than irrelevant ones. In the same mini-batch, the loss L_r in the t-th iteration is:"
        ],
        "final_answer": "In the relevance prediction task, each pseudo-query is first encoded by the model’s encoder, then the decoder is used to generate a distribution over candidate docids. A contrastive loss L_r is applied in each mini-batch that pushes up the generated probability of the true (positive) docid for that query and pushes down the probabilities of all other (negative) docids, thereby explicitly contrasting positive against negative docids.",
        "relevant_elements": [
            "Relevance prediction task",
            "Encoder",
            "Decoder"
        ],
        "id": 6,
        "masked_question": "How does [mask1] leverage Encoder and Decoder to contrast positive and negative docids?",
        "masked_number": 1,
        "masked_elements": [
            "Relevance prediction task"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.11504v1_figure_1.png",
        "paperid": "2407.11504v1",
        "paper_path": "./papers/2407.11504v1.json",
        "figure_id": "2407.11504v1_figure_1.png",
        "caption": "Figure 1: The bootstrapped pre-training pipeline of BootRet. (1) The initial docids ℐ𝒟0superscriptsubscriptℐ𝒟0\\mathcal{I}_{\\mathcal{D}}^{0}caligraphic_I start_POSTSUBSCRIPT caligraphic_D end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 0 end_POSTSUPERSCRIPT are obtained with the initial model parameters θ0superscript𝜃0\\theta^{0}italic_θ start_POSTSUPERSCRIPT 0 end_POSTSUPERSCRIPT. (2) To perform the t𝑡titalic_t-th iteration, we design the corpus indexing task and relevance prediction task for pre-training. We construct noisy documents and pseudo-queries with a LLM, and design contrastive losses (the yellow and the orange rectangles) and a semantic consistency loss (the green rectangle) to learn the corpus and relevance information discriminatively. After pre-training, the model updates from θt−1superscript𝜃𝑡1\\theta^{t-1}italic_θ start_POSTSUPERSCRIPT italic_t - 1 end_POSTSUPERSCRIPT to θtsuperscript𝜃𝑡\\theta^{t}italic_θ start_POSTSUPERSCRIPT italic_t end_POSTSUPERSCRIPT. (3) The bootstrapped θtsuperscript𝜃𝑡\\theta^{t}italic_θ start_POSTSUPERSCRIPT italic_t end_POSTSUPERSCRIPT is used to dynamically update the docids ℐ𝒟t−1superscriptsubscriptℐ𝒟𝑡1\\mathcal{I}_{\\mathcal{D}}^{t-1}caligraphic_I start_POSTSUBSCRIPT caligraphic_D end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_t - 1 end_POSTSUPERSCRIPT to ℐ𝒟tsuperscriptsubscriptℐ𝒟𝑡\\mathcal{I}_{\\mathcal{D}}^{t}caligraphic_I start_POSTSUBSCRIPT caligraphic_D end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_t end_POSTSUPERSCRIPT, i.e., bootstrapped docids, which are further used in the next iteration. (Figure should be viewed in color.)",
        "qtype": "Implementation_Details",
        "response": "The highlighted section, \"[mask1]\", refers to the \"Relevance prediction task\" within Step 2: Pre-training.\n\nHere's how the Relevance Prediction Task leverages the Encoder and Decoder to contrast positive and negative docids:\n\n1.  **Pseudo-Query Generation**: An LLM is used to generate pseudo-queries for original documents. Each generated pseudo-query is paired with the docid of its corresponding original document, which serves as the \"positive docid\" for that query.\n2.  **Encoder for Query Representation**: The generated pseudo-query is fed into the \"Encoder\" part of the model. The Encoder processes the query to create a rich contextual representation of it.\n3.  **Decoder for Docid Probability Generation**: The output representation from the Encoder is then passed to the \"Decoder\" (specifically, the identifier decoder as mentioned in the Model Architecture). The Decoder's role is to generate likelihood probabilities for various docids given the query.\n4.  **Contrastive Objective**: The core of contrasting positive and negative doc"
    },
    {
        "question": "How do contrastive losses complement semantic consistency loss relative to classical contrastive learning objectives?",
        "relevant_section_ids": [
            "3.3.1",
            "3.3.3"
        ],
        "relevant_context": [
            "Semantic consistency loss: It aims at maintaining overall semantic consistency between original and noisy documents.",
            "Contrastive losses for corpus indexing: Conditioned on original document–docid pairs, we encourage the model to generate a docid that corresponds to the document rather than the docids of other documents. In the same mini-batch, we aim for the model to generate the docid corresponding to the document with a higher probability than generating others. Inspired by contrastive learning Khosla et al. (2020), this loss is formalized as: … Similarly, for noisy pairs, the loss LC is: …",
            "Note, Eq. (2) and Eq. (3) ensure that the model’s probability of generating the corresponding docid is greater than generating other docids. Eq. (7) does not explicitly contrast with other docids."
        ],
        "final_answer": "The semantic consistency loss pulls the representations of an original document and its noisy variants together, ensuring they remain aligned. The contrastive losses then build on this by explicitly contrasting the correct docid against all other docids in the same batch—encouraging the model to assign higher generation probability to the positive docid and lower probability to negatives. In this way, the contrastive losses play the same role as classical contrastive learning (pulling positives together and pushing negatives apart), complementing the semantic consistency objective with stronger discrimination among similar documents.",
        "relevant_elements": [
            "contrastive losses",
            "semantic consistency loss"
        ],
        "id": 7,
        "masked_question": "How do [mask1] complement semantic consistency loss relative to classical contrastive learning objectives?",
        "masked_number": 1,
        "masked_elements": [
            "contrastive losses"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.11504v1_figure_1.png",
        "paperid": "2407.11504v1",
        "paper_path": "./papers/2407.11504v1.json",
        "figure_id": "2407.11504v1_figure_1.png",
        "caption": "Figure 1: The bootstrapped pre-training pipeline of BootRet. (1) The initial docids ℐ𝒟0superscriptsubscriptℐ𝒟0\\mathcal{I}_{\\mathcal{D}}^{0}caligraphic_I start_POSTSUBSCRIPT caligraphic_D end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 0 end_POSTSUPERSCRIPT are obtained with the initial model parameters θ0superscript𝜃0\\theta^{0}italic_θ start_POSTSUPERSCRIPT 0 end_POSTSUPERSCRIPT. (2) To perform the t𝑡titalic_t-th iteration, we design the corpus indexing task and relevance prediction task for pre-training. We construct noisy documents and pseudo-queries with a LLM, and design contrastive losses (the yellow and the orange rectangles) and a semantic consistency loss (the green rectangle) to learn the corpus and relevance information discriminatively. After pre-training, the model updates from θt−1superscript𝜃𝑡1\\theta^{t-1}italic_θ start_POSTSUPERSCRIPT italic_t - 1 end_POSTSUPERSCRIPT to θtsuperscript𝜃𝑡\\theta^{t}italic_θ start_POSTSUPERSCRIPT italic_t end_POSTSUPERSCRIPT. (3) The bootstrapped θtsuperscript𝜃𝑡\\theta^{t}italic_θ start_POSTSUPERSCRIPT italic_t end_POSTSUPERSCRIPT is used to dynamically update the docids ℐ𝒟t−1superscriptsubscriptℐ𝒟𝑡1\\mathcal{I}_{\\mathcal{D}}^{t-1}caligraphic_I start_POSTSUBSCRIPT caligraphic_D end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_t - 1 end_POSTSUPERSCRIPT to ℐ𝒟tsuperscriptsubscriptℐ𝒟𝑡\\mathcal{I}_{\\mathcal{D}}^{t}caligraphic_I start_POSTSUBSCRIPT caligraphic_D end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_t end_POSTSUPERSCRIPT, i.e., bootstrapped docids, which are further used in the next iteration. (Figure should be viewed in color.)",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does pseudo-query generation via LLM differ from earlier pseudo-query methods in generative retrieval pre-training?",
        "relevant_section_ids": [
            "1",
            "3.3.2"
        ],
        "relevant_context": [
            "For example, Zhou et al. (2022) proposed indexing- and retrieval-based pre-training tasks; document pieces or pseudo-queries are used as input, and docids (e.g., product quantization code) are predicted as output with maximum likelihood estimation (MLE). Similarly, Chen et al. (2022) proposed retrieval-based tasks, which aim to construct and learn pairs of pseudo-queries and docids (i.e., Wikipedia titles) from the corpus.",
            "To generate high-quality pseudo-queries for the original documents, we employ a LLM using the prompt: “Given the following document {d}, generate {X} insightful queries that a reader might have after reading the content. Ensure the queries cover key concepts.” When the prompt is combined with a document d and the required number of pseudo-queries X as input, we obtain well-written pseudo-queries. They share the same docids as the input original document."
        ],
        "final_answer": "Earlier generative-retrieval pre-training methods constructed pseudo-queries directly from the corpus (for example by using document snippets or titles) and paired them with docids for MLE training. In contrast, BootRet uses a large language model with a targeted prompt to generate high-quality, concept-covering pseudo-queries—resulting in more coherent and semantically rich queries than the heuristic or metadata-based queries used in prior work.",
        "relevant_elements": [
            "LLM",
            "pseudo-queries"
        ],
        "id": 8,
        "masked_question": "How does pseudo-query generation via [mask1] differ from earlier pseudo-query methods in generative retrieval pre-training?",
        "masked_number": 1,
        "masked_elements": [
            "LLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.11504v1_figure_1.png",
        "paperid": "2407.11504v1",
        "paper_path": "./papers/2407.11504v1.json",
        "figure_id": "2407.11504v1_figure_1.png",
        "caption": "Figure 1: The bootstrapped pre-training pipeline of BootRet. (1) The initial docids ℐ𝒟0superscriptsubscriptℐ𝒟0\\mathcal{I}_{\\mathcal{D}}^{0}caligraphic_I start_POSTSUBSCRIPT caligraphic_D end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 0 end_POSTSUPERSCRIPT are obtained with the initial model parameters θ0superscript𝜃0\\theta^{0}italic_θ start_POSTSUPERSCRIPT 0 end_POSTSUPERSCRIPT. (2) To perform the t𝑡titalic_t-th iteration, we design the corpus indexing task and relevance prediction task for pre-training. We construct noisy documents and pseudo-queries with a LLM, and design contrastive losses (the yellow and the orange rectangles) and a semantic consistency loss (the green rectangle) to learn the corpus and relevance information discriminatively. After pre-training, the model updates from θt−1superscript𝜃𝑡1\\theta^{t-1}italic_θ start_POSTSUPERSCRIPT italic_t - 1 end_POSTSUPERSCRIPT to θtsuperscript𝜃𝑡\\theta^{t}italic_θ start_POSTSUPERSCRIPT italic_t end_POSTSUPERSCRIPT. (3) The bootstrapped θtsuperscript𝜃𝑡\\theta^{t}italic_θ start_POSTSUPERSCRIPT italic_t end_POSTSUPERSCRIPT is used to dynamically update the docids ℐ𝒟t−1superscriptsubscriptℐ𝒟𝑡1\\mathcal{I}_{\\mathcal{D}}^{t-1}caligraphic_I start_POSTSUBSCRIPT caligraphic_D end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_t - 1 end_POSTSUPERSCRIPT to ℐ𝒟tsuperscriptsubscriptℐ𝒟𝑡\\mathcal{I}_{\\mathcal{D}}^{t}caligraphic_I start_POSTSUBSCRIPT caligraphic_D end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_t end_POSTSUPERSCRIPT, i.e., bootstrapped docids, which are further used in the next iteration. (Figure should be viewed in color.)",
        "qtype": "Literature_Background",
        "response": "The `[mask1]` in the image refers to the `LLM` (Large Language Model) component used for \"Pseudo query generation\" in the \"Relevance prediction task\" within \"Step 2: Pre-training\".\n\nEarlier pseudo-query methods for generative retrieval pre-training, as mentioned in the \"Introduction\" section, include:\n*   Zhou et al. (2022) used \"document pieces or pseudo-queries as input\" for predicting docids, but the specific generation method for these pseudo-queries is not detailed, beyond them being \"used as input\".\n*   Chen et al. (2022) proposed retrieval-based tasks \"which aim to construct and learn pairs of pseudo-queries and docids (i"
    },
    {
        "question": "How does Masking Joints contrast with feedforward Decoder processing in prior methodologies?",
        "relevant_section_ids": [
            "1",
            "3.1"
        ],
        "relevant_context": [
            "Section 1: “Later works [5, 35] enhanced the efficiency by employing neural networks that predict joint angles and robot poses in a single feed‐forward pass.”",
            "Section 3.1: “We employ a masking‐based pre‐training strategy tailored for robotic applications … Masks are selected to occlude the regions around four randomly selected robot joints … With the unmasked patches as context, a Vision Transformer encoder produces context embeddings … These context embeddings are then passed to a VIT‐based predictor, which infers embeddings for all patches of the original image … The embeddings for the masked patches … are used to compute the L1 loss during training. … This trains the encoder to infer the robot’s joint‐related information based on the surroundings.”"
        ],
        "final_answer": "Prior methods use an encoder whose output embeddings are fed directly into a decoder (Keypoint Net, Joint Net, etc.) in a single feed‐forward pass to predict joint angles and poses. In contrast, RoboPEPP’s Masking Joints pre‐training deliberately occludes regions around robot joints and trains an encoder–predictor pair: the encoder processes only the unmasked context, and the predictor must reconstruct the embeddings of the masked joint regions. This forces the network to learn to infer joint appearances and spatial relationships from surrounding cues, rather than relying on a single pass through a straightforward decoder.",
        "relevant_elements": [
            "Masking Joints",
            "Decoder"
        ],
        "id": 9,
        "masked_question": "How does [mask1] contrast with feedforward [mask2] processing in prior methodologies?",
        "masked_number": 2,
        "masked_elements": [
            "Masking Joints",
            "Decoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.17662v1_figure_1.png",
        "paperid": "2411.17662v1",
        "paper_path": "./papers/2411.17662v1.json",
        "figure_id": "2411.17662v1_figure_1.png",
        "caption": "Figure 1: Comparison of an existing robot pose estimation method [5] with our RoboPEPP framework. RoboPEPP integrates joint masking-based pre-training (b.1) to enhance the encoder’s grasp of the robot’s physical model, combined with downstream networks, and keypoint filtering (b.2) to achieve high accuracy.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Predictor enhance Joint Net training beyond traditional Encoder-Decoder schemes?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "These context embeddings are then passed to a VIT-based predictor, which infers embeddings for all P patches of the original image, denoted \\{\\hat{z}_p\\} for p = 1,…,P.",
            "Our approach differs from JEPA [3] by using context-informed masking at joint locations. While JEPA learns deeper semantic representations by randomly masking the input for tasks like object detection, we focus on encoding the robot’s physical properties by specifically masking joint regions. This trains the encoder to infer the robot’s joint-related information based on the surroundings, emulating a predictive understanding similar to how humans or animals deduce missing information about physical structures.",
            "The pre-trained encoder and predictor are then fine-tuned, where they extract embeddings E for P from images, which are used by the Joint Net and Keypoint Net to predict joint angles and 2D keypoints, respectively. To further increase occlusion robustness, random masks covering up to 20% of the image are applied during training. Consistent with Sec. 3.1, the predictor outputs all patch embeddings, including masked ones."
        ],
        "final_answer": "By inserting a Predictor between the encoder and the Joint Net, RoboPEPP forces the encoder to learn to \"hallucinate\" or predict the embeddings of masked joint regions from their surrounding context. During pre-training the Predictor reconstructs the representations of occluded joints, teaching the encoder to capture the robot’s physical structure. At fine-tuning time the Predictor supplies full patch embeddings—including those for originally occluded joints—to the Joint Net, yielding richer, context-aware features and improving joint-angle estimation beyond what a standard encoder–decoder trained only on unmasked images can achieve.",
        "relevant_elements": [
            "Predictor",
            "Joint Net"
        ],
        "id": 10,
        "masked_question": "How does [mask1] enhance Joint Net training beyond traditional Encoder-Decoder schemes?",
        "masked_number": 1,
        "masked_elements": [
            "Predictor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.17662v1_figure_1.png",
        "paperid": "2411.17662v1",
        "paper_path": "./papers/2411.17662v1.json",
        "figure_id": "2411.17662v1_figure_1.png",
        "caption": "Figure 1: Comparison of an existing robot pose estimation method [5] with our RoboPEPP framework. RoboPEPP integrates joint masking-based pre-training (b.1) to enhance the encoder’s grasp of the robot’s physical model, combined with downstream networks, and keypoint filtering (b.2) to achieve high accuracy.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does masking joints affect the encoder-predictor’s ability to infer masked joint embeddings?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "Masks are selected to occlude the regions around four randomly selected robot joints, or a random area if a joint is outside the camera’s field of view.",
            "This trains the encoder to infer the robot’s joint-related information based on the surroundings, emulating a predictive understanding similar to how humans or animals deduce missing information about physical structures."
        ],
        "final_answer": "By masking out patches around randomly selected joints, the encoder-predictor is forced to rely on contextual cues from the unmasked regions to reconstruct the embeddings of the occluded joints. This targeted masking thus teaches the model to infer joint-related embeddings from surrounding image information.",
        "relevant_elements": [
            "Masking Joints",
            "Encoder",
            "Predictor"
        ],
        "id": 11,
        "masked_question": "How does [mask1] affect the [mask2]-predictor’s ability to infer masked joint embeddings?",
        "masked_number": 2,
        "masked_elements": [
            "Masking Joints",
            "Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.17662v1_figure_1.png",
        "paperid": "2411.17662v1",
        "paper_path": "./papers/2411.17662v1.json",
        "figure_id": "2411.17662v1_figure_1.png",
        "caption": "Figure 1: Comparison of an existing robot pose estimation method [5] with our RoboPEPP framework. RoboPEPP integrates joint masking-based pre-training (b.1) to enhance the encoder’s grasp of the robot’s physical model, combined with downstream networks, and keypoint filtering (b.2) to achieve high accuracy.",
        "qtype": "Experimental_Results",
        "response": "Masking joints trains the encoder-predictor to infer the robot's joint-related information from the surrounding context. By specifically occluding regions around selected robot joints, the masking strategy forces the encoder-predictor to learn to predict the embeddings for these masked joints based on the unmasked, visible parts of the robot. This process enhances the encoder-predictor's ability to encode the robot's physical properties and deduce missing information about its physical structure, similar to how humans or animals infer obscured physical details."
    },
    {
        "question": "How do predicted keypoints and forward kinematics feed into PnP for pose computation?",
        "relevant_section_ids": [
            "3",
            "3.3"
        ],
        "relevant_context": [
            "Predicted joint angles and forward kinematics yield 3D joint coordinates, which, combined with detected 2D keypoints, are used in a PnP solver to estimate pose (Sec. 3.3).",
            "The robot’s pose is estimated using the EPnP algorithm [19  ###reference_b19###] with the filtered 2D-3D correspondences and known camera intrinsics.",
            "As keypoints are defined on joints, we obtain the 3D points corresponding to the 2D keypoints using the robot’s forward kinematics and predicted joint angles."
        ],
        "final_answer": "The Keypoint Net produces 2D keypoint detections and the Joint Net predicts joint angles, which are passed through the robot’s forward kinematics to generate corresponding 3D joint coordinates. These 2D–3D correspondences, together with known camera intrinsics, are then input into an EPnP solver to compute the robot’s pose in the camera frame.",
        "relevant_elements": [
            "Keypoint Net",
            "Forward Kinematics",
            "PnP"
        ],
        "id": 12,
        "masked_question": "How do predicted [mask1] and [mask2] feed into PnP for pose computation?",
        "masked_number": 2,
        "masked_elements": [
            "Keypoint Net",
            "Forward Kinematics"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.17662v1_figure_1.png",
        "paperid": "2411.17662v1",
        "paper_path": "./papers/2411.17662v1.json",
        "figure_id": "2411.17662v1_figure_1.png",
        "caption": "Figure 1: Comparison of an existing robot pose estimation method [5] with our RoboPEPP framework. RoboPEPP integrates joint masking-based pre-training (b.1) to enhance the encoder’s grasp of the robot’s physical model, combined with downstream networks, and keypoint filtering (b.2) to achieve high accuracy.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Emergent Feature Checking and Correction ensure trajectory smoothness and reliability?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "In addition, the framework incorporates an Emergent Feature Checking and Correction module to address emergent features that appear in the output trajectory of large VLM.",
            "By detecting and mitigating these emergent features, the module ensures that the planned trajectory remains smooth and reliable.",
            "This correction process helps maintain accurate and safe navigation by refining the trajectory to avoid being skewed by misleading or atypical data points."
        ],
        "final_answer": "Emergent Feature Checking and Correction identifies and mitigates unexpected or anomalous features in the raw trajectory output from the large VLM. By detecting these ‘‘emergent’’ artifacts and correcting them—i.e., refining the path to remove or adjust misleading or atypical points—it keeps the resulting trajectory smooth, accurate, and reliable.",
        "relevant_elements": [
            "Emergent Feature Checking and Correction",
            "Planned Trajectory"
        ],
        "id": 14,
        "masked_question": "How does [mask1] ensure trajectory smoothness and reliability?",
        "masked_number": 1,
        "masked_elements": [
            "Emergent Feature Checking and Correction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.09251v2_figure_1.png",
        "paperid": "2408.09251v2",
        "paper_path": "./papers/2408.09251v2.json",
        "figure_id": "2408.09251v2_figure_1.png",
        "caption": "Figure 1: Overview of V2X-VLM Framework. The framework integrates data from vehicle and infrastructure cameras alongside descriptive text prompts to create a comprehensive E2E system for cooperative autonomous driving. Using a large VLM as the backbone, the framework processes and synthesizes diverse input types to generate optimized trajectories. A contrastive learning technique enhances scene understanding by aligning visual and textual feature representations, while an Emergent Feature Checking and Correction module mitigates the impact of emergent abilities, ensuring accurate and reliable trajectory planning outcomes.",
        "qtype": "Experimental_Results",
        "response": "The [mask1], which is the \"Emergent Feature Checking and Correction\" module, ensures trajectory smoothness and reliability by detecting and mitigating emergent features that appear in the output trajectory of the large VLM. This correction process refines the trajectory to avoid being skewed by misleading or atypical data points, thus maintaining accurate and safe navigation."
    },
    {
        "question": "What are the limitations of Contrastive Learning in ensuring robust multimodal alignment under noisy infrastructure data?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Contrastive Learning"
        ],
        "id": 15,
        "masked_question": "What are the limitations of [mask1] in ensuring robust multimodal alignment under noisy infrastructure data?",
        "masked_number": 1,
        "masked_elements": [
            "Contrastive Learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.09251v2_figure_1.png",
        "paperid": "2408.09251v2",
        "paper_path": "./papers/2408.09251v2.json",
        "figure_id": "2408.09251v2_figure_1.png",
        "caption": "Figure 1: Overview of V2X-VLM Framework. The framework integrates data from vehicle and infrastructure cameras alongside descriptive text prompts to create a comprehensive E2E system for cooperative autonomous driving. Using a large VLM as the backbone, the framework processes and synthesizes diverse input types to generate optimized trajectories. A contrastive learning technique enhances scene understanding by aligning visual and textual feature representations, while an Emergent Feature Checking and Correction module mitigates the impact of emergent abilities, ensuring accurate and reliable trajectory planning outcomes.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might Emergent Feature Checking and Correction introduce biases or delay in real-time trajectory adjustments during emergencies?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Emergent Feature Checking and Correction"
        ],
        "id": 16,
        "masked_question": "How might [mask1] introduce biases or delay in real-time trajectory adjustments during emergencies?",
        "masked_number": 1,
        "masked_elements": [
            "Emergent Feature Checking and Correction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.09251v2_figure_1.png",
        "paperid": "2408.09251v2",
        "paper_path": "./papers/2408.09251v2.json",
        "figure_id": "2408.09251v2_figure_1.png",
        "caption": "Figure 1: Overview of V2X-VLM Framework. The framework integrates data from vehicle and infrastructure cameras alongside descriptive text prompts to create a comprehensive E2E system for cooperative autonomous driving. Using a large VLM as the backbone, the framework processes and synthesizes diverse input types to generate optimized trajectories. A contrastive learning technique enhances scene understanding by aligning visual and textual feature representations, while an Emergent Feature Checking and Correction module mitigates the impact of emergent abilities, ensuring accurate and reliable trajectory planning outcomes.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations might arise from multi-scale alignment on extremely small or blurred lesions?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Multi-Scale Fine-Grained Mask-Attribute Alignment"
        ],
        "id": 17,
        "masked_question": "What limitations might arise from [mask1] on extremely small or blurred lesions?",
        "masked_number": 1,
        "masked_elements": [
            "Multi-Scale Fine-Grained Mask-Attribute Alignment"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.15744v1_figure_1.png",
        "paperid": "2410.15744v1",
        "paper_path": "./papers/2410.15744v1.json",
        "figure_id": "2410.15744v1_figure_1.png",
        "caption": "Figure 1: Overview of the training and inference framework of Malenia. The key contributions of our work are two simple but effective designs: the Multi-scale Fine-Grained Mask-Attribute Alignment and the Cross-Modal Knowledge Injection module. Incorporating these designs empowers our vision-language pre-training framework, resulting in a strong zero-shot segmentation model.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates using multi-scale mask-attribute alignment for fine-grained lesion segmentation?",
        "relevant_section_ids": [
            "1",
            "3.1"
        ],
        "relevant_context": [
            "Malenia first leverages multi-scale mask representations with inherent boundary information to capture diverse lesion regions, then matches fine-grained visual features of lesions with text embeddings, effectively bridging the gap between the contrastive pre-training task and the per-pixel dense prediction task.",
            "Existing methods (Jiang et al., 2024; Lin et al., 2024) overlook the advantage of leveraging multi-scale visual features during cross-modal alignment. In contrast, we match the hierarchical mask token embeddings from different Transformer decoder blocks with text features. This approach enables the model to accurately capture and segment across a range of mask sizes. ... This variation in feature resolution across blocks ensures mask-text alignment at different scales, which is crucial for segmenting classes with large size variations, such as tumors."
        ],
        "final_answer": "Multi-scale mask-attribute alignment is motivated by the need to bridge the gap between image‐level contrastive pre-training and per-pixel segmentation, by capturing boundary-rich, lesion-level features at multiple scales. This allows the model to precisely localize and segment lesions of varying sizes and shapes, delivering fine-grained segmentation even for large or irregular tumors.",
        "relevant_elements": [
            "Multi-Scale Fine-Grained Mask-Attribute Alignment"
        ],
        "id": 19,
        "masked_question": "What motivates using [mask1] for fine-grained lesion segmentation?",
        "masked_number": 1,
        "masked_elements": [
            "Multi-Scale Fine-Grained Mask-Attribute Alignment"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.15744v1_figure_1.png",
        "paperid": "2410.15744v1",
        "paper_path": "./papers/2410.15744v1.json",
        "figure_id": "2410.15744v1_figure_1.png",
        "caption": "Figure 1: Overview of the training and inference framework of Malenia. The key contributions of our work are two simple but effective designs: the Multi-scale Fine-Grained Mask-Attribute Alignment and the Cross-Modal Knowledge Injection module. Incorporating these designs empowers our vision-language pre-training framework, resulting in a strong zero-shot segmentation model.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What reasoning underlies integrating deep fusion in the Cross-Modal Knowledge Injection module?",
        "relevant_section_ids": [
            "1",
            "3.2"
        ],
        "relevant_context": [
            "Furthermore, we propose a novel Cross-Modal Knowledge Injection (CMKI) module in Malenia, inspired by the observation that visual and textual embeddings, after feature alignment, are complementary and can mutually reinforce each other.",
            "The deep fusion of vision and language offers two key benefits: 1) Mask representations are enriched with textual information from language models, resulting in more context-aware segmentation. 2) Text embeddings enhance their descriptive capabilities by attending to visual features, enabling segmentation conditioned on specific text prompts."
        ],
        "final_answer": "Malenia integrates deep fusion in its CMKI module because visual and textual embeddings are complementary and can mutually reinforce each other. By deeply fusing mask tokens with attribute embeddings, the module enriches mask representations with contextual language information for more context-aware segmentation, and simultaneously refines text embeddings with visual cues to support segmentation conditioned on textual prompts.",
        "relevant_elements": [
            "Cross-Modal Knowledge Injection module",
            "Deep Fusion"
        ],
        "id": 20,
        "masked_question": "What reasoning underlies integrating [mask1] in the Cross-Modal Knowledge Injection module?",
        "masked_number": 1,
        "masked_elements": [
            "Deep Fusion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.15744v1_figure_1.png",
        "paperid": "2410.15744v1",
        "paper_path": "./papers/2410.15744v1.json",
        "figure_id": "2410.15744v1_figure_1.png",
        "caption": "Figure 1: Overview of the training and inference framework of Malenia. The key contributions of our work are two simple but effective designs: the Multi-scale Fine-Grained Mask-Attribute Alignment and the Cross-Modal Knowledge Injection module. Incorporating these designs empowers our vision-language pre-training framework, resulting in a strong zero-shot segmentation model.",
        "qtype": "Design_Rationale",
        "response": "The integration of the [mask1] (Deep Fusion module) within the Cross-Modal Knowledge Injection (CMKI) module is based on the reasoning that visual (mask tokens) and textual (attribute embeddings) features are complementary and can mutually reinforce each other.\n\nSpecifically, the \"deep fusion\" within the CMKI module serves to:\n1.  **Enrich Mask Representations:** By incorporating textual information from the attribute embeddings, the mask representations become more context-aware, leading"
    },
    {
        "question": "What is the motivation behind concatenating Mean Hand Gesture Feature with Text Embedding?",
        "relevant_section_ids": [
            "1",
            "3.3"
        ],
        "relevant_context": [
            "To tackle issue (b), in the second stage, we optimize the text embedding for each image by integrating the hand gesture representation in the first stage to ensure alignment between text and hand image.",
            "In the second stage of training, the main objective is to integrate text embedding with hand gesture features to facilitate the diffusion model to generate realistic hand images."
        ],
        "final_answer": "The Mean Hand Gesture Feature is concatenated with the text embedding in order to inject hand‐specific gesture information into the text condition, thereby aligning the textual description with the corresponding hand appearance and guiding the diffusion model to generate anatomically correct, realistic hand images.",
        "relevant_elements": [
            "Mean Hand Gesture Feature",
            "Text Embedding"
        ],
        "id": 21,
        "masked_question": "What is the motivation behind concatenating [mask1] with [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Mean Hand Gesture Feature",
            "Text Embedding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.15461v2_figure_2.png",
        "paperid": "2408.15461v2",
        "paper_path": "./papers/2408.15461v2.json",
        "figure_id": "2408.15461v2_figure_2.png",
        "caption": "Figure 2: The proposed Hand1000 is designed with a three-stage training process. In Stage I, the primary objective is to compute mean hand gesture feature from images. Stage II builds on this by concatenating the mean hand gesture feature obtained in Stage I with the corresponding text embeddings. These concatenated features are then mapped into a fused embedding, which is further enhanced by linearly fusing it with the original text embedding, resulting in a double-fused embedding. This embedding is optimized using a reconstruction loss through a frozen Stable Diffusion model, ensuring that the final embedding is well-optimized. Stage III involves fine-tuning the Stable Diffusion model for image generation, leveraging the frozen optimized embedding obtained from Stage II.",
        "qtype": "Design_Rationale",
        "response": "In the diagram, **[mask1]** refers to the \"Mean Hand Gesture Feature\" and **[mask2]** refers to the \"Text Embedding.\"\n\nThe motivation behind concatenating the Mean Hand Gesture Feature with the Text Embedding is explained in Stage II of the \"Method\" section and also in the \"Introduction\" section.\n\n1.  **Addressing issue (b) (from Introduction):** Text-to-image models often struggle to accurately comprehend text containing hand-related information (e.g., \"phone call gesture\") and associate it with corresponding hand images, leading to unrealistic hand appearances.\n2.  **Integrating hand gesture representation (from Introduction & Stage II):** To overcome this limitation, the Mean Hand Gesture Feature (extracted in Stage I to provide enhanced hand prior knowledge) is integrated with the Text Embedding.\n3.  **Ensuring alignment (from Introduction & Stage II):** This concatenation aims to optimize the text embedding by blending it with the specific hand gesture representation. The ultimate goal is to \"ensure alignment between text and hand image,\" making the text-to-image diffusion model better equipped to generate anatomically correct and realistic hands that accurately reflect the textual description.\n\nIn summary, the concatenation is performed to integrate explicit hand gesture information into the text embedding, thereby enhancing the model's understanding of hand-related textual prompts and improving its ability to generate realistic hand images."
    },
    {
        "question": "What reasoning guides freezing Optimized Embedding when fine-tuning the Stable Diffusion Model?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "In line with image editing works (Kawar et al. 2023 ###reference_b16###), it is essential to keep the Optimized Embedding frozen at this stage to preserve the hand gesture information integrated during the second phase.",
            "This freezing strategy ensures that the embedding remains consistently aligned with the hand features and continues to accurately match the hand images."
        ],
        "final_answer": "The Optimized Embedding is kept frozen during fine-tuning to preserve the hand gesture information integrated in Stage II and to ensure the embedding stays aligned with the hand features and accurately matches the hand images.",
        "relevant_elements": [
            "Optimized Embedding",
            "Stable Diffusion Model"
        ],
        "id": 22,
        "masked_question": "What reasoning guides freezing [mask1] when fine-tuning the Stable Diffusion Model?",
        "masked_number": 1,
        "masked_elements": [
            "Optimized Embedding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.15461v2_figure_2.png",
        "paperid": "2408.15461v2",
        "paper_path": "./papers/2408.15461v2.json",
        "figure_id": "2408.15461v2_figure_2.png",
        "caption": "Figure 2: The proposed Hand1000 is designed with a three-stage training process. In Stage I, the primary objective is to compute mean hand gesture feature from images. Stage II builds on this by concatenating the mean hand gesture feature obtained in Stage I with the corresponding text embeddings. These concatenated features are then mapped into a fused embedding, which is further enhanced by linearly fusing it with the original text embedding, resulting in a double-fused embedding. This embedding is optimized using a reconstruction loss through a frozen Stable Diffusion model, ensuring that the final embedding is well-optimized. Stage III involves fine-tuning the Stable Diffusion model for image generation, leveraging the frozen optimized embedding obtained from Stage II.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to the \"Optimized Embedding\".\n\nBased on the \"Stage III: Stable Diffusion Fine-tuning\" section in the context:\n\"In the final stage of training, the Optimized Embedding obtained in Stage II is used as a condition to fine-tune the Stable Diffusion model... it is essential to keep the Optimized Embedding frozen at this stage to preserve the hand gesture information integrated during the second phase. This freezing strategy ensures that the embedding remains consistently aligned with the hand features and continues to accurately match the hand images.\"\n\nTherefore, the reasoning for freezing the Optimized Embedding in Stage III is:\n*   To preserve the hand gesture information integrated during Stage II.\n*   To ensure that the embedding remains consistently aligned with the hand features.\n*   To ensure it continues to accurately match the hand images."
    },
    {
        "question": "How does the Gesture Recognition Model aggregate frame-specific features into the Mean Hand Gesture Feature?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "To extract hand features associated with this gesture, we feed the images into a gesture recognition model (i.e. Mediapipe hands (Zhang et al. 2020 ###reference_b59###)) to obtain features from the final layer of the network.",
            "Subsequently, these features are averaged to obtain a Mean Hand Gesture Feature representation of the gesture, which is used for training in the following stages."
        ],
        "final_answer": "The model takes the per‐frame features output by the gesture recognition network and computes their element‐wise average to form the Mean Hand Gesture Feature.",
        "relevant_elements": [
            "Gesture Recognition Model",
            "Mean Hand Gesture Feature"
        ],
        "id": 23,
        "masked_question": "How does the [mask1] aggregate frame-specific features into the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Gesture Recognition Model",
            "Mean Hand Gesture Feature"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.15461v2_figure_2.png",
        "paperid": "2408.15461v2",
        "paper_path": "./papers/2408.15461v2.json",
        "figure_id": "2408.15461v2_figure_2.png",
        "caption": "Figure 2: The proposed Hand1000 is designed with a three-stage training process. In Stage I, the primary objective is to compute mean hand gesture feature from images. Stage II builds on this by concatenating the mean hand gesture feature obtained in Stage I with the corresponding text embeddings. These concatenated features are then mapped into a fused embedding, which is further enhanced by linearly fusing it with the original text embedding, resulting in a double-fused embedding. This embedding is optimized using a reconstruction loss through a frozen Stable Diffusion model, ensuring that the final embedding is well-optimized. Stage III involves fine-tuning the Stable Diffusion model for image generation, leveraging the frozen optimized embedding obtained from Stage II.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the hyperparameter λ influence the linear fusion of Fused Embedding and Text Embedding?",
        "relevant_section_ids": [
            "3.3",
            "3.5"
        ],
        "relevant_context": [
            "A linear fusion of the fused embedding with the original text embeddings is subsequently performed to obtain the Double Fused Embedding: where λ is the hyperparameter,  is Double Fused Embedding,  is Text Embedding, and  is Fused Embedding.",
            "The Text Embedding and the Fused Embedding are linearly fused to produce the Double Fused Embedding: where λ is the hyperparameter,  is Double Fused Embedding,  is Text Embedding, and  is Fused Embedding."
        ],
        "final_answer": "λ controls the relative weighting between the original text embedding and the fused embedding in forming the double fused embedding: the text embedding is scaled by λ and the fused embedding by (1−λ).",
        "relevant_elements": [
            "λ",
            "Fused Embedding",
            "Text Embedding"
        ],
        "id": 24,
        "masked_question": "How does the hyperparameter [mask1] influence the linear fusion of Fused Embedding and Text Embedding?",
        "masked_number": 1,
        "masked_elements": [
            "λ"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.15461v2_figure_2.png",
        "paperid": "2408.15461v2",
        "paper_path": "./papers/2408.15461v2.json",
        "figure_id": "2408.15461v2_figure_2.png",
        "caption": "Figure 2: The proposed Hand1000 is designed with a three-stage training process. In Stage I, the primary objective is to compute mean hand gesture feature from images. Stage II builds on this by concatenating the mean hand gesture feature obtained in Stage I with the corresponding text embeddings. These concatenated features are then mapped into a fused embedding, which is further enhanced by linearly fusing it with the original text embedding, resulting in a double-fused embedding. This embedding is optimized using a reconstruction loss through a frozen Stable Diffusion model, ensuring that the final embedding is well-optimized. Stage III involves fine-tuning the Stable Diffusion model for image generation, leveraging the frozen optimized embedding obtained from Stage II.",
        "qtype": "Implementation_Details",
        "response": "The hyperparameter [mask1], represented by `λ` in the linear fusion formula `Double Fused Embedding = (Fused Embedding * (1 - λ)) + (Text Embedding * λ)`, directly influences the weighting or contribution of the Fused Embedding and the Text Embedding to the resulting Double Fused Embedding.\n\nHere's how it works:\n*   **When `λ` is close to 0:** The term `(Text Embedding * λ)` approaches 0, and the term `(Fused Embedding * (1 - λ))` approaches `Fused Embedding`. This means the Double Fused Embedding will be primarily dominated by the Fused Embedding, which itself is derived from the concatenation of the Mean Hand Gesture Feature and the Text Embedding.\n*   **When `λ` is close to 1:** The term `(Text Embedding * λ)` approaches `Text Embedding`, and the term `(Fused Embedding * (1 - λ))` approaches 0. This means the Double Fused Embedding will be primarily dominated by the original Text Embedding.\n*   **When `λ` is between 0 and 1 (e.g., 0.5):** The Double Fused Embedding becomes a weighted average of the Fused Embedding and the Text Embedding, with `λ` controlling their respective proportions.\n\n"
    },
    {
        "question": "How does the Label retrieval module apply thresholding on CLAP Audio Encoder embeddings for audio label selection?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "The input audio is then fed into CLAP’s audio encoder to obtain audio embedding. The cosine similarities between the text embeddings and the audio embedding are calculated.",
            "Only labels whose similarity exceeds a threshold are adopted as the audio-label l_a. Here, the threshold is a predefined constant set between 0 and 1, K represents the number of label categories, and 1 is assigned if a certain label is detected, while 0 is assigned if it is not."
        ],
        "final_answer": "The module computes cosine similarities between the CLAP audio embedding and each text embedding (obtained by prompting “this is sound of {label name}”). It then applies a fixed threshold (a constant between 0 and 1) and selects only those labels whose similarity score exceeds this threshold as the audio labels.",
        "relevant_elements": [
            "Label retrieval",
            "CLAP Audio Encoder"
        ],
        "id": 25,
        "masked_question": "How does the [mask1] module apply thresholding on [mask2] embeddings for audio label selection?",
        "masked_number": 2,
        "masked_elements": [
            "Label retrieval",
            "CLAP Audio Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.11729v1_figure_2.png",
        "paperid": "2409.11729v1",
        "paper_path": "./papers/2409.11729v1.json",
        "figure_id": "2409.11729v1_figure_2.png",
        "caption": "Figure 2: Overview of the proposed method DETECLAP. To enhance CAV-MAE with object information, we apply CLAP and object detector to the videos in the dataset, thereby acquiring audio-visual labels. Based on these labels, we train CAV-MAE with audio-visual label prediction loss.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] module, \"Label retrieval\", applies thresholding on the audio embedding produced by the [mask2] module, \"CLAP Audio Encoder\", by performing the following steps:\n\n1.  **Calculate cosine similarities**: The audio embedding (output of the CLAP Audio Encoder) is compared with pre-obtained text embeddings of candidate audio label names (generated by the CLAP Text Encoder using prompts like \"this is sound of {label name}\"). Cosine similarities are calculated between the audio embedding and each text embedding.\n2.  **Apply threshold**: Only the labels whose calculated cosine similarity with the audio embedding exceeds a predefined constant threshold are adopted as the audio labels. If a label's similarity is above the threshold, it is assigned a value of 1 (detected); otherwise, it's 0 (not detected)."
    },
    {
        "question": "How does Label Prediction Loss back-propagate through the Cross-modal Encoder to adjust audio-visual label predictions?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "The audio-visual label prediction loss is calculated using the audio-visual labels y. Given the mean-pooled vectors \\bar{Z}_v and \\bar{Z}_a in Eq (3), we add a single linear perceptron layer with weight matrices W_v and W_a and a sigmoid activation function σ to enable the vectors to recognize objects.",
            "We train the CAV-MAE with object information by optimizing the loss: L_total = L_c + L_m + λ (L_v2l + L_a2l)."
        ],
        "final_answer": "The label prediction losses L_v2l and L_a2l are computed on top of linear classifier heads attached to the mean-pooled outputs of the cross-modal encoder. During training, the gradients of these losses flow backward through the sigmoid and linear layers into the mean-pooled vectors and further through the cross-modal encoder itself. This back-propagation updates both the classifier weights and the cross-modal encoder parameters so that its representations become more discriminative for audio-visual object labels.",
        "relevant_elements": [
            "Label Prediction Loss",
            "Cross-modal Encoder"
        ],
        "id": 26,
        "masked_question": "How does [mask1] back-propagate through the Cross-modal Encoder to adjust audio-visual label predictions?",
        "masked_number": 1,
        "masked_elements": [
            "Label Prediction Loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.11729v1_figure_2.png",
        "paperid": "2409.11729v1",
        "paper_path": "./papers/2409.11729v1.json",
        "figure_id": "2409.11729v1_figure_2.png",
        "caption": "Figure 2: Overview of the proposed method DETECLAP. To enhance CAV-MAE with object information, we apply CLAP and object detector to the videos in the dataset, thereby acquiring audio-visual labels. Based on these labels, we train CAV-MAE with audio-visual label prediction loss.",
        "qtype": "Implementation_Details",
        "response": "The \"Label Prediction Loss $L_{v2l}"
    },
    {
        "question": "How does audio-visual label prediction loss extend CAV-MAE's contrastive learning framework?",
        "relevant_section_ids": [
            "1",
            "3.1"
        ],
        "relevant_context": [
            "Specifically, DETECLAP introduces an audio-visual prediction loss during training, allowing the model to predict hundreds of audio-visual object labels from the extracted features.",
            "The audio-visual label prediction loss is calculated using the audio-visual labels y. Given the mean-pooled vectors \\bar{z}_v and \\bar{z}_a in Eq (3), we add a single linear perceptron layer with weight matrices W_v and W_a and a sigmoid activation function σ to enable the vectors \\bar{z}_v and \\bar{z}_a to recognize objects: \\hat{y}_v = σ(W_v \\bar{z}_v), \\hat{y}_a = σ(W_a \\bar{z}_a), where L_{v2l} and L_{a2l} are visual-to-label and audio-to-label binary cross-entropy losses. We train the CAV-MAE with object information by optimizing the loss: L = L_c + L_m + L_{v2l} + L_{a2l}."
        ],
        "final_answer": "DETECLAP augments CAV-MAE’s original contrastive and reconstruction objectives by adding an auxiliary audio-visual label prediction loss. After mean-pooling the cross-modal audio and visual embeddings, it passes each through a lightweight linear+sigmoid head to predict object labels, then includes the resulting audio-to-label and visual-to-label binary cross-entropy losses alongside the contrastive loss. This encourages the model not only to align audio and visual representations but also to learn fine-grained object semantics.",
        "relevant_elements": [
            "audio-visual label prediction loss",
            "CAV-MAE",
            "contrastive learning"
        ],
        "id": 27,
        "masked_question": "How does [mask1] extend CAV-MAE's contrastive learning framework?",
        "masked_number": 1,
        "masked_elements": [
            "audio-visual label prediction loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.11729v1_figure_2.png",
        "paperid": "2409.11729v1",
        "paper_path": "./papers/2409.11729v1.json",
        "figure_id": "2409.11729v1_figure_2.png",
        "caption": "Figure 2: Overview of the proposed method DETECLAP. To enhance CAV-MAE with object information, we apply CLAP and object detector to the videos in the dataset, thereby acquiring audio-visual labels. Based on these labels, we train CAV-MAE with audio-visual label prediction loss.",
        "qtype": "Literature_Background",
        "response": "The masked region, \"Label Prediction Loss L_v2l + L"
    },
    {
        "question": "How does Spatial Clue Aggregator enhance or reinterpret PoseNet's channel reduction strategy?",
        "relevant_section_ids": [
            "2.3",
            "3.3"
        ],
        "relevant_context": [
            "“As shown in Fig. 2, the model processes channel-wise concatenated monocular video frames, which are then passed through several convolutional layers for channel reduction, followed by an average pooling layer to produce a tensor of shape … This tensor, representing a combination of three Euler angles and three translational components, lacks interpretability for geometric modeling and robustness in scenarios involving moving objects.” (Section 2.3)",
            "“Having obtained the feature flow S_i, absolute feature position P_i, their corresponding confidence C_i, and the downsampled dense point cloud X_i, we proceed to encode them into a homogeneous positional embedding space E_i^p. First, we normalize S_i, P_i and X_i into the range [−1,1] using linear mapping, facilitating a uniform feature representation across different scales. Subsequently, these three positional priors are integrated into positional embeddings E_i^p as follows: E_i^p = W_{p2}(ReLU(W_{p1}([S_i^norm, P_i^norm, X_i^norm]))), where W_{p1} and W_{p2} are two consecutive convolutional layers with learnable parameters that map 2D or 3D position vectors into a higher embedding dimension.” (Section 3.3)"
        ],
        "final_answer": "Whereas traditional PoseNet applies generic convolutional layers purely to shrink (i.e. ‘reduce’) the channel dimension of concatenated frames, the Spatial Clue Aggregator replaces that blind channel reduction with a learned embedding of explicit spatial priors.  It first gathers dense 2D feature flows, pixel coordinates, confidence scores, and 3D point-cloud locations, normalizes each, concatenates them, and then uses a small two-layer convolutional network to generate a compact positional embedding.  In effect, channel reduction is reinterpreted as a fusion of geometry-aware features rather than mere feature compression, yielding richer, more interpretable inputs for subsequent pose regression.",
        "relevant_elements": [
            "Spatial Clue Aggregator",
            "channel reduction"
        ],
        "id": 29,
        "masked_question": "How does [mask1] enhance or reinterpret PoseNet's channel reduction strategy?",
        "masked_number": 1,
        "masked_elements": [
            "Spatial Clue Aggregator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.05283v1_figure_2.png",
        "paperid": "2407.05283v1",
        "paper_path": "./papers/2407.05283v1.json",
        "figure_id": "2407.05283v1_figure_2.png",
        "caption": "Figure 2: An illustration of our proposed SCIPaD framework. Compared with the traditional PoseNet [14] architecture, it comprises three main parts: (1) a confidence-aware feature flow estimator, (2) a spatial clue aggregator, and (3) a hierarchical positional embedding injector.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "In what way does Confidence-Aware Feature Flow Estimator extend CNN-based feature extractor's capability for pose estimation?",
        "relevant_section_ids": [
            "1",
            "3.2"
        ],
        "relevant_context": [
            "To address the aforementioned issues, we first propose a confidence-aware feature flow estimator (CAFFE) to calculate and adjust dense feature correspondences with the consideration of pixel-wise confidence levels. This module explicitly extracts abundant positional clues regarding 2D feature translations, which provides strong constraints for ego-motion recovery.",
            "Unlike previous work [55], which primarily emphasizes feature flow generation across consecutive frames, our proposed CAFFE also produces pixel-wise confidence levels for reweighting the feature flow."
        ],
        "final_answer": "CAFFE extends the basic CNN feature extractor by computing dense, differentiable 2D feature correspondences (feature flows) between frames and assigning each correspondence a pixel-wise confidence score—thereby supplying explicit geometric (positional) cues that bolster pose estimation.",
        "relevant_elements": [
            "Confidence-Aware Feature Flow Estimator",
            "CNN-based feature extractor"
        ],
        "id": 30,
        "masked_question": "In what way does [mask1] extend [mask2]'s capability for pose estimation?",
        "masked_number": 2,
        "masked_elements": [
            "Confidence-Aware Feature Flow Estimator",
            "CNN-based feature extractor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.05283v1_figure_2.png",
        "paperid": "2407.05283v1",
        "paper_path": "./papers/2407.05283v1.json",
        "figure_id": "2407.05283v1_figure_2.png",
        "caption": "Figure 2: An illustration of our proposed SCIPaD framework. Compared with the traditional PoseNet [14] architecture, it comprises three main parts: (1) a confidence-aware feature flow estimator, (2) a spatial clue aggregator, and (3) a hierarchical positional embedding injector.",
        "qtype": "Literature_Background",
        "response": "The traditional PoseNet architecture, including its CNN-Based Feature Extractor [mask2], primarily excels at extracting semantic information from images for camera pose regression. However, as stated in the text, it \"lacks geometrical reasoning and positional encoding abilities\" and often \"discards the shallower [features] which could potentially contain informative spatial clues and positional correlations\" and uses features more suited for image classification.\n\nOur proposed **Confidence-Aware Feature Flow Estimator (CAFFE)** [mask1] extends this capability by directly addressing these limitations. Specifically, CAFFE:\n1.  **Explicitly extracts positional clues**: It calculates \"dense feature correspondences\" and \"2D feature translations\" (feature flow), which provide \"strong constraints for ego-motion recovery\". This is a direct enhancement over the traditional PoseNet's"
    },
    {
        "question": "How does the confidence-aware feature flow estimator generate confidences to guide the Spatial Clue Aggregator?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "Another crucial piece of information conveyed by A^i is the confidence level c^i, which indicates the quality of the calculated feature flow.",
            "We argue that c depends on two factors:\n\n• Magnitude of affinity values. If all the affinity values are relatively small, it suggests a lack of strong feature correspondences within the specified window. For example, if a moving object occupies the entire window and occludes the original matched pixel, this can result in smaller affinity values in the entire window.\n\n• Distribution of affinity values. If the largest affinity values are closely clustered, it suggests the presence of texture-less areas or keypoints that are difficult to discriminate.",
            "To avoid these aforementioned issues and lower their impact on matched correspondences, we formulate the feature matching confidence level c as follows:\n\nwhere c tends to approach 1 only when there is a unique large affinity value within the given window, indicating high confidence in the feature correspondence. This formulation assists in assessing the reliability of feature matches by considering both the magnitude and the distribution of affinity values across spatial dimensions.",
            "Having obtained the feature flow ΔP, absolute feature position P, their corresponding confidence C, and the downsampled dense point cloud V, we proceed to encode them into a homogeneous position embedding space."
        ],
        "final_answer": "The confidence‐aware feature flow estimator computes a per‐pixel confidence by analysing its cross‐frame affinity volume: it measures both the absolute strength of the highest affinity response and how dominant that response is relative to the rest of the window (via a softmax‐style normalization). This confidence score—which approaches 1 only when there is a single, strong match—is then output alongside the sub‐pixel flow and used in the Spatial Clue Aggregator to reweight and fuse the positional clues.",
        "relevant_elements": [
            "Confidence-Aware Feature Flow Estimator",
            "Spatial Clue Aggregator"
        ],
        "id": 31,
        "masked_question": "How does the [mask1] generate confidences to guide the Spatial Clue Aggregator?",
        "masked_number": 1,
        "masked_elements": [
            "Confidence-Aware Feature Flow Estimator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.05283v1_figure_2.png",
        "paperid": "2407.05283v1",
        "paper_path": "./papers/2407.05283v1.json",
        "figure_id": "2407.05283v1_figure_2.png",
        "caption": "Figure 2: An illustration of our proposed SCIPaD framework. Compared with the traditional PoseNet [14] architecture, it comprises three main parts: (1) a confidence-aware feature flow estimator, (2) a spatial clue aggregator, and (3) a hierarchical positional embedding injector.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does the Hierarchical Positional Embedding Injector balance semantic and positional features across scales?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "In this work, our proposed hierarchical positional embedding injector aims to effectively integrate low-level positional embeddings P into high-level semantic features F^s across different scales.",
            "For the features F^s and P from the i-th stage, we first employ a channel reduction block to transform F^s into compact embeddings. Subsequently, the compressed positional embeddings are integrated into the semantic features F^s with a learnable gate g, which automatically modulates the importance of semantic and spatial information.",
            "The motivation for introducing the gating mechanism lies in leveraging the strengths of different network layers: the shallower layers of the network encode more precise positional embeddings, while the deeper layers preserve richer semantic information. In contrast to prior arts which indiscriminately fuse the cross-modal information, our approach ensures the network adaptively focuses on semantic and positional information with different scales.",
            "Afterwards, the selectively fused features are combined with those from the preceding layer, yielding spatial-semantic co-attentive feature representations."
        ],
        "final_answer": "The injector first compresses the semantic features via a channel-reduction block, then uses a learnable gate to weight and fuse them with the positional embeddings at each scale. This gating lets the network automatically allocate more weight to positional cues in shallow layers and more to semantic cues in deeper layers, and it combines the fused outputs hierarchically to produce spatial-semantic co-attentive representations.",
        "relevant_elements": [
            "Hierarchical Positional Embedding Injector"
        ],
        "id": 32,
        "masked_question": "How does the [mask1] balance semantic and positional features across scales?",
        "masked_number": 1,
        "masked_elements": [
            "Hierarchical Positional Embedding Injector"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.05283v1_figure_2.png",
        "paperid": "2407.05283v1",
        "paper_path": "./papers/2407.05283v1.json",
        "figure_id": "2407.05283v1_figure_2.png",
        "caption": "Figure 2: An illustration of our proposed SCIPaD framework. Compared with the traditional PoseNet [14] architecture, it comprises three main parts: (1) a confidence-aware feature flow estimator, (2) a spatial clue aggregator, and (3) a hierarchical positional embedding injector.",
        "qtype": "Experimental_Results",
        "response": "The \"Hierarchical Positional Embedding Injector\" balances semantic and positional features across scales by:\n\n1.  **Hierarchical Aggregation:** It integrates low-level positional embeddings ($\\mathcal{F}^p$) into high-level semantic features ($\\mathcal{F}^s$) at multiple resolutions. This ensures that both high-level semantic information (more prominent in deeper layers) and low-level positional information (richer in shallower layers) are preserved.\n2.  **Learnable Gating Mechanism:** For each stage ($i$), it employs a learnable gate ($\\mathcal{G}_i$). This gate automatically modulates the importance given to the semantic features ($\\mathcal{F}^s_i$) and the compressed positional embeddings (after channel reduction of $\\mathcal{F}^p_i$).\n3.  **Adaptive Focusing:** The gating mechanism allows the network to adaptively focus on semantic and positional information according to the scale. For instance, it leverages the fact that shallower layers provide more precise positional embeddings, while deeper layers retain richer semantic information, ensuring an appropriate balance from fine to coarse scales."
    },
    {
        "question": "How does the Group Prompts Aggregation Module balance semantic diversity and integrity through group token aggregation?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "In order to obtain finer-grained spatial features, an effective semantic grouping of spatial features is performed.",
            "Subsequently, we designed several group prompts that can be updated, with the number of group prompts being M.",
            "In order to better group and aggregate image features, we send the image features F_i and G T_i representing group prompts to the encoder of Transformer model for aggregation, where N is the number of image tokens, D is the feature dimension of the token.",
            "The above processes are expressed as: [Transformer aggregation formula]. However, the above operations can only roughly group features.",
            "In order to obtain more refined group features for subsequent encoding of semantic information, we recombine these updateable group prompts G T_i with the original features F_i. Here, G T_i serves as query and F_i serves as key and value. This step further refines the semantic information of each group in order to complete visual–semantic projection locally.",
            "Among them, G T_i is the group semantic vector, which is a clustering of local semantic information."
        ],
        "final_answer": "The module first introduces multiple learnable \"group prompts\" that coarsely partition the backbone’s spatial features into M distinct clusters via a Transformer encoder—this ensures a diverse set of semantic groupings. It then takes each updated prompt token and attends back to the original feature map (using the prompt as query and the pixels as key/value) to refine and restore the detailed semantics within each group. In this two‐stage process, the initial grouping preserves diversity across clusters, and the subsequent prompt‐to‐feature attention step reintegrates the fine‐grained information, thereby balancing semantic diversity with integrity.",
        "relevant_elements": [
            "Group Prompts Aggregation Module"
        ],
        "id": 33,
        "masked_question": "How does the [mask1] balance semantic diversity and integrity through group token aggregation?",
        "masked_number": 1,
        "masked_elements": [
            "Group Prompts Aggregation Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.12253v2_figure_2.png",
        "paperid": "2408.12253v2",
        "paper_path": "./papers/2408.12253v2.json",
        "figure_id": "2408.12253v2_figure_2.png",
        "caption": "Figure 2: Pipeline of Epsilon. The feature representation of the image is first obtained through a pre-trained backbone network that is frozen and cannot be updated. The image features are then applied to the Group Prompts Aggregation Module (GPA Module), which represents local semantic generation, and the Global Forward Propagation Module (GFP Module), which represents global diversity semantic generation. Finally, the output of the two modules is integrated to obtain the complete semantics. (zoom in for a better view)",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does the Global Forward Propagation Module utilize multiple feature blocks from Split Conv to enrich global semantics?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "We first encode the feature F_i into Φ feature blocks, respectively F_i^G. Then, Φ identical modules are applied to each feature block.",
            "Taking F_i^{Gm} as an example, we first use a multi-layer perceptron (MLP) to re-represent the features. Then, the features are fed into softmax to obtain the weight representation of each feature point in the feature map A_i^m.",
            "After obtaining A_i^m, we perform a dot product with the original input feature F_i. Then, all features are summed to obtain the global semantics S_i^m corresponding to F_i^{Gm}.",
            "After obtaining all the global semantics S_i^m, we use the concatenate operation to combine S_i^1, S_i^2, … and get F_i^G."
        ],
        "final_answer": "The Global Forward Propagation Module first splits the image’s global feature into multiple blocks via Split Conv. Each block is fed into an identical sub-module that (1) uses an MLP followed by softmax to compute personalized spatial weights, (2) applies these weights by dot-product with the original feature to highlight important global information, and (3) sums the weighted features to form a per-block global semantic vector. Finally, all per-block semantic vectors are concatenated to produce a richer, more diverse global semantic representation.",
        "relevant_elements": [
            "Split Conv",
            "Global Forward Propagation Module"
        ],
        "id": 34,
        "masked_question": "How does the [mask1] utilize multiple feature blocks from [mask2] to enrich global semantics?",
        "masked_number": 2,
        "masked_elements": [
            "Global Forward Propagation Module",
            "Split Conv"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.12253v2_figure_2.png",
        "paperid": "2408.12253v2",
        "paper_path": "./papers/2408.12253v2.json",
        "figure_id": "2408.12253v2_figure_2.png",
        "caption": "Figure 2: Pipeline of Epsilon. The feature representation of the image is first obtained through a pre-trained backbone network that is frozen and cannot be updated. The image features are then applied to the Group Prompts Aggregation Module (GPA Module), which represents local semantic generation, and the Global Forward Propagation Module (GFP Module), which represents global diversity semantic generation. Finally, the output of the two modules is integrated to obtain the complete semantics. (zoom in for a better view)",
        "qtype": "Experimental_Results",
        "response": "The \"Global Forward Propagation Module\" (GFP Module, [mask1]) utilizes the \"Split Conv\" (blue box, [mask2]) by leveraging its output in the following manner:\n\n1.  **Feature Encoding/Splitting:** The \"Split Conv\" ([mask2]) first encodes the input image feature `F_i` into `M` distinct feature blocks, denoted as `FG_i^1, FG_i^2, ..., FG_i^M`. This operation effectively creates multiple \"heads\" or perspectives of the global feature.\n\n2.  **Parallel Processing by Identical Modules:** Each of these `M` feature blocks generated by \"Split Conv\" (`FG_i^j` for `j` from 1 to `M`) is then fed into a separate, but *identical*, GFP sub-module ([mask1]).\n\n3.  **Personalized Global Weight Learning:** Within each GFP sub-module, a multi-layer perceptron (MLP) re-represents the input feature block (`FG_i^j`), and a Softmax function is applied"
    },
    {
        "question": "What limitations arise from freezing backbone features before the Group Prompts Aggregation Module?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Group Prompts Aggregation Module"
        ],
        "id": 35,
        "masked_question": "What limitations arise from freezing backbone features before the [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "Group Prompts Aggregation Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.12253v2_figure_2.png",
        "paperid": "2408.12253v2",
        "paper_path": "./papers/2408.12253v2.json",
        "figure_id": "2408.12253v2_figure_2.png",
        "caption": "Figure 2: Pipeline of Epsilon. The feature representation of the image is first obtained through a pre-trained backbone network that is frozen and cannot be updated. The image features are then applied to the Group Prompts Aggregation Module (GPA Module), which represents local semantic generation, and the Global Forward Propagation Module (GFP Module), which represents global diversity semantic generation. Finally, the output of the two modules is integrated to obtain the complete semantics. (zoom in for a better view)",
        "qtype": "Others",
        "response": "The context states: \"The feature representation of the image is first obtained through a pre-trained backbone network that is frozen and cannot be updated.\" It describes the characteristic of the backbone network prior to the Group Prompts Aggregation Module but does not elaborate on any limitations that arise specifically from this freezing. The discussion in the paper focuses on the advantages of the proposed modules (GPA and GFP) and how they address issues like loss of semantic details or limited global feature diversity, not on the limitations of a frozen backbone.\n\nTherefore, based on the provided text, the limitations arising from freezing backbone features before the Group Prompts Aggregation Module are not discussed.\n\nUnanswerable."
    },
    {
        "question": "What alternative strategy could replace the Global Forward Propagation Module for enriching global semantics?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "In existing methods, the extraction of global features is rough. Most methods use the top-level features and design some channel (or global) attention structures to achieve this.",
            "Although our GFP module has some structural similarities with the traditional channel attention model, our distribution of weights is not limited to the channel dimension."
        ],
        "final_answer": "Instead of the Global Forward Propagation Module, one could fall back on a traditional channel (or global) attention mechanism applied to the top-level features to enrich global semantics.",
        "relevant_elements": [
            "Global Forward Propagation Module"
        ],
        "id": 36,
        "masked_question": "What alternative strategy could replace the [mask1] for enriching global semantics?",
        "masked_number": 1,
        "masked_elements": [
            "Global Forward Propagation Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.12253v2_figure_2.png",
        "paperid": "2408.12253v2",
        "paper_path": "./papers/2408.12253v2.json",
        "figure_id": "2408.12253v2_figure_2.png",
        "caption": "Figure 2: Pipeline of Epsilon. The feature representation of the image is first obtained through a pre-trained backbone network that is frozen and cannot be updated. The image features are then applied to the Group Prompts Aggregation Module (GPA Module), which represents local semantic generation, and the Global Forward Propagation Module (GFP Module), which represents global diversity semantic generation. Finally, the output of the two modules is integrated to obtain the complete semantics. (zoom in for a better view)",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What trade-offs might arise from integrating CDWConv and FreqSSM for balancing low- and high-frequency motion features?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "FreqSSM",
            "CDWConv"
        ],
        "id": 37,
        "masked_question": "What trade-offs might arise from integrating [mask1] and [mask2] for balancing low- and high-frequency motion features?",
        "masked_number": 2,
        "masked_elements": [
            "CDWConv",
            "FreqSSM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.17532v1_figure_1.png",
        "paperid": "2411.17532v1",
        "paper_path": "./papers/2411.17532v1.json",
        "figure_id": "2411.17532v1_figure_1.png",
        "caption": "Figure 1: Overview of FTMoMamba. FTMoMamba is built upon the Diffusion model within FTMamba modules, which explores the frequency-domain information to guide motion generation, as well as text-semantic information to ensure text-motion consistency in the latent space. Specifically, the diffusion model compresses and decompresses the raw motion sequence, reducing the interference of redundant information in motion generation. FTMamba, as the core of the denoising module, consists of FreqMamba and TextMamba. The former decomposes motion sequences into low- and high-frequency components to guide the generation of static and fine-grained motions, respectively. The latter aligns textual semantics with sequential features to ensure text-motion consistency.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What biases could frozen CLIP embeddings introduce during text-guided motion synthesis in TextMamba?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "TextMamba",
            "CLIP"
        ],
        "id": 38,
        "masked_question": "What biases could frozen [mask1] embeddings introduce during text-guided motion synthesis in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "CLIP",
            "TextMamba"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.17532v1_figure_1.png",
        "paperid": "2411.17532v1",
        "paper_path": "./papers/2411.17532v1.json",
        "figure_id": "2411.17532v1_figure_1.png",
        "caption": "Figure 1: Overview of FTMoMamba. FTMoMamba is built upon the Diffusion model within FTMamba modules, which explores the frequency-domain information to guide motion generation, as well as text-semantic information to ensure text-motion consistency in the latent space. Specifically, the diffusion model compresses and decompresses the raw motion sequence, reducing the interference of redundant information in motion generation. FTMamba, as the core of the denoising module, consists of FreqMamba and TextMamba. The former decomposes motion sequences into low- and high-frequency components to guide the generation of static and fine-grained motions, respectively. The latter aligns textual semantics with sequential features to ensure text-motion consistency.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates multiplicative gating between FreqSSM output and motion features in FreqMamba?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "FreqMamba … employs the frequency state space model (FreqSSM) to capture high- and low-frequency information, guiding the model to generate fine-grained motions.",
            "We further perform information selection through a multiplication-based method to obtain the motion feature f^{mo}_n guided by frequency-domain information."
        ],
        "final_answer": "The multiplicative gating is motivated by the need to perform information selection—using frequency-domain cues from FreqSSM to modulate (gate) the original motion features so that the model can emphasize static poses and fine-grained motions captured in the frequency domain.",
        "relevant_elements": [
            "FreqMamba",
            "FreqSSM"
        ],
        "id": 39,
        "masked_question": "What motivates multiplicative gating between [mask1] output and motion features in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "FreqSSM",
            "FreqMamba"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.17532v1_figure_1.png",
        "paperid": "2411.17532v1",
        "paper_path": "./papers/2411.17532v1.json",
        "figure_id": "2411.17532v1_figure_1.png",
        "caption": "Figure 1: Overview of FTMoMamba. FTMoMamba is built upon the Diffusion model within FTMamba modules, which explores the frequency-domain information to guide motion generation, as well as text-semantic information to ensure text-motion consistency in the latent space. Specifically, the diffusion model compresses and decompresses the raw motion sequence, reducing the interference of redundant information in motion generation. FTMamba, as the core of the denoising module, consists of FreqMamba and TextMamba. The former decomposes motion sequences into low- and high-frequency components to guide the generation of static and fine-grained motions, respectively. The latter aligns textual semantics with sequential features to ensure text-motion consistency.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates integrating TextSSM after CDWConv for sentence-level alignment in TextMamba?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "In text-driven human motion generation tasks, the generated motion is directly constrained by the text instructions. Therefore, effectively understanding the semantic information of the text and achieving precise alignment between semantics and motion is crucial for generating motions [36,5]. However, the above method directly concatenates text features and motion features. Such simple concatenation introduces text-motion semantic inconsistency as the motions become more complex.",
            "Then, it extracts the latent temporal features of X_t^mo using CDWConv, and TextSSM aligns the text and motion features.",
            "In TextSSM, we first compute the state equation for the motion feature, updating the hidden state. Then, the sentence-level feature f^t extracted by CLIP is summed with the output matrix C, achieving text-to-motion alignment with minimal computational cost."
        ],
        "final_answer": "Because simply concatenating text and motion features leads to semantic inconsistencies when motions become complex, TextMamba uses CDWConv to extract temporal motion features and then applies TextSSM to inject CLIP’s sentence-level text embeddings into the SSM’s output matrix C. This design precisely aligns text and motion at the sentence level and guarantees cross-modal consistency with minimal computational overhead.",
        "relevant_elements": [
            "TextMamba",
            "TextSSM"
        ],
        "id": 40,
        "masked_question": "What motivates integrating [mask1] after CDWConv for sentence-level alignment in TextMamba?",
        "masked_number": 1,
        "masked_elements": [
            "TextSSM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.17532v1_figure_1.png",
        "paperid": "2411.17532v1",
        "paper_path": "./papers/2411.17532v1.json",
        "figure_id": "2411.17532v1_figure_1.png",
        "caption": "Figure 1: Overview of FTMoMamba. FTMoMamba is built upon the Diffusion model within FTMamba modules, which explores the frequency-domain information to guide motion generation, as well as text-semantic information to ensure text-motion consistency in the latent space. Specifically, the diffusion model compresses and decompresses the raw motion sequence, reducing the interference of redundant information in motion generation. FTMamba, as the core of the denoising module, consists of FreqMamba and TextMamba. The former decomposes motion sequences into low- and high-frequency components to guide the generation of static and fine-grained motions, respectively. The latter aligns textual semantics with sequential features to ensure text-motion consistency.",
        "qtype": "Design_Rationale",
        "response": "The masked element is **TextSSM**.\n\nHere's the chain of thought:\n1.  **Identify the masked element:** The red box in the image highlights \"TextSSM\".\n2.  **Locate relevant sections in the text:** The \"TextMamba\" and \"TextSSM\" subsections are key.\n3.  **Understand CDWConv's role in TextMamba:** The text states, \"TextMamba ... extracts the latent temporal features of $f_v^{mo"
    },
    {
        "question": "What motivates freezing the vision encoder and linear layer while tuning only virtual tokens?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "To reduce the computing resources, all parameters θ of LVLM are frozen during training, except for the newly introduced parameters φ of virtual tokens. For instance, with the addition of 20 virtual tokens, only M parameters are trainable, accounting for just 0.0012% of the total model parameters. This significantly reduces the computational costs while preserving the notable optimization effects on multi-modal object hallucinations, details are demonstrated in Section 4.3."
        ],
        "final_answer": "Freezing the vision encoder and linear layer (i.e., all original LVLM parameters) and tuning only the new virtual tokens is motivated by a desire to drastically reduce computing resources and parameter updates. By training just the small set of virtual token embeddings (only 0.0012% of total parameters in an example), PATCH achieves efficient optimization against object hallucinations without the high cost of full-model fine-tuning.",
        "relevant_elements": [
            "vision encoder",
            "linear",
            "virtual tokens"
        ],
        "id": 41,
        "masked_question": "What motivates freezing the [mask1] and [mask2] while tuning only virtual tokens?",
        "masked_number": 2,
        "masked_elements": [
            "vision encoder",
            "linear"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.06795v1_figure_1.png",
        "paperid": "2410.06795v1",
        "paper_path": "./papers/2410.06795v1.json",
        "figure_id": "2410.06795v1_figure_1.png",
        "caption": "Figure 1: The architecture of LVLMs with PATCH (taking MiniGPT-v2 as an example) where the visual encoder, linear projection layer, and the LLM remain frozen during the training phase. The only updated component during fine-tuning is the parameters of the virtual tokens. A frozen pre-trained Cascade Mask R-CNN head is adopted to obtain the object information in the test images.",
        "qtype": "Design_Rationale",
        "response": "The motivation for freezing the Vision Encoder ([mask1]) and the Linear projection layer ([mask2]) while tuning only virtual tokens is primarily **to reduce computing resources and significantly reduce computational costs**. The text states:\n\n\"To reduce the computing resources, all parameters of LVLM are frozen during training, except for the newly introduced parameters of virtual tokens... This significantly reduces the computational costs while preserving the notable optimization effects on multi-modal object hallucinations.\""
    },
    {
        "question": "Why position virtual tokens between linear outputs and object embeddings for cross-modal alignment?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Inspired by Zhu et al. (2024  ###reference_b33###), we insert a set of M virtual tokens T_v between the image features F_i and the detection information F_e.",
            "The PATCH strategy enhances the model’s ability to utilize detection results, enabling LVLMs to interpret image content with greater accuracy. By narrowing the representational gap between visual features and text in the semantic space, PATCH optimally aligns cross-modal features, particularly for tasks that benefit from enriched detection prompts."
        ],
        "final_answer": "The virtual tokens are placed between the visual (linear) outputs and the object detection embeddings so that their trainable embeddings can bridge the representational gap between the two modalities. By inserting and fine-tuning these tokens at that junction, PATCH can optimally align visual features with textual (object) embeddings in the shared semantic space, improving cross-modal alignment and reducing object hallucinations.",
        "relevant_elements": [
            "linear",
            "virtual tokens",
            "object embeddings"
        ],
        "id": 42,
        "masked_question": "Why position [mask1] between [mask2] outputs and object embeddings for cross-modal alignment?",
        "masked_number": 2,
        "masked_elements": [
            "virtual tokens",
            "linear"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.06795v1_figure_1.png",
        "paperid": "2410.06795v1",
        "paper_path": "./papers/2410.06795v1.json",
        "figure_id": "2410.06795v1_figure_1.png",
        "caption": "Figure 1: The architecture of LVLMs with PATCH (taking MiniGPT-v2 as an example) where the visual encoder, linear projection layer, and the LLM remain frozen during the training phase. The only updated component during fine-tuning is the parameters of the virtual tokens. A frozen pre-trained Cascade Mask R-CNN head is adopted to obtain the object information in the test images.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does Linear projection map vision encoder outputs into a compatible embedding space for subsequent virtual token integration?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Linear",
            "Vision Encoder"
        ],
        "id": 43,
        "masked_question": "How does [mask1] projection map vision encoder outputs into a compatible embedding space for subsequent virtual token integration?",
        "masked_number": 1,
        "masked_elements": [
            "Linear"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.06795v1_figure_1.png",
        "paperid": "2410.06795v1",
        "paper_path": "./papers/2410.06795v1.json",
        "figure_id": "2410.06795v1_figure_1.png",
        "caption": "Figure 1: The architecture of LVLMs with PATCH (taking MiniGPT-v2 as an example) where the visual encoder, linear projection layer, and the LLM remain frozen during the training phase. The only updated component during fine-tuning is the parameters of the virtual tokens. A frozen pre-trained Cascade Mask R-CNN head is adopted to obtain the object information in the test images.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] refers to the \"Linear\" layer, which is identified in the text as the \"visual projection layer.\"\n\nThe \""
    },
    {
        "question": "How are Virtual Tokens initialized and updated to align Cascade Mask R-CNN detection outputs with LLM embeddings?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Inspired by Zhu et al. (2024), we insert a set of k virtual tokens V between the image features FI and the detection information OD. The embeddings of these tokens are optimized during training, with parameters E, where E is the token embedding size of the LVLM.",
            "To reduce the computing resources, all parameters θ of LVLM are frozen during training, except for the newly introduced parameters E of virtual tokens.",
            "In the inference phase, we extend the model’s vocabulary by incorporating several special tokens (e.g., [ref1], [ref2], …, [refn]) whose embeddings are initialized by the fine-tuned virtual token embeddings."
        ],
        "final_answer": "A small set of virtual tokens—each with an embedding vector of the same dimension as the LVLM’s token embeddings—is inserted between the encoded image features and the Cascade Mask R-CNN’s detection outputs. These new embeddings (denoted E) are the only parameters that are trained: the rest of the LVLM is frozen and all gradient updates go into tuning these virtual tokens so that they learn to bridge the representational gap between detector outputs and the LLM’s semantic space. At inference time, the learned embeddings are added into the model’s vocabulary as special reference tokens (e.g., [ref1], [ref2], …), effectively aligning the detector’s outputs with the LLM’s embedding space.",
        "relevant_elements": [
            "Virtual Tokens",
            "Cascade Mask R-CNN",
            "Large Language Model (LLM)"
        ],
        "id": 44,
        "masked_question": "How are [mask1] initialized and updated to align [mask2] detection outputs with LLM embeddings?",
        "masked_number": 2,
        "masked_elements": [
            "Virtual Tokens",
            "Cascade Mask R-CNN"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.06795v1_figure_1.png",
        "paperid": "2410.06795v1",
        "paper_path": "./papers/2410.06795v1.json",
        "figure_id": "2410.06795v1_figure_1.png",
        "caption": "Figure 1: The architecture of LVLMs with PATCH (taking MiniGPT-v2 as an example) where the visual encoder, linear projection layer, and the LLM remain frozen during the training phase. The only updated component during fine-tuning is the parameters of the virtual tokens. A frozen pre-trained Cascade Mask R-CNN head is adopted to obtain the object information in the test images.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the A2R-OT algorithm integrate Frame Identification Algorithm outputs and Frame Vector Representation into iterative model updates?",
        "relevant_section_ids": [
            "3",
            "3.3"
        ],
        "relevant_context": [
            "The devised Metaverse traffic classifier, Discren-XR receives the Metaverse network traffic at the A2R-(OT) that invokes the FVR and FIA with the required segment size to form statistical frame vectors that are used in finding the classification model in training.",
            "The proposed A2R-(OT) algorithm, presented in Algorithm 1, adopts the random forest algorithm, which continuously refines the Metaverse classifier by iterating through various segment sizes to find the optimal segment size (s*), number of training segments (N), and final classification model (final model).",
            "The algorithm starts by forming segments. The FVR forms the vectors of the respective segments. Split function helps splitting the segment vectors into train and validation data at ratio r. Random forest is trained with train data until the validation meet the stopping criteria: 1) zero error conditions and 2) early stopping conditions."
        ],
        "final_answer": "At each iteration the A2R-(OT) loop (i) selects a candidate segment size, (ii) invokes the Frame Identification Algorithm (FIA) on the raw packet data to find frame-related packets, (iii) applies the Frame Vector Representation (FVR) to each segment—combining the four raw features plus frame counts, inter-arrival times and durations—into a fixed statistical vector, and (iv) feeds those vectors into a random-forest classifier.  The algorithm then evaluates training versus validation error under zero-error or early-stop rules, adjusts the segment size or increases the number of segments, and—using warm starts—aggregates and retains the partial models across iterations until the overall classifier converges.",
        "relevant_elements": [
            "Frame Identification Algorithm",
            "Frame Vector Representation",
            "Augmentation, Aggregation, and Retention-Online Training Algorithm"
        ],
        "id": 45,
        "masked_question": "How does the A2R-OT algorithm integrate [mask1] outputs and [mask2] into iterative model updates?",
        "masked_number": 2,
        "masked_elements": [
            "Frame Identification Algorithm",
            "Frame Vector Representation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.05184v1_figure_1.png",
        "paperid": "2411.05184v1",
        "paper_path": "./papers/2411.05184v1.json",
        "figure_id": "2411.05184v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed solution. (a) Metaverse testbed to capture Metaverse network traffic, and (b) block diagram of the Discern-XR solution.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the Traffic Manager convert raw .pcap captures into network traffic data for the online training pipeline?",
        "relevant_section_ids": [
            "3",
            "2"
        ],
        "relevant_context": [
            "The rendered traffic is tapped on a cloud computer using a traffic sniffer, i.e., Wireshark [12]. Wireshark extracts the captured traffic in packet captures (.pcap) files from which network traffic data is extracted into comma-separated values (CSV). The extracted CSV for a given service consists of four application-level features.",
            "Each packet p_{i,j} is a vector with four raw features: time, packet length, packet direction, and packet inter-arrival time."
        ],
        "final_answer": "The Traffic Manager uses Wireshark to capture the Metaverse traffic into .pcap files and then exports those packet captures into CSV format. Each CSV entry corresponds to a packet represented by four application-level features (time, packet length, packet direction, and packet inter-arrival time), which become the network traffic data fed into the online training pipeline.",
        "relevant_elements": [
            "Traffic Manager",
            "Network Traffic Data"
        ],
        "id": 46,
        "masked_question": "How does the [mask1] convert raw .pcap captures into [mask2] for the online training pipeline?",
        "masked_number": 2,
        "masked_elements": [
            "Traffic Manager",
            "Network Traffic Data"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.05184v1_figure_1.png",
        "paperid": "2411.05184v1",
        "paper_path": "./papers/2411.05184v1.json",
        "figure_id": "2411.05184v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed solution. (a) Metaverse testbed to capture Metaverse network traffic, and (b) block diagram of the Discern-XR solution.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Frame Identification Algorithm inform statistical feature extraction in Frame Vector Representation?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "The FIA algorithm relies on the traffic behaviour, including packet length and inter-arrival time, to accurately identify video frames. … The disparity in packet length allows the algorithm to define a minimum packet length threshold for identifying frames … and the reliability in frame packet inter-arrival times allows the algorithm to define the maximum frame duration as the difference in mode inter-arrival times.",
            "The FVR algorithm represents a given traffic segment into a statistical frame vector, which contains 13 statistical features derived from the four raw features, … The final three features are derived from the frame-related traffic data: frame count, average frame inter-arrival time, and total frame duration, which provide unique information about Metaverse traffic services."
        ],
        "final_answer": "The Frame Identification Algorithm (FIA) first parses the raw packet stream using thresholds on packet length and inter-arrival time to identify which packets belong to each video frame.  Frame Vector Representation (FVR) then uses the output of FIA—namely the delineated frame boundaries and timings—to compute three frame-based statistical features (frame count, average frame inter-arrival time, and total frame duration) that are appended to the other ten raw-feature statistics to form the 13-dimensional frame vector.",
        "relevant_elements": [
            "Frame Identification Algorithm",
            "Frame Vector Representation"
        ],
        "id": 47,
        "masked_question": "How does [mask1] inform statistical feature extraction in Frame Vector Representation?",
        "masked_number": 1,
        "masked_elements": [
            "Frame Identification Algorithm"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.05184v1_figure_1.png",
        "paperid": "2411.05184v1",
        "paper_path": "./papers/2411.05184v1.json",
        "figure_id": "2411.05184v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed solution. (a) Metaverse testbed to capture Metaverse network traffic, and (b) block diagram of the Discern-XR solution.",
        "qtype": "Literature_Background",
        "response": "The Frame Identification Algorithm ([mask1]) identifies video frames within the network traffic by analyzing traffic behaviors like packet length and inter-arrival time patterns. It distinguishes \"frame-related video traffic\" from other traffic by considering how multiple consecutive, relatively large packets are typically required to transmit frames, and how these packets are sent consecutively and in quick succession.\n\nThis *identified frame-related traffic data* then directly informs the statistical feature extraction in the Frame Vector Representation. Specifically, the Frame Vector Representation (FVR) algorithm uses this frame-related traffic data to derive three crucial statistical features:\n1.  **Frame count:** The total number of identified frames.\n2.  **Average frame inter-arrival time:** The average time between the arrival of consecutive identified frames.\n3.  **Total frame duration:** The aggregate duration of the identified frame traffic.\n\nThese three features provide unique information about Metaverse traffic services and are distinct from the first ten features, which are derived from the overall raw traffic data. Therefore, the Frame Identification Algorithm provides the necessary processed \"frame-related traffic data\" that enables the computation of these specific, valuable frame-centric statistical features for the Frame Vector Representation."
    },
    {
        "question": "How does Augmentation, Aggregation, and Retention-Online Training Algorithm leverage Frame Vector Representation for dynamic model updates?",
        "relevant_section_ids": [
            "3",
            "3.3"
        ],
        "relevant_context": [
            "The devised Metaverse traffic classifier, Discren-XR receives the Metaverse network traffic at the A2R-(OT) that invokes the FVR and FIA with the required segment size to form statistical frame vectors that are used in finding the classification model in training.",
            "The algorithm start by forming segment. The FVR forms the vectors of the respective segments. Split function helps splitting the segment vectors into train and validation data at ratio r. Random forest is trained with train data until the validation meet the stopping criteria: 1) zero error conditions and 2) early stopping conditions.",
            "The proposed A2R-(OT) algorithm ... continuously refines the Metaverse classifier by iterating through various segment sizes to find the optimal segment size (s*), number of training segments (K*), and final classification model (final_model).",
            "The A2R-(OT) algorithm operates on three core principles: Augmentation, where new network traffic segments are continuously added to improve generalization; Aggregation, where multiple models trained on different segments are combined for a more robust final model; and Retention, which ensures the model retains and builds on previous knowledge in dynamic environments like Metaverse traffic, ensuring sustained accuracy and efficiency."
        ],
        "final_answer": "The A2R-(OT) algorithm uses the Frame Vector Representation (FVR) module to transform each newly formed traffic segment into a 13-dimensional statistical frame vector. During Augmentation, these FVR vectors are appended as fresh training examples; during Aggregation, models trained on different segment sizes (and hence different sets of FVR vectors) are combined to yield a more robust forest; and during Retention, the algorithm warm-starts the random forest so that each update builds on previously learned FVR-based patterns. In this way, by continuously invoking FVR on incoming segments, A2R-(OT) dynamically updates and refines the classifier in an online fashion.",
        "relevant_elements": [
            "Augmentation, Aggregation, and Retention-Online Training Algorithm",
            "Frame Vector Representation"
        ],
        "id": 48,
        "masked_question": "How does [mask1] leverage [mask2] for dynamic model updates?",
        "masked_number": 2,
        "masked_elements": [
            "Augmentation, Aggregation, and Retention-Online Training Algorithm",
            "Frame Vector Representation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.05184v1_figure_1.png",
        "paperid": "2411.05184v1",
        "paper_path": "./papers/2411.05184v1.json",
        "figure_id": "2411.05184v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed solution. (a) Metaverse testbed to capture Metaverse network traffic, and (b) block diagram of the Discern-XR solution.",
        "qtype": "Literature_Background",
        "response": "The Augmentation, Aggregation, and Retention-Online Training Algorithm (A2R-(OT)) leverages Frame Vector Representation (FVR) by invoking it to transform network traffic segments into statistical frame vectors. These statistical frame vectors, which contain 13 statistical features derived from raw and frame-related traffic data, serve as the essential input for the A2R-(OT)'s training.\n\nThe A2R-(OT) continuously refines the Metaverse classifier by:\n1"
    },
    {
        "question": "How does MLP adaptation complement token pruning decisions for dynamic computation allocation?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "MLP",
            "token pruning"
        ],
        "id": 49,
        "masked_question": "How does [mask1] adaptation complement token pruning decisions for dynamic computation allocation?",
        "masked_number": 1,
        "masked_elements": [
            "MLP"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.05010v1_figure_2.png",
        "paperid": "2407.05010v1",
        "paper_path": "./papers/2407.05010v1.json",
        "figure_id": "2407.05010v1_figure_2.png",
        "caption": "Figure 2: \nIllustration of the inference process of PRANCE. PRANCE is a lightweight framework for ViTs that jointly optimizes model structure and data. First of all, the framework divides the ViT model into four groups according to the inference sequence, each containing multiple ViT blocks. During inference, the selector utilizes the features of each group step by step to decide the model channel dimensions and token numbers for them, aiming to minimize FLOPs while ensuring accuracy. Moreover, PRANCE supports three main token optimization methods: pruning, merging, and pruning-then-merging.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Token Optimization coordinate pruning and merging across sequential transformer blocks?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Token optimization consists of two steps: (1) token importance ranking and (2) token optimization. In the first step, tokens are sorted by their contributions to the task, so that a specific token optimization method can be applied in the second step according to the token keep ratio.",
            "After preprocessing the tokens, we consider three representative token reduction strategies to obtain the tokens for the remaining MHSA layers and MLP layers in -th group: (i) pruning, (ii) merging, and (iii) pruning-then-merging.",
            "For token pruning, unimportant tokens will be discarded for each sample according to [20].",
            "For token merging, the sorted tokens will be divided into two categories based on the token keep ratio: important tokens S_k = {t_i: i ≤ k} and unimportant tokens S_u = {t_i: i > k}. Subsequently, each unimportant token t_j will be merged into an optimal important token t_i* that is most similar to it, to formulate a new S_k for next layers: S_k′.",
            "For pruning and merging, we adopt the pruning-then-merging [25] scheme. Specifically, the token keep ratio is divided into a token pruning ratio α along with a token merging ratio β, i.e., α + β = r.",
            "After the token optimization, the remaining tokens will go through the latter Transformer blocks within this group, with the architectural decisions based on δ."
        ],
        "final_answer": "PRANCE applies token optimization in each group of three Transformer blocks. Within a group, it first ranks tokens by importance (using the ⟨CLS⟩ token’s query inner product), then applies one of three strategies: pruning (dropping the lowest-ranked tokens), merging (dividing tokens into ‘important’ and ‘unimportant’ sets and merging each unimportant token into its most similar important token), or a combined pruning-then-merging scheme (splitting the keep ratio into separate pruning and merging ratios). The reduced token set is then fed into the remaining blocks of that group. This groupwise process repeats sequentially across all transformer blocks, coordinating pruning and merging decisions throughout the network.",
        "relevant_elements": [
            "Token Optimization",
            "pruning",
            "merging"
        ],
        "id": 50,
        "masked_question": "How does [mask1] coordinate pruning and merging across sequential transformer blocks?",
        "masked_number": 1,
        "masked_elements": [
            "Token Optimization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.05010v1_figure_2.png",
        "paperid": "2407.05010v1",
        "paper_path": "./papers/2407.05010v1.json",
        "figure_id": "2407.05010v1_figure_2.png",
        "caption": "Figure 2: \nIllustration of the inference process of PRANCE. PRANCE is a lightweight framework for ViTs that jointly optimizes model structure and data. First of all, the framework divides the ViT model into four groups according to the inference sequence, each containing multiple ViT blocks. During inference, the selector utilizes the features of each group step by step to decide the model channel dimensions and token numbers for them, aiming to minimize FLOPs while ensuring accuracy. Moreover, PRANCE supports three main token optimization methods: pruning, merging, and pruning-then-merging.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does MSA-driven token optimization distinguish between pruning, merging, and pruning-merging decisions?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "After preprocessing the tokens, we consider three representative token reduction strategies to obtain the tokens for the remaining MHSA layers and MLP layers in k-th group: (i) pruning, (ii) merging, and (iii) pruning-then-merging.",
            "For token pruning, unimportant tokens will be discarded for each sample according to φ_k [20].",
            "For token merging, the sorted tokens will be divided into two categories based on the token keep ratio φ_k: important tokens X_k^+ and unimportant tokens X_k^-.\nSubsequently, each unimportant token x_i^- will be merged into an optimal important token x_j^+ that is most similar to it, to formulate a new X_k for next layers: where p represents the number of kept tokens and the indexes j are chosen to maximize the cosine similarity cos(x_i^-, x_j^+).",
            "For pruning and merging, we adopt the pruning-then-merging [25] scheme. Specifically, the token keep ratio φ_k is divided into a token pruning ratio δ_k along with a token merging ratio μ_k, i.e., δ_k + μ_k = φ_k."
        ],
        "final_answer": "MSA-driven token optimization first ranks tokens by importance (inner product with <CLS>). Then:\n• Pruning: it simply discards the lowest-ranked (unimportant) tokens according to the keep ratio φ_k.\n• Merging: it splits the sorted tokens into important and unimportant sets and merges each unimportant token into the most similar important token (by cosine similarity), yielding fewer tokens.\n• Pruning-then-merging: the overall keep ratio φ_k is split into a pruning fraction δ_k and a merging fraction μ_k, so that δ_k + μ_k = φ_k; the method first prunes δ_k of the tokens and then merges according to μ_k.",
        "relevant_elements": [
            "MSA",
            "Token Optimization"
        ],
        "id": 51,
        "masked_question": "How does [mask1]-driven token optimization distinguish between pruning, merging, and pruning-merging decisions?",
        "masked_number": 1,
        "masked_elements": [
            "MSA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.05010v1_figure_2.png",
        "paperid": "2407.05010v1",
        "paper_path": "./papers/2407.05010v1.json",
        "figure_id": "2407.05010v1_figure_2.png",
        "caption": "Figure 2: \nIllustration of the inference process of PRANCE. PRANCE is a lightweight framework for ViTs that jointly optimizes model structure and data. First of all, the framework divides the ViT model into four groups according to the inference sequence, each containing multiple ViT blocks. During inference, the selector utilizes the features of each group step by step to decide the model channel dimensions and token numbers for them, aiming to minimize FLOPs while ensuring accuracy. Moreover, PRANCE supports three main token optimization methods: pruning, merging, and pruning-then-merging.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does multi-stage MLP dimension selection interact with token keep ratio optimization across transformer blocks?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Therefore, the selector is formulated as: where k is the group index, r_k represents the token keep ratio for k-th Transformer group, s_k denotes the structures decision of k-th Transformer group, and h_k is the feature extracted by the k-th Transformer group, representing the abstracted data information up to the current block in the ViT.",
            "Specifically, A_k denotes the decided MLP ratios for the l_F MLP layers in this Transformer group, where 0 < a_kl \\le 1, and B_k denotes the decided embedding dimension ratios for the l_M MSA layers in this Transformer group.",
            "The token t_k represents the token pruning keep ratio, token merging keep ratio, or a combination of both, denoted as t_k. Depending on the selected token optimization policies, it serves as a basis for conducting sample-specific token optimization.",
            "After the token optimization, the remaining tokens will go through the latter Transformer blocks within this group, with the architectural decisions based on s_k."
        ],
        "final_answer": "At each group of three transformer blocks, the lightweight PPO selector jointly outputs both an MLP dimension reduction schedule (A_k) and a token keep ratio (r_k). First, it applies the chosen token keep ratio to prune or merge tokens. The surviving tokens are then processed through the group’s MLP layers whose channel dimensions have been reduced according to the MLP ratios. This per‐group sequence repeats across all transformer stages, enabling multi‐stage co‐optimization of MLP dimensions and token counts.",
        "relevant_elements": [
            "MLP",
            "Token Optimization",
            "Transformer Blocks"
        ],
        "id": 52,
        "masked_question": "How does multi-stage [mask1] dimension selection interact with token keep ratio optimization across [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "MLP",
            "Transformer Blocks"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.05010v1_figure_2.png",
        "paperid": "2407.05010v1",
        "paper_path": "./papers/2407.05010v1.json",
        "figure_id": "2407.05010v1_figure_2.png",
        "caption": "Figure 2: \nIllustration of the inference process of PRANCE. PRANCE is a lightweight framework for ViTs that jointly optimizes model structure and data. First of all, the framework divides the ViT model into four groups according to the inference sequence, each containing multiple ViT blocks. During inference, the selector utilizes the features of each group step by step to decide the model channel dimensions and token numbers for them, aiming to minimize FLOPs while ensuring accuracy. Moreover, PRANCE supports three main token optimization methods: pruning, merging, and pruning-then-merging.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does initialization of normal and common reflectance parameters enhance BRDF parameter convergence based on training outcomes?",
        "relevant_section_ids": [
            "4.4",
            "5.6"
        ],
        "relevant_context": [
            "To enhance the optimization process and improve robustness, the model is initially trained for a specific warm-up iteration (1000 iterations) without incorporating the full-spectra spectrum maps. Following this, the common BRDF parameters and normals for the full-spectra are initialized (see Fig. 1) using the average values from all other spectra, and this initialization step is integrated into the training process. By including these adequate priors, the optimization of parameters is guided more effectively, leading to better outcomes as demonstrated in the quantitative and qualitative analysis.",
            "The results presented in Table 7 clearly indicate that incorporating information from other spectra leads to improved average performance metrics for the rendered output across different real-world scenes. The higher average values achieved regarding PSNR and SSIM and the lower LPIPS values demonstrate enhancements when utilizing additional spectral information, highlighting the effectiveness of this approach in improving rendering quality and material asset estimation."
        ],
        "final_answer": "Initializing normals and common reflectance parameters to the average values from other spectral bands after a warm-up phase provides strong priors that guide the optimization. This leads to faster, more stable convergence of BRDF parameters and yields improved quantitative metrics (higher PSNR and SSIM, lower LPIPS) as well as better qualitative rendering results.",
        "relevant_elements": [
            "Initialization",
            "BRDF parameters"
        ],
        "id": 53,
        "masked_question": "How does [mask1] of normal and common reflectance parameters enhance [mask2] convergence based on training outcomes?",
        "masked_number": 2,
        "masked_elements": [
            "Initialization",
            "BRDF parameters"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.06975v1_figure_1.png",
        "paperid": "2408.06975v1",
        "paper_path": "./papers/2408.06975v1.json",
        "figure_id": "2408.06975v1_figure_1.png",
        "caption": "Figure 1: The proposed spectral Gaussian splatting framework:\nSpectral Gaussian model predicting BRDF parameters, distilled feature fields, and light per spectrum from multi-view spectrum-maps. The full-spectra maps and learnable parameters are introduced later in the training process by initializing them with priors from all other spectra.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What drives integrating CMT into both Image Encoder and Text Encoder for early cross-modal temporal feature fusion?",
        "relevant_section_ids": [
            "1",
            "3.3"
        ],
        "relevant_context": [
            "In this work, we aim at making SAM2 wiser, by addressing these limitations without fine-tuning SAM2 weights, thereby preserving its original capabilities, and without outsourcing modality interaction to external, heavy models. To overcome challenges i) Text understanding and ii) Temporal modeling, we design a learnable Adapter [12] module, named Cross-Modal Temporal Adapter (CMT), with two key principles in mind: a) enabling mutual contamination between visual and linguistic modalities; and b) encoding temporal cues into visual features.",
            "We build on this popular Adapter framework [12] and propose a novel Cross-Modal Temporal Adapter (CMT) which models temporal dynamics within visual features while contaminating each modality with the other.",
            "We integrate the Cross-Modal Temporal Adapter (CMT) into the frozen text and visual encoders at every intermediate layer ℓ."
        ],
        "final_answer": "They integrate CMT into both the image and text encoders so that visual and linguistic features can interact and fuse early—allowing mutual contamination of modalities—and so that motion cues (temporal information) are embedded directly into the features before mask decoding.",
        "relevant_elements": [
            "CMT",
            "Image Encoder",
            "Text Encoder"
        ],
        "id": 59,
        "masked_question": "What drives integrating [mask1] into both Image Encoder and Text Encoder for early cross-modal temporal feature fusion?",
        "masked_number": 1,
        "masked_elements": [
            "CMT"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.17646v1_figure_2.png",
        "paperid": "2411.17646v1",
        "paper_path": "./papers/2411.17646v1.json",
        "figure_id": "2411.17646v1_figure_2.png",
        "caption": "Figure 2: Overview of SAMWISE.\nWe build on a frozen SAM2 and a frozen Text Encoder to segment images in video given a textual description.\nWe incorporate the Cross-Modal Temporal Adapter (CMT) into the text and visual encoders at every intermediate layer k𝑘kitalic_k to model temporal dynamics within visual features while contaminating each modality with the other. Then, we extract the [CLS] and verb embeddings, namely Contextual and Motion prompts, from the adapted textual features and project them through a learnable MLP. The final embedding is used to prompt the Mask Decoder, which outputs the segmentation mask. Finally, the Conditional Memory Encoder detects when a new candidate object, aligned with the caption, appears in the frame, enabling SAM2 to dynamically refocus its tracking.",
        "qtype": "Design_Rationale",
        "response": "The integration of the Cross-Modal Temporal Adapter (CMT) into both the Image Encoder and Text Encoder at every intermediate layer is driven by two key principles for early cross-modal temporal feature fusion:\n\n1.  **Enabling mutual contamination/interaction between visual and linguistic modalities:** The CMT module encourages modality interaction from early stages of the feature extraction process through symmetric operations like Visual-to-Text Attention (VTA) and Text-to-Visual Attention (TVA). This allows for early alignment between visual content and textual prompts.\n2.  **Encoding temporal cues/modeling temporal dynamics within visual features:** The CMT module, particularly through its Hierarchical Selective Attention (HSA) mechanism, aims to embed motion cues directly into the frame-level features of the visual encoder, capturing temporal evolution and dynamic information."
    },
    {
        "question": "What motivates comparing memory-less tokens and Mask Decoder outputs in Conditional Memory Encoder to correct tracking bias?",
        "relevant_section_ids": [
            "3.5"
        ],
        "relevant_context": [
            "On the other hand, we observe that the memory-less features: i) contain an unbiased representation of the current frames, ii) are aligned with the textual prompt via our CMT (cf. Fig. 5), and iii) can thus be used to propose candidate instances that match the prompt without being biased by past predictions.",
            "Building on these intuitions, we derive a memory-less token T_ml from a cross-attention between the unbiased feature maps and the prompt. Such token represents a summary of the visual features that match the prompt. The idea is to compare it with the mask token T_mask generated by the Mask Decoder, to detect when they represent different objects, i.e., to detect when SAM2 is tracking an object that is not the one currently most aligned with the caption."
        ],
        "final_answer": "Because memory-less features provide an unbiased, text-aligned summary of the current frame’s contents, comparing the memory-less token to the Mask Decoder’s token lets the system detect when SAM2’s memory-based tracking is following the wrong object and thus correct tracking bias.",
        "relevant_elements": [
            "Mask Decoder",
            "Conditional Memory Encoder"
        ],
        "id": 60,
        "masked_question": "What motivates comparing memory-less tokens and [mask1] outputs in [mask2] to correct tracking bias?",
        "masked_number": 2,
        "masked_elements": [
            "Mask Decoder",
            "Conditional Memory Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.17646v1_figure_2.png",
        "paperid": "2411.17646v1",
        "paper_path": "./papers/2411.17646v1.json",
        "figure_id": "2411.17646v1_figure_2.png",
        "caption": "Figure 2: Overview of SAMWISE.\nWe build on a frozen SAM2 and a frozen Text Encoder to segment images in video given a textual description.\nWe incorporate the Cross-Modal Temporal Adapter (CMT) into the text and visual encoders at every intermediate layer k𝑘kitalic_k to model temporal dynamics within visual features while contaminating each modality with the other. Then, we extract the [CLS] and verb embeddings, namely Contextual and Motion prompts, from the adapted textual features and project them through a learnable MLP. The final embedding is used to prompt the Mask Decoder, which outputs the segmentation mask. Finally, the Conditional Memory Encoder detects when a new candidate object, aligned with the caption, appears in the frame, enabling SAM2 to dynamically refocus its tracking.",
        "qtype": "Design_Rationale",
        "response": "The comparison between memory-less tokens and Mask Decoder outputs in the Conditional Memory Encoder is motivated by the need to address and correct **tracking bias**.\n\nHere's a step-by-step breakdown:\n\n1.  **Tracking Bias Problem**: As stated in the \""
    },
    {
        "question": "Why integrate Variance-based Sample Pruning before LLM-based Sample Scoring?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "Although it is possible to present all identified noisy samples $\\mathcal{S}_{nd}$ to the LLMs for scoring, this approach would be prohibitively time-consuming due to the massive interactions in the recommender system.",
            "Hard sample candidates $\\mathcal{S}_{H}$ are collected by … With the increasing $k$, more candidates will be selected in latter training iterations and provided to LLM-based Sample Scoring to identify hard samples further."
        ],
        "final_answer": "Variance-based Sample Pruning is introduced to dramatically cut down the number of candidate samples that need costly LLM inference. By first selecting a small subset of high‐variance (i.e. likely hard) samples, the framework avoids the prohibitive expense of scoring all noisy samples with the LLM, making the subsequent LLM‐based Sample Scoring module computationally feasible.",
        "relevant_elements": [
            "Variance-based Sample Pruning",
            "LLM-based Sample Scoring"
        ],
        "id": 61,
        "masked_question": "Why integrate [mask1] before [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Variance-based Sample Pruning",
            "LLM-based Sample Scoring"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.10343v1_figure_2.png",
        "paperid": "2409.10343v1",
        "paper_path": "./papers/2409.10343v1.json",
        "figure_id": "2409.10343v1_figure_2.png",
        "caption": "Figure 2: \nThe overview of the LLMHD framework.\nLLMHD leverages LLMs to differentiate hard and noisy samples, thereby enhancing the denoising recommender training task.\nThe framework identifies hard samples through three main modules: (1) Variance-based Sample Pruning, (2) LLM-based Sample Scoring, and (3) Iterative Preference Updating.",
        "qtype": "Design_Rationale",
        "response": "The Variance-based Sample Pruning ([mask1]) is integrated before the LLM-based Sample Scoring ([mask2]) to reduce computational cost. As stated in the text, \"Variance-based Sample Pruning reduces the computation of calling LLMs by selecting a subset of hard sample candidates.\" This is because presenting all identified noisy samples to LLMs for scoring \"would be prohibitively time-consuming due to the massive interactions in the recommender system.\" Therefore, pruning first selects a smaller, more relevant subset of hard sample candidates, making the subsequent LLM-based Sample Scoring more efficient and feasible."
    },
    {
        "question": "What justifies Iterative Preference Updating following LLM-based Sample Scoring?",
        "relevant_section_ids": [
            "4.4"
        ],
        "relevant_context": [
            "Accurate user preference θ is critical for effective LLM sample scoring.",
            "However, the θ summarized based on interacted items do not fully capture user interests due to the inclusion of disliked items, i.e., false-positives, and the exclusion of liked items, i.e., false-negatives.",
            "To mitigate this problem, we refine user preferences iteratively by excluding dislikes and incorporating likes."
        ],
        "final_answer": "Iterative Preference Updating is justified because the initial user‐preference summary—derived from historical interactions—can be biased by false‐positive (disliked) and false‐negative (overlooked liked) items. By iteratively removing dislikes and adding overlooked likes, the module refines the user preference representation, ensuring more accurate LLM‐based sample scoring.",
        "relevant_elements": [
            "Iterative Preference Updating",
            "LLM-based Sample Scoring"
        ],
        "id": 62,
        "masked_question": "What justifies [mask1] following LLM-based Sample Scoring?",
        "masked_number": 1,
        "masked_elements": [
            "Iterative Preference Updating"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.10343v1_figure_2.png",
        "paperid": "2409.10343v1",
        "paper_path": "./papers/2409.10343v1.json",
        "figure_id": "2409.10343v1_figure_2.png",
        "caption": "Figure 2: \nThe overview of the LLMHD framework.\nLLMHD leverages LLMs to differentiate hard and noisy samples, thereby enhancing the denoising recommender training task.\nThe framework identifies hard samples through three main modules: (1) Variance-based Sample Pruning, (2) LLM-based Sample Scoring, and (3) Iterative Preference Updating.",
        "qtype": "Design_Rationale",
        "response": "The \"Iterative Preference Updating\" module follows \"LLM-based Sample Scoring\" to **refine and ensure the accuracy of user preferences, which are critical for effective LLM-based Sample Scoring**.\n\nAs stated in the text:\n*   \"Accurate user preference is critical for effective LLM sample scoring.\"\n*   The initial user preferences, summarized from interacted items, \"do not fully capture user interests due to the inclusion of disliked items, i.e., false-positives, and the exclusion of liked items, i.e., false-negatives.\"\n*   \"To mitigate this problem, we refine user preferences iteratively by excluding dislikes and incorporating likes.\"\n\nTherefore, the iterative preference updating step is necessary to improve the quality of user preferences, enabling the LLM-based Sample Scoring module to more accurately evaluate the hardness of samples in subsequent iterations."
    },
    {
        "question": "How does Variance-based Sample Pruning compute and rank positive and negative variances to select hard sample candidates?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "Specifically, hard sample candidates are selected based on the observation of previous work (2020  ###reference_b3###), which demonstrated that hard samples exhibit relatively higher prediction score variance compared to noisy samples.",
            "Therefore, for samples  D_b , we calculate the prediction scores variance of positive  v_{p,b}  and negative  v_{n,b}  items across multiple epochs (see Equation 17  ###reference_7###).",
            "Then sort them in descending order based on  v_{p,b}  and  v_{n,b}  respectively, where  n_p  and  n_n  denotes the number of positive and negative items in the  D_b  respectively.",
            "Hard sample candidates  C_b  are collected by , where  β  denotes the proportion of hard samples."
        ],
        "final_answer": "Variance-based Sample Pruning first computes, for each mini-batch D_b, the variance of the recommender’s predicted scores over multiple epochs separately for its positive items (v_{p,b}) and its negative items (v_{n,b}). It then sorts the positive‐item variances in descending order by v_{p,b} and the negative‐item variances in descending order by v_{n,b}. Finally, it takes the top β-fraction of each sorted list (i.e., the highest‐variance positive and negative items) and unions them to form the set of hard sample candidates C_b.",
        "relevant_elements": [
            "Variance-based Sample Pruning"
        ],
        "id": 63,
        "masked_question": "How does [mask1] compute and rank positive and negative variances to select hard sample candidates?",
        "masked_number": 1,
        "masked_elements": [
            "Variance-based Sample Pruning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.10343v1_figure_2.png",
        "paperid": "2409.10343v1",
        "paper_path": "./papers/2409.10343v1.json",
        "figure_id": "2409.10343v1_figure_2.png",
        "caption": "Figure 2: \nThe overview of the LLMHD framework.\nLLMHD leverages LLMs to differentiate hard and noisy samples, thereby enhancing the denoising recommender training task.\nThe framework identifies hard samples through three main modules: (1) Variance-based Sample Pruning, (2) LLM-based Sample Scoring, and (3) Iterative Preference Updating.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] \"Variance-based Sample Pruning\" module computes prediction score variance for both positive and negative items across multiple epochs. These variances, denoted as *v_p,b* (for positive items) and *v_n,b* (for negative items), are then sorted in descending order. Hard sample candidates are selected by taking the top items based on these variances: specifically, it combines the set of top *φ* proportion of samples with the highest positive variance (*Top(v_p,b)*) with the set of top *φ* proportion of samples with the highest negative variance (*Top(v_n,b)*)."
    },
    {
        "question": "How does Iterative Preference Updating identify confident false positives for exclusion in preference summaries?",
        "relevant_section_ids": [
            "4.4"
        ],
        "relevant_context": [
            "For every epoch t, we calculate the variance score σⁿ_{u,i} of user–item pairs (u,i) … We divided variance scores into two groups, positive and negative samples, and ordered from lowest to highest, where i⁻_{k,u} and i⁺_{k,u} are the k-th negative and positive sample respectively.",
            "To identify whether a sample is a false positive or false negative in the t-th epoch, we use the indicators ω_{u,i} and φ_{u,i} respectively. The threshold κ employed here follows the same definition as introduced in Equation 7.",
            "We design a robust mechanism to select confident items for preference updates. Formalized as follows, … The δ is a confidence threshold."
        ],
        "final_answer": "Iterative Preference Updating first computes, for each user–item interaction, the variance of the model’s prediction scores over the last T epochs and ranks both interacted (positive) and non-interacted (negative) samples by that variance.  It then flags potential false positives (i.e., interacted items that are likely dislikes) by setting ω_{u,i}=1 for any positive sample whose variance falls below the dynamic threshold κ.  Finally, among those flagged by ω_{u,i}, it only excludes from the user preference summary those whose indicator confidence exceeds a fixed threshold δ—thus ensuring that only items confidently deemed false positives are removed.",
        "relevant_elements": [
            "Iterative Preference Updating"
        ],
        "id": 64,
        "masked_question": "How does [mask1] identify confident false positives for exclusion in preference summaries?",
        "masked_number": 1,
        "masked_elements": [
            "Iterative Preference Updating"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.10343v1_figure_2.png",
        "paperid": "2409.10343v1",
        "paper_path": "./papers/2409.10343v1.json",
        "figure_id": "2409.10343v1_figure_2.png",
        "caption": "Figure 2: \nThe overview of the LLMHD framework.\nLLMHD leverages LLMs to differentiate hard and noisy samples, thereby enhancing the denoising recommender training task.\nThe framework identifies hard samples through three main modules: (1) Variance-based Sample Pruning, (2) LLM-based Sample Scoring, and (3) Iterative Preference Updating.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the Predictor fuse FC1 Input and FC1 Weights to generate active neuron scores?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Predictor",
            "FC1 Input",
            "FC1 Weights"
        ],
        "id": 65,
        "masked_question": "How does the [mask1] fuse FC1 Input and FC1 Weights to generate active neuron scores?",
        "masked_number": 1,
        "masked_elements": [
            "Predictor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.14740v2_figure_2.png",
        "paperid": "2410.14740v2",
        "paper_path": "./papers/2410.14740v2.json",
        "figure_id": "2410.14740v2_figure_2.png",
        "caption": "Figure 2: Overall Architecture of M2Cache.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the Preloader manage layer prefetching from SSD to DRAM under the Preloading Policy?",
        "relevant_section_ids": [
            "5.4"
        ],
        "relevant_context": [
            "Based on the tradeoff analysis of the two schemes mentioned above, we propose pattern-aware SSD preloading, as shown in Figure 8. It consists of two main modules: 1) preloader, which is used to preload the next a few layers of neurons to be used, load them from the SSD, and insert them into DRAM. And 2) the two-level DRAM cache, which stores and manages the preloaded layers.",
            "To design a preloader, there are two main factors we need to determine: 1) when to preload the neurons of one layer based on the inference progress such that the loading latency can be hidden, and 2) which neurons in a certain layer should be loaded such that there will be no explicit accuracy impact.",
            "First, based on our experiments, the one-layer neuron preloading time (from SSD to DRAM cache) is approximately twice as long as the one layer inference time. Therefore, we only need to preload the neuron from the layer that is two or more layers ahead of the current layer inference.",
            "Second, we propose to preload the entire layer to DRAM by identifying the missing neurons in DRAM."
        ],
        "final_answer": "Under the Preloading Policy the Preloader watches the decoding progress and fetches whole layers of FFN neurons from SSD into DRAM two layers ahead of the current inference layer (because SSD→DRAM takes roughly twice a layer’s inference time), and it loads every neuron missing in DRAM so that when the GPU advances to that layer the data are already resident.",
        "relevant_elements": [
            "Preloader",
            "SSD",
            "DRAM"
        ],
        "id": 66,
        "masked_question": "How does the [mask1] manage layer prefetching from SSD to DRAM under the Preloading Policy?",
        "masked_number": 1,
        "masked_elements": [
            "Preloader"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.14740v2_figure_2.png",
        "paperid": "2410.14740v2",
        "paper_path": "./papers/2410.14740v2.json",
        "figure_id": "2410.14740v2_figure_2.png",
        "caption": "Figure 2: Overall Architecture of M2Cache.",
        "qtype": "Implementation_Details",
        "response": "The Preloader, as part of the pattern-aware SSD preloading strategy, manages layer prefetching from SSD to DRAM under the Preloading Policy by performing two main actions:\n\n1.  **When to preload:** It preloads neurons from layers that are at least two layers ahead of the current layer being inferred. This is because the time to preload one layer from SSD to DRAM is approximately twice the time it takes to infer one layer, allowing the preloading latency to be hidden.\n2.  **Which neurons to preload:** It preloads the *entire layer* into DRAM, specifically identifying and loading any neurons from that layer that are currently missing in DRAM."
    },
    {
        "question": "How does HBM Cache's LRU-like cache policy extend classical in-memory caching algorithms?",
        "relevant_section_ids": [
            "5.1",
            "5.3"
        ],
        "relevant_context": [
            "5.1: The multi-level cache complements MP Inference with a two-level caching strategy: 1) GPU-DRAM Cache: Utilizing an LRU cache mechanism, this level stores frequently accessed active neurons directly in the GPU cache.",
            "5.3: Cache Policy: The cache policy is used to update the neurons in each separate cache during inference for different tokens. Here, we employ the Adjacent Token Update (ATU) cache policy. ATU only updates the neurons that differ between tokens, and we don’t use algorithms like sliding windows proposed by LLM-in-a-Flash or the most widely used LRU. ATU is a trade-off between cache hit ratio and cache management overhead. With the proposed high-performance layer-based HBM cache with ATU, the cache hit ratio can reach about 80%, and the cache management overhead is nearly zero."
        ],
        "final_answer": "Rather than relying on a generic recency-based eviction as in classical LRU, the HBM cache is partitioned per transformer layer into contiguous blocks and drives cache updates with an Adjacent Token Update (ATU) policy. ATU exploits the fact that ~80% of active neurons overlap between successive tokens: at each decode step it only loads the small set of neurons that change, achieving LRU-like hit ratios (~80%) while incurring almost zero management overhead.",
        "relevant_elements": [
            "HBM Cache",
            "LRU-like cache policy"
        ],
        "id": 68,
        "masked_question": "How does [mask1]'s LRU-like cache policy extend classical in-memory caching algorithms?",
        "masked_number": 1,
        "masked_elements": [
            "HBM Cache"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.14740v2_figure_2.png",
        "paperid": "2410.14740v2",
        "paper_path": "./papers/2410.14740v2.json",
        "figure_id": "2410.14740v2_figure_2.png",
        "caption": "Figure 2: Overall Architecture of M2Cache.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does STFT with multiple windows parallel multiscale area attention's division of time-frequency spatial information?",
        "relevant_section_ids": [
            "1"
        ],
        "relevant_context": [
            "Xu et al. [25] proposed a multiscale area attention, which applies the transformer-type attention mechanism to the CNN-based model.",
            "This significantly improves the recognition performance by dividing the time-frequency spatial information into granular perspectives.",
            "We preprocess the speech signals with different and overlapping window sizes using short-term Fourier transformation (STFT)."
        ],
        "final_answer": "By applying STFT with multiple window sizes and overlaps, the model produces several spectrograms at different time-frequency resolutions. In effect, each window setting yields a ‘scale’ of representation, mirroring multiscale area attention’s approach of dividing the time-frequency spatial plane into multiple granular perspectives.",
        "relevant_elements": [
            "STFT with multiple windows"
        ],
        "id": 69,
        "masked_question": "How does [mask1] parallel multiscale area attention's division of time-frequency spatial information?",
        "masked_number": 1,
        "masked_elements": [
            "STFT with multiple windows"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.04007v1_figure_1.png",
        "paperid": "2409.04007v1",
        "paper_path": "./papers/2409.04007v1.json",
        "figure_id": "2409.04007v1_figure_1.png",
        "caption": "Figure 1: The overall pipeline of speech emotion recognition with CNN-based efficient channel attention architectures.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does combining ECA block with convolution block compare to spectral temporal channel attention's spatial-channel fusion?",
        "relevant_section_ids": [
            "1",
            "2.2",
            "4.3"
        ],
        "relevant_context": [
            "Guo et al. [27] proposed spectral temporal channel attention, which is a modified version of bottleneck attention module (BAM) [30, 31, 32]. Therefore, it used not only focus on spatial features but also attention to channel features. In addition, it has an independent attention learning structure in all the axes of the input features.",
            "However, channel attention requires more learning parameters than spatial attention because of the two multi-layer perceptron (MLP) layers. More trainable parameters are required when examining the attention structure and considering the more diverse aggregated input features [33]. However, an increase in trainable parameters causes overfitting problems when trainable samples are leaked, such as in SER [34].",
            "To achieve this, the ECA uses a 1-D convolution layer. Therefore, it is highly efficient because it requires only a few trainable parameters equal to the kernel size [37].",
            "ECA can efficiently improve the channel feature of the convolution layer, which is essential for classifying speech emotions. Fig. 5 shows the ECA block used after the convolution block."
        ],
        "final_answer": "Spectral temporal channel attention combines spatial and channel attention via independent modules on each feature axis, but it relies on two-layer MLPs per branch and so introduces a substantial number of extra parameters (and hence a higher overfitting risk). In contrast, inserting the ECA block after a convolution block focuses purely on channel-wise attention, using a single 1-D convolution to learn inter-channel relationships. This yields comparable or better channel representation with only a handful of additional parameters (equal to the ECA kernel size), making it far more parameter-efficient than spectral temporal channel attention’s spatial-channel fusion.",
        "relevant_elements": [
            "ECA Block",
            "Convolution block"
        ],
        "id": 70,
        "masked_question": "How does combining [mask1] with [mask2] compare to spectral temporal channel attention's spatial-channel fusion?",
        "masked_number": 2,
        "masked_elements": [
            "ECA Block",
            "Convolution block"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.04007v1_figure_1.png",
        "paperid": "2409.04007v1",
        "paper_path": "./papers/2409.04007v1.json",
        "figure_id": "2409.04007v1_figure_1.png",
        "caption": "Figure 1: The overall pipeline of speech emotion recognition with CNN-based efficient channel attention architectures.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does integrating ECA blocks after convolution blocks affect channel feature representation efficiency?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "To overcome this situation, we adopt the ECA [35] in the CNN-based model, which can effectively improve the representation of the filters.",
            "ECA can efficiently improve the channel feature of the convolution layer, which is essential for classifying speech emotions."
        ],
        "final_answer": "Integrating ECA blocks after convolution blocks applies a lightweight channel‐wise attention mechanism that learns inter‐filter relationships and weights important channels, thereby boosting the representation capacity of convolutional filters with minimal extra parameters and improving the efficiency of channel feature extraction.",
        "relevant_elements": [
            "ECA block",
            "Convolution block"
        ],
        "id": 71,
        "masked_question": "How does integrating [mask1] after [mask2] affect channel feature representation efficiency?",
        "masked_number": 2,
        "masked_elements": [
            "ECA block",
            "Convolution block"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.04007v1_figure_1.png",
        "paperid": "2409.04007v1",
        "paper_path": "./papers/2409.04007v1.json",
        "figure_id": "2409.04007v1_figure_1.png",
        "caption": "Figure 1: The overall pipeline of speech emotion recognition with CNN-based efficient channel attention architectures.",
        "qtype": "Experimental_Results",
        "response": "Integrating the **ECA Block** after the **Convolution Block** effectively improves the representation of the filters, leading to an increase in the channel feature representation efficiency of the convolution layer. This enhancement helps in extracting emotional features more effectively. The text states: \"ECA can efficiently improve the channel feature of the convolution layer, which is essential for classifying speech emotions.\" and \"As a result, increasing the filter’s representation in the convolution layer helps to extract emotional features.\""
    },
    {
        "question": "How does varying STFT window sizes enhance log-Mel spectrogram representational robustness?",
        "relevant_section_ids": [
            "3.1",
            "5.2",
            "5.4",
            "5.6"
        ],
        "relevant_context": [
            "Section 3.1: \"If the windowing length is longer, the frequency resolution increases; however, the resolution in time decreases. If the windowing length is shorter, the frequency resolution decreases, however, the time resolution increases. Therefore, we need to determine which features are more important in terms of time or frequency. For this purpose, we performed our experiment by using eight different settings during preprocessing.\"",
            "Section 5.2: \"We prepared the different versions of the datasets to search for more effective preprocessing settings with different window sizes and overlaps in the STFT. Therefore, an interval was set based on previous studies. As listed in Table III, most previous studies set the window size from 16 ms to 50 ms. Based on this, we chose eight different window sizes at 5 ms intervals within a slightly wider range of 15 ms to 50 ms. The overlap size was adjusted to obtain the same size of input data.\"",
            "Section 5.4: \"In experiments with different versions of datasets, except [version 5], the best performance of each model can be observed in the higher versions of the datasets. This implies that a larger window size can effectively represent emotional features.\"",
            "Section 5.6: \"As shown in Fig. 9, the model performance tended to increase from dataset versions 1 to 8. In particular, ... version 8 dataset showed better results than the other version datasets in most cases. This indicates that a large-sized window in emotional speech preprocessing is effective.\""
        ],
        "final_answer": "By generating log-Mel spectrograms with multiple STFT window lengths (from 15 ms up to 50 ms), the system captures complementary time–frequency trade-offs—short windows preserve fine temporal changes while long windows yield higher frequency resolution.  This multi-window strategy produces a richer set of spectral features, and empirically the larger window versions (e.g., 50 ms) consistently improve emotional-feature representation, making the learned spectrogram inputs more robust for emotion classification.",
        "relevant_elements": [
            "STFT with Multiple Windows",
            "Log-Mel Spectrograms"
        ],
        "id": 72,
        "masked_question": "How does varying [mask1] enhance log-Mel spectrogram representational robustness?",
        "masked_number": 1,
        "masked_elements": [
            "STFT with Multiple Windows"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.04007v1_figure_1.png",
        "paperid": "2409.04007v1",
        "paper_path": "./papers/2409.04007v1.json",
        "figure_id": "2409.04007v1_figure_1.png",
        "caption": "Figure 1: The overall pipeline of speech emotion recognition with CNN-based efficient channel attention architectures.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Observer feedback refine storyboard generator outputs before agent manager proceeds?",
        "relevant_section_ids": [
            "3",
            "3.1"
        ],
        "relevant_context": [
            "The second step focuses on generating the storyboard. Here, the agent manager provides the story descriptions  and protagonist videos  to the storyboard generator, which produces a series of images aligned with  and . Similar to the previous step, the storyboard results undergo user or observer evaluation until they meet the desired criteria.",
            "Observer. The observer is an optional agent within the framework, and it acts as a critical evaluator, tasked with assessing the outputs of other agents, such as the storyboard generator, and signaling the agent manager to proceed or provide feedback for optimizing the results.",
            "However, existing MLLMs still have limited capability in evaluating images or videos. As demonstrated in our experiments in Appendix A.5, these models cannot distinguish between ground-truth and generated storyboards. Therefore, we implemented the LAION aesthetic predictor as the core of this agent, which can effectively assess the quality of storyboards in certain cases and filter out some low-quality results."
        ],
        "final_answer": "After the storyboard generator produces an initial set of images, the Observer examines them—using an aesthetic quality assessment model (the LAION predictor) or a human review—to score and filter out low-quality frames. If the outputs do not yet meet the desired criteria, the Observer returns feedback to the storyboard generator (via the agent manager) requesting revisions. This loop continues—generate, evaluate, refine—until the Observer signals approval, at which point the agent manager moves on to the next stage.",
        "relevant_elements": [
            "Observer",
            "Agent Manager",
            "Storyboard Generator"
        ],
        "id": 73,
        "masked_question": "How does [mask1] feedback refine storyboard generator outputs before agent manager proceeds?",
        "masked_number": 1,
        "masked_elements": [
            "Observer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.04925v2_figure_2.png",
        "paperid": "2411.04925v2",
        "paper_path": "./papers/2411.04925v2.json",
        "figure_id": "2411.04925v2_figure_2.png",
        "caption": "Figure 2: Our multi-agent framework’s video creation process. Yellow blocks represent the next agent’s input, while blue blocks indicate the current agent’s output. For example, the Storyboard Generator (SG)’s input includes story results and reference videos, and its output consists of storyboard results and the subject mask of the reference videos. The Agent Manager (AM) automatically selects the next agent to execute upon receiving signals from different agents and may request the Observer to evaluate the results when other agents complete their tasks.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does video creator utilize outputs from storyboard generator and subject masks to animate consistent videos?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "During removal, each storyboard I_j undergoes subject segmentation using algorithms like LangSAM, resulting in the subject mask M_j. For redrawing, a user-provided subject image with its background removed is selected, and StoryAnyDoor, fine-tuned based on AnyDoor with {(I_j, M_j)}, fills the mask locations M_j with the customized subject.",
            "Given the reference videos V, the storyboard I, and the story descriptions D, the goal of the video creator is to animate the storyboard following the story descriptions D to form the storytelling videos with consistent subjects of in V.",
            "To reduce the interference of background information and make the trainable parameters focus on learning the identity of the new subject, we further introduce a localization loss L_loc applied on the cross‐attention maps. Specifically, the similarity map S between the encoded subject token embedding and the latent videos is calculated for each cross-attention module, and the subject mask M is leveraged to maximize the values of S inside the subject locations."
        ],
        "final_answer": "The video creator takes the redrawn storyboard images produced by the storyboard generator—where subject masks have been used to segment out and replace the protagonist consistently across shots—and, together with the reference videos and story descriptions, animates these frames into a multi‐shot video. During training, it employs a LoRA‐BE fine‐tuning strategy on a latent diffusion model, using the subject masks in a localization loss on cross‐attention maps so that the model focuses its learning on the subject regions and preserves consistency of the protagonist throughout the generated video.",
        "relevant_elements": [
            "Video Creator",
            "Storyboard Generator"
        ],
        "id": 74,
        "masked_question": "How does [mask1] utilize outputs from storyboard generator and subject masks to animate consistent videos?",
        "masked_number": 1,
        "masked_elements": [
            "Video Creator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.04925v2_figure_2.png",
        "paperid": "2411.04925v2",
        "paper_path": "./papers/2411.04925v2.json",
        "figure_id": "2411.04925v2_figure_2.png",
        "caption": "Figure 2: Our multi-agent framework’s video creation process. Yellow blocks represent the next agent’s input, while blue blocks indicate the current agent’s output. For example, the Storyboard Generator (SG)’s input includes story results and reference videos, and its output consists of storyboard results and the subject mask of the reference videos. The Agent Manager (AM) automatically selects the next agent to execute upon receiving signals from different agents and may request the Observer to evaluate the results when other agents complete their tasks.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] refers to the \"Video Creator\" agent.\n\nHere's how the Video Creator utilizes outputs from the Storyboard Generator and subject masks to animate consistent videos:\n\n1.  **Inputs to Video Creator:** The Video Creator receives the **storyboard results** (a series of images representing each shot), **story descriptions**, and **reference videos**. The diagram also explicitly shows \"Subject Masks of Reference Videos\" as an input or relevant information passed along.\n\n2.  **Animating the Storyboard:** The primary goal of the Video Creator is to \"animate the storyboard following the story descriptions to form the storytelling videos.\" It uses a proposed concept learning method called **LoRA-BE** (built upon DynamiCrafter, an I2V generation model).\n\n3.  **Utilizing Storyboard Results:**\n    *   The storyboard images serve"
    },
    {
        "question": "What privacy or bias issues might affect Zero-shot Detection when matching expert-defined topics?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Zero-shot Detection"
        ],
        "id": 78,
        "masked_question": "What privacy or bias issues might affect [mask1] when matching expert-defined topics?",
        "masked_number": 1,
        "masked_elements": [
            "Zero-shot Detection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.05930v2_figure_1.png",
        "paperid": "2411.05930v2",
        "paper_path": "./papers/2411.05930v2.json",
        "figure_id": "2411.05930v2_figure_1.png",
        "caption": "Figure 1: The BERTrend Framework processes data in time-sliced batches, undergoing preprocessing that includes unicode normalization and paragraph segmentation for very long documents. It applies a BERTopic model to extract topics for each batch, which are merged with prior batches using a similarity threshold to form a cumulative topic set. This data helps track topic popularity over time, identifying strong and weak signals based on dynamically chosen thresholds. Additionally, the framework includes a zero-shot detection feature for targeted topic monitoring, providing more fine-grained results due to document-level matching with topics defined by the expert.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "Why dynamically estimate thresholds from popularity distribution rather than fixed values?",
        "relevant_section_ids": [
            "3.5"
        ],
        "relevant_context": [
            "Using percentiles calculated dynamically over a sliding window offers several advantages:",
            "Adaptability to datasets: The retrospective parameter allows the method to adapt to the input data’s velocity and production frequency.",
            "Forget gate mechanism: The sliding window avoids the influence of outdated signals on current threshold calculations.",
            "Robustness to outliers: Calculating thresholds based on the popularity distribution reduces sensitivity to outlier popularities and prevents thresholds from approaching zero when many signals have faded away."
        ],
        "final_answer": "Dynamically estimating thresholds from the popularity distribution rather than using fixed values provides three key benefits: it adapts to the data’s velocity and production frequency, it ‘forgets’ outdated signals by relying on a sliding window of recent popularity values, and it is robust to outliers by deriving thresholds from the empirical distribution of topic popularities.",
        "relevant_elements": [
            "Calculate Popularities",
            "Estimate Thresholds"
        ],
        "id": 80,
        "masked_question": "Why dynamically [mask1] from popularity distribution rather than fixed values?",
        "masked_number": 1,
        "masked_elements": [
            "Estimate Thresholds"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.05930v2_figure_1.png",
        "paperid": "2411.05930v2",
        "paper_path": "./papers/2411.05930v2.json",
        "figure_id": "2411.05930v2_figure_1.png",
        "caption": "Figure 1: The BERTrend Framework processes data in time-sliced batches, undergoing preprocessing that includes unicode normalization and paragraph segmentation for very long documents. It applies a BERTopic model to extract topics for each batch, which are merged with prior batches using a similarity threshold to form a cumulative topic set. This data helps track topic popularity over time, identifying strong and weak signals based on dynamically chosen thresholds. Additionally, the framework includes a zero-shot detection feature for targeted topic monitoring, providing more fine-grained results due to document-level matching with topics defined by the expert.",
        "qtype": "Design_Rationale",
        "response": "The masked word is \"estimated\".\n\n**Chain of Thought:**\n\n1.  **Identify the masked term:** The question refers to the content highlighted by the red box, which is \"Estimate Thresholds\". Thus, the masked word is \"estimated\".\n2.  **Locate relevant section in the text:** The section \"Trend Classification\" discusses how thresholds are calculated and why. Specifically, it mentions \"two empirical thresholds - the 10th percentile () and the 50th percentile () of popularity values within the window - are computed.\"\n3.  **Find the justification for dynamic thresholds:** The text directly addresses this: \"Using percentiles calculated dynamically over a sliding window offers several advantages:\"\n    *   **Adaptability to datasets:** The method can adapt to the input data’s velocity and production frequency.\n    *   **Forget gate mechanism:** The sliding window prevents outdated signals from influencing current threshold calculations.\n    *   **Robustness to outliers:** Calculating thresholds based on the popularity distribution reduces sensitivity to outlier popularities and prevents thresholds from approaching zero when many signals have faded away.\n\n**Answer:**\n\nThe thresholds are dynamically **estimated** from the popularity distribution rather than using fixed values for the following reasons:\n\n1.  **Adaptability:** Dynamic thresholds (calculated from percentiles over a rolling window) allow the method to adapt to the"
    },
    {
        "question": "What is the motivation behind combining L_affinity, L_dispersion, and L_compactness objectives?",
        "relevant_section_ids": [
            "2.2",
            "3.1"
        ],
        "relevant_context": [
            "Module Specialization – The key goal of MODA is to promote modularity within a multi-layer DNN by cultivating distinct specialized sub-networks tailored to different functionalities, i.e., to predicting particular classes. This functional specialization implies that, ideally, each hidden unit of a layer should activate exclusively in response to input samples from a single class. To this end, we propose two novel training objectives that foster the functional specialization of hidden units in each layer by shaping their activation patterns: (1) intra-class affinity promotes similar subsets of units consistently activated to predict samples within the same class, and (2) inter-class dispersion enforces distinct subsets of units activated to predict samples from different classes.",
            "Module Compactness – In principle, intra-class affinity and inter-class dispersion are sufficient to promote modularity by regulating activations of hidden units within a layer. However, in practice, hidden units with low activation values would still be present across decomposed modules. Specifically, when non-essential neuron activations contribute, even only marginally, to the target predictions of multiple classes, their corresponding weights end up shared unnecessarily in the modules. To address this, we propose the third modularity objective, compactness, whose direct aim is to “disable” unnecessary hidden units used for predicting samples.",
            "As discussed above, our strategy promotes modularity within model M with three novel objectives: (1) intra-class affinity – M should activate similar subsets of neurons in L for samples of the same class; (2) inter-class dispersion – M should activate dissimilar subsets of neurons in L for samples from different classes; and (3) compactness – M should activate a minimal number of neurons in each subset."
        ],
        "final_answer": "They are combined to guide the network to form truly modular sub-networks by (1) encouraging the same subset of neurons to fire for samples of the same class (affinity), (2) pushing different classes to use distinct neuron subsets (dispersion), and (3) enforcing sparsity so that only the essential neurons remain active (compactness), thus yielding fine-grained, compact, accuracy-preserving modules.",
        "relevant_elements": [
            "L_affinity",
            "L_dispersion",
            "L_compactness"
        ],
        "id": 81,
        "masked_question": "What is the motivation behind combining [mask1], L_dispersion, and L_compactness objectives?",
        "masked_number": 1,
        "masked_elements": [
            "L_affinity"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.01074v1_figure_1.png",
        "paperid": "2411.01074v1",
        "paper_path": "./papers/2411.01074v1.json",
        "figure_id": "2411.01074v1_figure_1.png",
        "caption": "Figure 1. High-level overview of MODA",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What reasoning supports using a Module Recognizer prior to Structured Modularization?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Module Recognizer",
            "Structured Modularization"
        ],
        "id": 82,
        "masked_question": "What reasoning supports using a [mask1] prior to [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Module Recognizer",
            "Structured Modularization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.01074v1_figure_1.png",
        "paperid": "2411.01074v1",
        "paper_path": "./papers/2411.01074v1.json",
        "figure_id": "2411.01074v1_figure_1.png",
        "caption": "Figure 1. High-level overview of MODA",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How are intra-class affinity and inter-class dispersion balanced during modular training to shape neuron activations?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "As discussed above, our strategy promotes modularity within model M with three novel objectives: (1) intra-class affinity – M should activate similar subsets of neurons in layer l for samples of the same class; (2) inter-class dispersion – M should activate dissimilar subsets of neurons in layer l for samples from different classes; and (3) compactness – M should activate a minimal number of neurons in each subset.",
            "Inter-class dispersion: … To maximize dispersion between these patterns, we minimize inter-class dispersion loss L_dispersion while training the model M.",
            "Intra-class affinity: … maximizing affinity between activation patterns involves minimizing intra-class affinity loss L_affinity during training.",
            "In summary, incorporating intra-class affinity, inter-class dispersion, and compactness into our loss function yields a unified loss function L for training the model M: L = L_cross_entropy + α·L_affinity + β·L_dispersion + γ·L_compactness. Through mini-batch gradient descent, modular training aims to reduce L_cross_entropy to improve classification accuracy, while simultaneously decreasing the affinity and dispersion losses to encourage similar activations within each class and dissimilar activations across classes."
        ],
        "final_answer": "During modular training, MODA computes two cosine-similarity-based losses on each layer’s activations: an intra-class affinity loss (L_affinity), which it minimizes to encourage the same subset of neurons to fire for samples of the same class, and an inter-class dispersion loss (L_dispersion), which it also minimizes (effectively maximizing angular distance) to push apart activations for samples of different classes. Both losses are combined—alongside the standard cross-entropy and a compactness term—into a single weighted objective. By tuning their weights (α for affinity, β for dispersion), the optimizer jointly enforces that neuron activations become both more consistent within each class and more distinct across classes.",
        "relevant_elements": [
            "L_affinity",
            "L_dispersion",
            "Modular Training"
        ],
        "id": 83,
        "masked_question": "How are intra-class affinity and inter-class dispersion balanced during [mask1] to shape neuron activations?",
        "masked_number": 1,
        "masked_elements": [
            "Modular Training"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.01074v1_figure_1.png",
        "paperid": "2411.01074v1",
        "paper_path": "./papers/2411.01074v1.json",
        "figure_id": "2411.01074v1_figure_1.png",
        "caption": "Figure 1. High-level overview of MODA",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does compactness loss gradient steer Module Recognizer neuron selection for each class module during structured modularization?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "The compactness loss L_c is designed based on L1 norm (Ma et al., 2019 ###reference_b34###), and derives the desired properties from it, as discussed below: \nwhere L_c is the L1 norm of the activation vector a_i^l. During training, L_c facilitates feature selection, ensuring that only the essential neurons are activated for a class. It promotes sparse activation vectors by reducing near-zero activations towards zero, thus resolving the undesired shared influences of neurons encountered in the inter-class dispersion loss.",
            "Once the modular model is trained, MODA identifies the layers’ units that are frequently activated while classifying samples of each class. These units, along with their associated weights, are extracted to form distinct modules. Specifically, the frequency of neuron activation with respect to a particular class C_i is calculated by the number of times a neuron u_j^l is activated in response to input samples from C_i. We define ρ as a threshold to determine whether u_j^l should be included in the module for class C_i based on the frequency of its activations. Formally, the module for class C_i is defined as: \nS_i = { u_j^l | f_{i,j}^l ≥ ρ }"
        ],
        "final_answer": "By including an L1-based compactness term in the loss, MODA’s training gradient continuously pushes non-essential neuron activations toward zero. As a result, after training the network exhibits sparse activation patterns in which only the key neurons remain highly active for each class. During structured modularization, the Module Recognizer measures how often each neuron fires for a given class and selects only those whose activation frequency exceeds a fixed threshold—i.e., the very neurons left ‘unsuppressed’ by the compactness-driven gradient are the ones chosen for each class module.",
        "relevant_elements": [
            "L_compactness",
            "Module Recognizer",
            "Structured Modularization"
        ],
        "id": 84,
        "masked_question": "How does [mask1] loss gradient steer [mask2] neuron selection for each class module during structured modularization?",
        "masked_number": 2,
        "masked_elements": [
            "L_compactness",
            "Module Recognizer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.01074v1_figure_1.png",
        "paperid": "2411.01074v1",
        "paper_path": "./papers/2411.01074v1.json",
        "figure_id": "2411.01074v1_figure_1.png",
        "caption": "Figure 1. High-level overview of MODA",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the attentive statistics pool integrate outputs of the ViT backbone into a single detection embedding?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "The feature extractor f adopts a ViT backbone, which splits the spectrogram into patches, encodes each patch as an embedding by a linear layer, and processes them by stacks of Transformer blocks, outputting a series of patch features.",
            "An attentive statistical pooling layer [19] is appended to the ViT backbone to fuse these patch features into an utterance embedding h, and a linear layer is employed to map h to a low-dimensional detection embedding y, which is further processed by the anomaly detector g."
        ],
        "final_answer": "The attentive statistics pool applies an attentive statistical pooling layer over the sequence of patch-level outputs from the ViT backbone to fuse them into a single utterance embedding h, and then a linear layer projects h into the final low-dimensional detection embedding y.",
        "relevant_elements": [
            "ViT backbone",
            "Attentive Statistics Pool"
        ],
        "id": 85,
        "masked_question": "How does the [mask1] integrate outputs of the [mask2] into a single detection embedding?",
        "masked_number": 2,
        "masked_elements": [
            "Attentive Statistics Pool",
            "ViT backbone"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.14753v1_figure_1.png",
        "paperid": "2408.14753v1",
        "paper_path": "./papers/2408.14753v1.json",
        "figure_id": "2408.14753v1_figure_1.png",
        "caption": "Figure 1: Architecture of the ASD Model in CoopASD. The feature extractor f (⋅)𝑓⋅f(\\cdot)italic_f ( ⋅ ) is updated globally and shared among factories, while the linear classifier ci (⋅)subscript𝑐𝑖⋅c_{i}(\\cdot)italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ( ⋅ ) and KNN detector gi (⋅)subscript𝑔𝑖⋅g_{i}(\\cdot)italic_g start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ( ⋅ ) are uniquely constructed and preserved locally.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the KNN detector utilize the detection embedding to compute anomaly score from local templates?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "The anomaly detector g_i of factory i is a simple KNN detector. A local memory bank M_i of factory i is first set up by the embeddings of the local training dataset X_i: Since X_i only consists of normal audio, M_i serves as a set of normality templates in the feature space.",
            "For each query embedding y_j of the local test dataset Y_i, g_i infers a subset S_j of M_i, which consists of the top-K closest embeddings of M_i to y_j (using cosine distance as the metric).",
            "The anomaly score is defined as the mean distance of S_j to y_j."
        ],
        "final_answer": "The KNN detector first builds a memory bank of normal detection embeddings. For a test embedding, it retrieves its K nearest neighbors from this bank using cosine distance and then defines the anomaly score as the average of those K cosine distances.",
        "relevant_elements": [
            "KNN Detector g_i",
            "Detection Embedding y_j"
        ],
        "id": 86,
        "masked_question": "How does the [mask1] utilize the [mask2] to compute anomaly score from local templates?",
        "masked_number": 2,
        "masked_elements": [
            "KNN Detector g_i",
            "Detection Embedding y_j"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.14753v1_figure_1.png",
        "paperid": "2408.14753v1",
        "paper_path": "./papers/2408.14753v1.json",
        "figure_id": "2408.14753v1_figure_1.png",
        "caption": "Figure 1: Architecture of the ASD Model in CoopASD. The feature extractor f (⋅)𝑓⋅f(\\cdot)italic_f ( ⋅ ) is updated globally and shared among factories, while the linear classifier ci (⋅)subscript𝑐𝑖⋅c_{i}(\\cdot)italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ( ⋅ ) and KNN detector gi (⋅)subscript𝑔𝑖⋅g_{i}(\\cdot)italic_g start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ( ⋅ ) are uniquely constructed and preserved locally.",
        "qtype": "Implementation_Details",
        "response": "The KNN Detector $g_i"
    },
    {
        "question": "How does feature extractor f adapt ViT backbone design for robust spectrogram patch representation?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "For each normal recording x_i^j from the local dataset of factory i, it is first converted to a log-mel spectrogram, then sent to the feature extractor f. SpecAug [16] is applied to the spectrogram which masks a portion of the spectrogram to improve the robustness.",
            "The feature extractor f adopts a ViT [17] backbone, which splits the spectrogram into patches, encodes each patch as an embedding by a linear layer, and processes them by stacks of Transformer [18] blocks, outputting a series of patch features.",
            "An attentive statistical pooling layer [19] is appended to the ViT backbone to fuse these patch features into an utterance embedding h_i^j, and a linear layer is employed to map h_i^j to a low-dimensional detection embedding y_i^j, which is further processed by the anomaly detector.",
            "To improve the robustness, the ViT backbone is initialized from BEATs [20], a pre-trained ViT model for audio classification."
        ],
        "final_answer": "Feature extractor f first applies SpecAug to the log–mel spectrogram to improve robustness, then uses a ViT backbone that splits the spectrogram into patches, projects each patch via a linear layer, and passes them through Transformer blocks. It then pools the resulting patch features with an attentive statistical pooling layer into a single embedding, followed by a linear layer to produce the detection embedding. Finally, the ViT backbone is initialized from the pre-trained BEATs model to further enhance robustness.",
        "relevant_elements": [
            "feature extractor f",
            "ViT backbone"
        ],
        "id": 87,
        "masked_question": "How does [mask1] adapt ViT backbone design for robust spectrogram patch representation?",
        "masked_number": 1,
        "masked_elements": [
            "feature extractor f"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.14753v1_figure_1.png",
        "paperid": "2408.14753v1",
        "paper_path": "./papers/2408.14753v1.json",
        "figure_id": "2408.14753v1_figure_1.png",
        "caption": "Figure 1: Architecture of the ASD Model in CoopASD. The feature extractor f (⋅)𝑓⋅f(\\cdot)italic_f ( ⋅ ) is updated globally and shared among factories, while the linear classifier ci (⋅)subscript𝑐𝑖⋅c_{i}(\\cdot)italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ( ⋅ ) and KNN detector gi (⋅)subscript𝑔𝑖⋅g_{i}(\\cdot)italic_g start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ( ⋅ ) are uniquely constructed and preserved locally.",
        "qtype": "Literature_Background",
        "response": "The [mask1] refers to the Feature Extractor $f(\\cdot)$.\n\nHere's how the Feature Extractor adapts the ViT backbone design for robust spectrogram patch representation:\n\n1.  **Splitting and Encoding:** The ViT backbone \"splits the spectrogram into patches, encodes each patch as an embedding by a linear layer, and processes them by stacks of Transformer blocks, outputting a series of patch features.\" This is the fundamental way ViT processes image-like data (spectrograms in this case) on a patch level.\n\n2.  **Pre-training for Robustness:** To specifically improve the robustness of the patch representations, the ViT backbone is initialized from **BEATs [20]**, which is a pre-trained ViT model specifically for **audio classification**. This pre-training allows the model to learn powerful and generalizable representations of audio spectrogram patches before task-specific fine-tuning, thereby inherently improving their robustness.\n\nIn summary, the ViT backbone is adapted for robust spectrogram patch representation primarily by **initializing it with BEATs, a pre-trained ViT model for audio classification**, which equips it with robust, pre-learned features relevant to audio data. Although SpecAug is applied *before* the feature extractor for overall robustness, the adaptation *within* the ViT backbone for patch representation robustness comes from this pre-training."
    },
    {
        "question": "How does linear classifier c_i leverage ArcFace loss methods to constrain decision boundaries under non-iid conditions?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "To further enforce the classification task, ArcFace loss [21] is adopted in CoopASD instead of cross-entropy loss, which further restricts the decision zones: where y_i is the label of x_i, C_i is the number of classes of factory i, and m and s are two hyperparameters that constrain the decision zones. θ_j is the angle between f(x_i) and the registered embedding of the j-th class, which is the j-th column of the weight W_i of the linear classifier c_i: cos(θ_j) = f(x_i)^T W_i^j / (||f(x_i)|| ||W_i^j||).",
            "Secondly, since the data are completely non-iid, the local linear classifiers of different factories yield distinct decision zones after local training. If a unified classifier is adopted for all factories, the model has to be updated frequently to ensure convergence, which imposes huge burdens on the communication network. Therefore, only the feature extractor f is uploaded and aggregated by the central server, while each linear classifier c_i is maintained locally."
        ],
        "final_answer": "Under completely non-iid conditions, each factory keeps its own linear classifier c_i and trains it locally using an ArcFace loss in place of standard cross-entropy. This loss adds an additive angular margin m and a scale s to the cosine similarity between the embedding f(x_i) and the class-weight vector W_i^j, effectively tightening the angular decision boundaries around each class and enforcing larger inter-class margins. By maintaining c_i locally, these margin-constrained decision zones remain specialized for each factory’s unique attribute distribution without requiring frequent global updates.",
        "relevant_elements": [
            "linear classifier c_i",
            "ArcFace loss"
        ],
        "id": 88,
        "masked_question": "How does [mask1] leverage ArcFace loss methods to constrain decision boundaries under non-iid conditions?",
        "masked_number": 1,
        "masked_elements": [
            "linear classifier c_i"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.14753v1_figure_1.png",
        "paperid": "2408.14753v1",
        "paper_path": "./papers/2408.14753v1.json",
        "figure_id": "2408.14753v1_figure_1.png",
        "caption": "Figure 1: Architecture of the ASD Model in CoopASD. The feature extractor f (⋅)𝑓⋅f(\\cdot)italic_f ( ⋅ ) is updated globally and shared among factories, while the linear classifier ci (⋅)subscript𝑐𝑖⋅c_{i}(\\cdot)italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ( ⋅ ) and KNN detector gi (⋅)subscript𝑔𝑖⋅g_{i}(\\cdot)italic_g start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ( ⋅ ) are uniquely constructed and preserved locally.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How do Agent Module’s CoT reasoning and Time Engine’s activity scheduling methodologies interplay?",
        "relevant_section_ids": [
            "2.1"
        ],
        "relevant_context": [
            "Chain-of-Thought (CoT, Wei et al. (2022)) reasoning is incorporated, enabling the agent to generate reasoning alongside its actions.",
            "The agent’s activation is governed by the time engine, which stores the user’s hourly activity probability in a 24-dimension list. Based on these usage patterns, the time engine probabilistically activates the agent at specific times."
        ],
        "final_answer": "The Time Engine governs when each agent is activated (using a 24-hour activity probability schedule), and whenever an agent is activated it uses CoT reasoning within the Agent Module to generate its reasoning and decide on which actions to take.",
        "relevant_elements": [
            "Agent Module",
            "Time Engine"
        ],
        "id": 89,
        "masked_question": "How do [mask1]’s CoT reasoning and Time Engine’s activity scheduling methodologies interplay?",
        "masked_number": 1,
        "masked_elements": [
            "Agent Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.11581v4_figure_2.png",
        "paperid": "2411.11581v4",
        "paper_path": "./papers/2411.11581v4.json",
        "figure_id": "2411.11581v4_figure_2.png",
        "caption": "Figure 2: The workflow of OASIS. During the registration phase, real-world or generated user information will be registered on the Environment Server. In the simulation phase, the Environment Server sends agent information, posts, and users’ relations to the RecSys, which then suggests posts to agents based on their social connections, interests, or hot score of posts. LLM agents receive the recommended posts and generate actions and rationales based on the contents. These actions ultimately update the state of the environment in real-time. The Time Engine manages the agents’ temporal behaviors, while the Scalable Inference handles large-scale inference requests from users.",
        "qtype": "Literature_Background",
        "response": "The [mask1] refers to the **Agent Module**.\n\nHere's how the Agent Module's CoT reasoning and the Time Engine's activity scheduling methodologies interplay:\n\n1.  **Time Engine's Role (Activity Scheduling):** The Time Engine is responsible for governing *when* agents are active. It stores each agent's hourly activity probability (a 24-dimensional vector) and probabilistically activates agents based on these patterns at specific times. This ensures that agents' online behaviors accurately reflect real-world temporal patterns.\n\n2.  **Agent Module's Role (CoT Reasoning):** When an agent in the Agent Module is activated by the Time Engine, it then proceeds to select actions (e.g., liking, reposting) based on filtered posts, its self-description, and contextual factors. During this process, the Agent Module incorporates Chain-of-Thought (CoT) reasoning. This CoT reasoning enables the agent to generate not just an action, but also the *reasoning* or rationale behind that action, enhancing the interpretability of its behavior (e.g., \"This really interests me!\").\n\n**Interplay:** The Time Engine dictates *when* the agents (equipped with CoT reasoning) are \"awake\" and able to perform actions. Once activated by the Time Engine, the Agent Module then utilizes its CoT reasoning to process information, decide on an action, and articulate the rationale for that action. Essentially, the Time Engine provides the temporal trigger for an agent's activity, and once triggered, the Agent Module uses CoT reasoning to perform intelligent, interpretable actions."
    },
    {
        "question": "How does RecSys’s post filtering methodology align with Scalable Inferencer’s asynchronous GPU inference strategy?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "RecSys",
            "Scalable Inferencer"
        ],
        "id": 90,
        "masked_question": "How does [mask1]’s post filtering methodology align with [mask2]’s asynchronous GPU inference strategy?",
        "masked_number": 2,
        "masked_elements": [
            "RecSys",
            "Scalable Inferencer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.11581v4_figure_2.png",
        "paperid": "2411.11581v4",
        "paper_path": "./papers/2411.11581v4.json",
        "figure_id": "2411.11581v4_figure_2.png",
        "caption": "Figure 2: The workflow of OASIS. During the registration phase, real-world or generated user information will be registered on the Environment Server. In the simulation phase, the Environment Server sends agent information, posts, and users’ relations to the RecSys, which then suggests posts to agents based on their social connections, interests, or hot score of posts. LLM agents receive the recommended posts and generate actions and rationales based on the contents. These actions ultimately update the state of the environment in real-time. The Time Engine manages the agents’ temporal behaviors, while the Scalable Inference handles large-scale inference requests from users.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does asynchronous request handling in Scalable Inference optimize Agent Module throughput during high Time Engine activations?",
        "relevant_section_ids": [
            "2.6"
        ],
        "relevant_context": [
            "We design a highly concurrent distributed system where agents, the environment server, and inference services operate as independent modules, exchanging data through information communication channels.",
            "The system leverages asynchronous mechanisms to allow agents to send multiple requests concurrently, even while waiting for responses from previous interactions, and the environment module processes incoming messages in parallel.",
            "Inference services manage GPU resources through a dedicated manager, which balances agent requests across available GPUs to ensure efficient resource utilization."
        ],
        "final_answer": "By employing asynchronous communication channels, the Agent Module can dispatch many inference requests at once without stalling on prior calls. Incoming activations and replies are handled in parallel, and a dedicated GPU‐manager dynamically distributes these concurrent requests across available GPUs, which maximizes throughput when the Time Engine activates large numbers of agents simultaneously.",
        "relevant_elements": [
            "Scalable Inference",
            "Agent Module",
            "Time Engine"
        ],
        "id": 91,
        "masked_question": "How does asynchronous request handling in [mask1] optimize Agent Module throughput during high Time Engine activations?",
        "masked_number": 1,
        "masked_elements": [
            "Scalable Inference"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.11581v4_figure_2.png",
        "paperid": "2411.11581v4",
        "paper_path": "./papers/2411.11581v4.json",
        "figure_id": "2411.11581v4_figure_2.png",
        "caption": "Figure 2: The workflow of OASIS. During the registration phase, real-world or generated user information will be registered on the Environment Server. In the simulation phase, the Environment Server sends agent information, posts, and users’ relations to the RecSys, which then suggests posts to agents based on their social connections, interests, or hot score of posts. LLM agents receive the recommended posts and generate actions and rationales based on the contents. These actions ultimately update the state of the environment in real-time. The Time Engine manages the agents’ temporal behaviors, while the Scalable Inference handles large-scale inference requests from users.",
        "qtype": "Experimental_Results",
        "response": "The masked region in the image refers to the \"Scalable Influencer\", which the text identifies as the \"Scalable Inferencer\".\n\nHere's how asynchronous request handling in the Scalable Inferencer optimizes Agent Module throughput during high Time Engine activations:\n\n1.  **High Time Engine Activations:** The Time Engine probabilistically activates agents. During periods of \"high activations,\" a large number of agents are simultaneously prompted to perform actions, which in turn generates a surge of inference requests from the Agent Module to the Scalable Inferencer.\n\n2.  **Asynchronous Request Handling in Scalable Inferencer:** As described in the \"Scalable Design\" section, OASIS \"leverages asynchronous mechanisms to allow agents to send multiple requests concurrently, even while waiting for responses from previous interactions.\" This means that instead of a sequential \"request-wait-response\" model, the Agent Module can fire off many inference requests to the Scalable Inferencer in parallel.\n\n3.  **Optimizing Agent Module Throughput:**\n    *   **Concurrency:** By sending requests asynchronously, the Agent Module doesn't get blocked, allowing it to continue processing other tasks or initiating more requests. This dramatically increases the rate at which requests are submitted to the inference service.\n    *   **Efficient Resource Utilization:** The Scalable Inferencer, managing GPU resources through a dedicated manager, can then efficiently balance these concurrent agent requests across available GPUs and threads. This parallel processing of inference tasks ensures that the computational resources are fully utilized, preventing bottlenecks that would occur if requests were processed one by one.\n\nIn summary, the asynchronous request handling in the Scalable Inferencer allows the Agent Module to concurrently submit a high volume of inference requests, which are then processed in parallel across optimized GPU resources. This design significantly enhances the Agent Module's throughput, enabling it to manage and simulate a large number of active agents efficiently, especially during peak activation periods driven by the Time Engine."
    },
    {
        "question": "How could dynamic relation updates in Environment Server affect RecSys recommendation freshness under rapid post influx?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Environment Server",
            "RecSys"
        ],
        "id": 92,
        "masked_question": "How could dynamic relation updates in [mask1] affect RecSys recommendation freshness under rapid post influx?",
        "masked_number": 1,
        "masked_elements": [
            "Environment Server"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.11581v4_figure_2.png",
        "paperid": "2411.11581v4",
        "paper_path": "./papers/2411.11581v4.json",
        "figure_id": "2411.11581v4_figure_2.png",
        "caption": "Figure 2: The workflow of OASIS. During the registration phase, real-world or generated user information will be registered on the Environment Server. In the simulation phase, the Environment Server sends agent information, posts, and users’ relations to the RecSys, which then suggests posts to agents based on their social connections, interests, or hot score of posts. LLM agents receive the recommended posts and generate actions and rationales based on the contents. These actions ultimately update the state of the environment in real-time. The Time Engine manages the agents’ temporal behaviors, while the Scalable Inference handles large-scale inference requests from users.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How do cross-domain and video-language contrastive modules jointly enforce domain-invariant reward representations?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "We present our methodology for leveraging contrastive learning to learn domain-invariant features by forming pairs across domains. Specifically, we hope that samples within the same category, irrespective of their domain origin, are positioned closely in feature space, while those from distinct classes are separated regardless of domain.",
            "To promote the model’s ability to capture semantically pertinent features across human and robot domains, we employ a video-language contrastive loss. This approach, distinct from conventional video-language alignment, aims to minimize discrepancies in both domains. It not only aligns temporal dynamics with task semantics but also enhances the adaptation of video features by leveraging the shared action semantics across both domains."
        ],
        "final_answer": "The cross-domain contrastive module pulls together video features of the same task from human and robot domains while pushing apart different tasks, ensuring that the visual representations are aligned across domains. The video-language contrastive module then aligns those domain-invariant video features with their corresponding language embeddings (and repels mismatched video–text pairs) across both human and robot data. Together, these two contrastive objectives minimize inter-domain discrepancies in the visual space and enforce semantic consistency between video and text, yielding a reward model whose representations generalize across human and robot domains.",
        "relevant_elements": [
            "cross-domain contrastive learning",
            "video-language contrastive learning"
        ],
        "id": 93,
        "masked_question": "How do [mask1] and video-language contrastive modules jointly enforce domain-invariant reward representations?",
        "masked_number": 1,
        "masked_elements": [
            "cross-domain contrastive learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.14872v1_figure_2.png",
        "paperid": "2407.14872v1",
        "paper_path": "./papers/2407.14872v1.json",
        "figure_id": "2407.14872v1_figure_2.png",
        "caption": "Figure 2: Adapt2Reward Architecture.\nWe propose Adapt2Reward which incorporates learnable failure prompts into the model s architecture. Our approach starts with clustering failure videos to discern specific patterns. Each identified cluster is then associated with a unique failure prompt. Additionally, we employ cross-domain contrastive learning and domain-specific prompt learning to align text and video representations between human and robot domains.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does K-means clustering of failure videos guide failure prompt generation for nuanced failure modeling?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "By leveraging the distinct context of each failure, we seek to capture the unique precursors leading to each specific failure instance. Acknowledging the varied reasons for failures across different tasks, we propose the creation of a “failure prompts pool” to achieve this. This pool allows for flexible grouping and integration as input into the model, facilitating a nuanced and task-specific approach to understanding failures.",
            "For each task t, whose expression is z, the task-specific prompt pool consists of K learnable prompts: where P_j is a prompt with token length L_p and the same embedding size as z.",
            "We dynamically select suitable prompts for various videos depicting robotic task failures. For each task’s failure videos, we utilize spherical K-means clustering to iteratively update the clustering centers at the end of each training epoch. This process enables the assignment of new pseudo-labels to the failure videos, effectively uncovering distinct failure themes specific to each task.",
            "The assigned pseudo-labels are interpreted as indicators of the respective failure causes. Consequently, we select failure prompts based on their corresponding pseudo-label l, leveraging this alignment to foster understanding of failure dynamics."
        ],
        "final_answer": "K-means clustering is applied to the encoded features of each task’s failure videos to group them into K clusters, each corresponding to a different failure theme. The cluster assignments serve as pseudo‐labels for failure causes, and these pseudo‐labels are used to index into a pool of K learnable prompts. In this way, each failure video is paired with the prompt whose index matches its cluster, yielding task‐ and failure‐specific textual cues that let the model distinguish nuanced failure modes.",
        "relevant_elements": [
            "K-means clustering",
            "failure prompts"
        ],
        "id": 94,
        "masked_question": "How does [mask1] of failure videos guide [mask2] generation for nuanced failure modeling?",
        "masked_number": 2,
        "masked_elements": [
            "K-means clustering",
            "failure prompts"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.14872v1_figure_2.png",
        "paperid": "2407.14872v1",
        "paper_path": "./papers/2407.14872v1.json",
        "figure_id": "2407.14872v1_figure_2.png",
        "caption": "Figure 2: Adapt2Reward Architecture.\nWe propose Adapt2Reward which incorporates learnable failure prompts into the model s architecture. Our approach starts with clustering failure videos to discern specific patterns. Each identified cluster is then associated with a unique failure prompt. Additionally, we employ cross-domain contrastive learning and domain-specific prompt learning to align text and video representations between human and robot domains.",
        "qtype": "Experimental_Results",
        "response": "The `clustering of failure videos` (highlighted by the red box) guides the `failure prompt generation` (highlighted by the blue box) as follows:\n\n1.  **Clustering:** The system performs `spherical K-means clustering` on the `failure videos` for a given task to segment them into distinct groups. Each group represents a different `failure theme` or `cause`.\n2.  **Pseudo-labeling:** This clustering process assigns a `pseudo-label` to each failure video, effectively identifying which cluster (and thus which failure cause/theme) it belongs to.\n3.  **Prompt Selection/Generation:** These `pseudo-labels` directly inform the `selection and generation of failure prompts`. Specifically, for each task, a \"failure prompts pool\" is created, where each learnable prompt in the pool (e.g., represented by a specific `<failure>` token) is associated with a distinct failure theme identified by the clustering.\n4.  **Nuanced Modeling:** When processing a failure video, the `failure prompt` corresponding to its assigned pseudo-label (i.e., its cluster/failure cause) is concatenated with the task description (e.g., `<failure>` + `<robot> closing drawer`). This allows the model to learn and distinguish between various specific reasons for failure, rather than just treating all failures as a single category, thereby achieving nuanced failure modeling."
    },
    {
        "question": "What limitations arise from using K-means clustering to generate Failure Prompts for diverse failure modes?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Failure Prompts",
            "K-means"
        ],
        "id": 95,
        "masked_question": "What limitations arise from using [mask1] clustering to generate Failure Prompts for diverse failure modes?",
        "masked_number": 1,
        "masked_elements": [
            "K-means"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.14872v1_figure_2.png",
        "paperid": "2407.14872v1",
        "paper_path": "./papers/2407.14872v1.json",
        "figure_id": "2407.14872v1_figure_2.png",
        "caption": "Figure 2: Adapt2Reward Architecture.\nWe propose Adapt2Reward which incorporates learnable failure prompts into the model s architecture. Our approach starts with clustering failure videos to discern specific patterns. Each identified cluster is then associated with a unique failure prompt. Additionally, we employ cross-domain contrastive learning and domain-specific prompt learning to align text and video representations between human and robot domains.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What ethical concerns emerge from the Evaluation Module’s self-critique mechanism?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Evaluation Module",
            "self-critique mechanism"
        ],
        "id": 97,
        "masked_question": "What ethical concerns emerge from the [mask1]’s self-critique mechanism?",
        "masked_number": 1,
        "masked_elements": [
            "Evaluation Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.17406v1_figure_1.png",
        "paperid": "2410.17406v1",
        "paper_path": "./papers/2410.17406v1.json",
        "figure_id": "2410.17406v1_figure_1.png",
        "caption": "Figure 1. ProveRAG: automated retrieval-augmented generation & self-critique provenance.",
        "qtype": "Others",
        "response": "The [mask1] refers to the **Evaluation Module**.\n\nThe Evaluation Module's self-critique mechanism is designed to identify accurate predictions (TPs), detected hallucinations (FPs), and failed retrievals/omissions (FNs), providing rationale and provenance to ensure trust.\n\nThe text states in Section 5.2.2, \"However, there are some observed inaccuracies in the detection of FP and FN responses, which contribute to the slight decrease in the exploitation performance values (Table 2).\"\n\nEthical concerns emerge from these observed inaccuracies in the self-critique mechanism itself:\n1.  **False Sense of Security/Trust:** If the Evaluation Module's detection of hallucinations (FPs) or failed retrievals (FNs) is inaccurate, it could lead security analysts to have a false sense of security or trust in the system's responses. Analysts might rely on information that the system *claims* is accurate or complete, but which is actually flawed or omitted critical details.\n2.  **Compromised Decision-Making:**"
    },
    {
        "question": "What alternative retrieval strategies could augment the summary mitigation/exploitation information step?",
        "relevant_section_ids": [
            "4.1.1"
        ],
        "relevant_context": [
            "In the prompt-only experiment, the Relevant Information part is removed as we directly query the LLM about a specific CVE.",
            "We test on two retrieval techniques (to address RQ2). Figure 2 shows how each of these techniques is used. For the chunking technique, the LLM will use top-10 most similar chunks of 15,000 characters from the resources.",
            "In the chunking technique, we split the content of all the URLs into smaller chunks and embed these chunks as vectors using OpenAI’s text-embedding-ada-002 embedding model (by utilizing the LangChain framework...). These embeddings are then indexed to facilitate efficient retrieval. During runtime, the user’s query is also vectorized using the same embedding model, and a similarity search is conducted against the indexed chunks. The top-10 results are retrieved and fed as context into the Gen. LLM’s prompt..."
        ],
        "final_answer": "Besides the summarization-based retrieval, the paper evaluates two alternative strategies: 1) a prompt-only approach that skips any external retrieval and directly asks the LLM about the CVE, and 2) a chunking retrieval technique that splits the raw web content into fixed-size chunks, embeds them with a vector model, and retrieves the top-k semantically similar chunks to serve as context for the LLM.",
        "relevant_elements": [
            "Retr. LLM",
            "Summary mitigation/exploitation information"
        ],
        "id": 98,
        "masked_question": "What alternative [mask1] strategies could augment the [mask2] step?",
        "masked_number": 2,
        "masked_elements": [
            "Retr. LLM",
            "Summary mitigation/exploitation information"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.17406v1_figure_1.png",
        "paperid": "2410.17406v1",
        "paper_path": "./papers/2410.17406v1.json",
        "figure_id": "2410.17406v1_figure_1.png",
        "caption": "Figure 1. ProveRAG: automated retrieval-augmented generation & self-critique provenance.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What is the motivation behind separating retrieval and generation LLMs into distinct modules?",
        "relevant_section_ids": [
            "3",
            "4",
            "4.1.1"
        ],
        "relevant_context": [
            "RQ2: How to manage information overload in the context of RAG-based LLMs for complex queries? Another significant problem we aim to solve is the issue of information overload (i.e., arising from context window limitations). This problem of inability of LLMs to process massive amounts of information and identify relevant information can lead to less effective responses, as discussed in literature (Liu et al., 2024 ###reference_b17###). While more information is often seen as beneficial, our research shows that in the context of LLM-powered vulnerability analysis, an abundance of data can lead to inefficiencies (when chunking technique is used). The summarization technique we encountered in ProveRAG, can alleviate this issue. This technique can make the system especially effective in handling more complex cybersecurity issues, such as CVE mitigation queries that require more attention on additional relevant resources.",
            "ProveRAG works based on two main stages: The generation module and the evaluation module. Figure 1 shows the overall architecture. First, in the generation module, the Retr. LLM will load web content from external sources (starting from NVD) about a CVE vulnerability, and it will summarize the content with respect to the exploitation and mitigation information. Next, the Gen. LLM will look at the summaries and generates detailed exploitation and mitigation strategies for that specific CVE.",
            "A key advantage of the summarizing technique is its efficiency in handling large-scale data without relying extensively on document chunking, which enhances retrieval quality and accuracy of responses. This makes the system particularly suited for addressing more complex cybersecurity queries, such as those related to CVE mitigation that require exploration of more external resources."
        ],
        "final_answer": "By splitting the workflow into a retrieval LLM (which gathers and summarizes up-to-date external content) and a generation LLM (which uses that concise, relevant summary to produce exploitation and mitigation guidance), ProveRAG is able to (1) manage information overload and long document contexts, (2) overcome the temporal scope limits of pretrained models by integrating fresh data, and (3) provide more accurate, focused, and trustworthy responses.",
        "relevant_elements": [
            "Retr. LLM",
            "Gen. LLM"
        ],
        "id": 99,
        "masked_question": "What is the motivation behind separating [mask1] and [mask2] into distinct modules?",
        "masked_number": 2,
        "masked_elements": [
            "Retr. LLM",
            "Gen. LLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.17406v1_figure_1.png",
        "paperid": "2410.17406v1",
        "paper_path": "./papers/2410.17406v1.json",
        "figure_id": "2410.17406v1_figure_1.png",
        "caption": "Figure 1. ProveRAG: automated retrieval-augmented generation & self-critique provenance.",
        "qtype": "Design_Rationale",
        "response": "The motivation behind separating the `Retr. LLM` (Retrieval LLM) and `Gen. LLM` (Generation LLM) into distinct modules is to specialize their"
    },
    {
        "question": "What is the rationale for integrating provenance evidence into the Evaluation Module?",
        "relevant_section_ids": [
            "3",
            "4.1.2"
        ],
        "relevant_context": [
            "One other key motivation for developing ProveRAG is the critical requirement to enhance the accuracy and trustworthiness of threat analysis by mitigating issues related to hallucination and omission errors. ProveRAG addresses this by integrating authoritative sources such as NVD and CWE into its framework. This integration ensures that the recommendations provided by ProveRAG are grounded in reliable and verifiable data, which we call provenance. To leverage the capabilities of LLMs, ProveRAG utilizes a structured, explicit, and concise prompt designed with a chain-of-thoughts technique (Wei et al., 2022). This approach compels the LLM to substantiate its responses with evidence, enhancing the credibility of the output.",
            "We carefully and iteratively designed structured, detailed, and succinct prompts with the chain-of-thought technique (Wei et al., 2022) to guide the model to think before answering while providing evidence. ... For these attributes, we ask the LLM to provide a value: True Positive (TP) ... rationale, and finally the provenance attribute where the LLM is tasked to show evidence for its response."
        ],
        "final_answer": "The Evaluation Module integrates provenance evidence to compel the LLM to substantiate its outputs with verifiable information from authoritative sources, thereby mitigating hallucinations and omissions, bolstering the accuracy and credibility of its threat analysis, and providing analysts with a transparent, auditable trail that they can trust.",
        "relevant_elements": [
            "provenance",
            "Evaluation Module"
        ],
        "id": 100,
        "masked_question": "What is the rationale for integrating [mask1] evidence into the Evaluation Module?",
        "masked_number": 1,
        "masked_elements": [
            "provenance"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.17406v1_figure_1.png",
        "paperid": "2410.17406v1",
        "paper_path": "./papers/2410.17406v1.json",
        "figure_id": "2410.17406v1_figure_1.png",
        "caption": "Figure 1. ProveRAG: automated retrieval-augmented generation & self-critique provenance.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to \"provenance\", which includes the \"Response\" and \"Evidence\".\n\nThe rationale for integrating provenance (response and evidence) into the Evaluation Module is to:\n\n1.  **Enhance Accuracy and Trustworthiness:** As stated in RQ3, \"ProveRAG addresses this by integrating authoritative sources such as NVD and CWE into its framework. This integration ensures that the recommendations provided by ProveRAG are grounded in reliable and verifiable data, which we call provenance.\"\n2.  **Mitigate Hallucination and Omission Errors:** The module's goal is to address \"issues related to hallucination and omission errors\" by substantiating responses with evidence.\n3.  **Provide Transparency and Auditability:** \"The system’s commitment to provenance is highlighted by its meticulous documentation of the sources of information it uses, creating a transparent and auditable trail.\"\n4.  **Foster Trust and Enable Verification:** This feature \"not only bolsters the analytical accuracy of ProveRAG but also fosters trust among security analysts by enabling them to verify the system’s recommendations.\" The Eval. LLM explicitly provides provenance \"by showing similar pieces of information from both the response and the context while providing rationale to ensure trust.\"\n\nIn summary, integrating provenance ensures that the system's output (response) is backed by verifiable evidence from authoritative sources, leading to more accurate, trustworthy, and auditable threat analyses, and building confidence in the security analyst."
    },
    {
        "question": "What motivates integrating feature selection and data balancing sequentially in pre-processing stage?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Feature Selection",
            "Data Balancing"
        ],
        "id": 101,
        "masked_question": "What motivates integrating [mask1] and [mask2] sequentially in pre-processing stage?",
        "masked_number": 2,
        "masked_elements": [
            "Feature Selection",
            "Data Balancing"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.02670v1_figure_1.png",
        "paperid": "2411.02670v1",
        "paper_path": "./papers/2411.02670v1.json",
        "figure_id": "2411.02670v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed methodology",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "Why group mean SHAP values for TP and FP before visual analysis in Decision Making Module?",
        "relevant_section_ids": [
            "3.2",
            "3.3.3"
        ],
        "relevant_context": [
            "Moreover, we generate group-wise feature explanation with mean SHAP values for each of the subgroups, such as true-positive (E_tp_mean), true-negative (E_tn_mean), false-positive (E_fp_mean), and false-negative (E_fn_mean) groups mean SHAP values along with the global mean SHAP.",
            "S1 (L1–L7 in Algorithm 1): Generating and storing the top contributing features’ (usually top 20 features) SHAP bar plots with global mean SHAP values for all four groups (e.g., TP, TN, FP, and FN).",
            "S2 (L8–L15 and L22–L25 in Algorithm 1): For each individual instance outcome, if the prediction is positive (meaning an attack traffic is predicted), then generate plots using the local feature SHAP value E_i by comparing the global SHAP values of the true-positive (E_tp_mean) and false-positive (E_fp_mean) group’s top features through a new overlapping bar graph.",
            "S3 (L16–L20 and L26–L30 in Algorithm 1): In this step, we observe the overlapping graphs to understand visually differentiable or similar feature contributions. We can infer that higher number of overlapping bars in these bar graphs, which we define as c, indicates a particular instance is closer to that corresponding group while the less overlapping scenario indicates distance from that group."
        ],
        "final_answer": "The decision‐making module first computes the mean SHAP values for the true‐positive and false‐positive groups so that each incoming instance’s local SHAP plot can be overlaid and compared against these group baselines. By having the group mean SHAP patterns for TP and FP, the analyst can visually inspect which group the new instance more closely resembles (via overlapping bar counts) and thereby decide whether the model’s positive prediction is likely correct (TP) or a false positive (FP).",
        "relevant_elements": [
            "Mean SHAP Value",
            "Decision Making Module"
        ],
        "id": 102,
        "masked_question": "Why group mean SHAP values for TP and FP before visual analysis in [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "Decision Making Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.02670v1_figure_1.png",
        "paperid": "2411.02670v1",
        "paper_path": "./papers/2411.02670v1.json",
        "figure_id": "2411.02670v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed methodology",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does Pre-Processing integrate feature selection and data balancing to ensure feature consistency?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Pre-Processing",
            "Feature Selection",
            "Data Balancing"
        ],
        "id": 103,
        "masked_question": "How does [mask1] integrate feature selection and data balancing to ensure feature consistency?",
        "masked_number": 1,
        "masked_elements": [
            "Pre-Processing"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.02670v1_figure_1.png",
        "paperid": "2411.02670v1",
        "paper_path": "./papers/2411.02670v1.json",
        "figure_id": "2411.02670v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed methodology",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the Decision Making Module leverage overlapping SHAP bar plots for individual instance classification?",
        "relevant_section_ids": [
            "3.3.3"
        ],
        "relevant_context": [
            "S2 (L8-L15 and L22-L25 in Algorithm 1): For each individual instance outcome, if the prediction is positive (meaning an attack traffic is predicted), then generate plots using the local feature SHAP value Ei by comparing the global SHAP values of the true-positive (Etp_mean) and false-positive (Efp_mean) group’s top features through a new overlapping bar graph. On the other hand, if the prediction is negative (meaning a benign traffic is predicted), then the local features’ SHAP values would be mapped in overlapping bar graphs with the corresponding features from both the true-negative (Etn_mean) and false-negative (Efn_mean) groups.",
            "S3 (L16-L20 and L26-L30 in Algorithm 1): In this step, we observe the overlapping graphs to understand visually differentiable or similar feature contributions. We can infer that higher number of overlapping bars in these bar graphs which we define as N_overlap indicates a particular instance is closer to that corresponding group while the less overlapping scenario indicates distance from that group. Using this metrics from the respective graphs, an analyst can finally take the decision to mark a prediction as correct (TP, TN) or incorrect (FP, FN)."
        ],
        "final_answer": "The Decision Making Module overlays an individual instance’s local SHAP bar plot with the precomputed group‐level SHAP bar plots for the two relevant subgroups (TP vs. FP if the model predicted “attack,” or TN vs. FN if it predicted “benign”). It then counts how many feature bars overlap between the instance and each group. A higher count of overlapping bars indicates that the instance’s explanation is closer to that group’s characteristic pattern, guiding the analyst to decide whether the instance is correctly classified or is a false positive/false negative.",
        "relevant_elements": [
            "Decision Making Module",
            "Overlapping SHAP bar plots"
        ],
        "id": 104,
        "masked_question": "How does the [mask1] leverage overlapping SHAP bar plots for individual instance classification?",
        "masked_number": 1,
        "masked_elements": [
            "Decision Making Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.02670v1_figure_1.png",
        "paperid": "2411.02670v1",
        "paper_path": "./papers/2411.02670v1.json",
        "figure_id": "2411.02670v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed methodology",
        "qtype": "Implementation_Details",
        "response": "The \"Decision Making Module\" leverages overlapping SHAP bar plots for individual instance classification through a three-step process:\n\n1.  **Preparation of Group-wise Explanations:** Mean SHAP values for the top contributing features are pre-generated and stored for four distinct groups: True Positive (TP), True Negative (TN), False Positive ("
    },
    {
        "question": "How does the disentanglement process transform the physics prior map into distinct degradation region clusters?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "As a common practice, we estimate the illuminance map L by utilizing the maximum RGB channel of image I as L(x)=maxc∈{R,G,B}Ic(x). Then k-means is employed to acquire three clusters representing darkness, well-lit, and high-light regions. These clusters are aggregated as masks Mdark, Mwell, Mhigh.",
            "Under the assumption of local uniformity and homogeneity, a complete and irreducible set of invariants for the color illumination spectrum is given by R= (I_R ∂u I_G − I_G ∂u I_R)^2 + (I_G ∂u I_B − I_B ∂u I_G)^2 + (I_B ∂u I_R − I_R ∂u I_B)^2 + …, which captures features only related to illumination. Consequently, we assert that R functions as a light effects detector.",
            "To extract the light effects, ReLU and normalization functions are first applied to filter out minor disturbances. Then, by filtering invariant R with the well-lit mask Mwell, we obtain the light effects from the well-lit regions: Mlight = Norm(ReLU(R)) ⊙ Mwell, while the well-lit mask is refined: Mwell = Mwell ⊙ (1 − Mlight). With the initial disentanglement in Sec. 3.1, we obtain the final disentanglement: Mdark, Mhigh, Mwell, Mlight. All the masks are stacked to obtain the disentanglement map."
        ],
        "final_answer": "The process begins by computing a physics prior — the per‐pixel illuminance map L via the maximum RGB channel. K-means clustering on L produces three coarse region masks (darkness, well-lit, and high-light). Next, a color-invariant response R derived from the photometric model detects purely illumination‐driven light effects. ReLU and normalization filter R, and this result is masked by the well-lit region to isolate a light-effects mask. The well-lit mask is then refined by removing those light-effect pixels. Finally, the four binary masks (darkness, high-light, refined well-lit, and light effects) are stacked to form the complete disentangled degradation map.",
        "relevant_elements": [
            "Physics Prior",
            "Disentanglement Process"
        ],
        "id": 105,
        "masked_question": "How does the [mask1] transform the physics prior map into distinct degradation region clusters?",
        "masked_number": 1,
        "masked_elements": [
            "Disentanglement Process"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.14504v1_figure_1.png",
        "paperid": "2411.14504v1",
        "paper_path": "./papers/2411.14504v1.json",
        "figure_id": "2411.14504v1_figure_1.png",
        "caption": "Figure 1: Illustration of our motivation. (a) The disentanglement process leverages physical priors. (b) Vanilla structure regularization and the corresponding results. (c) The proposed disentangled regularization and the corresponding results.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How is Neg. from the relative degradation selected to optimize push distances in contrastive learning?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Then, within each degradation region, the anchors A are randomly selected from the patches of generated daytime images G(x_n). The positive examples P are sampled from the same locations with the anchors in the source nighttime images x_n, and the negative examples N are randomly selected from other locations of x_n.",
            "Subsequently, the sample set with the same degradation type will be assigned weights and the contrastive loss will be computed in the following steps.",
            "Within each degradation matrix, a soft reweighting strategy is implemented. Specifically, for each anchor-negative pair, we apply optimal transport to yield an optimal transport plan, serving as a reweighting matrix associated with the disentangled results."
        ],
        "final_answer": "Negative examples for each anchor are drawn by randomly sampling patches from other spatial locations that share the same disentangled degradation label (e.g. well-lit, high-light, darkness, or light-effects). These ‘‘relative’’ negatives are then reweighted via an optimal‐transport–based scheme within each degradation block so that hard negatives receive higher attention when computing the push distances in the contrastive loss.",
        "relevant_elements": [
            "Neg. from the relative degradation",
            "push"
        ],
        "id": 106,
        "masked_question": "How is [mask1] selected to optimize push distances in contrastive learning?",
        "masked_number": 1,
        "masked_elements": [
            "Neg. from the relative degradation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.14504v1_figure_1.png",
        "paperid": "2411.14504v1",
        "paper_path": "./papers/2411.14504v1.json",
        "figure_id": "2411.14504v1_figure_1.png",
        "caption": "Figure 1: Illustration of our motivation. (a) The disentanglement process leverages physical priors. (b) Vanilla structure regularization and the corresponding results. (c) The proposed disentangled regularization and the corresponding results.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How can physics prior disentanglement leverage photometric color invariance techniques?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "To disentangle light effects from well-lit regions, we demonstrate both theoretically and empirically that a color-invariance property can effectively isolate light effects from well-lit regions.",
            "Under the assumption of local uniformity and homogeneity, a complete and irreducible set of invariants for the color illumination spectrum is given by: … Corollary 1 demonstrates that the invariant f^c captures the features only related to illumination. Consequently, we assert that f^c functions as a light effects detector because light effects are mainly related to the illumination. It allows us to design the illumination disentanglement module based on this physical prior.",
            "To extract the light effects, ReLU and normalization functions are first applied to filter out minor disturbances. Then, by filtering invariant f^c with the well-lit mask M_w, we obtain the light effects from the well-lit regions."
        ],
        "final_answer": "Physics-prior disentanglement uses a photometric model (from Kubelka–Munk theory) to derive a color-invariant response f^c that depends only on illumination, not on material reflectance. By computing this invariant over the image and then applying ReLU, normalization, and masking with the well-lit region map, the method isolates and detects purely illumination-driven ‘light effects,’ thereby disentangling them from other well-lit regions.",
        "relevant_elements": [
            "Physics Prior",
            "Disentangle"
        ],
        "id": 107,
        "masked_question": "How can [mask1] [mask2] leverage photometric color invariance techniques?",
        "masked_number": 2,
        "masked_elements": [
            "Physics Prior",
            "Disentangle"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.14504v1_figure_1.png",
        "paperid": "2411.14504v1",
        "paper_path": "./papers/2411.14504v1.json",
        "figure_id": "2411.14504v1_figure_1.png",
        "caption": "Figure 1: Illustration of our motivation. (a) The disentanglement process leverages physical priors. (b) Vanilla structure regularization and the corresponding results. (c) The proposed disentangled regularization and the corresponding results.",
        "qtype": "Literature_Background",
        "response": "The [mask1] \"Physics Prior\" leverages photometric color invariance by introducing a photometric model based on Kubelka-Munk theory. This model leads to the derivation of a color invariant `I` (as described in Corollary 1 and Equation 4), which is explicitly stated to \"capture the features only related to illumination\" and function as a \"light effects detector\". This invariant is suitable for extracting illumination information due to its invariant response to regions with high color saturation.\n\nThe [mask2] \"Disentanglement Process\" builds upon this by computationally incorporating the photometric color invariance. It calculates a final invariant `I_final` (Equations 5 and 6) using second and third-order components, derived from and its partial derivatives, which are estimated using a Gaussian color model (Equation 7) and Gaussian derivative kernels (Equation 8). This computed `I_final` is then utilized to filter and separate light effects from well-lit regions (Equation 9) by applying ReLU and normalization functions and then using the well-lit mask. In essence, the disentanglement process applies the mathematically derived photometric color invariant to segment and identify specific degradation regions, particularly light effects, which are primarily related to illumination."
    },
    {
        "question": "How does using Neg. from the relative degradation extend Neg. from the whole image sampling in contrastive learning?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "For unpaired image translation, contrastive learning has validated its effectiveness for the preservation of content. It targets to maximize the mutual information between patches in the same spatial location from the generated image and the source image as below: … The negative examples N represent patches with locations distinct from that of the anchor.",
            "Degradation-Aware Sampling. In this paper, N2D3 selects the anchor, positive, and negative patches under the guidance of the disentanglement results. Initially, based on the disentanglement mask obtained in the Sec. 3.2, we compute the patch count for different degradation types, denoting as C. Then, within each degradation region, the anchors are randomly selected from the patches of generated daytime images. The positive examples are sampled from the same locations with the anchors in the source nighttime images, and the negative examples are randomly selected from other locations of X."
        ],
        "final_answer": "Instead of drawing negatives uniformly from every other patch in the entire image, N2D3 first groups patches by their disentangled degradation type (e.g., darkness, well-lit, high-light, light effects) and then only samples negatives from within the same degradation group as the anchor. This ‘relative‐degradation’ negative sampling extends the vanilla whole‐image strategy by providing harder, more informative negatives that share the same local illumination/degradation characteristics, while discarding easy inter‐region negatives.",
        "relevant_elements": [
            "Neg. from the whole image",
            "Neg. from the relative degradation"
        ],
        "id": 108,
        "masked_question": "How does using [mask1] extend [mask2] in contrastive learning?",
        "masked_number": 2,
        "masked_elements": [
            "Neg. from the relative degradation",
            "Neg. from the whole image"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.14504v1_figure_1.png",
        "paperid": "2411.14504v1",
        "paper_path": "./papers/2411.14504v1.json",
        "figure_id": "2411.14504v1_figure_1.png",
        "caption": "Figure 1: Illustration of our motivation. (a) The disentanglement process leverages physical priors. (b) Vanilla structure regularization and the corresponding results. (c) The proposed disentangled regularization and the corresponding results.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does trajectory clustering interact with policy retraining in explanation generation methodologies?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "The embeddings are passed through the XMeans clustering algorithm introduced by Pelleg et al. (2000 ###reference_b18###). The implementation used by the authors is the one from Novikov (2019 ###reference_b16###). Using XMeans is an arbitrary choice and in Section 4.5 ###reference_### we will investigate other options.",
            "The cluster representations are embedded obtaining the representative embedding of given trajectories.",
            "The so-called complementary datasets are obtained. That is, for each cluster we create a different dataset where for each cluster j we retain all the data but those trajectories belonging to cluster j itself. We obtain then 10, 8, and 10 complementary datasets for the three environments respectively, and train for each complementary dataset new explanation policies and actions. In particular for Seaquest, Breakout and Q*Bert we use DiscreteSAC Christodoulou (2019 ###reference_b1###), whereas for HalfCheetah we employ SAC Haarnoja et al. (2018 ###reference_b8###).",
            "In the end, the decision made in a given state is attributed to a trajectory cluster."
        ],
        "final_answer": "After obtaining trajectory embeddings, the method applies XMeans to cluster them into semantically meaningful groups. For each cluster, it constructs a complementary dataset by removing the trajectories in that cluster, then retrains a separate explanation policy on each complementary dataset (using DiscreteSAC or SAC). By comparing each retrained policy against the original policy, the approach attributes changes in decisions back to the excluded cluster—thereby generating trajectory‐based explanations.",
        "relevant_elements": [
            "Trajectory Clustering",
            "Training Explanation Policies"
        ],
        "id": 110,
        "masked_question": "How does [mask1] interact with [mask2] in explanation generation methodologies?",
        "masked_number": 2,
        "masked_elements": [
            "Trajectory Clustering",
            "Training Explanation Policies"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.07200v1_figure_1.png",
        "paperid": "2411.07200v1",
        "paper_path": "./papers/2411.07200v1.json",
        "figure_id": "2411.07200v1_figure_1.png",
        "caption": "Figure 1:  Trajectory attribution process by Deshmukh et al. (2023)",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does training explanation policies on complementary datasets validate trajectory cluster attribution methodology?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "The so-called complementary datasets are obtained. That is, for each cluster we create a different dataset where for each cluster j we retain all the data but those trajectories belonging to cluster j itself. We obtain then 10, 8, and 10 complementary datasets for the three environments respectively, and train for each complementary dataset new explanation policies and actions.",
            "In the end, the decision made in a given state is attributed to a trajectory cluster."
        ],
        "final_answer": "By training a separate explanation policy on each complementary dataset—that is, on all trajectories except those in one cluster—we can observe how omitting each cluster affects the policy’s recommended action. The cluster whose removal causes the policy to choose a different action for a given state is then identified as responsible for the original decision. This procedure directly tests and validates that trajectories grouped into each cluster indeed drive the agent’s behavior in those states, confirming the cluster attribution methodology.",
        "relevant_elements": [
            "Training Explanation Policies",
            "Trajectory Cluster Attribution"
        ],
        "id": 111,
        "masked_question": "How does [mask1] on complementary datasets validate [mask2] methodology?",
        "masked_number": 2,
        "masked_elements": [
            "Training Explanation Policies",
            "Trajectory Cluster Attribution"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.07200v1_figure_1.png",
        "paperid": "2411.07200v1",
        "paper_path": "./papers/2411.07200v1.json",
        "figure_id": "2411.07200v1_figure_1.png",
        "caption": "Figure 1:  Trajectory attribution process by Deshmukh et al. (2023)",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does the RL sequence encoder affect the semantic meaning captured by trajectory clusters?",
        "relevant_section_ids": [
            "4.5"
        ],
        "relevant_context": [
            "In Grid-World Environment the LSTM-based Seq2Seq encoding used by the authors has proven to be efficient. However, in this section we set out to experiment with different encoding techniques.",
            "We employed two kinds of pre-trained encoders: Trajectory Transformer … and BERT base model …",
            "Results: Experiments are performed over 250 trajectories. We defer the table of results … as we obtain no notable increase in performance across all metrics. Additionally, an inspection of high-level behaviors of clusters, as in section 5, highlights similar results."
        ],
        "final_answer": "Changing the RL sequence encoder (from LSTM-Seq2Seq to Trajectory Transformer or BERT) did not alter the semantic meaning captured by the trajectory clusters: high-level behaviors remained essentially the same and no cluster-level performance gains were observed.",
        "relevant_elements": [
            "RL Sequence Encoder",
            "Trajectory Clustering"
        ],
        "id": 112,
        "masked_question": "How does the [mask1] affect the semantic meaning captured by trajectory clusters?",
        "masked_number": 1,
        "masked_elements": [
            "RL Sequence Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.07200v1_figure_1.png",
        "paperid": "2411.07200v1",
        "paper_path": "./papers/2411.07200v1.json",
        "figure_id": "2411.07200v1_figure_1.png",
        "caption": "Figure 1:  Trajectory attribution process by Deshmukh et al. (2023)",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Spiking Attenuated Spatiotemporal Attention (TASA) leverage past spike correlations to enrich attention representation?",
        "relevant_section_ids": [
            "3.1",
            "3.1.1"
        ],
        "relevant_context": [
            "Notably, in DS2TA, we extend the attention from \"spatial-only\" to \"spatiotemporal,\" as illustrated in ➇ of Figure 1, where not only the spiking activities of these N neurons at time t but also those occurring before t are attended. This new mechanism allows DS2TA to attend to dependencies taking place in both time and space, and provides a means for fully exploring the spatiotemporal computing power of spiking neurons under the context of transformer models, as shown in Figure 2.",
            "Specifically, the input to the query/key/value neuron at location i in block l is based upon the firing activations of N output neurons from the prior (l–1)-th block that fall under a given Temporal Attention Window (TAW) τ:  s^{(l-1)}_{n,t0}, where w(τ) is the temporally-attenuated synaptic weight specifying the efficacy of a spike evoked by the n-th output neuron of block (l–1) t0 time-steps before on the neuron at location i in block l."
        ],
        "final_answer": "TASA incorporates a Temporal Attention Window so that, when forming Q, K and V, it not only multiplies by the current spike outputs but also aggregates spikes from the past τ time steps.  Each past spike is weighted by a learnable, temporally‐attenuated synaptic weight w(τ), enabling the attention mechanism to capture correlations over both space and time and thereby enrich the representation with spatiotemporal context.",
        "relevant_elements": [
            "Spiking Attenuated Spatiotemporal Attention (TASA)"
        ],
        "id": 113,
        "masked_question": "How does [mask1] leverage past spike correlations to enrich attention representation?",
        "masked_number": 1,
        "masked_elements": [
            "Spiking Attenuated Spatiotemporal Attention (TASA)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.15375v1_figure_1.png",
        "paperid": "2409.15375v1",
        "paper_path": "./papers/2409.15375v1.json",
        "figure_id": "2409.15375v1_figure_1.png",
        "caption": "Figure 1: The overview of denoising spiking transformer with intrinsic plasticity and spatiotemporal attention: DS2TA.",
        "qtype": "Experimental_Results",
        "response": "[mask1] (Spiking Attenuated Spatiotemporal Attention, TASA) leverages past spike correlations to enrich attention representation by extending the attention mechanism from \"spatial-only\" to \"spatiotemporal.\"\n\nHere's how it works:\n1.  **"
    },
    {
        "question": "How does Nonlinear Spiking Attention Denoiser (NSAD) leverage hashmap-based mappings for efficient attention denoising?",
        "relevant_section_ids": [
            "3.2.1",
            "3.2.2"
        ],
        "relevant_context": [
            "Recognizing the central role of spiking attention maps, we propose a learnable hashmap-based Nonlinear Spiking Attention Denoiser (NSAD) to improve the overall transformer performance. NSAD serves the dual-purpose of denoising a given computed attention map, and equally importantly, introducing efficient element-wise nonlinear transformation to enhance expressive power.",
            "The proposed nonlinear spiking attention denoiser (NSAD) offers an efficient solution to addressing the above issues via element-wise hashmap-based nonlinear transformation without non-local memory access and computation, as illustrated in Figure 4. Each head in a transformer with h heads may have unique focuses and parameter distribution. As such, we establish a small hashmap H_j with M entries dedicated to each head j. Each entry in H_j is indexed (addressed) by a specific integer value falling within the range of possible attention values of S and Ŝ, i.e., H_j[v] specifies the integer value to which all entries with value v in the attention map associated with head j are transformed to.",
            "Since NSAD produces nonlinear transformed denoised maps using simple integer-based lookups of small hashmaps, it is computationally efficient and hardware-friendly. For a block of 12-head attention, only M integer values need to be stored in the hashmaps while there are O(h·N²) block-level weight parameters. The complexity of computing a denoised attention map is O(M) per head, which can also be easily parallelized on hardware."
        ],
        "final_answer": "NSAD builds a small lookup table (hashmap) per attention head, where each possible discrete attention value is mapped to a denoised output via a simple integer-based lookup. During inference, every entry in the raw spike-based attention map is replaced by its corresponding hashmap entry, enabling element-wise nonlinear denoising without expensive exponentials or global memory access. This lookup-based scheme requires only M stored integers per head and runs in O(M) time per head, making it both computationally and hardware efficient.",
        "relevant_elements": [
            "Nonlinear Spiking Attention Denoiser (NSAD)"
        ],
        "id": 114,
        "masked_question": "How does [mask1] leverage hashmap-based mappings for efficient attention denoising?",
        "masked_number": 1,
        "masked_elements": [
            "Nonlinear Spiking Attention Denoiser (NSAD)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.15375v1_figure_1.png",
        "paperid": "2409.15375v1",
        "paper_path": "./papers/2409.15375v1.json",
        "figure_id": "2409.15375v1_figure_1.png",
        "caption": "Figure 1: The overview of denoising spiking transformer with intrinsic plasticity and spatiotemporal attention: DS2TA.",
        "qtype": "Experimental_Results",
        "response": "The Nonlinear Spiking Attention Denoiser (NSAD) leverages hashmap-based mappings for efficient attention denoising in the following ways:\n\n1.  **Head-specific Hashmaps:** For each attention head in the transformer, a small, dedicated hashmap is established.\n2.  **Element-wise Transformation via Lookup:** Each entry in these hashmaps is indexed by a specific integer value, representing a possible value found in the spiking attention map. During operation, every value in the computed spiking attention map undergoes an element-wise lookup in its corresponding head's hashmap. The looked-up value is the transformed, denoised output.\n3.  **Denoising and Nonlinearity:** These hashmap lookups serve a dual purpose:\n    *   **Denoising:** They suppress noise in the"
    },
    {
        "question": "What are potential computational bottlenecks of Spiking Attenuated Spatiotemporal Attention under expanded temporal windows?",
        "relevant_section_ids": [
            "3.1.1",
            "3.1.2"
        ],
        "relevant_context": [
            "The spiking spatio-temporal attention is confined within a Temporal Attention Window (TAW) to limit computational complexity.",
            "The spatiotemporal attention in Eq. 1 involves T temporally-dependent weights W_{ij,τ} for a pair of presynaptic and postsynaptic neurons. We introduce a learnable scheme, called attenuated temporal weight replica, to reduce the number of temporally-dependent weights by a factor of T."
        ],
        "final_answer": "If the temporal window T grows large, the spiking attenuated spatiotemporal attention must gather and multiply spikes from all preceding T time-steps for every neuron, driving up compute cost linearly with T. Likewise, without the temporal weight-replica scheme, one would need to store and update T distinct sets of synaptic weights, ballooning parameter-memory requirements by a factor of T. Both the per-neuron summation over T past frames and the T× increase in weight matrices thus become the primary computational bottlenecks as the temporal window expands.",
        "relevant_elements": [
            "Spiking Attenuated Spatiotemporal Attention (TASA)"
        ],
        "id": 115,
        "masked_question": "What are potential computational bottlenecks of [mask1] under expanded temporal windows?",
        "masked_number": 1,
        "masked_elements": [
            "Spiking Attenuated Spatiotemporal Attention (TASA)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.15375v1_figure_1.png",
        "paperid": "2409.15375v1",
        "paper_path": "./papers/2409.15375v1.json",
        "figure_id": "2409.15375v1_figure_1.png",
        "caption": "Figure 1: The overview of denoising spiking transformer with intrinsic plasticity and spatiotemporal attention: DS2TA.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative mechanism could replace learnable nonlinear denoise hashmaps in NSAD to improve efficiency?",
        "relevant_section_ids": [
            "3.2.1"
        ],
        "relevant_context": [
            "Secondly, it has been shown that applying row or column-based nonlinear softmax operations to attention maps improves performance in ANN-based transformers. However, softmax induces exponential operations and non-local memory access and data summations, which are costly and not hardware-friendly (Dao et al., 2022 ###reference_b4###)."
        ],
        "final_answer": "Row- or column-based nonlinear softmax operations on the attention maps.",
        "relevant_elements": [
            "Nonlinear Spiking Attention Denoiser (NSAD)"
        ],
        "id": 116,
        "masked_question": "What alternative mechanism could replace [mask1] in [mask2] to improve efficiency?",
        "masked_number": 2,
        "masked_elements": [
            "learnable nonlinear denoise hashmaps",
            "Nonlinear Spiking Attention Denoiser (NSAD)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.15375v1_figure_1.png",
        "paperid": "2409.15375v1",
        "paper_path": "./papers/2409.15375v1.json",
        "figure_id": "2409.15375v1_figure_1.png",
        "caption": "Figure 1: The overview of denoising spiking transformer with intrinsic plasticity and spatiotemporal attention: DS2TA.",
        "qtype": "Others",
        "response": "The question asks for an alternative mechanism that could replace \"Learnable Nonlinear Denoise Hashmaps\" ([mask1]) within the \"Nonlinear Spiking Attention Denoiser (NSAD)\" ([mask2]) to improve efficiency.\n\nFrom the context, specifically section \"Nonlinear Spiking Attention Denoiser (NSAD)\" and \"3.2.2 Learning the Nonlinear Spiking Attention Denoiser\", it is stated:\n*   \"The proposed nonlinear spiking attention denoiser (NSAD) offers an efficient solution to addressing the above issues via element-wise hashmap-based nonlinear transformation without non-local memory access and computation...\"\n*   \"Since NSAD produces nonlinear transformed denoised maps using simple integer-based lookups of small hashmaps, it is computationally efficient and hardware-friendly.\"\n*   This mechanism is introduced as an improvement over methods like softmax, which are described as \""
    },
    {
        "question": "What alternative anchor video generation approaches could improve temporal consistency beyond image-based view synthesis?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Our overall method is agnostic to the specific technique used to generate the anchor frames in the first stage, and in this work we explore two different techniques: point-cloud sequence rendering, and multi-view per-frame image diffusion.",
            "Point Cloud Sequence Rendering. We begin by lifting the pixels from the input image plane into a 3D point cloud representation. For each frame of the source video  ,  , we independently estimate its depth map  using an off-the-shelf monocular depth estimator [6]. By combining the image with its depth map, the point cloud  can be initialized as: ... Next, we take as input the camera motion as a pre-defined trajectory of extrinsic matrices  , where each includes a rotation matrix and a translation matrix representing the camera’s pose (position and orientation), which are used to rotate and translate the point cloud in the camera’s coordinates. We then project the point cloud of each frame back onto the anchored camera plane using the function  to obtain a rendered image with perspective change:  .",
            "Multiview Image Diffusion for Each Frame. When a camera trajectory involves significant rotation and viewpoint changes, point cloud rendering usually fails [102]. To address this, we employ a multiview diffusion model [24]. This approach leverages the fact that multiview image datasets are generally easier to obtain compared to multiview video datasets. Specifically, as shown in Fig. 3, for each frame  of the source video, which represents the condition view, along with its corresponding camera parameters  , the model learns to estimate the distribution of the target image  where  is the target camera parameters which are also provided as input."
        ],
        "final_answer": "Rather than synthesizing each frame independently, you can lift video frames into a 3D point cloud and render the entire sequence under the new camera trajectory (“point-cloud sequence rendering”). This 3D-based approach enforces geometric and temporal coherence across frames and thus yields much more stable, temporally consistent anchor videos than per-frame image diffusion alone.",
        "relevant_elements": [
            "Image-based view synthesis",
            "Anchor video generation"
        ],
        "id": 117,
        "masked_question": "What alternative [mask1] approaches could improve temporal consistency beyond [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Anchor video generation",
            "Image-based view synthesis"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.05003v1_figure_2.png",
        "paperid": "2411.05003v1",
        "paper_path": "./papers/2411.05003v1.json",
        "figure_id": "2411.05003v1_figure_2.png",
        "caption": "Figure 2: ReCapture consists, at setup time, of (a) Anchor video generation (b) Masked video fine-tuning using spatial and temporal LoRAs. To generate the clean output video with the new camera trajectory we simply perform inference of the video model.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates decoupling spatial context via Context-Aware Spatial LoRA and motion via Temporal-Motion LoRA?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "The anchor video from the first stage may exhibit significant artifacts, such as revealed occlusions due to camera movement and temporal inconsistencies such as flickering.",
            "To address these issues, we propose a masked video fine-tuning strategy using temporal motion LoRAs.",
            "Although the video diffusion model with masked fine-tuning automatically fills the invalid regions of the anchor video, the filling may not be consistent with the original context or appearance, and might appear pixelated, as shown in Fig. 8 Line 2.",
            "We propose enhancing the spatial attention layers of the video diffusion model by incorporating a spatial LoRA, which is fine-tuned on the frames of the source video."
        ],
        "final_answer": "Because the noisy anchor video contains two distinct types of errors—temporal artifacts and inconsistencies (e.g., flickering and occlusion artifacts) and spatial/contextual artifacts (e.g., inconsistent appearance and pixelation)—the authors decouple the problem. Temporal-Motion LoRAs use a masked fine-tuning loss to learn correct motion patterns and enforce temporal consistency, while Context-Aware Spatial LoRA is trained on clean source frames to capture the original appearance and background context, ensuring that filled-in regions blend seamlessly with the rest of the video.",
        "relevant_elements": [
            "Context-Aware Spatial LoRA",
            "Temporal-Motion LoRA"
        ],
        "id": 119,
        "masked_question": "What motivates decoupling spatial context via [mask1] and motion via [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Context-Aware Spatial LoRA",
            "Temporal-Motion LoRA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.05003v1_figure_2.png",
        "paperid": "2411.05003v1",
        "paper_path": "./papers/2411.05003v1.json",
        "figure_id": "2411.05003v1_figure_2.png",
        "caption": "Figure 2: ReCapture consists, at setup time, of (a) Anchor video generation (b) Masked video fine-tuning using spatial and temporal LoRAs. To generate the clean output video with the new camera trajectory we simply perform inference of the video model.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What rationale underlies image-based view synthesis in anchor video generation?",
        "relevant_section_ids": [
            "1",
            "3"
        ],
        "relevant_context": [
            "Given the challenge of obtaining paired videos in the wild with varying camera movements, it is hard to solve this problem with a video-to-video pipeline in an end-to-end manner and we separate it into two steps instead.",
            "In more detail, the first stage consists of image-based view synthesis, in which we independently transform each input video frame to produce noisy anchor frames with the new camera pose, along with their validity masks. These frames are typically incomplete; they have artifacts such as missing information from revealed occlusions, and have structural deformations and temporal inconsistencies such as flickering."
        ],
        "final_answer": "Because collecting paired multi-view video data for end-to-end re-angling is impractical in the wild, the authors first approximate each new viewpoint by independently warping or synthesizing each frame to create a noisy “anchor video.” This image-based view synthesis step gives a rough, per-frame estimation of the desired camera motion (with masks for invalid regions) that can then be refined, without requiring full 4D reconstruction or paired training data.",
        "relevant_elements": [
            "Anchor Video Generation",
            "Image-Based View Synthesis"
        ],
        "id": 120,
        "masked_question": "What rationale underlies [mask1] in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Image-Based View Synthesis",
            "Anchor Video Generation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.05003v1_figure_2.png",
        "paperid": "2411.05003v1",
        "paper_path": "./papers/2411.05003v1.json",
        "figure_id": "2411.05003v1_figure_2.png",
        "caption": "Figure 2: ReCapture consists, at setup time, of (a) Anchor video generation (b) Masked video fine-tuning using spatial and temporal LoRAs. To generate the clean output video with the new camera trajectory we simply perform inference of the video model.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates integrating the localization module and DreamBooth for progressive 3D Gaussian editing?",
        "relevant_section_ids": [
            "3",
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "Section 3 (Our Method): “The overall framework of GSEditPro … consists of two main stages. Firstly, we design an attention-based localization module … to locate the editing region in the 3D space using the keywords in the text prompt … Secondly, building upon 3D Gaussians, we implement scene editing leveraging Score Distillation Sampling (SDS) loss with DreamBooth … By integrating optimization and progressive localization, our method achieves precise and detailed local editing.”",
            "Section 3.2 (Locating Gaussian Editing Regions via Cross-Attention): “We propose an attention-based localization module that utilizes the 2D probability maps generated by the cross-attention layers … After that we backproject the 2D masks into 3D space and mark the Gaussians that need editing, enabling precise localization of the editing region explicitly in Gaussians before training.”",
            "Section 3.3 (Optimizing Editing Regions using DreamBooth): “After locating the editing regions, we propose an optimization scheme for 3D Gaussian editing. … DreamBooth possesses sufficient generation ability to guide the training of 3D Gaussians. We utilize the SDS loss … During each training iteration, SDS serves as a 2D guidance to optimize Gaussian parameters iteratively. This process matches the rendering results with the text guidance of the editing, obtaining desired editing results after sufficient training.”"
        ],
        "final_answer": "The method integrates the localization module and DreamBooth because the localization module gives accurate, view-consistent masks of the target editing regions in the explicit 3D-Gaussian representation, while DreamBooth (via fine-tuned diffusion guidance and the SDS loss) provides strong, text-driven generative forces to progressively update only those localized Gaussians. Together, this combination yields precise, high-quality local edits that preserve unrelated areas and remain consistent across views.",
        "relevant_elements": [
            "localization module",
            "DreamBooth"
        ],
        "id": 121,
        "masked_question": "What motivates integrating the [mask1] and [mask2] for progressive 3D Gaussian editing?",
        "masked_number": 2,
        "masked_elements": [
            "localization module",
            "DreamBooth"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.10033v1_figure_1.png",
        "paperid": "2411.10033v1",
        "paper_path": "./papers/2411.10033v1.json",
        "figure_id": "2411.10033v1_figure_1.png",
        "caption": "Figure 1: Method Overview. GSEditPro edits scenes represented by 3D Gaussian Splatting using text prompt only. The key process of our method contains three parts: 1) Locating Gaussian editing regions via cross-attention, which assigns semantic labels to each Gaussian and determines whether the gradients can be propagated between them (Section 3.2); 2) Optimizing editing regions using DreamBooth, which uses ℒS⁢D⁢Ssubscriptℒ𝑆𝐷𝑆\\mathcal{L}_{SDS}caligraphic_L start_POSTSUBSCRIPT italic_S italic_D italic_S end_POSTSUBSCRIPT as the guidance to optimize Gaussian parameters iteratively (Section 3.3); 3) Preserving details with pixel-level guidance, which creates a pseudo-GT image to guide 3D Gaussian rendering for more detailed results (Section 3.4).",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "Why combine SDS loss with DreamBooth fine-tuning during the optimizing stage to guide Gaussian manipulation?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "Section 3.2: “Concretely, we sample rendering output in various views using COLMAP cameras and fine-tune the Stable Diffusion using DreamBooth. DreamBooth is a method that fine-tunes the large-scale text-to-image (T2I) model around a specific target subject, denoted as ‘*’ or other symbols, to ensure its ability to generate images similar to the input data. The preservation loss of DreamBooth will encourage the diffusion model to treat this special class as the default generating style, which increases the accuracy of attention maps as well.”",
            "Section 3.3: “After training on our target dataset, DreamBooth possesses sufficient generation ability to guide the training of 3D Gaussians. We utilize the SDS loss proposed by DreamFusion as the guiding loss function. … This loss is then employed during the back-propagation process to guide the cloning and splitting of the Gaussians, as well as the changes in their parameters. … Therefore, during each training iteration, SDS serves as a 2D guidance to optimize Gaussian parameters iteratively. This process matches the rendering results with the text guidance of the editing, obtaining desired editing results after sufficient training.”"
        ],
        "final_answer": "By first fine-tuning the diffusion model with DreamBooth on the target subject, the model gains strong, subject-specific generative capability and stable attention maps. The SDS loss then leverages that specialized diffusion model as a guidance signal—during each optimization step it back-propagates gradients only through the labeled Gaussians—to drive their cloning, splitting, and parameter updates so that the rendered scene matches the text prompt faithfully.",
        "relevant_elements": [
            "SDS loss",
            "DreamBooth"
        ],
        "id": 122,
        "masked_question": "Why combine [mask1] with [mask2] during the optimizing stage to guide Gaussian manipulation?",
        "masked_number": 2,
        "masked_elements": [
            "SDS loss",
            "DreamBooth"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.10033v1_figure_1.png",
        "paperid": "2411.10033v1",
        "paper_path": "./papers/2411.10033v1.json",
        "figure_id": "2411.10033v1_figure_1.png",
        "caption": "Figure 1: Method Overview. GSEditPro edits scenes represented by 3D Gaussian Splatting using text prompt only. The key process of our method contains three parts: 1) Locating Gaussian editing regions via cross-attention, which assigns semantic labels to each Gaussian and determines whether the gradients can be propagated between them (Section 3.2); 2) Optimizing editing regions using DreamBooth, which uses ℒS⁢D⁢Ssubscriptℒ𝑆𝐷𝑆\\mathcal{L}_{SDS}caligraphic_L start_POSTSUBSCRIPT italic_S italic_D italic_S end_POSTSUBSCRIPT as the guidance to optimize Gaussian parameters iteratively (Section 3.3); 3) Preserving details with pixel-level guidance, which creates a pseudo-GT image to guide 3D Gaussian rendering for more detailed results (Section 3.4).",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does the Localization Module integrate attention maps and segmentation masks to label 3D Gaussians for editing?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Therefore, we propose an attention-based localization module that utilizes the 2D probability maps generated by the cross-attention layers as masks for each view, determining which regions need editing in 2D views.",
            "These 2D maps are then processed as point prompts for the large-scale segmentation model Segment Anything Model(SAM) to obtain a more precise mask for the target region.",
            "After that, we backproject the 2D masks into 3D space and mark the Gaussians that need editing, enabling precise localization of the editing region explicitly in Gaussians before training.",
            "When editing existing objects in the scene, our module chooses points of the processed maps as point prompts for the SAM, with the top 5 points selected based on the highest attention map values as positive ones, while the negative point prompts are chosen based on the lowest 3 values. After that SAM will segment a precise mask of the target for each view.",
            "Masks are back-projected during the differentiable rendering process similar to GaussianEditor and we only allow gradients to propagate within the labeled Gaussians whose weights of back-projection bigger than the threshold. Finally, our method finishes locating Gaussian editing regions explicitly and assigns the Gaussians their binary labels in 3D."
        ],
        "final_answer": "The Localization Module first collects per-view 2D attention maps from the cross-attention layers of a fine-tuned T2I model and thresholds or clusters them to form rough masks. It then feeds these attention-derived point prompts into SAM to produce precise segmentation masks in each view. These 2D masks are back-projected into the 3D Gaussian representation: any Gaussian whose projected contribution to a masked pixel exceeds a threshold is labeled as “to be edited,” while the rest remain unchanged. In this way, the system assigns binary edit/non-edit labels to individual 3D Gaussians before optimization.",
        "relevant_elements": [
            "Localization Module",
            "Attention Maps",
            "Masks"
        ],
        "id": 123,
        "masked_question": "How does the [mask1] integrate attention maps and segmentation masks to label 3D Gaussians for editing?",
        "masked_number": 1,
        "masked_elements": [
            "Localization Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.10033v1_figure_1.png",
        "paperid": "2411.10033v1",
        "paper_path": "./papers/2411.10033v1.json",
        "figure_id": "2411.10033v1_figure_1.png",
        "caption": "Figure 1: Method Overview. GSEditPro edits scenes represented by 3D Gaussian Splatting using text prompt only. The key process of our method contains three parts: 1) Locating Gaussian editing regions via cross-attention, which assigns semantic labels to each Gaussian and determines whether the gradients can be propagated between them (Section 3.2); 2) Optimizing editing regions using DreamBooth, which uses ℒS⁢D⁢Ssubscriptℒ𝑆𝐷𝑆\\mathcal{L}_{SDS}caligraphic_L start_POSTSUBSCRIPT italic_S italic_D italic_S end_POSTSUBSCRIPT as the guidance to optimize Gaussian parameters iteratively (Section 3.3); 3) Preserving details with pixel-level guidance, which creates a pseudo-GT image to guide 3D Gaussian rendering for more detailed results (Section 3.4).",
        "qtype": "Implementation_Details",
        "response": "The [mask1] area illustrates the \"Locating via Cross-Attention\" stage (Section 3.2), which involves integrating attention maps and segmentation masks to label 3D Gaussians. Here's how it works:\n\n1.  **Generating Attention Maps:** DreamBooth (a fine-tuned T2I model) processes sampled views along with the editing prompt (\"a * man wearing a pair of sunglasses.\"). During the Img2Img pipeline, it traces the cross-attention layers to collect \"Attention Maps\" for the target words (e.g., \"sunglasses\"). These maps provide a rough indication of the editing region in 2D views.\n\n2.  **Refining with Localization Module and SAM:**\n    *   The \"Localization Module\" receives these \"Attention Maps.\"\n    *   It refines these rough attention maps into more precise 2D segmentation masks. For existing objects, it uses points from the processed attention maps (specifically, the top 5 highest values as positive prompts and the lowest 3 values as negative prompts) as \"point prompts\" for the Segment Anything Model (SAM). SAM then generates precise 2D masks of the target region for each view.\n    *   For adding"
    },
    {
        "question": "How does DreamBooth apply the SDS loss to iteratively update Gaussian parameters during optimization?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "We utilize the SDS loss proposed by DreamFusion as the guiding loss function.",
            "After obtaining the prompt for editing and the images rendered from random views during training, they are collectively used as inputs to compute L_SDS in DreamBooth.",
            "This loss is then employed during the back-propagation process to guide the cloning and splitting of the Gaussians, as well as the changes in their parameters.",
            "Therefore, during each training iteration, L_SDS serves as a 2D guidance to optimize Gaussian parameters iteratively."
        ],
        "final_answer": "DreamBooth computes the SDS loss by feeding rendered views and the text prompt into the pre-trained diffusion model, measuring the squared-error between predicted and actual noise. During each optimization step, this loss is back-propagated only through the Gaussians marked for editing—guiding their cloning, splitting, and updates to positional, covariance, color, and opacity parameters iteratively until the rendered result aligns with the text guidance.",
        "relevant_elements": [
            "DreamBooth",
            "L_SDS"
        ],
        "id": 124,
        "masked_question": "How does [mask1] apply the SDS loss to iteratively update Gaussian parameters during optimization?",
        "masked_number": 1,
        "masked_elements": [
            "DreamBooth"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.10033v1_figure_1.png",
        "paperid": "2411.10033v1",
        "paper_path": "./papers/2411.10033v1.json",
        "figure_id": "2411.10033v1_figure_1.png",
        "caption": "Figure 1: Method Overview. GSEditPro edits scenes represented by 3D Gaussian Splatting using text prompt only. The key process of our method contains three parts: 1) Locating Gaussian editing regions via cross-attention, which assigns semantic labels to each Gaussian and determines whether the gradients can be propagated between them (Section 3.2); 2) Optimizing editing regions using DreamBooth, which uses ℒS⁢D⁢Ssubscriptℒ𝑆𝐷𝑆\\mathcal{L}_{SDS}caligraphic_L start_POSTSUBSCRIPT italic_S italic_D italic_S end_POSTSUBSCRIPT as the guidance to optimize Gaussian parameters iteratively (Section 3.3); 3) Preserving details with pixel-level guidance, which creates a pseudo-GT image to guide 3D Gaussian rendering for more detailed results (Section 3.4).",
        "qtype": "Implementation_Details",
        "response": "The SDS loss ($\\mathcal{L}_{SDS}$) is applied to iteratively update Gaussian parameters during optimization in the following way:\n\n1.  **Guidance Source:** The $\\mathcal{L}_{SDS}$ is computed using the DreamBooth model. It takes two primary inputs: the editing prompt (text guidance) and images rendered from random views of the 3D scene (specifically, the currently edited scene, $I_{edit}$).\n2.  **Gradient Calculation:** The $\\mathcal{L}_{SDS}$ functions as a guiding loss, providing gradients by comparing the predicted noise from the diffusion model with the actual noise added to the rendered images.\n3.  **Targeted Back-propagation:** Critically, as stated in Section 3.2, the localization module first identifies and labels the specific Gaussians that constitute the editing region. During the optimization, gradients from the $\\mathcal{L}_{SDS}$ are *only allowed to back-propagate to these labeled (edited) Gaussians*. This ensures that only the relevant parts of the 3D scene are modified.\n4.  **Iterative Optimization:** In each training iteration, these gradients guide"
    },
    {
        "question": "How does GSPR transform the Query 3D-GS Scene into a descriptor vector for matching?",
        "relevant_section_ids": [
            "3.2",
            "3.2.1",
            "3.2.2",
            "3.2.3"
        ],
        "relevant_context": [
            "Global Descriptor Generator is used to extract distinctive place recognition descriptors from the proposed MGS representations. To extract the high-level spatio-temporal features, we first voxelize the MGS scene, and then extract local and global features through a backbone network composed of 3D graph convolutions [30] and transformer [31] module. Finally, the spatio-temporal features are fed into NetVLAD-MLPs combos [4] and aggregated into discriminative descriptors.",
            "To tackle the disordered distribution of Gaussians, we first organize the MGS scene into a form that facilitates feature extraction through voxelization. … After the voxel encoding operation, the voxel set of shape  is encoded into an input form of . … Ultimately, the voxel downsampling operation imparts orderliness to the Gaussian scene and reduces the number of Gaussians that need to be processed.",
            "Inspired by the successful application of graph convolution in place recognition [35, 15], we use a 3D-GCN-based [30] graph convolution backbone network to fully exploit the local features in the scene. … We perform zero-mean normalization on the coordinates of the Gaussian graph and subsequently feed the Gaussian graph into stacked 3D graph convolution layers, 3D graph max-pooling layers [30], and ReLU nonlinear activation layers. The graph convolution backbone network generates output feature graph  based on the input features of Gaussian graph , which are then used for subsequent processing.",
            "We use transformers following the previous works [36, 6] to boost place recognition performance. … After adding the positional embeddings to the features and performing feature fusion through 3D graph convolution layers, we feed the position-encoded features into multi-head attention to fully extract the global spatio-temporal information in the scene."
        ],
        "final_answer": "GSPR first voxelizes the Query 3D-GS scene into a regular grid of voxel features. These voxels are encoded and organized into a graph which is processed by stacked 3D graph convolution layers to capture local spatio-temporal patterns. The resulting node features are enhanced with learnable positional embeddings and fed into a transformer (multi-head self-attention) module to aggregate global context. Finally, the fused features are passed through NetVLAD-MLP layers to produce a compact descriptor vector for matching.",
        "relevant_elements": [
            "GSPR",
            "Query 3D-GS Scene"
        ],
        "id": 125,
        "masked_question": "How does [mask1] transform the Query 3D-GS Scene into a descriptor vector for matching?",
        "masked_number": 1,
        "masked_elements": [
            "GSPR"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.00299v1_figure_1.png",
        "paperid": "2410.00299v1",
        "paper_path": "./papers/2410.00299v1.json",
        "figure_id": "2410.00299v1_figure_1.png",
        "caption": "Figure 1: Effectively integrating different modalities is crucial for leveraging multimodal data. GSPR harmonizes multi-view RGB images and LiDAR point clouds into a unified scene representation based on Multimodal Gaussian Splatting. 3D graph convolution and transformer are utilized to extract both local and global spatio-temporal information embedded in the scene. This approach enables the generation of discriminative descriptors for place recognition.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] in the diagram refers to the GSPR (Global Scene Place Recognition) module. According to the text, GSPR is composed of two main components: Multimodal Gaussian Splatting (MGS) and Global Descriptor Generator (GDG). The \"Query 3D-GS Scene\" is an MGS scene representation generated by the Multimodal Gaussian Splatting component from multimodal data (multi-view RGB images and LiDAR point clouds).\n\nThe transformation of the \"Query 3D-GS Scene\" into a descriptor vector for matching by GSPR is primarily handled by its **Global Descriptor Generator (GDG)** component, which operates as follows:\n\n1.  **Voxel Partition and Encoding (III-B1):** The \"Query 3D-GS Scene,\" which is a collection of disordered Gaussians, is first organized by being voxelized into cylindrical coordinates. Each voxel's features are then encoded using MeanVFE, resulting in an ordered voxel set.\n2.  **3D Graph Convolution (III-B2):** A 3D-GCN-based graph convolution backbone network processes the encoded voxelized scene (represented as a Gaussian graph where voxels are nodes). This step exploits the local spat"
    },
    {
        "question": "How does Multimodal Data integration yield the Reference 3D-GS Scene representation?",
        "relevant_section_ids": [
            "1",
            "3.1",
            "3.1.1",
            "3.1.3"
        ],
        "relevant_context": [
            "In this paper, we propose a 3D Gaussian Splatting-based multimodal place recognition method namely GSPR, as shown in Fig. 1. We first design a Multimodal Gaussian Splatting (MGS) method to represent autonomous driving scenarios. We utilize LiDAR point clouds as a prior for the initialization of Gaussians, which helps to address the failures of structure-from-motion (SfM) in such environments. In addition, a mixed masking mechanism is employed to remove unstable features less valuable for place recognition. By doing so, we fuse multimodal data into a spatio-temporally unified Gaussian scene representation.",
            "As illustrated in Fig. 3, we introduce Multimodal Gaussian Splatting for autonomous driving scene reconstruction. The method processes multimodal data through the Image Branch and the LiDAR Branch, and then integrates different modalities into a spatio-temporally unified explicit scene representation through Gaussian Optimization.",
            "Using LiDAR point as position prior, the distribution of 3D Gaussian can be represented as: ... To fully utilize the spatio-temporal consistency between different modalities during the Gaussian initialization, we employ RGB images to perform LiDAR point cloud coloring. This approach provides a prior for initializing the spherical harmonic coefficients of the Gaussians.",
            "We employ Mask2Former, pre-trained on the Cityscapes dataset, as our semantic segmentation module to generate semantic labels for the training images. By integrating semantic labels with 2D ground-truth annotations, we can obtain instance-level mask representations. In light of the nature of unstable environmental features, we categorize the masked regions into static masks (e.g., sky and road surfaces) and dynamic masks (e.g., vehicles and pedestrians), each playing distinct roles during the Gaussian optimization process. ... This strategy mitigates the negative effects of dynamic objects and simultaneously maintains enough supervision for large-scale reconstruction compared to directly filtering out frames with dynamic objects."
        ],
        "final_answer": "The Reference 3D-GS Scene is produced by the Multimodal Gaussian Splatting (MGS) stage of GSPR.  In MGS, multi-view RGB images and LiDAR point clouds are fed into two parallel branches.  The LiDAR branch supplies 3D point positions to initialize each Gaussian’s location, while the image branch projects those points into the camera views to color the Gaussians and fit their spherical harmonic coefficients.  During Gaussian optimization, a mixed masking mechanism uses semantic segmentation masks to suppress unstable dynamic or uninformative regions.  Together these steps fuse the complementary geometry and appearance cues into a single, spatio-temporally consistent 3D Gaussian Splatting representation of the reference scene.",
        "relevant_elements": [
            "Multimodal Data",
            "Reference 3D-GS Scene"
        ],
        "id": 126,
        "masked_question": "How does [mask1] integration yield the [mask2] representation?",
        "masked_number": 2,
        "masked_elements": [
            "Multimodal Data",
            "Reference 3D-GS Scene"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.00299v1_figure_1.png",
        "paperid": "2410.00299v1",
        "paper_path": "./papers/2410.00299v1.json",
        "figure_id": "2410.00299v1_figure_1.png",
        "caption": "Figure 1: Effectively integrating different modalities is crucial for leveraging multimodal data. GSPR harmonizes multi-view RGB images and LiDAR point clouds into a unified scene representation based on Multimodal Gaussian Splatting. 3D graph convolution and transformer are utilized to extract both local and global spatio-temporal information embedded in the scene. This approach enables the generation of discriminative descriptors for place recognition.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Data Augmentation improve Pretrain effectiveness compared to single-phase CNN training on synthetic PDN data?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "Data Augmentation: As shown in Figure 1(b), we first augment the training data by applying multiple transformations to each image-based input which help improve the robustness of the model [19], especially when training data is not sufficient.",
            "Specifically, we apply the following five operations to each image-based input: vertical and horizontal flipping and three (counter-clockwise) rotations as shown in Figure 4 for a sample effective distance map. Next, a new testcase is generated by applying one of the five operations to an existing testcase; … This process results in a sixfold increase in the number of testcases, and enhances the diversity and robustness of the dataset [19]. It is applied to both artificially-generated data in pretrain phase, as well as real data in finetune phase."
        ],
        "final_answer": "By applying simple image transforms (horizontal/vertical flips and rotations) to the artificially-generated PDN inputs, data augmentation expands the synthetic training set sixfold and injects considerably more variation. This richer, more diverse pretraining data makes the AttUNet weights far more robust and less prone to overfitting than a conventional single-phase CNN trained only on unaugmented synthetic PDN data.",
        "relevant_elements": [
            "Data Augmentation",
            "Pretrain"
        ],
        "id": 129,
        "masked_question": "How does [mask1] improve Pretrain effectiveness compared to single-phase CNN training on synthetic PDN data?",
        "masked_number": 1,
        "masked_elements": [
            "Data Augmentation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.03292v1_figure_1.png",
        "paperid": "2408.03292v1",
        "paper_path": "./papers/2408.03292v1.json",
        "figure_id": "2408.03292v1_figure_1.png",
        "caption": "Figure 1: Components of our methodology: (a) image translation; (b) data augmentation and two-step training; (c) inference with attention U-Net; (d) saliency map generation; (e) explaintion and diagnosis of predicted hotspots.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Saliency Map Generation differ from conventional gradient-based explainability in leveraging Image Translation inputs?",
        "relevant_section_ids": [
            "2.4"
        ],
        "relevant_context": [
            "Existing techniques for adding explainability to a deep neural network often require changing the network structure, for example by adding extra layer(s) which can in turn compromise the performance [14, 15, 16]. However, saliency maps are available tools which allow gaining some insights into model behavior very quickly (e.g., seconds in our problem).",
            "Figure 1(d) shows the process of generating the saliency maps. The first step is identifying high-drop pixels from the predicted IR-drop map. Next, a back-propagation is done from this high-drop-only output map to each individual pixel on the input side. Finally, a gradient is computed with respect to each input. Since all image-based inputs are normalized to [0, 1] range, the corresponding gradients are comparable across the pixels of different inputs.",
            "In the end a saliency map is generated for each image-based input, as shown in Figure 1(d)."
        ],
        "final_answer": "Unlike conventional gradient-based explainability methods—which typically focus on a single input image and often require modifying the network architecture—this work applies saliency maps directly to a multi-image-to-single-image translation problem. By back-propagating only from the designer-identified high-drop pixels into each of the normalized image-based inputs (current map, PDN density map, distance map, and per-layer resistance images), it produces one saliency map per input modality. Because all inputs are normalized to [0,1], their gradients become directly comparable, and no changes to the AttUNet model are needed.",
        "relevant_elements": [
            "Saliency Map Generation",
            "Image Translation"
        ],
        "id": 130,
        "masked_question": "How does [mask1] differ from conventional gradient-based explainability in leveraging Image Translation inputs?",
        "masked_number": 1,
        "masked_elements": [
            "Saliency Map Generation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.03292v1_figure_1.png",
        "paperid": "2408.03292v1",
        "paper_path": "./papers/2408.03292v1.json",
        "figure_id": "2408.03292v1_figure_1.png",
        "caption": "Figure 1: Components of our methodology: (a) image translation; (b) data augmentation and two-step training; (c) inference with attention U-Net; (d) saliency map generation; (e) explaintion and diagnosis of predicted hotspots.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does the custom loss function modify training dynamics in the finetune phase?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "As a final consideration during training, we employ a custom loss function. We note, the goal of IR-drop analysis is to predict the hotspot locations. Underestimating these is undesirable. Therefore, we define a custom loss function while training the model, which motivates the model to err on the side of overestimating the IR-drop, even if it results in a larger error.",
            "The loss function is set to punish more when a predicted value is less than the actual value."
        ],
        "final_answer": "In the finetune phase, the custom loss function biases the model to avoid underestimating IR-drop hotspots by applying a heavier penalty whenever a predicted drop is below the ground truth. This encourages the network to err on the side of overestimation, ensuring that high-drop regions (hotspots) are less likely to be missed.",
        "relevant_elements": [
            "Custom Loss Function",
            "Finetune"
        ],
        "id": 131,
        "masked_question": "How does the [mask1] modify training dynamics in the finetune phase?",
        "masked_number": 1,
        "masked_elements": [
            "Custom Loss Function"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.03292v1_figure_1.png",
        "paperid": "2408.03292v1",
        "paper_path": "./papers/2408.03292v1.json",
        "figure_id": "2408.03292v1_figure_1.png",
        "caption": "Figure 1: Components of our methodology: (a) image translation; (b) data augmentation and two-step training; (c) inference with attention U-Net; (d) saliency map generation; (e) explaintion and diagnosis of predicted hotspots.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] \"Custom Loss Function\" modifies the training dynamics in the finetune phase (as it does in the overall training) by influencing how the model's errors are penalized.\n\nSpecifically, the custom loss function is designed to:\n1.  **Prioritize overestimation:** It motivates the model to \"err on the side of overestimating the IR-drop,\" even if this leads to a larger overall error in magnitude.\n2.  **Increased penalty for underestimation:** It \"punish[es] more when a predicted value is less than the actual value.\"\n\nTherefore, during the finetune phase, the custom loss function guides the model to be more conservative in its predictions, making it more prone to overpredicting IR-drop values, especially at potential hotspot locations, rather than underestimating them. This ensures that critical high-drop areas are not missed, which is crucial for IR-drop analysis where underestimation of hotspots is undesirable."
    },
    {
        "question": "How are gradients from saliency map generation utilized to diagnose/explain high-drop pixels?",
        "relevant_section_ids": [
            "2.4"
        ],
        "relevant_context": [
            "The first step is identifying high-drop pixels from the predicted IR-drop map. … Next, a back-propagation is done from this high-drop-only output map to each individual pixel on the input side. Finally, a gradient is computed with respect to each input. Since all image-based inputs are normalized to [0,1] range, the corresponding gradients are comparable across the pixels of different inputs.",
            "Due to the complex nature of the neural network, F_j(X) is a highly non-linear function of X. However, given an input X₀, F_j(X) can be approximated with a linear function in the neighborhood of X₀ by computing the first-order Taylor expansion: F_j(X) ≈ F_j(X₀) + ∂F_j(X)/∂X|_{X₀} · (X – X₀). The magnitude of elements of ∂F_j(X)/∂X defines the importance of the corresponding pixels of X for the j-th output pixel.",
            "For a subset of output pixels S (for example representing the predicted high-drop pixels), a (combined) saliency map M_S is generated for input X representing all image-based inputs. This is done by computing the average gradient regarding the subset of output pixels:\nM_S = (1/|S|) ∑_{j ∈ S} |∂F_j(X)/∂X|.\nThe above will have dimension equal to X and further be broken into individual saliency maps representing each input-based image."
        ],
        "final_answer": "When the model predicts an IR-drop map, we first select the high-drop output pixels and back-propagate from that high-drop-only output to every input pixel. We then compute the gradient of each selected output pixel with respect to each input pixel. The magnitude of these gradients—made comparable by the [0,1] normalization of inputs—serves as a proxy for the contribution or importance of each input pixel to the high-drop outputs. By averaging these absolute gradients across the set of high-drop outputs, we form a saliency map per input image. High-magnitude entries in these saliency maps pinpoint which input pixels (and which inputs) are most responsible for the predicted hotspots, thus diagnosing and explaining the high-drop pixels.",
        "relevant_elements": [
            "Saliency Map Generation",
            "Diagnose/Explain high-drop pixels"
        ],
        "id": 132,
        "masked_question": "How are gradients from [mask1] utilized to diagnose/explain high-drop pixels?",
        "masked_number": 1,
        "masked_elements": [
            "Saliency Map Generation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.03292v1_figure_1.png",
        "paperid": "2408.03292v1",
        "paper_path": "./papers/2408.03292v1.json",
        "figure_id": "2408.03292v1_figure_1.png",
        "caption": "Figure 1: Components of our methodology: (a) image translation; (b) data augmentation and two-step training; (c) inference with attention U-Net; (d) saliency map generation; (e) explaintion and diagnosis of predicted hotspots.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Magnify procedure ensure patch alignment across magnification levels without background contamination?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "We achieve this by processing patches at  magnification levels , which form a geometric sequence, , to ensure patch alignment between levels.",
            "Filter retains only the  patches of highest importance, where  is a hyperparameter. Magnify queries the WSI in the same location as these patches, but at the subsequent resolution, effectively ‘zooming in’ on the selected patches, then removing resultant patches which consist only of background."
        ],
        "final_answer": "By choosing magnifications that form a geometric sequence, Magnify can request higher-resolution patches exactly co-located with previously selected patches (thus ensuring alignment). Any newly retrieved patches that contain only background are then discarded to avoid background contamination.",
        "relevant_elements": [
            "Magnify"
        ],
        "id": 133,
        "masked_question": "How does [mask1] procedure ensure patch alignment across magnification levels without background contamination?",
        "masked_number": 1,
        "masked_elements": [
            "Magnify"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.18225v1_figure_1.png",
        "paperid": "2411.18225v1",
        "paper_path": "./papers/2411.18225v1.json",
        "figure_id": "2411.18225v1_figure_1.png",
        "caption": "Figure 1: Overview of our novel method, PATHS, which predicts a patient’s relative hazard level given a whole slide image using a top-down hierarchical process along the slide’s pyramidal structure, mimicking the workflow of a pathologist. The prediction y^^𝑦\\hat{y}over^ start_ARG italic_y end_ARG is made as a function of the slide-level features at each hierarchy level, F1,…,Fnsuperscript𝐹1…superscript𝐹𝑛F^{1},\\dots,F^{n}italic_F start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT , … , italic_F start_POSTSUPERSCRIPT italic_n end_POSTSUPERSCRIPT.",
        "qtype": "Experimental_Results",
        "response": "The `Magnify` procedure ensures patch alignment across magnification levels by `querying the WSI in the same location as these patches, but at the subsequent resolution`, effectively \"zooming in\" on the selected patches. It ensures the removal of background contamination by `removing resultant patches which consist only of background`."
    },
    {
        "question": "How does the Recurrent unit use hierarchical context to contextualise patch features at subsequent magnification levels?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "For a patch  at magnification , the contextualised feature  is defined as\nwhere RNN denotes a learnable recurrent neural network, which is applied sequentially to the hierarchical context list . In this manner the RNN produces a feature offset which accounts for high-level properties of the tissue surrounding each patch, thus ‘contextualising’ the patch feature. Summation of the RNN output was chosen to enable easy representation of the identity function , for cases in which a patch’s surrounding tissue is not of high relevance.",
            "By sharing the weights of the RNN between all processors, this operation may be implemented efficiently: each processor carries out a single recurrent unit update step per patch, passing the resulting state to the corresponding patches at the subsequent magnification level."
        ],
        "final_answer": "The recurrent unit is a shared-weight RNN that is applied to the ordered list of parent-patch embeddings from all previous magnification levels (the hierarchical context). It processes this context sequentially to produce a feature offset vector, which is then added to each patch’s local embedding at the next magnification level. By carrying over its hidden state to the corresponding child patches, the RNN thus propagates macro-scale contextual information down the hierarchy and ‘contextualises’ high-magnification patch features.",
        "relevant_elements": [
            "Recurrent unit",
            "hierarchical context"
        ],
        "id": 134,
        "masked_question": "How does the [mask1] use hierarchical context to contextualise patch features at subsequent magnification levels?",
        "masked_number": 1,
        "masked_elements": [
            "Recurrent unit"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.18225v1_figure_1.png",
        "paperid": "2411.18225v1",
        "paper_path": "./papers/2411.18225v1.json",
        "figure_id": "2411.18225v1_figure_1.png",
        "caption": "Figure 1: Overview of our novel method, PATHS, which predicts a patient’s relative hazard level given a whole slide image using a top-down hierarchical process along the slide’s pyramidal structure, mimicking the workflow of a pathologist. The prediction y^^𝑦\\hat{y}over^ start_ARG italic_y end_ARG is made as a function of the slide-level features at each hierarchy level, F1,…,Fnsuperscript𝐹1…superscript𝐹𝑛F^{1},\\dots,F^{n}italic_F start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT , … , italic_F start_POSTSUPERSCRIPT italic_n end_POSTSUPERSCRIPT.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What ethical considerations arise from automated Filter-driven region prioritisation in diagnostic workflows?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Filter"
        ],
        "id": 135,
        "masked_question": "What ethical considerations arise from automated [mask1]-driven region prioritisation in diagnostic workflows?",
        "masked_number": 1,
        "masked_elements": [
            "Filter"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.18225v1_figure_1.png",
        "paperid": "2411.18225v1",
        "paper_path": "./papers/2411.18225v1.json",
        "figure_id": "2411.18225v1_figure_1.png",
        "caption": "Figure 1: Overview of our novel method, PATHS, which predicts a patient’s relative hazard level given a whole slide image using a top-down hierarchical process along the slide’s pyramidal structure, mimicking the workflow of a pathologist. The prediction y^^𝑦\\hat{y}over^ start_ARG italic_y end_ARG is made as a function of the slide-level features at each hierarchy level, F1,…,Fnsuperscript𝐹1…superscript𝐹𝑛F^{1},\\dots,F^{n}italic_F start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT , … , italic_F start_POSTSUPERSCRIPT italic_n end_POSTSUPERSCRIPT.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might replacing the non-differentiable Magnify operation impact training convergence and interpretability?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Magnify"
        ],
        "id": 136,
        "masked_question": "How might replacing the non-differentiable [mask1] operation impact training convergence and interpretability?",
        "masked_number": 1,
        "masked_elements": [
            "Magnify"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.18225v1_figure_1.png",
        "paperid": "2411.18225v1",
        "paper_path": "./papers/2411.18225v1.json",
        "figure_id": "2411.18225v1_figure_1.png",
        "caption": "Figure 1: Overview of our novel method, PATHS, which predicts a patient’s relative hazard level given a whole slide image using a top-down hierarchical process along the slide’s pyramidal structure, mimicking the workflow of a pathologist. The prediction y^^𝑦\\hat{y}over^ start_ARG italic_y end_ARG is made as a function of the slide-level features at each hierarchy level, F1,…,Fnsuperscript𝐹1…superscript𝐹𝑛F^{1},\\dots,F^{n}italic_F start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT , … , italic_F start_POSTSUPERSCRIPT italic_n end_POSTSUPERSCRIPT.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What are potential privacy concerns when using identity embeddings in the ID-Preserving Module?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "ID-Preserving Module"
        ],
        "id": 137,
        "masked_question": "What are potential privacy concerns when using identity embeddings in the [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "ID-Preserving Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.18281v1_figure_2.png",
        "paperid": "2411.18281v1",
        "paper_path": "./papers/2411.18281v1.json",
        "figure_id": "2411.18281v1_figure_2.png",
        "caption": "Figure 2: \nFramework overview. Our proposed framework comprises three core components: the ID-Preserving Module, the Motion Control Module, and a composite loss function. The loss function incorporates a Region-Aware Loss to ensure high motion fidelity and an ID-Consistency Loss to maintain alignment with the reference ID image. During training, motion intensity ℳℳ\\mathcal{M}caligraphic_M is derived from optical flow. At inference, human animations are generated based on user-defined motion intensity ℳℳ\\mathcal{M}caligraphic_M and specified action phrases, enabling fine-grained and controllable video synthesis.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might balancing Region-Aware Loss versus ID-Consistency Loss affect motion realism in intricate sequences?",
        "relevant_section_ids": [
            "3.2",
            "3.3",
            "3.4"
        ],
        "relevant_context": [
            "Section 3.2, ID-Consistency Loss: “To address this issue, we introduce an ID-Consistency loss during training phase to maintain the identity information … the ID-Consistency loss L_ID across the sequence of N frames can be calculated by …”",
            "Section 3.3, Region-Aware Loss: “The fluency of the generated video heavily relies on the spatial coherence and realism of dynamic regions … we apply a region-aware loss to force the model to focus more on the high-motion regions … the region-aware loss L_region across all N frames can be compactly defined as …”",
            "Section 3.4, Overall Objective: “The total learning objective combines the Region-Aware Loss, which captures dynamic motion in high-activity regions, and the ID-Consistency Loss, which ensures identity consistency across frames. The hyperparameter λ balances the influence of identity preservation against motion fidelity.”"
        ],
        "final_answer": "Because the two losses pull the model in different directions—Region-Aware Loss encourages the network to sharpen and faithfully reproduce fine-grained motion in areas of high activity, while ID-Consistency Loss enforces stability of the subject’s identity across frames—adjusting their relative weight (via the λ hyperparameter) effectively trades off motion realism against identity fidelity. In particularly intricate motion sequences, increasing the weight on Region-Aware Loss will tend to boost dynamic detail and realism of subtle movements (e.g. wrinkles, lip shapes, eye blinks), whereas increasing the weight on ID-Consistency Loss will smooth out those nuances to better preserve a constant facial identity. Properly balancing the two is therefore critical: too little emphasis on region awareness can lead to overly static or blurred motion, while too much can introduce identity drift or artifacts.",
        "relevant_elements": [
            "Region-Aware Loss",
            "ID-Consistency Loss"
        ],
        "id": 138,
        "masked_question": "How might balancing [mask1] versus [mask2] affect motion realism in intricate sequences?",
        "masked_number": 2,
        "masked_elements": [
            "Region-Aware Loss",
            "ID-Consistency Loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.18281v1_figure_2.png",
        "paperid": "2411.18281v1",
        "paper_path": "./papers/2411.18281v1.json",
        "figure_id": "2411.18281v1_figure_2.png",
        "caption": "Figure 2: \nFramework overview. Our proposed framework comprises three core components: the ID-Preserving Module, the Motion Control Module, and a composite loss function. The loss function incorporates a Region-Aware Loss to ensure high motion fidelity and an ID-Consistency Loss to maintain alignment with the reference ID image. During training, motion intensity ℳℳ\\mathcal{M}caligraphic_M is derived from optical flow. At inference, human animations are generated based on user-defined motion intensity ℳℳ\\mathcal{M}caligraphic_M and specified action phrases, enabling fine-grained and controllable video synthesis.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates integrating both Cross Attn and Motion Attn in the Motion Control Module?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "We regard the control capacity of the model as lying in two aspects: one is the faithfulness of the motion description, and the other is the magnitude of motion intensity. To achieve this goal, we introduce extra action phrase and motion intensity as the conditions in the proposed model.",
            "As illustrated in Fig. 2, two parallel cross attention modules (Cross Attn and Motion Attn) are adopted in the motion control module to insert the action embedding and motion embedding. The process is formally represented as follows: Z = CrossAttn(Q, K_act, V_act) + α·MotionAttn(Q, K_motion, V_motion). The parameter α balances the influence of motion intensity within the combined attention output."
        ],
        "final_answer": "The module integrates both Cross Attn and Motion Attn so that it can separately encode the semantic intent of the action (via Cross Attn on the action phrase) and the strength or magnitude of the motion (via Motion Attn on the motion intensity). This design ensures faithful adherence to the described action and fine-grained control over the movement’s intensity.",
        "relevant_elements": [
            "Cross Attn",
            "Motion Attn",
            "Motion Control Module"
        ],
        "id": 139,
        "masked_question": "What motivates integrating both [mask1] and Motion Attn in the Motion Control Module?",
        "masked_number": 1,
        "masked_elements": [
            "Cross Attn"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.18281v1_figure_2.png",
        "paperid": "2411.18281v1",
        "paper_path": "./papers/2411.18281v1.json",
        "figure_id": "2411.18281v1_figure_2.png",
        "caption": "Figure 2: \nFramework overview. Our proposed framework comprises three core components: the ID-Preserving Module, the Motion Control Module, and a composite loss function. The loss function incorporates a Region-Aware Loss to ensure high motion fidelity and an ID-Consistency Loss to maintain alignment with the reference ID image. During training, motion intensity ℳℳ\\mathcal{M}caligraphic_M is derived from optical flow. At inference, human animations are generated based on user-defined motion intensity ℳℳ\\mathcal{M}caligraphic_M and specified action phrases, enabling fine-grained and controllable video synthesis.",
        "qtype": "Design_Rationale",
        "response": "The integration of both \"Cross Attn\" and \"Motion Attn\" within the Motion Control Module is motivated by the need to provide comprehensive and fine-grained control over the generated video's motion dynamics.\n\nSpecifically:\n1.  **Cross Att"
    },
    {
        "question": "What is the purpose of combining Region-Aware Loss and ID-Consistency Loss in the composite loss function?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "The total learning objective combines the Region-Aware Loss, which captures dynamic motion in high-activity regions, and the ID-Consistency Loss, which ensures identity consistency across frames.",
            "This dual objective guides the model to preserve both identity and motion fidelity in the generated videos."
        ],
        "final_answer": "The purpose is to guide the model to preserve both identity consistency and motion fidelity in the generated videos by focusing on dynamic motion in high-activity regions (via Region-Aware Loss) and ensuring consistent identity across frames (via ID-Consistency Loss).",
        "relevant_elements": [
            "Region-Aware Loss",
            "ID-Consistency Loss",
            "composite loss function"
        ],
        "id": 140,
        "masked_question": "What is the purpose of combining [mask1] and [mask2] in the composite loss function?",
        "masked_number": 2,
        "masked_elements": [
            "Region-Aware Loss",
            "ID-Consistency Loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.18281v1_figure_2.png",
        "paperid": "2411.18281v1",
        "paper_path": "./papers/2411.18281v1.json",
        "figure_id": "2411.18281v1_figure_2.png",
        "caption": "Figure 2: \nFramework overview. Our proposed framework comprises three core components: the ID-Preserving Module, the Motion Control Module, and a composite loss function. The loss function incorporates a Region-Aware Loss to ensure high motion fidelity and an ID-Consistency Loss to maintain alignment with the reference ID image. During training, motion intensity ℳℳ\\mathcal{M}caligraphic_M is derived from optical flow. At inference, human animations are generated based on user-defined motion intensity ℳℳ\\mathcal{M}caligraphic_M and specified action phrases, enabling fine-grained and controllable video synthesis.",
        "qtype": "Design_Rationale",
        "response": "The purpose of combining the Region-Aware Loss and ID-Consistency Loss in the composite loss function is to guide the model to preserve both identity and motion fidelity in the generated videos.\n\nHere's a breakdown based on the provided context:\n\n*   **Region-Aware Loss (mask1):**\n    *   Purpose: \"The fluency of the generated video heavily relies on the spatial coherence and realism of dynamic regions, e.g. the face areas. To achieve this goal, we apply a region-aware loss to force the model to focus more on the high-motion regions.\" (Section \"Region-Aware Loss.\")\n    *   In summary, it \"captures dynamic motion in high-activity regions\" (motion fidelity).\n\n*   **ID-Consistency Loss (mask2):**\n    *   Purpose: \"Current stable diffusion models are usually trained with the MSE loss over each pixel, which is insufficient to ensure identity preservation between the reference image and the generated videos. To address this issue, we introduce an ID-Consistency loss during training phase to maintain the identity information.\" (Section \"ID-Consistency Loss.\")\n    *   In summary, it \"ensures identity consistency across frames\" (identity preservation).\n\n*   **Combining them (Overall Objective):**\n    *   \"The total learning objective combines the Region-Aware Loss, which captures dynamic motion in high-activity regions, and the ID-Consistency Loss, which ensures identity consistency across frames. This dual objective guides the model to preserve both identity and motion fidelity in the generated videos.\" (Section \"Overall Objective.\")\n\nTherefore, the combination aims to simultaneously achieve accurate a) motion representation and b)"
    },
    {
        "question": "What motivates adapters transforming base features prior to quantization on sub-codebook branches?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Encoder. We regard the original VQGAN encoder as a base feature extractor. On top of that, K feature adapters are introduced to transform the base image features into their respective feature space.",
            "Second, maintaining factorized sub-codebooks and independent feature adapters allow the model to learn more diverse features."
        ],
        "final_answer": "The adapters are introduced so that each sub-codebook branch operates on its own adapted feature space, which enables the model to learn more diverse and specialized feature representations before quantization.",
        "relevant_elements": [
            "Adapter 1",
            "Quantization on Sub-Codebook 1"
        ],
        "id": 141,
        "masked_question": "What motivates [mask1] transforming base features prior to [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Adapter 1",
            "Quantization on Sub-Codebook 1"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.16681v2_figure_2.png",
        "paperid": "2411.16681v2",
        "paper_path": "./papers/2411.16681v2.json",
        "figure_id": "2411.16681v2_figure_2.png",
        "caption": "Figure 2: \nIllustration of the our method.\nThe left part shows FQGAN-Dual, the factorized tokenizer design in an example scenario when k=2𝑘2k=2italic_k = 2.\nThis framework is extendable to factorization of more codebooks.\nThe right part demonstrate how we leverage an additional AR head to accommodate the factorized sub-codes based on standard AR generative transformer.",
        "qtype": "Design_Rationale",
        "response": "The elements within the red box ([mask1]), namely \"Adapter 1\" and \"Adapter 2\", are introduced to transform the base image features into their respective feature spaces. This transformation occurs prior to the quantization process ([mask2]), which is performed independently on these branch-specific features by \"Quantization on Sub-Codebook 1\" and \"Quantization on Sub-Codebook 2\".\n\nAccording to the \"Factorized Quantization\" section under \"Method\":\n\"Second, maintaining factorized sub-codebooks and independent feature adapters allow the model to learn more diverse features.\"\n\nTherefore, the motivation for [mask1] transforming base features prior to [mask2] is to **allow the model to learn more diverse features**.\n\nThe complete answer is:\nWhat motivates **Adapter 1 and Adapter 2** transforming base features prior to **Quantization on Sub-Codebook 1 and Quantization on Sub-Codebook 2**?\nThe motivation is to **allow the model to learn more diverse features**."
    },
    {
        "question": "How does disentanglement loss encourage distinct feature capture across factorized sub-codebook quantizations?",
        "relevant_section_ids": [
            "3.2.1"
        ],
        "relevant_context": [
            "To address this issue, we propose a disentanglement regularization mechanism for the factorized sub-codebooks.",
            "We design the disentanglement regularization mechanism as follows: L_{dis} = \\sum_{i,b} (z_1^{(i,b)\\top} z_2^{(i,b)})^2. This regularization mechanism minimizes the squared dot product between the two involved codes.",
            "The dot product directly measures the affinity between the two codes after L2 normalization, ranging from -1/1 indicates negative/positive correlation and 0 denotes orthogonality. Minimizing the squaring function encourages the dot product value to approach 0.",
            "In other words, for each patch, it encourages the involved sub-codes to capture different aspects."
        ],
        "final_answer": "The disentanglement loss penalizes the squared dot product between sub-code vectors for each patch, pushing their dot product toward zero (orthogonality). By minimizing their correlation on a per-patch basis, it forces each sub-codebook to learn distinct, non-overlapping features.",
        "relevant_elements": [
            "Disentangle Loss",
            "Quantization on Sub-Codebook 1"
        ],
        "id": 142,
        "masked_question": "How does [mask1] encourage distinct feature capture across [mask2] quantizations?",
        "masked_number": 2,
        "masked_elements": [
            "Disentangle Loss",
            "Quantization on Sub-Codebook 1"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.16681v2_figure_2.png",
        "paperid": "2411.16681v2",
        "paper_path": "./papers/2411.16681v2.json",
        "figure_id": "2411.16681v2_figure_2.png",
        "caption": "Figure 2: \nIllustration of the our method.\nThe left part shows FQGAN-Dual, the factorized tokenizer design in an example scenario when k=2𝑘2k=2italic_k = 2.\nThis framework is extendable to factorization of more codebooks.\nThe right part demonstrate how we leverage an additional AR head to accommodate the factorized sub-codes based on standard AR generative transformer.",
        "qtype": "Design_Rationale",
        "response": "The \"Disentangle. Loss\" (mask1) encourages distinct feature capture across the \"Quantization on Sub-Codebook 1\" and \"Quantization on Sub-Codebook 2\" (mask2) by minimizing the squared dot product between the quantized features (codes) obtained from these two sub-codebooks for each patch. This mechanism effectively encourages the dot product between the codes to approach zero, promoting orthogonality and ensuring that the involved sub-codes capture different or distinct aspects of the input."
    },
    {
        "question": "How does disentanglement loss enforce orthogonality between sub-codebook outputs per patch?",
        "relevant_section_ids": [
            "3.2.1"
        ],
        "relevant_context": [
            "This regularization mechanism minimizes the squared dot product between the two involved codes.",
            "The dot product directly measures the affinity between the two codes after L2 normalization, ranging from –1/1, where –1/1 indicates negative/positive correlation and 0 denotes orthogonality. Minimizing the squaring function encourages the dot product value to approach 0.",
            "Note that this regularization does not directly apply to the entire codebook. Instead, it operates on patches of each image instance. In other words, for each patch, it encourages the involved sub-codes to capture different aspects."
        ],
        "final_answer": "The disentanglement loss takes the L2-normalized outputs of the two sub-codebooks for each image patch, computes their dot product, and then minimizes its square. By driving the squared dot product toward zero, it forces the two sub-code outputs to become orthogonal on a per-patch basis.",
        "relevant_elements": [
            "Quantization on Sub-Codebook 1",
            "Quantization on Sub-Codebook 2",
            "Disentangle Loss"
        ],
        "id": 143,
        "masked_question": "How does [mask1] enforce orthogonality between sub-codebook outputs per patch?",
        "masked_number": 1,
        "masked_elements": [
            "Disentangle Loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.16681v2_figure_2.png",
        "paperid": "2411.16681v2",
        "paper_path": "./papers/2411.16681v2.json",
        "figure_id": "2411.16681v2_figure_2.png",
        "caption": "Figure 2: \nIllustration of the our method.\nThe left part shows FQGAN-Dual, the factorized tokenizer design in an example scenario when k=2𝑘2k=2italic_k = 2.\nThis framework is extendable to factorization of more codebooks.\nThe right part demonstrate how we leverage an additional AR head to accommodate the factorized sub-codes based on standard AR generative transformer.",
        "qtype": "Implementation_Details",
        "response": "The [mask1], labeled as \"Disentangle. Loss\" in the diagram, enforces orthogonality between sub-codebook outputs per patch by minimizing the squared dot product between the quantized codes from the two distinct sub-codebooks for each patch.\n\nSpecifically, as described in the \"Disentanglement\" section (3.2.1):\n1.  The mechanism calculates the dot product between the L2-normalized codes from the two sub-codebooks (\\(q_1^i\\) and \\(q_2^i\\)) for each patch \\(i\\).\n2.  It then takes the square of this dot product: \\(||q_1^i \\cdot q_2^i||^2\\).\n3.  The disentanglement loss minimizes this squared dot product.\n4.  Since a dot product of 0 indicates orthogonality, minimizing the squared dot product encourages its value to approach 0, thereby pushing the two sub-codebook outputs for that patch to be orthogonal.\n5.  This process is applied \"on patches of each image instance,\" ensuring that for each patch, the involved sub-codes capture different aspects."
    },
    {
        "question": "How does SEGA iteratively merge client partitions to minimize 2D structural entropy?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "Specifically, each client node is initially treated as an individual partition.",
            "New partitions are formed by iteratively merging different partitions.",
            "The changes in the 2DSE before and after merging are observed to identify the partitioning scheme that yields the lowest overall 2DSE and generates the desired partitions.",
            "We leverage the greedy strategy in (Li and Pan, 2016  ###reference_b17###) to minimize 2DSE.",
            "Note that we always merge the two partitions with the smallest SE until all SE , thus obtaining the final partitions ."
        ],
        "final_answer": "SEGA begins with each client as its own partition and then, in a greedy fashion, repeatedly merges the pair of partitions whose union leads to the greatest reduction in the two-dimensional structural entropy. At each step it computes the change in 2DSE for every possible merge, picks the merge with the smallest resulting SE, and continues until no further merges can reduce the entropy, yielding the final client partitions that minimize 2DSE.",
        "relevant_elements": [
            "SEGA",
            "2D Structural Entropy"
        ],
        "id": 145,
        "masked_question": "How does [mask1] iteratively merge client partitions to minimize [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "SEGA",
            "2D Structural Entropy"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.00614v1_figure_1.png",
        "paperid": "2409.00614v1",
        "paper_path": "./papers/2409.00614v1.json",
        "figure_id": "2409.00614v1_figure_1.png",
        "caption": "Figure 1. The overall framework of DAMe.",
        "qtype": "Implementation_Details",
        "response": "**Step 1: Identify [mask1] and [mask2] from the image and context.**\n*   [mask1] is highlighted by a red box in the image and corresponds to \"(b) SEGA: Structural Entropy-based Global Aggregation (Section 4.3)\".\n*   [mask2] is highlighted by a blue box within the red box and depicts \"Client Graph G_client\" transforming into \"Glb. Aggr. Graph G_GA\" through \"Minimizing 2D SE\". This indicates that [mask2] refers to the \"2D Structural Entropy (2DSE)\".\n\n**Step 2: Locate relevant information in the text corresponding to Section 4.3.**\nSection 4.3 is titled \"Global Aggregation via 2D Structural Entropy Minimization\". The text states:\n*   \"By minimizing the two-dimensional Structural Entropy (2DSE) of G_client, a graph capturing the internal similarities among clients is obtained, finalizing the Global Aggregation strategy for each client (SEGA).\"\n*   \"The objective of the minimization process is to assign each client node to a distinct partition. Specifically, each client node is initially treated as an individual partition. New partitions are formed by iteratively merging different partitions. The changes in the 2DSE before and after merging are observed to identify the partitioning scheme that yields the lowest overall 2DSE and generates the desired partitions.\"\n*   \"We leverage the greedy strategy in (Li and Pan, 2016) to minimize 2DSE. The difference in 2DSE before and after merging *i* and *j* into *k* is calculated as follows:"
    },
    {
        "question": "How does BOLA combine Expected Improvement and UCB to optimize aggregation weight λ?",
        "relevant_section_ids": [
            "4.2",
            "4.2.3"
        ],
        "relevant_context": [
            "Given the intricate and non-convex nature of the objective function f(λ) (Hoffman et al., 2011), we employ a mixed acquisition strategy of incorporating EI and UCB.",
            "In this work, we apply the Expected Improvement (EI) (Mockus, 1974; Jones et al., 1998) criterion and the Upper Confidence Bound (UCB) (SRINIVAS, 2010) as acquisition functions. EI seeks the next weight with maximal expected improvement under the posterior Gaussian process model, while UCB chooses the weight with the highest upper confidence bound (mean plus a time-dependent multiple of the standard deviation) to encourage exploration."
        ],
        "final_answer": "BOLA uses a mixed acquisition strategy that combines Expected Improvement (EI) and Upper Confidence Bound (UCB). At each step, EI drives exploitation by selecting the λ with the highest expected improvement under the Gaussian‐process posterior, while UCB drives exploration by selecting the λ with the highest upper confidence bound (posterior mean plus a scaled posterior standard deviation). By integrating both criteria, BOLA balances exploring uncertain λ values and exploiting promising ones to efficiently find the optimal aggregation weight.",
        "relevant_elements": [
            "BOLA",
            "Bayesian Optimization"
        ],
        "id": 146,
        "masked_question": "How does [mask1] combine Expected Improvement and UCB to optimize aggregation weight λ?",
        "masked_number": 1,
        "masked_elements": [
            "BOLA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.00614v1_figure_1.png",
        "paperid": "2409.00614v1",
        "paper_path": "./papers/2409.00614v1.json",
        "figure_id": "2409.00614v1_figure_1.png",
        "caption": "Figure 1. The overall framework of DAMe.",
        "qtype": "Implementation_Details",
        "response": "The text states that \"[mask1]\", which refers to BOLA (Bayesian Optimization-based Local Aggregation), employs a mixed acquisition strategy of incorporating Expected Improvement (EI) and Upper Confidence Bound (UCB). This strategy is used because the objective function for local aggregation is \"intricate and non-convex.\"\n\nHowever, the provided context *does not describe the specific mechanism or formula* by which EI and UCB are combined within this mixed acquisition strategy. It defines EI and UCB separately but does not detail how they are integrated or weighted together to determine the next aggregation weight λ."
    },
    {
        "question": "How does SEGA leverage two-dimensional structural entropy minimization compared to conventional graph partitioning techniques?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "SEGA",
            "2D structural entropy minimization"
        ],
        "id": 147,
        "masked_question": "How does [mask1] leverage [mask2] compared to conventional graph partitioning techniques?",
        "masked_number": 2,
        "masked_elements": [
            "SEGA",
            "2D structural entropy minimization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.00614v1_figure_1.png",
        "paperid": "2409.00614v1",
        "paper_path": "./papers/2409.00614v1.json",
        "figure_id": "2409.00614v1_figure_1.png",
        "caption": "Figure 1. The overall framework of DAMe.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does BOLA incorporate Bayesian Optimization to optimize aggregation weights versus classic weight tuning approaches?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "BOLA",
            "Bayesian Optimization"
        ],
        "id": 148,
        "masked_question": "How does [mask1] incorporate Bayesian Optimization to optimize aggregation weights versus classic weight tuning approaches?",
        "masked_number": 1,
        "masked_elements": [
            "BOLA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.00614v1_figure_1.png",
        "paperid": "2409.00614v1",
        "paper_path": "./papers/2409.00614v1.json",
        "figure_id": "2409.00614v1_figure_1.png",
        "caption": "Figure 1. The overall framework of DAMe.",
        "qtype": "Literature_Background",
        "response": "The masked component, BOLA (Bayesian Optimization-based Local Aggregation), incorporates Bayesian Optimization to optimize aggregation weights by treating the search for the optimal aggregation weight as an optimization problem for a function that is \"costly or challenging direct evaluations\" and \"intricate and non-convex.\"\n\nHere's how it works and how it differs from classic weight tuning:\n\n1.  **Purpose of BOLA**: BOLA aims to determine the `optimal or near-optimal weight (λ)` for local aggregation. This weight controls the balance between integrating global knowledge from the global model (`θ_g`) and preserving the client's unique local characteristics from its local model (`θ_l`).\n\n2.  **Bayesian Optimization (BO) Procedure**: BOLA leverages BO through a three-step process:\n    *   **Defining the Objective Function**: The objective function (represented as `f(λ)`) for local aggregation is the task-specific performance of the aggregated model on private datasets (e.g., NMI score for SED performance). Directly calculating this value for every possible `λ` is costly.\n    *   **Modeling with a Bayesian Statistical Model**: A Gaussian Process regression (GPR) model is used to model this objective function. GPR creates a probabilistic model (posterior distribution) of the function based on previously observed evaluations. This model quantifies both the predicted performance and the uncertainty around that prediction for unseen `λ` values.\n    *   **Determining Next Sample Position with an Acquisition Function**: Instead of exhaustively testing `λ` values (like grid search) or randomly picking them, BO uses an acquisition function (e.g., Expected Improvement (EI) and Upper Confidence Bound (UCB)) to intelligently propose the next `λ` to evaluate. These functions balance exploration (trying `λ` values in uncertain regions) and exploitation (trying `λ` values in regions predicted to have high performance), aiming to find the optimum efficiently with fewer evaluations.\n\n3.  **Contrast with Classic Weight Tuning Approaches**:\n    *   **Efficiency for Costly Objectives**: Classic methods like grid search"
    },
    {
        "question": "What parallels exist between image guardrail optimization and adversarial training methodologies in computer vision?",
        "relevant_section_ids": [
            "2.2"
        ],
        "relevant_context": [
            "We optimize the safety guardrail with respect to unconstrained attack images (Qi et al., 2023), which can be seen as the worst-case scenario an MLLM can encounter in the real world as it is the most effective attack, allowing any pixel values in  after normalization. This optimization ensures robustness against both unconstrained and suboptimal (e.g., constrained) attacks.",
            "Since the additive noise  in Eq. (1  ###reference_###) is continuous and the loss function is differentiable with respect to , we employ the Projected Gradient Descent (PGD) algorithm (Madry et al., 2018  ###reference_b22###; Croce and Hein, 2019  ###reference_b6###) to compute the optimal image safety guardrail .",
            "The hyperparameter  is a distance constraint that controls the noise magnitude."
        ],
        "final_answer": "Image guardrail optimization mirrors adversarial training by explicitly crafting worst-case perturbations under a norm constraint and using Projected Gradient Descent (PGD) to find additive noise that improves robustness against both unconstrained and constrained attacks.",
        "relevant_elements": [
            "Image Guardrail"
        ],
        "id": 149,
        "masked_question": "What parallels exist between [mask1] optimization and adversarial training methodologies in computer vision?",
        "masked_number": 1,
        "masked_elements": [
            "Image Guardrail"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.01703v1_figure_1.png",
        "paperid": "2411.01703v1",
        "paper_path": "./papers/2411.01703v1.json",
        "figure_id": "2411.01703v1_figure_1.png",
        "caption": "Figure 1: \\methodrobustifies multimodal large language models (MLLMs) against multimodal jailbreak attacks by using safety guardrails to purify malicious input prompt, ensuring safe responses.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does text guardrail suffix optimization mirror existing gradient-based discrete token search techniques?",
        "relevant_section_ids": [
            "2.3"
        ],
        "relevant_context": [
            "To ensure full robustness, we jointly optimize a text safety guardrail G_t. Unlike image-based optimization, finding G_t requires discrete optimization. We adapt the gradient-based top-K token search algorithm (Shin et al., 2020; Qi et al., 2023) and begin by initializing G_t with random tokens of a fixed-length L. Subsequently, for each token g_i, we identify the top-K candidate tokens C_i as per reducing the generation probability of harmful content from the MLLM: ... and the gradient is taken with respect to the embedding of the i-th token g_i.",
            "The final step is to replace g_i with a token in C_i one by one and find the best token for a replacement as per reducing the loss. A single optimization step comprises updating all the tokens in G_t, and we repeat this process for multiple epochs (e.g., 50 times). The final G_t is appended at the end of the input text to act as a safety guardrail and robustify the MLLM against the jailbreak attack."
        ],
        "final_answer": "The text guardrail suffix optimization mirrors existing gradient-based discrete token search techniques by adapting the gradient-based top-K token search algorithm: it initializes the suffix as random tokens, uses gradients with respect to each token’s embedding to rank a top-K set of replacement candidates that reduce the probability of harmful outputs, iteratively replaces tokens with the best candidates, and repeats this update over multiple epochs before appending the optimized suffix to the input.",
        "relevant_elements": [
            "Text Guardrail"
        ],
        "id": 150,
        "masked_question": "How does [mask1] suffix optimization mirror existing gradient-based discrete token search techniques?",
        "masked_number": 1,
        "masked_elements": [
            "Text Guardrail"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.01703v1_figure_1.png",
        "paperid": "2411.01703v1",
        "paper_path": "./papers/2411.01703v1.json",
        "figure_id": "2411.01703v1_figure_1.png",
        "caption": "Figure 1: \\methodrobustifies multimodal large language models (MLLMs) against multimodal jailbreak attacks by using safety guardrails to purify malicious input prompt, ensuring safe responses.",
        "qtype": "Literature_Background",
        "response": "The `[mask1]` refers to the Text Safety Guardrail, which is optimized to be appended as a suffix to the input text.\n\nThe optimization of this text safety guardrail mirrors existing gradient-based discrete token search techniques in the following ways, as described in the \"Text Safety Guardrail\" section:\n\n1.  **Adaptation of Gradient-Based Top-K Token Search:** The method explicitly states that it \"adapt[s] the gradient-based top-K token search algorithm\" (Shin et al., 2020; Qi et al., 2023). This highlights its direct inspiration and methodology from such techniques.\n2.  **Gradient Calculation on Token Embeddings:** For each token within the text safety guardrail, gradients are calculated with respect to its embedding. This is a crucial step in gradient-based discrete token search, as it allows for continuous optimization in the embedding space to guide"
    },
    {
        "question": "How does the Image Guardrail mitigate Adv. Image perturbations while preserving original visual features?",
        "relevant_section_ids": [
            "2.2"
        ],
        "relevant_context": [
            "Inspired by this method, we aim to find an additive noise (i.e., the safety guardrail) via optimization that, when added to the adversarial image, minimizes the likelihood of generating harmful sentences (e.g., racism or terrorism) of a predefined corpus. These harmful sentences serve as few-shot examples, helping the MLLM recognize jailbreak attacks and making the optimized noise transferable across different attack scenarios.",
            "Formally, the image safety guardrail g is defined as: where g indicates the additive noise applied to the image that satisfies ‖g‖∞ ≤ ε.",
            "Since the additive noise g in Eq. (1) is continuous and the loss function is differentiable with respect to g, we employ the Projected Gradient Descent (PGD) algorithm (Madry et al., 2018; Croce and Hein, 2019) to compute the optimal image safety guardrail g.",
            "Once g is obtained, it can be added to any adversarial input image (e.g., x_adv + g) to neutralize adversarial effects.",
            "Importantly, g does not alter the integrity of images, even when applied to non-adversarial images, as g is upperbounded by ε."
        ],
        "final_answer": "The Image Guardrail is an optimized additive noise g found via Projected Gradient Descent under the constraint ‖g‖∞ ≤ ε. When added to an adversarial image, it neutralizes the attack’s perturbations by minimizing the model’s likelihood of generating harmful content, while the ε‐bound ensures the noise is small enough to preserve the original visual features.",
        "relevant_elements": [
            "Image Guardrail",
            "Adv. Image"
        ],
        "id": 151,
        "masked_question": "How does the [mask1] mitigate [mask2] perturbations while preserving original visual features?",
        "masked_number": 2,
        "masked_elements": [
            "Image Guardrail",
            "Adv. Image"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.01703v1_figure_1.png",
        "paperid": "2411.01703v1",
        "paper_path": "./papers/2411.01703v1.json",
        "figure_id": "2411.01703v1_figure_1.png",
        "caption": "Figure 1: \\methodrobustifies multimodal large language models (MLLMs) against multimodal jailbreak attacks by using safety guardrails to purify malicious input prompt, ensuring safe responses.",
        "qtype": "Experimental_Results",
        "response": "To answer the question, let's break down how the \"Multimodal Safety Guardrails\" ([mask1]) mitigate \"Adv. Image\" ([mask2]) perturbations while preserving original visual features, based on the provided context:\n\n**Chain of Thought:**\n\n1.  **Understanding the Goal:** The overarching goal of UniGuard (which implements the Multimodal Safety Guardrails) is to defend against jailbreak attacks, where carefully crafted adversarial inputs (like `Adv. Image` and `Adv. Text`) cause MLLMs to generate harmful content.\n2.  **Focus on Image Safety Guardrail:** The question specifically asks about the image component. The \"Image Safety Guardrail\" section in the context is key.\n3.  **Mitigation of Perturbations:**\n    *   The context states: \"We aim to find an additive noise (i.e., the safety guardrail) via optimization that, when added to the adversarial image, minimizes the likelihood of generating harmful sentences...\"\n    *   It further clarifies: \"Once [the optimal image safety guardrail, denoted as ] is obtained, it can be added to any adversarial input image (e.g., ) to neutralize adversarial effects.\"\n    *   The optimization process uses Projected Gradient Descent (PGD) to compute this optimal additive noise. This noise effectively counteracts the adversarial perturbations, making the MLLM less likely to produce harmful output.\n4.  **Preservation of Original Visual Features:**\n    *   The context explicitly addresses this: \"Importantly, does not alter the integrity of images"
    },
    {
        "question": "How does the diffusion process conditioned on text prompts improve skeleton-text alignment under noise?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Our framework leverages a conditional denoising diffusion process, not to generate data but to learn a discriminative skeleton latent space by fusing skeleton features with text prompts through the reverse diffusion process.",
            "Guided by our triplet diffusion (TD) loss, the denoising process conditions on text prompts to strengthen the discriminative fusion of skeleton features and their corresponding prompts.",
            "The TD loss encourages correct skeleton-text pairs to be pulled closer in the fused skeleton-text latent space while pushing apart incorrect pairs, enhancing the model’s discriminative power.",
            "The Diffusion Transformer  predicts noise  from noisy feature , conditioned on the global and local text features  and  at given timestep ."
        ],
        "final_answer": "By conditioning the reverse diffusion denoising step on both global and local text features (prompts), the model learns to fuse skeleton and text embeddings in a unified latent space. During training, the triplet diffusion loss pulls correct skeleton-text pairs closer together and pushes incorrect pairs apart under noise perturbations. As a result, even noisy skeleton features are denoised in a way that aligns them more tightly with their corresponding text prompts, improving skeleton-text alignment and discriminative power.",
        "relevant_elements": [
            "Text Encoder",
            "Diffusion Process"
        ],
        "id": 153,
        "masked_question": "How does the [mask1] conditioned on text prompts improve skeleton-text alignment under noise?",
        "masked_number": 1,
        "masked_elements": [
            "Diffusion Process"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.10745v2_figure_1.png",
        "paperid": "2411.10745v2",
        "paper_path": "./papers/2411.10745v2.json",
        "figure_id": "2411.10745v2_figure_1.png",
        "caption": "Figure 1: Motivation of the proposed TDSM pipeline. Previous methods rely on direct alignment between skeleton and text latent spaces, but suffer from modality gaps that limit generalization. Our TDSM overcomes this challenge by leveraging a reverse diffusion process to embed text prompts into the unified skeleton-text latent space, ensuring more effective cross-modal alignment.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How did replacing direct alignment with diffusion-based alignment influence zero-shot generalization robustness?",
        "relevant_section_ids": [
            "3.4",
            "4.3"
        ],
        "relevant_context": [
            "Our approach enhances discriminative fusion through the TD loss, which is designed to denoise GT skeleton-text pairs effectively while preventing the fusion of incorrect pairs within the seen dataset. This selective denoising process promotes a robust fusion of skeleton and text features, allowing the model to develop a discriminative feature space that can generalize to unseen action labels.",
            "As shown in Table 1, our TDSM significantly outperforms the very recent state-of-the-art results across all benchmark splits, demonstrating superior generalization and robustness for various splits."
        ],
        "final_answer": "By replacing the previous direct alignment with our diffusion-based (denoising) alignment guided by the triplet diffusion loss, the model learns a more robust, discriminative fusion of skeleton and text features. This selective denoising mechanism yields a latent space that generalizes much better to unseen action classes, translating into significantly improved zero-shot recognition accuracy and overall robustness across multiple benchmark splits.",
        "relevant_elements": [
            "Direct Alignment",
            "Diffusion Process"
        ],
        "id": 154,
        "masked_question": "How did replacing [mask1] with [mask2] influence zero-shot generalization robustness?",
        "masked_number": 2,
        "masked_elements": [
            "Direct Alignment",
            "Diffusion Process"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.10745v2_figure_1.png",
        "paperid": "2411.10745v2",
        "paper_path": "./papers/2411.10745v2.json",
        "figure_id": "2411.10745v2_figure_1.png",
        "caption": "Figure 1: Motivation of the proposed TDSM pipeline. Previous methods rely on direct alignment between skeleton and text latent spaces, but suffer from modality gaps that limit generalization. Our TDSM overcomes this challenge by leveraging a reverse diffusion process to embed text prompts into the unified skeleton-text latent space, ensuring more effective cross-modal alignment.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What limitations do modality gaps impose on direct alignment between skeleton and text latent spaces?",
        "relevant_section_ids": [
            "1"
        ],
        "relevant_context": [
            "However, achieving the effective alignment between skeleton data and text features entails significant challenges. While skeleton data captures temporal and spatial motion patterns, the text descriptions for action labels carry high-level semantic information. This modality gap makes it difficult to align their corresponding latent spaces effectively, hindering the generalization learning for unseen actions—particularly when distinguishing between semantically similar actions (e.g., “Throw” vs. “Shoot”).",
            "The previous methods [...] aim at directly aligning the different features of skeletons and text descriptions for action labels between the skeleton and text latent spaces, which struggles to generalize due to the inherent differences between these modalities in different latent spaces."
        ],
        "final_answer": "The modality gap—skeleton features encoding temporal and spatial motion patterns versus text features encoding high-level semantics—makes it hard to effectively align their respective latent spaces, which in turn hinders generalization to unseen actions and makes it especially difficult to distinguish semantically similar actions.",
        "relevant_elements": [
            "Direct Alignment",
            "Skeleton Latent",
            "Text Latent"
        ],
        "id": 155,
        "masked_question": "What limitations do modality gaps impose on [mask1] between skeleton and text latent spaces?",
        "masked_number": 1,
        "masked_elements": [
            "Direct Alignment"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.10745v2_figure_1.png",
        "paperid": "2411.10745v2",
        "paper_path": "./papers/2411.10745v2.json",
        "figure_id": "2411.10745v2_figure_1.png",
        "caption": "Figure 1: Motivation of the proposed TDSM pipeline. Previous methods rely on direct alignment between skeleton and text latent spaces, but suffer from modality gaps that limit generalization. Our TDSM overcomes this challenge by leveraging a reverse diffusion process to embed text prompts into the unified skeleton-text latent space, ensuring more effective cross-modal alignment.",
        "qtype": "Others",
        "response": "The masked term \"[mask1]\" refers to \"Direct Alignment\".\n\n**Chain of thought:**\n1.  **Identify the masked term:** The red box in the image explicitly highlights \"Direct Alignment\".\n2.  **Locate relevant context regarding \"Direct Alignment\" and \"modality gaps\":**\n    *   The \"Introduction\" section states: \"This modality gap makes it difficult to align their corresponding latent spaces effectively, hindering the generalization learning for unseen actions—particularly when distinguishing between semantically similar actions (e.g., “Throw” vs. “Shoot”).\" This sentence directly links \"modality gap\" to the difficulty in alignment and its consequence (hindered generalization).\n    *   Further in the \"Introduction,\" it mentions: \"The previous methods... aim at directly aligning the different features of skeletons and text descriptions for action labels between the skeleton and text latent spaces, which struggles to generalize due to the inherent differences between these modalities in different latent spaces.\" This confirms that \"direct alignment\" is what previous methods do and that it \"struggles to generalize\" due to \"inherent differences\" (modality gaps).\n    *   The \"Caption\" for Figure 1 also states: \"Previous methods rely on direct alignment between skeleton and text latent spaces, but suffer from modality gaps that limit generalization.\" This explicitly links modality gaps, direct alignment, and limited generalization.\n3.  **Synthesize the limitations:** Based on the context, the limitations imposed by modality gaps on direct alignment are:\n    *   It makes it difficult to effectively align the skeleton and text latent spaces.\n    *   It hinders generalization learning for unseen actions.\n    *   It particularly struggles with distinguishing between semantically similar actions (e.g., “Throw” vs. “Shoot”).\n    *   It struggles to generalize due to the inherent differences between modalities.\n\n**Answer:**\nModality gaps make it difficult to effectively align the corresponding latent spaces, which hinders generalization learning for unseen actions and particularly makes it challenging to distinguish between semantically similar actions. This leads to direct alignment struggling to generalize due to the inherent differences between skeleton and text modalities."
    },
    {
        "question": "What alternative alignment mechanisms could substitute the diffusion process for skeleton-text latent space fusion?",
        "relevant_section_ids": [
            "2.2"
        ],
        "relevant_context": [
            "Most of the existing works focus on aligning the skeleton latent space with the text latent space. These approaches can be categorized broadly into VAE-based methods [47  ###reference_b47###, 16  ###reference_b16###, 30  ###reference_b30###, 32  ###reference_b32###] and contrastive learning-based methods [69  ###reference_b69###, 71  ###reference_b71###, 7  ###reference_b7###, 26  ###reference_b26###, 61  ###reference_b61###].",
            "VAE-based. The previous work, CADA-VAE [47], leverages VAEs [24] to align skeleton and text latent spaces, ensuring that each modality’s decoder can generate useful outputs from the other’s latent representation. SynSE [16] refines this by introducing separate VAEs for verbs and nouns, improving the structure of the text latent space. MSF [30] extends this approach by incorporating action and motion-level descriptions to enhance alignment. SA-DVAE [32] disentangles skeleton features into semantic-relevant and irrelevant components, aligning text features exclusively with relevant skeleton features for improved performance.",
            "Contrastive learning-based. Contrastive learning-based methods align skeleton and text features through positive and negative pairs [5]. SMIE [69] concatenates skeleton and text features and applies contrastive learning by treating masked skeleton features as positive samples and other actions as negatives. PURLS [71] incorporates GPT-3 [1] to generate text descriptions based on body parts and motion evolution, using cross-attention to align text descriptions with skeleton features. STAR [7] extends this idea with GPT-3.5 [1], generating text descriptions for six distinct skeleton groups and introduces learnable prompts to enhance alignment. DVTA [26] introduces a dual alignment strategy, performing direct alignment between skeleton and text features while also generating augmented text features via cross-attention for improved alignment. InfoCPL [61] strengthens contrastive learning by generating 100 unique sentences per action label, enriching the alignment space."
        ],
        "final_answer": "Instead of using the diffusion-based fusion process, one could fall back on direct latent-space alignment techniques, namely: (1) VAE-based alignment (e.g. CADA-VAE, SynSE, MSF, SA-DVAE) and (2) contrastive learning-based alignment (e.g. SMIE, PURLS, STAR, DVTA, InfoCPL).",
        "relevant_elements": [
            "Diffusion Process",
            "Unified Latent"
        ],
        "id": 156,
        "masked_question": "What alternative alignment mechanisms could substitute the [mask1] for skeleton-text [mask2] fusion?",
        "masked_number": 2,
        "masked_elements": [
            "Diffusion Process",
            "Unified Latent"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.10745v2_figure_1.png",
        "paperid": "2411.10745v2",
        "paper_path": "./papers/2411.10745v2.json",
        "figure_id": "2411.10745v2_figure_1.png",
        "caption": "Figure 1: Motivation of the proposed TDSM pipeline. Previous methods rely on direct alignment between skeleton and text latent spaces, but suffer from modality gaps that limit generalization. Our TDSM overcomes this challenge by leveraging a reverse diffusion process to embed text prompts into the unified skeleton-text latent space, ensuring more effective cross-modal alignment.",
        "qtype": "Others",
        "response": "The question asks for alternative alignment mechanisms that could substitute the \"Diffusion Process\" ([mask1]) for skeleton-text fusion ([mask2]).\n\n1.  **Identify [mask1]:** The red box highlights \"Diffusion Process\" within the \"TDSM (Ours)\" section. This is the mechanism proposed by the authors for skeleton-text fusion.\n2.  **Identify [mask2]:** The blue box encompasses the entire right side of the diagram, which illustrates the latent spaces for \"Skeleton Latent\", \"Text Latent\", and \"Unified Latent\", aiming for effective \"skeleton-text fusion\" (alignment).\n3.  **Consult the context for alternatives:**\n    *   Under \"Previous Methods\" in the diagram, \"Direct Alignment\" is shown as the approach used before TDSM.\n    *   The \"Zero-shot Skeleton-based Action Recognition\" section states: \"Most of the existing works focus on aligning the skeleton latent space with the text latent space. These approaches can be categorized broadly into VAE-based methods [47, 16, 30, 32] and contrastive learning-based methods [69, 71, 7, 26, 61].\"\n    *   The text further clarifies: \"While most existing methods rely on direct alignment between skeleton and text latent spaces...\"\n\nTherefore, the alternative alignment mechanisms are those used by previous methods to achieve skeleton-text fusion.\n\nAlternative alignment mechanisms that could substitute the **Diffusion Process** for skeleton-text **fusion** include:\n*   **Direct Alignment** (as depicted in \"Previous Methods\" in the diagram).\n*   **VAE-based methods** (Variational Autoencoders).\n*   **Contrastive learning-based methods**."
    },
    {
        "question": "What limitations arise from separating Content Injection and Style Injection steps?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "Content Injection",
            "Style Injection"
        ],
        "id": 157,
        "masked_question": "What limitations arise from separating [mask1] and Style Injection steps?",
        "masked_number": 1,
        "masked_elements": [
            "Content Injection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.15007v1_figure_2.png",
        "paperid": "2410.15007v1",
        "paper_path": "./papers/2410.15007v1.json",
        "figure_id": "2410.15007v1_figure_2.png",
        "caption": "Figure 2. Overall framework of DiffuseST. The target branch is to perform style transfer guided by textual and spatial representations of two images. We adopt the BLIP-2 encoder to produce text-aligned features of the style image. We utilize the DDIM inversion technique and extract inner spatial features in the content and style branches, respectively. The content and style spatial injections are separated at different steps in the target branch to achieve balanced stylization.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative spatial feature extraction could replace DDIM inversion to improve content fidelity?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "DDIM inversion"
        ],
        "id": 158,
        "masked_question": "What alternative spatial feature extraction could replace [mask1] to improve content fidelity?",
        "masked_number": 1,
        "masked_elements": [
            "DDIM inversion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.15007v1_figure_2.png",
        "paperid": "2410.15007v1",
        "paper_path": "./papers/2410.15007v1.json",
        "figure_id": "2410.15007v1_figure_2.png",
        "caption": "Figure 2. Overall framework of DiffuseST. The target branch is to perform style transfer guided by textual and spatial representations of two images. We adopt the BLIP-2 encoder to produce text-aligned features of the style image. We utilize the DDIM inversion technique and extract inner spatial features in the content and style branches, respectively. The content and style spatial injections are separated at different steps in the target branch to achieve balanced stylization.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What is the rationale for separate content and style injection phases in the target branch?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "Different steps of pre-trained diffusion models during the reverse process have been observed with varied functions (Meng et al., 2021; Xu et al., 2023; Zhang et al., 2023a), To produce a stylized image with balanced content and style, we are motivated to leverage the step-by-step nature of the diffusion model and separate the content and style injections in the target branch.",
            "Empirically, the early phase of the reverse process for the pre-trained diffusion model influences the overall structure and spatial layout, while the later phase focuses on more detailed visual effects. Therefore, we are inspired to perform the content injection in the early phase and the style injection in the later phase."
        ],
        "final_answer": "Because different denoising steps in diffusion affect different aspects of the image—early steps shape global structure and layout, while later steps add fine visual details—the method injects content in the early phase to preserve structure and injects style in the later phase to emphasize artistic details, achieving a balanced stylization.",
        "relevant_elements": [
            "content injection",
            "style injection",
            "target branch"
        ],
        "id": 159,
        "masked_question": "What is the rationale for separate [mask1] and [mask2] phases in the target branch?",
        "masked_number": 2,
        "masked_elements": [
            "content injection",
            "style injection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.15007v1_figure_2.png",
        "paperid": "2410.15007v1",
        "paper_path": "./papers/2410.15007v1.json",
        "figure_id": "2410.15007v1_figure_2.png",
        "caption": "Figure 2. Overall framework of DiffuseST. The target branch is to perform style transfer guided by textual and spatial representations of two images. We adopt the BLIP-2 encoder to produce text-aligned features of the style image. We utilize the DDIM inversion technique and extract inner spatial features in the content and style branches, respectively. The content and style spatial injections are separated at different steps in the target branch to achieve balanced stylization.",
        "qtype": "Design_Rationale",
        "response": "The rationale for separate Content Injection (red box) and Style Injection (blue box) phases in the target branch is to achieve balanced stylization by leveraging the step-by-step nature and varied functions of different phases in the diffusion model's reverse process.\n\n1.  **Leveraging Diffusion Model's Step-by-Step Nature:** The text states, \"Different steps of pre-trained diffusion models during the reverse process have been observed with varied functions.\"\n2.  **Early Phase for Structure/Layout (Content Injection):** \"Empirically, the early phase of the reverse process for the pre-trained diffusion model influences the overall structure and spatial layout.\" For this reason, the Content Injection (red box) is performed in the early phase to ensure the preservation of the content image's structure and layout.\n3.  **Later Phase for Detailed Visual Effects (Style Injection):** \"...while the later phase focuses on more detailed visual effects.\" Consequently, the Style Injection (blue box) is performed in the later phase to apply fine-grained artistic details from the style image without disrupting the core content structure.\n\nBy separating these injections, the model aims to \"produce a stylized image with balanced content and style,\" where content structure is preserved and artistic style is effectively applied in different, appropriate stages of the denoising process."
    },
    {
        "question": "Why inject residual features for content yet key-value features for style in self-attention modules?",
        "relevant_section_ids": [
            "3.3.1",
            "3.3.2"
        ],
        "relevant_context": [
            "Note that the proposed content injection scheme involves two parts: (1) the residual replacement improves the preservation of high-frequency details, and (2) the attention replacement ensures consistency with the content image for the overall layout.",
            "To inject style, however, replacing key and value elements is more suitable to retain the content and encourage artistic detail in the generated image."
        ],
        "final_answer": "Injecting residual features during content injection helps preserve high-frequency content details and maintain the overall layout, while replacing the key and value in self-attention for style injection best retains the content structure and allows richer artistic (style) details to be infused.",
        "relevant_elements": [
            "residual features",
            "key-value features",
            "self-attention"
        ],
        "id": 160,
        "masked_question": "Why inject residual features for content yet key-value features for style in [mask1] modules?",
        "masked_number": 1,
        "masked_elements": [
            "self-attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.15007v1_figure_2.png",
        "paperid": "2410.15007v1",
        "paper_path": "./papers/2410.15007v1.json",
        "figure_id": "2410.15007v1_figure_2.png",
        "caption": "Figure 2. Overall framework of DiffuseST. The target branch is to perform style transfer guided by textual and spatial representations of two images. We adopt the BLIP-2 encoder to produce text-aligned features of the style image. We utilize the DDIM inversion technique and extract inner spatial features in the content and style branches, respectively. The content and style spatial injections are separated at different steps in the target branch to achieve balanced stylization.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does the y2m generator mapping preserve spectral features during young-to-middle Mel-spectrogram conversion?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "CycleGAN-VC3 model introduces a Time-Frequency Adaptive Normalisation (TFAN) module, which is an extension of the traditional instance normalisation, allowing for a more fine-grained tuning of the features in the time-frequency dimension while preserving the information of the source spectrogram.",
            "The generator first converts the input Mel-spectrogram into 128 channels via a 2D convolutional layer, followed by two downsampling layers... During this process, the TFAN module is applied to maintain consistency across time and frequency.",
            "During the upsampling phase, the model restores the spatial resolution and increases the number of channels to 1024, with another application of the TFAN module to ensure feature retention.",
            "The cycle consistency loss ensures that after mapping samples from one domain to another and back, the original data is preserved, enforcing consistency across domain transformations.",
            "The identity loss is used to preserve input characteristics when the input already belongs to the target domain, ensuring that the generator does not alter the data unnecessarily."
        ],
        "final_answer": "The y2m generator uses Time-Frequency Adaptive Normalisation modules in both down- and up-sampling stages to adaptively normalise and re-inject the original spectral details across the time–frequency plane. In addition, cycle consistency loss forces the mapped spectrogram to reconstruct back to its original form, and an identity loss penalises any unnecessary changes when the input already matches the middle-aged domain. Together, these mechanisms ensure that key spectral features are preserved during young-to-middle conversion.",
        "relevant_elements": [
            "y2m generator",
            "Mel-spectrogram"
        ],
        "id": 163,
        "masked_question": "How does the [mask1] mapping preserve spectral features during young-to-middle [mask2] conversion?",
        "masked_number": 2,
        "masked_elements": [
            "y2m generator",
            "Mel-spectrogram"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.11120v1_figure_1.png",
        "paperid": "2410.11120v1",
        "paper_path": "./papers/2410.11120v1.json",
        "figure_id": "2410.11120v1_figure_1.png",
        "caption": "Figure 1: Framework of kinship verification using age voice conversion.",
        "qtype": "Implementation_Details",
        "response": "The 'generator' (mask1), which is based on the CycleGAN-VC3 architecture, preserves spectral features during young-to-middle (mask2) conversion primarily through two mechanisms:\n\n1.  **Time-Frequency Adaptive Normalisation (TFAN) Module**: The generator incorporates a TFAN module which is applied during both the downsampling and upsampling phases. This module is designed to allow for a more fine-grained tuning of features in the time-frequency dimension while preserving the information of the source spectrogram, thus maintaining consistency across time and frequency and ensuring feature retention.\n2.  **Cycle Consistency Loss**: As part of its loss function, the generator uses a cycle consistency loss. This loss ensures that if a Mel-spectrogram is converted from one age domain (e.g., young) to another (middle) and then back to the original domain (young), the original data (spectral features) is preserved, thereby enforcing consistency across domain transformations.\n3.  **Identity Loss**: An identity loss is also used, which helps preserve input characteristics when the input already belongs to the target domain, further ensuring that the generator does not unnecessarily alter the data."
    },
    {
        "question": "How does the HiFiGAN vocoder synthesise waveform fidelity from the generated Mel-spectrogram outputs?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "HiFiGAN vocoder",
            "generated Mel-spectrogram"
        ],
        "id": 164,
        "masked_question": "How does the [mask1] synthesise waveform fidelity from the [mask2] outputs?",
        "masked_number": 2,
        "masked_elements": [
            "HiFiGAN vocoder",
            "generated Mel-spectrogram"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.11120v1_figure_1.png",
        "paperid": "2410.11120v1",
        "paper_path": "./papers/2410.11120v1.json",
        "figure_id": "2410.11120v1_figure_1.png",
        "caption": "Figure 1: Framework of kinship verification using age voice conversion.",
        "qtype": "Implementation_Details",
        "response": "The [mask1], which is the HiFiGAN vocoder, synthesises waveform fidelity from the [mask2] (generated Mel-spectrogram) outputs by converting these generated Mel-spectrograms back into speech."
    },
    {
        "question": "How does the Emoji Recommendation Process aggregate outputs from multiple LLMs for a single benchmark dataset entry?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Emoji Recommendation Process",
            "Benchmark Dataset"
        ],
        "id": 165,
        "masked_question": "How does the [mask1] aggregate outputs from multiple LLMs for a single [mask2] entry?",
        "masked_number": 2,
        "masked_elements": [
            "Emoji Recommendation Process",
            "Benchmark Dataset"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.10760v1_figure_2.png",
        "paperid": "2409.10760v1",
        "paper_path": "./papers/2409.10760v1.json",
        "figure_id": "2409.10760v1_figure_2.png",
        "caption": "Figure 2: Overview of the Semantics Preserving Emoji Recommendation Framework. Left side: The Emoji Recommendation Process uses large language models to recommend three emojis for texts from the benchmark dataset. Right side: The Semantics Preserving Evaluation Process compares text + predicted emojis with text + ground truth emojis across 5 selected semantic dimensions, including sentiment, emotion, stance, age, and gender.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the Semantics Preserving Evaluation Process integrate sentiment and emotion label mismatches into final preservation scoring?",
        "relevant_section_ids": [
            "3",
            "3.3"
        ],
        "relevant_context": [
            "Next, we use the same classifier to assign labels to the modified sentences that combine the original plain text x with the recommended emojis ê. The classification output for the sentence with the recommended emojis is represented as ŷ. For each downstream task i, the semantics preserving capability of the model is evaluated by comparing whether ŷ_i equals the ground truth y_i.",
            "The matching pairs represent the number of labels that are the same across the five downstream tasks, with value ranging from 0 to 5. We use the proportion of correctly matched labels as the downstream task-based semantics preservation score, as shown in Table IV."
        ],
        "final_answer": "Sentiment and emotion are treated as two of the five downstream tasks. If the sentiment or emotion label predicted on the text with recommended emojis does not match the label predicted on the text with the original emojis, that task is counted as a mismatch. The total number of matching labels across all five tasks (including sentiment and emotion) is then divided by five to produce the final semantics preservation score.",
        "relevant_elements": [
            "Semantics Preserving Evaluation Process",
            "Sentiment",
            "Emotion"
        ],
        "id": 166,
        "masked_question": "How does the [mask1] integrate sentiment and emotion label mismatches into final preservation scoring?",
        "masked_number": 1,
        "masked_elements": [
            "Semantics Preserving Evaluation Process"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.10760v1_figure_2.png",
        "paperid": "2409.10760v1",
        "paper_path": "./papers/2409.10760v1.json",
        "figure_id": "2409.10760v1_figure_2.png",
        "caption": "Figure 2: Overview of the Semantics Preserving Emoji Recommendation Framework. Left side: The Emoji Recommendation Process uses large language models to recommend three emojis for texts from the benchmark dataset. Right side: The Semantics Preserving Evaluation Process compares text + predicted emojis with text + ground truth emojis across 5 selected semantic dimensions, including sentiment, emotion, stance, age, and gender.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How might the Sentiment module integration within the Semantics Preserving Evaluation Process build upon established sentiment analysis methods?",
        "relevant_section_ids": [
            "3",
            "3.1"
        ],
        "relevant_context": [
            "For each sentence with the predicted or ground truth emojis, we use a strong pre-trained classifier H(·) to infer labels on five downstream tasks. … For each downstream task t, the semantics preserving capability of the model is evaluated by comparing whether ŷ_t equals the ground truth y_t.",
            "Emojis often serve as indicators of sentiment analysis [26, 27], so maintaining the sentiment label after replacing the original emoji with a recommended one is crucial for semantics preservation. For this task, we use sentiment labels such as positive, negative, and neutral to evaluate consistency."
        ],
        "final_answer": "They treat sentiment analysis as one of the evaluation’s downstream tasks, applying a strong pre‐trained sentiment classifier (e.g. GPT-4o-mini) to assign standard sentiment labels (positive/negative/neutral) to both the original text + ground-truth emojis and the text + recommended emojis. By directly comparing whether those sentiment labels match, the framework builds on established sentiment analysis methods—using conventional sentiment categories and existing classification models—to measure how well the emoji recommendation preserves the original sentiment.",
        "relevant_elements": [
            "Sentiment",
            "Semantics Preserving Evaluation Process"
        ],
        "id": 167,
        "masked_question": "How might the [mask1] module integration within the [mask2] build upon established sentiment analysis methods?",
        "masked_number": 2,
        "masked_elements": [
            "Sentiment",
            "Semantics Preserving Evaluation Process"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.10760v1_figure_2.png",
        "paperid": "2409.10760v1",
        "paper_path": "./papers/2409.10760v1.json",
        "figure_id": "2409.10760v1_figure_2.png",
        "caption": "Figure 2: Overview of the Semantics Preserving Emoji Recommendation Framework. Left side: The Emoji Recommendation Process uses large language models to recommend three emojis for texts from the benchmark dataset. Right side: The Semantics Preserving Evaluation Process compares text + predicted emojis with text + ground truth emojis across 5 selected semantic dimensions, including sentiment, emotion, stance, age, and gender.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does the Stance dimension integration within the Semantics Preserving Evaluation Process relate to attitude detection methodologies?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "Stance detection is about identifying the author’s position or attitude towards a topic.",
            "Emojis can modify or reinforce the stance expressed in a sentence, so it is essential that the recommended emojis preserve the stance conveyed by the original text [29].",
            "We classify stance using the labels none, favor, and against."
        ],
        "final_answer": "Within the semantics preserving evaluation, the Stance dimension is implemented via a stance detection task—an attitude detection methodology that assesses whether recommended emojis preserve the author’s attitude or position toward a topic. It does this by classifying each post into one of three attitudinal categories: none, favor, or against.",
        "relevant_elements": [
            "Stance",
            "Semantics Preserving Evaluation Process"
        ],
        "id": 168,
        "masked_question": "How does the [mask1] dimension integration within the [mask2] relate to attitude detection methodologies?",
        "masked_number": 2,
        "masked_elements": [
            "Stance",
            "Semantics Preserving Evaluation Process"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.10760v1_figure_2.png",
        "paperid": "2409.10760v1",
        "paper_path": "./papers/2409.10760v1.json",
        "figure_id": "2409.10760v1_figure_2.png",
        "caption": "Figure 2: Overview of the Semantics Preserving Emoji Recommendation Framework. Left side: The Emoji Recommendation Process uses large language models to recommend three emojis for texts from the benchmark dataset. Right side: The Semantics Preserving Evaluation Process compares text + predicted emojis with text + ground truth emojis across 5 selected semantic dimensions, including sentiment, emotion, stance, age, and gender.",
        "qtype": "Literature_Background",
        "response": "The \"[mask1]\" (Stance) dimension is directly defined and integrated into the \"[mask2]\" (Semantics Preserving Evaluation Process) as a core attitude detection methodology.\n\nSpecifically, as stated in the text under \"III-A Selection of Downstream Tasks,\" stance detection is explicitly chosen to capture \"the emotional content conveyed by the sentence.\" The text further clarifies: \"Stance detection is about identifying the author's position or attitude towards a topic.\" Its integration requires that \"it is essential that the recommended emojis preserve the stance conveyed by the original text,\" classifying stance using labels such as 'none', 'favor', and 'against'.\n\nTherefore, the Stance dimension's integration within the Semantics Preserving Evaluation Process directly serves as a method for attitude detection, ensuring the recommended emojis maintain the original attitudinal position of the user as determined by the classifier H(•)."
    },
    {
        "question": "How does the Imitation Learning phase extend standard imitation frameworks for multimodal web navigation?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "We utilize GPT-4o along with the WebVoyager paradigm (He et al., 2024) to generate web navigation trajectories corresponding to the above queries. The agent is named WebVoyager-4o and configured to receive observations consisting of the latest  steps, including the accessibility trees and screenshots.",
            "It is worth noting that we preserve the thought and action of each step to maintain the full reasoning process without occupying excessive context.",
            "The collected trajectories fall into three pre-defined categories: unfinished (exceeding the maximum iteration of Navigation), finished & unsuccessful, and finished & successful. In this stage, to better distill knowledge from GPT-4o, we filter out unfinished trajectories, retaining only the other ones for training in Imitation Learning. Meanwhile, we resample the unfinished tasks once to improve the utilization of queries and reduce the problem of navigation failure due to sampling randomness.",
            "We adopt Idefics2 (Laurençón et al., 2024) to learn trajectories collected through WebVoyager-4o. In Idefics2, screenshots are encoded as 64 visual tokens. However, the length of each accessibility tree is typically way longer than 64 tokens.\nConsidering the sequence length issue, we have to further truncate the context and the number of images, retaining the latest  images while keeping only one accessibility tree of the current page.",
            "Through Imitation Learning, the agent has already learned the basic operation logic and response format, so there is no need for the system prompt."
        ],
        "final_answer": "The Imitation Learning phase extends standard imitation frameworks by (1) using a GPT-4o–powered “WebVoyager-4o” to generate multimodal trajectories that include both screenshots and accessibility trees, (2) preserving the full thought-and-action chain at each step to capture reasoning, (3) filtering out only fully executed (successful or failed) trajectories and resampling unfinished ones to maximize data utility, and (4) adapting to the open-source Idefics2 model’s context limits by truncating long accessibility trees and images while discarding the system prompt once the response format is learned.",
        "relevant_elements": [
            "Imitation Learning"
        ],
        "id": 169,
        "masked_question": "How does the [mask1] phase extend standard imitation frameworks for multimodal web navigation?",
        "masked_number": 1,
        "masked_elements": [
            "Imitation Learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.19609v1_figure_1.png",
        "paperid": "2410.19609v1",
        "paper_path": "./papers/2410.19609v1.json",
        "figure_id": "2410.19609v1_figure_1.png",
        "caption": "Figure 1: The overall process of OpenWebVoyager, including the Imitation Learning phase and the exploration-feedback-optimization cycles. The agent learns basic multimodal web navigation skills through Imitation Learning and continues to explore real-world web environments. GPT-4o provides feedback on explored multimodal trajectories, leaving successful trajectories for the agent to improve.",
        "qtype": "Literature_Background",
        "response": "The \"Imitation Learning\" phase in OpenWebVoyager extends standard imitation frameworks for"
    },
    {
        "question": "How does Self-Explore Learning integrate Multimodal Trajectories compared to classic online exploration strategies?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Self-Explore Learning",
            "Multimodal Trajectories"
        ],
        "id": 170,
        "masked_question": "How does [mask1] integrate [mask2] compared to classic online exploration strategies?",
        "masked_number": 2,
        "masked_elements": [
            "Self-Explore Learning",
            "Multimodal Trajectories"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.19609v1_figure_1.png",
        "paperid": "2410.19609v1",
        "paper_path": "./papers/2410.19609v1.json",
        "figure_id": "2410.19609v1_figure_1.png",
        "caption": "Figure 1: The overall process of OpenWebVoyager, including the Imitation Learning phase and the exploration-feedback-optimization cycles. The agent learns basic multimodal web navigation skills through Imitation Learning and continues to explore real-world web environments. GPT-4o provides feedback on explored multimodal trajectories, leaving successful trajectories for the agent to improve.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Imitation Learning influence the quality of multimodal trajectories used in Self-Explore Learning?",
        "relevant_section_ids": [
            "3.4",
            "3.5"
        ],
        "relevant_context": [
            "In this stage, to better distill knowledge from GPT-4o, we filter out unfinished trajectories, retaining only the other ones for training in Imitation Learning.",
            "Through Imitation Learning, the agent has already learned the basic operation logic and response format, so there is no need for the system prompt.",
            "After the Imitation Learning phase, the trained agent θ0 will proceed to explore websites and undergo multiple cycles of exploration-feedback-optimization.",
            "At each exploration-feedback-optimization cycle, we employ trajectory-level rejection sampling via GPT-4o to ensure quality trajectories."
        ],
        "final_answer": "By first training on only finished, GPT-4o–generated multimodal trajectories (i.e., filtering out incomplete ones) and internalizing the proper thought–action format, Imitation Learning gives the base agent the basic operation logic and response structure.  As a result, when the agent begins self-exploration, it produces more coherent, correctly structured multimodal trajectories that can be reliably filtered and optimized in subsequent exploration–feedback cycles.",
        "relevant_elements": [
            "Imitation Learning",
            "Multimodal Trajectories",
            "Self-Explore Learning"
        ],
        "id": 171,
        "masked_question": "How does [mask1] influence the quality of [mask2] used in Self-Explore Learning?",
        "masked_number": 2,
        "masked_elements": [
            "Imitation Learning",
            "Multimodal Trajectories"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.19609v1_figure_1.png",
        "paperid": "2410.19609v1",
        "paper_path": "./papers/2410.19609v1.json",
        "figure_id": "2410.19609v1_figure_1.png",
        "caption": "Figure 1: The overall process of OpenWebVoyager, including the Imitation Learning phase and the exploration-feedback-optimization cycles. The agent learns basic multimodal web navigation skills through Imitation Learning and continues to explore real-world web environments. GPT-4o provides feedback on explored multimodal trajectories, leaving successful trajectories for the agent to improve.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does incorporating screenshot and accessibility tree observations shape thought and action generation?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "In this work, we adopt the vision-language setting that the observation in each step will include an accessibility tree and a screenshot, i.e., o_t = (tree_t, image_t). Let θ represents the parameters of the Large Multimodal Models (LMMs). Following the ReAct paradigm, we derive thoughts and actions using LMMs: (thought_t, action_t) = LMM(θ; system_prompt, o_1, …, o_t), where system_prompt denotes the system prompt, including answer formats, the introduction of web operations and some guidelines.",
            "Similar to the messages fed into GPT-4o, we embed the <image> token at the corresponding position in the context, aligning it with the accessibility tree. The Idefics2-based agent will make a decision based on the observation containing multimodal information."
        ],
        "final_answer": "By treating each web state as a pair of the screenshot and its accessibility tree, the agent feeds both modalities into the LMM under a ReAct-style prompt.  Concretely, the multimodal observation (tree_t, image_t) is passed—alongside the system prompt—into the model, which then jointly reasons over visual and structural cues to generate its internal thought and choose the next action.",
        "relevant_elements": [
            "Screenshot & Accessibility Tree",
            "Thought",
            "Action"
        ],
        "id": 172,
        "masked_question": "How does incorporating [mask1] observations shape [mask2] and action generation?",
        "masked_number": 2,
        "masked_elements": [
            "Screenshot & Accessibility Tree",
            "Thought"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.19609v1_figure_1.png",
        "paperid": "2410.19609v1",
        "paper_path": "./papers/2410.19609v1.json",
        "figure_id": "2410.19609v1_figure_1.png",
        "caption": "Figure 1: The overall process of OpenWebVoyager, including the Imitation Learning phase and the exploration-feedback-optimization cycles. The agent learns basic multimodal web navigation skills through Imitation Learning and continues to explore real-world web environments. GPT-4o provides feedback on explored multimodal trajectories, leaving successful trajectories for the agent to improve.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] refers to the \"Screenshot & Accessibility Tree,\" which constitutes the `Observation` at each step in the web environment. The [mask2] refers to \"Thought.\"\n\nBased on the provided context:\n1.  **Observation Contents:** The text states, \"the observation in each step will include an accessibility tree and a screenshot, i.e., .\" This confirms that [mask1] represents the multimodal observation.\n2.  **Deriving Thought and Action:** The \"Task Formulation\" section explicitly states, \"Following the ReAct paradigm, we derive thoughts and actions using LMMs: , where  denotes the system prompt...\". This equation shows that the `Thought` (`T_t`) and `Action` (`A_t`) at time `t` are generated by the Large Multimodal Models (LMMs) based on the current `Observation` (`O_t`), the task `Query` (`Q`), and the `System Prompt` (`P_S`).\n3.  **Role of Observation:** The \"OpenWebVoyager Overview\" section further clarifies, \"The Idefics2-based agent will make a decision based on the observation containing multimodal information.\" This decision-making process encompasses both the `Thought` and `Action` generation.\n\nTherefore, the `Screenshot & Accessibility Tree` observations shape the `Thought` and action generation by serving as the essential **multimodal input** for the Large Multimodal Models (LMMs). The LMMs process these visual (screenshot) and structural/semantic (accessibility tree) inputs, along with the task query, to generate the `Thought` (internal reasoning or plan) which then directly leads to the specific `Action` the agent will perform in the web environment.\n\n**Answer:** Incorporating **Screenshot & Accessibility Tree** observations shapes **Thought** and action generation by providing the Large Multimodal Models (LMMs) with the necessary multimodal input (visual context"
    },
    {
        "question": "How does applying multi-expert adapters exclusively in the last P blocks influence feature adaptation flexibility?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "By this, the multi-expert mechanism enables the network to develop powerful capabilities to flexibly handle the data from new and old classes.",
            "According to previous research, allocating more adapter experts in higher blocks enhances the effectiveness of models compared with inserting them in the lower blocks. Hence, the MEA structure is incorporated only in the last P blocks out of the total L blocks."
        ],
        "final_answer": "By concentrating the multi-expert adapters in the final P Transformer blocks—where the representations are most abstract—the model gains strong, flexible adaptation capacity. In these deeper layers the branch-wise experts can specialize on old versus new class patterns without disturbing earlier, low-level features, thereby maximizing the flexibility of feature adaptation.",
        "relevant_elements": [
            "multi-expert adapter",
            "last P blocks"
        ],
        "id": 173,
        "masked_question": "How does applying [mask1] exclusively in the last P blocks influence feature adaptation flexibility?",
        "masked_number": 1,
        "masked_elements": [
            "multi-expert adapter"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.21705v1_figure_1.png",
        "paperid": "2410.21705v1",
        "paper_path": "./papers/2410.21705v1.json",
        "figure_id": "2410.21705v1_figure_1.png",
        "caption": "Figure 1: (a) The description of the generalized category discovery (GCD) task. (b) The framework of our proposed AdaptGCD. It contains two critical modules: the multi-expert adapter (MEA) structure and the route assignment constraint. The MEA introduces multiple adapter experts and the route assignment constraint guides the allocation of these experts.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] \"Multi-Expert Adapter\" (MEA) is explicitly incorporated only in the last P blocks of the total L blocks in the network. This strategic placement is based on previous research suggesting that **allocating more adapter experts in higher blocks enhances the effectiveness of models** compared to inserting them in lower blocks.\n\nThe MEA itself is designed to allow data under different supervisions (specifically old and new classes) to navigate through diverse paths, thereby achieving separation at the network level and alleviating interference between new and old classes. By applying this structure exclusively in the last P blocks, the framework aims to **develop powerful capabilities to flexibly handle features from both new and old classes** at a more abstract and refined level, which are typically represented in the higher layers of deep learning models. This enhances feature adaptation flexibility by allowing the model to adapt its representation specifically for distinguishing between known (old) and newly discovered (new) categories in a more effective manner, leveraging the high-level features learned by the backbone."
    },
    {
        "question": "How does the route assignment constraint balance expert utilization while separating new- and old-class data in AdaptGCD?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "In the multi-expert adapter, the route assignment constraint is required to supervise and control the route distribution. The assignment mainly focuses on two aspects: First, for all data, the load of all experts needs to be balanced to make full use of the resources of experts. Second, for data in old or new classes, the constraint assigns the corresponding experts to them so that the data can be well separated at the routing level. These two aspects correspond to the balanced load loss and the partial balanced load loss, which are introduced in this part.",
            "Balanced Load Loss. The balanced load loss is designed to ensure the maximal usage of diverse experts. … the mean distribution of experts in the l-th layer, averaging the route assignment probabilities across all samples, is aligned to a uniform distribution Uℓ, where Uℓ=1/E. The formulation is depicted in Eq. (5).",
            "Partial Balanced Load Loss. … we propose a partial balanced load loss to separate the new-class and old-class data into different experts and reduce their interference. … We manually specify the expert groups for the old and new classes beforehand and denote the expert groups as Gor_old and Gor_new, respectively. For instance, the first four experts are assigned to Gor_old and the remaining experts are naturally divided into Gor_new. Then the target route distribution probability for the old classes P_old and new classes P_new is established as follows: … As shown in Eq. (9), the Kullback–Leibler divergence is adopted to align Pr_old and Pr_new with the predefined target P_old and P_new.",
            "In the final step, the route assignment loss L_ra for the AdaptGCD is collected as the weighted sum of the two losses, i.e., L_ra = λ_bl·L_bl + λ_pbl·L_pbl, where λ_bl and λ_pbl are the balancing factors."
        ],
        "final_answer": "AdaptGCD’s route assignment constraint implements two complementary losses over the per‐expert routing probabilities.  First, a balanced load loss aligns the mean activation of each expert across all samples to a uniform distribution, ensuring that no expert is under‐ or over‐utilized.  Second, a partial balanced load loss splits the data into old‐ and new‐class subsets (via pseudo‐labels), assigns each subset to a predefined group of experts (e.g. the first half for old classes, the second half for new classes), and then aligns each subset’s routing distribution to its target using KL divergence.  These two losses are combined to both balance overall expert usage and force separation of new‐ vs. old‐class data at the routing level.",
        "relevant_elements": [
            "route assignment constraint",
            "new-class experts",
            "old-class experts"
        ],
        "id": 174,
        "masked_question": "How does the [mask1] balance expert utilization while separating new- and old-class data in AdaptGCD?",
        "masked_number": 1,
        "masked_elements": [
            "route assignment constraint"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.21705v1_figure_1.png",
        "paperid": "2410.21705v1",
        "paper_path": "./papers/2410.21705v1.json",
        "figure_id": "2410.21705v1_figure_1.png",
        "caption": "Figure 1: (a) The description of the generalized category discovery (GCD) task. (b) The framework of our proposed AdaptGCD. It contains two critical modules: the multi-expert adapter (MEA) structure and the route assignment constraint. The MEA introduces multiple adapter experts and the route assignment constraint guides the allocation of these experts.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What limitations stem from predefining old-class experts and new-class experts in the Multi-Expert Adapter?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Multi-Expert Adapter",
            "old-class experts",
            "new-class experts"
        ],
        "id": 175,
        "masked_question": "What limitations stem from predefining [mask1] and [mask2] in the Multi-Expert Adapter?",
        "masked_number": 2,
        "masked_elements": [
            "old-class experts",
            "new-class experts"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.21705v1_figure_1.png",
        "paperid": "2410.21705v1",
        "paper_path": "./papers/2410.21705v1.json",
        "figure_id": "2410.21705v1_figure_1.png",
        "caption": "Figure 1: (a) The description of the generalized category discovery (GCD) task. (b) The framework of our proposed AdaptGCD. It contains two critical modules: the multi-expert adapter (MEA) structure and the route assignment constraint. The MEA introduces multiple adapter experts and the route assignment constraint guides the allocation of these experts.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What trade-offs occur when reducing dimensions in Down^i and Up^i modules of MEAdaptMLP?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Down^i",
            "Up^i",
            "MEAdaptMLP"
        ],
        "id": 176,
        "masked_question": "What trade-offs occur when reducing dimensions in [mask1] and [mask2] modules of MEAdaptMLP?",
        "masked_number": 2,
        "masked_elements": [
            "Down^i",
            "Up^i"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.21705v1_figure_1.png",
        "paperid": "2410.21705v1",
        "paper_path": "./papers/2410.21705v1.json",
        "figure_id": "2410.21705v1_figure_1.png",
        "caption": "Figure 1: (a) The description of the generalized category discovery (GCD) task. (b) The framework of our proposed AdaptGCD. It contains two critical modules: the multi-expert adapter (MEA) structure and the route assignment constraint. The MEA introduces multiple adapter experts and the route assignment constraint guides the allocation of these experts.",
        "qtype": "Others",
        "response": "When reducing dimensions in the `Down` ([mask1]) and `Up` ([mask2]) modules of the MEAdaptMLP (by decreasing the bottleneck dimension `d`), the following trade-offs occur:\n\n1.  **Advantage (Pro):** Reducing the bottleneck dimension leads to a *decrease in the number of learnable parameters*. This can help mitigate overfitting (as excessive parameters can cause it) and potentially reduce computational cost during training and inference.\n2.  **Disadvantage (Con):** If the bottleneck dimension is reduced too much (i.e., made \"relatively small\"), there is a *noticeable drop in performance*. This is because making the dimension too small limits the model's capacity and might hinder its ability to capture complex information or adapt effectively to the task."
    },
    {
        "question": "What limitations might stem from confidence mask dependency in progressive rendering material estimation?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Confidence Mask",
            "Progressively Render",
            "Material Estimator"
        ],
        "id": 177,
        "masked_question": "What limitations might stem from [mask1] dependency in [mask2] material estimation?",
        "masked_number": 2,
        "masked_elements": [
            "Confidence Mask",
            "Progressively Render"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15138v1_figure_2.png",
        "paperid": "2411.15138v1",
        "paper_path": "./papers/2411.15138v1.json",
        "figure_id": "2411.15138v1_figure_2.png",
        "caption": "Figure 2: Overview of Material Anything. For texture-less objects, we first generate coarse textures using image diffusion models, similar to the texture generation method [6]. For objects with pre-existing textures, we directly process them. Next, a material estimator progressively estimates materials for each view from a rendered image, normal, and confidence mask. The confidence mask serves as additional guidance for illuminance uncertainty, addressing lighting variations in the input image and enhancing consistency across generated multi-view materials. These materials are then unwrapped into UV space and refined by a material refiner. The final material maps are integrated with the mesh, enabling the object for downstream applications.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative inpainting strategies could improve seam handling in UV space material refinement?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "UV Space",
            "Material Refiner"
        ],
        "id": 178,
        "masked_question": "What alternative inpainting strategies could improve seam handling in [mask1] material refinement?",
        "masked_number": 1,
        "masked_elements": [
            "UV Space"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.15138v1_figure_2.png",
        "paperid": "2411.15138v1",
        "paper_path": "./papers/2411.15138v1.json",
        "figure_id": "2411.15138v1_figure_2.png",
        "caption": "Figure 2: Overview of Material Anything. For texture-less objects, we first generate coarse textures using image diffusion models, similar to the texture generation method [6]. For objects with pre-existing textures, we directly process them. Next, a material estimator progressively estimates materials for each view from a rendered image, normal, and confidence mask. The confidence mask serves as additional guidance for illuminance uncertainty, addressing lighting variations in the input image and enhancing consistency across generated multi-view materials. These materials are then unwrapped into UV space and refined by a material refiner. The final material maps are integrated with the mesh, enabling the object for downstream applications.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates integrating confidence mask into Material Estimator for multi-view consistency under varying illumination?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "To manage inputs with various lighting conditions, we categorize these conditions into two main groups: high confidence (e.g., scanned objects) and low confidence (e.g., no lighting and generated lighting). To guide the model, we introduce a certainty mask that indicates illumination confidence. … Note that, for images with generated lighting, the mask can selectively assign values of 1 in known material regions and 0 elsewhere to enhance multi-view material consistency, as detailed in the progressive material generation (Sec. 3.2).",
            "Consistency is especially challenging in views with generated lighting due to exaggerated highlights and shadows. Therefore, for these views with generated lighting, we additionally utilize the confidence mask introduced in Sec. 3.1 to further enhance consistency between newly generated and known regions. Specifically, we dynamically adjust the mask, setting it to 1 for known regions with higher confidence and to 0 for regions requiring new generation."
        ],
        "final_answer": "The confidence mask is integrated to let the estimator adapt to varying illumination: it tells the model when to trust lighting cues (high confidence) and when to ignore them (low confidence), and it preserves previously generated high-confidence regions while regenerating low-confidence areas, thereby enforcing multi-view consistency under both realistic and unreliable lighting conditions.",
        "relevant_elements": [
            "confidence mask",
            "Material Estimator"
        ],
        "id": 179,
        "masked_question": "What motivates integrating [mask1] into Material Estimator for multi-view consistency under varying illumination?",
        "masked_number": 1,
        "masked_elements": [
            "confidence mask"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15138v1_figure_2.png",
        "paperid": "2411.15138v1",
        "paper_path": "./papers/2411.15138v1.json",
        "figure_id": "2411.15138v1_figure_2.png",
        "caption": "Figure 2: Overview of Material Anything. For texture-less objects, we first generate coarse textures using image diffusion models, similar to the texture generation method [6]. For objects with pre-existing textures, we directly process them. Next, a material estimator progressively estimates materials for each view from a rendered image, normal, and confidence mask. The confidence mask serves as additional guidance for illuminance uncertainty, addressing lighting variations in the input image and enhancing consistency across generated multi-view materials. These materials are then unwrapped into UV space and refined by a material refiner. The final material maps are integrated with the mesh, enabling the object for downstream applications.",
        "qtype": "Design_Rationale",
        "response": "The confidence mask ([mask1]) is integrated into the Material Estimator for multi-view consistency under varying illumination for the following reasons:\n\n1.  **Manage Diverse Lighting Conditions**: The confidence mask acts as a guide, indicating the illumination confidence of the input image. For inputs with realistic lighting (high confidence), the mask value is 1, prompting the Material Estimator to leverage these lighting cues for material estimation. For inputs lacking lighting or with generated lighting (low confidence), the mask"
    },
    {
        "question": "What is rationale for employing a Material Refiner in UV space instead of per-view estimation?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "To adapt our 2D materials estimator for 3D objects, we propose a progressive generation strategy that dynamically estimates materials across different viewpoints based on the aforementioned confidence mask. We further project the multi-view materials into UV space and apply a refinement diffusion model, which completes occluded regions and refines materials, ensuring seamless and consistent materials maps.",
            "Although coarse UV material maps are generated, issues such as seams (resulting from baking across different views) and texture holes (due to self-occlusion during rendering) remain. We thus refine material maps directly in UV space using a diffusion model."
        ],
        "final_answer": "Per-view material estimation, even when done progressively, still produces seams and holes when the separate view outputs are baked together into a single UV atlas. By switching to a UV-space Refiner that takes the stitched (coarse) UV maps as input, the model can jointly inpaint occluded regions, smooth across seam boundaries, and enforce global consistency in the UV domain—something that is difficult to achieve when refining each view independently.",
        "relevant_elements": [
            "Material Refiner",
            "UV space"
        ],
        "id": 180,
        "masked_question": "What is rationale for employing a [mask1] in UV space instead of per-view estimation?",
        "masked_number": 1,
        "masked_elements": [
            "Material Refiner"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15138v1_figure_2.png",
        "paperid": "2411.15138v1",
        "paper_path": "./papers/2411.15138v1.json",
        "figure_id": "2411.15138v1_figure_2.png",
        "caption": "Figure 2: Overview of Material Anything. For texture-less objects, we first generate coarse textures using image diffusion models, similar to the texture generation method [6]. For objects with pre-existing textures, we directly process them. Next, a material estimator progressively estimates materials for each view from a rendered image, normal, and confidence mask. The confidence mask serves as additional guidance for illuminance uncertainty, addressing lighting variations in the input image and enhancing consistency across generated multi-view materials. These materials are then unwrapped into UV space and refined by a material refiner. The final material maps are integrated with the mesh, enabling the object for downstream applications.",
        "qtype": "Design_Rationale",
        "response": "The rationale for employing a Material Refiner in UV space instead of relying solely on per-view estimation is to address critical issues that arise when generating materials on a per-view basis and then combining them:\n\n1.  **Consistency:** While per-view material estimation is performed, directly applying it to multiple views would lead to \"noticeable inconsistencies\" across different viewpoints. The UV-space refinement helps enforce overall consistency."
    },
    {
        "question": "What motivates freezing IPA-FR parameters while training the Face Embedding Mapping Model?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "IPA-FR",
            "Face Embedding Mapping Model"
        ],
        "id": 181,
        "masked_question": "What motivates freezing [mask1] parameters while training the Face Embedding Mapping Model?",
        "masked_number": 1,
        "masked_elements": [
            "IPA-FR"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.18165v1_figure_2.png",
        "paperid": "2411.18165v1",
        "paper_path": "./papers/2411.18165v1.json",
        "figure_id": "2411.18165v1_figure_2.png",
        "caption": "Figure 2: Pipeline of face reconstruction by face embedding mapping.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What warrants multi-term loss optimization between IPA-FR outputs and Face Embedding Mapping Model predictions?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "In order to enable target  model to generate realistic target identity face images from IPA-FaceID, the target embedding extracted from  should be close to the corresponding embedding that represents the same face identity.",
            "Therefore, we should minimize the distance between    and , where  and denote FEM and mapped face embedding, respectively.",
            "Our total loss is determined by a linear combination of the aforementioned loss types."
        ],
        "final_answer": "Because the mapped embedding produced by the Face Embedding Mapping model must closely match the embedding extracted by IPA-FR for the same identity, a multi-term loss (combining MSE, pairwise distance, and cosine embedding distance) is used to minimize their distance and preserve identity information.",
        "relevant_elements": [
            "IPA-FR",
            "Face Embedding Mapping Model",
            "Loss Optimization"
        ],
        "id": 182,
        "masked_question": "What warrants multi-term [mask1] between IPA-FR outputs and Face Embedding Mapping Model predictions?",
        "masked_number": 1,
        "masked_elements": [
            "Loss Optimization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.18165v1_figure_2.png",
        "paperid": "2411.18165v1",
        "paper_path": "./papers/2411.18165v1.json",
        "figure_id": "2411.18165v1_figure_2.png",
        "caption": "Figure 2: Pipeline of face reconstruction by face embedding mapping.",
        "qtype": "Design_Rationale",
        "response": "The multi-term \"Loss Optimization\" (referred to as \"Joint Loss\" in the context) is warranted by the objective to minimize the distance between two different face embeddings, and it achieves this by combining multiple distinct loss functions.\n\nSpecifically, the context states: \"Our total loss is determined by a linear combination of the aforementioned loss types\". These loss types are:\n1.  **Mean Square Error (MSE)**: Used to reduce the reconstruction difference of the generated embedding.\n2.  **Pairwise Distance (PD)**: Computes the Euclidean distance between input vectors.\n3.  **Cosine Embedding Distance (CED)**: Measures the similarity between two embedding vectors, commonly used in FR tasks.\n\nThe combination of these loss functions (MSE, Pairwise Distance, and Cosine Embedding Distance) into a"
    },
    {
        "question": "How does Loss Optimization balance contributions from IPA-FR and Target FR embeddings during training?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "In order to enable target  model to generate realistic target identity face images from IPA-FaceID, the target embedding extracted from  should be close to the corresponding embedding that represents the same face identity. Therefore, we should minimize the distance between    and , where  and  denote FEM and mapped face embedding, respectively.",
            "Mean Square Error (MSE): To reduce reconstruction difference of the generated embedding, we use MES loss to minimize the square of the reconstruction error:",
            "Pairwise Distance (PD): When p=2, PD computes the pairwise distance between input vectors using the euclidean distance:",
            "Cosine Embedding Distance (CED): CED is used for measuring whether two embedding vectors are similar, it is widely used for comparing face template in FR tasks:",
            "Our total loss is determined by a linear combination of the aforementioned loss types: We empirically determined that the selection of , ,  (value should be set to balance the range of different loss functions) yields the best performance."
        ],
        "final_answer": "During training, the loss module takes the frozen IPA-FR embedding as the target and the FEM-mapped embedding (converted from the Target FR/PPFR output) as the source and computes three distances—Mean Squared Error, Euclidean (pairwise) distance, and Cosine Embedding distance—between them. These three losses are added together in a single joint loss: L = α·L_MSE + β·L_PD + γ·L_CED. The coefficients α, β, γ are chosen empirically to balance the magnitude (and thus the contribution) of each term, ensuring neither the IPA-FR nor the Target FR embedding dominates the optimization.",
        "relevant_elements": [
            "IPA-FR",
            "Target FR/PPFR",
            "Loss Optimization"
        ],
        "id": 183,
        "masked_question": "How does [mask1] balance contributions from IPA-FR and Target FR embeddings during training?",
        "masked_number": 1,
        "masked_elements": [
            "Loss Optimization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.18165v1_figure_2.png",
        "paperid": "2411.18165v1",
        "paper_path": "./papers/2411.18165v1.json",
        "figure_id": "2411.18165v1_figure_2.png",
        "caption": "Figure 2: Pipeline of face reconstruction by face embedding mapping.",
        "qtype": "Implementation_Details",
        "response": "The \"Loss Optimization\" (mask1) balances contributions from IPA-FR and Target FR embeddings during training through a **joint loss function**.\n\nSpecifically:\n1.  It minimizes the distance between the mapped face embedding (derived from IPA-FR through the Face Embedding Mapping Model) and the target face embedding (from Target FR/PPFR) that represents the same face identity.\n2.  This total loss is determined by a **linear combination** of different loss types: Mean Square Error (MSE), Pairwise Distance (PD), and Cosine Embedding Distance (CED).\n3.  The contributions of these individual loss components are balanced by **empirically determined weights (λ1, λ2, λ3)**. These weights are set to balance the range of different loss functions, ensuring that each contributes appropriately to the overall optimization objective."
    },
    {
        "question": "How does the Face Embedding Mapping Model adjust embedding distributions prior to IPA-FaceID generation?",
        "relevant_section_ids": [
            "1",
            "3.3",
            "3.4"
        ],
        "relevant_context": [
            "As depicted in Figure 2, we feed training face images to both IPA-FR (default FR of IPA-FaceID) and target FR models. The initial output face embedding from the target FR model is transferred by the Face Embedding Mapping (FEM) model before performing multi-term loss optimization.",
            "In order to enable target $\\mathcal{F}$ model to generate realistic target identity face images from IPA-FaceID, the target embedding extracted from $\\mathcal{F}$ should be close to the corresponding embedding that represents the same face identity. Therefore, we should minimize the distance between $\\mathbf{e}_t$ and $\\mathbf{e}_m$, where $\\mathbf{e}_t$ and $\\mathbf{e}_m$ denote FEM and mapped face embedding, respectively. Mean Square Error (MSE), Pairwise Distance (PD) and Cosine Embedding Distance (CED) are combined into a multi-term loss to align the two embeddings.",
            "Inspired from (Papantoniou et al., 2024) and (Liu et al., 2024), we propose FEM-MLP and FEM-KAN to learn the mapping relation of embedding distributions from different FR backbones. Then trained FEMs can map face embedding from the initial domain into the corresponding target domain of the pre-trained IPA-FaceID diffusion model in order to generate face images."
        ],
        "final_answer": "The Face Embedding Mapping (FEM) model is a small trainable module (implemented either as an MLP or a KAN network) that learns to non-linearly transform embeddings from a target FR or PPFR model into the embedding space expected by IPA-FaceID. During training it minimizes a multi-term loss (MSE, pairwise Euclidean, and cosine distances) between mapped embeddings and the IPA-FR embeddings of the same identities, effectively aligning the two distributions. At inference time, any leaked embedding is passed through this trained FEM to adjust its distribution before feeding it into IPA-FaceID for realistic face generation.",
        "relevant_elements": [
            "Face Embedding Mapping Model",
            "IPA-FaceID"
        ],
        "id": 184,
        "masked_question": "How does the [mask1] adjust embedding distributions prior to [mask2] generation?",
        "masked_number": 2,
        "masked_elements": [
            "Face Embedding Mapping Model",
            "IPA-FaceID"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.18165v1_figure_2.png",
        "paperid": "2411.18165v1",
        "paper_path": "./papers/2411.18165v1.json",
        "figure_id": "2411.18165v1_figure_2.png",
        "caption": "Figure 2: Pipeline of face reconstruction by face embedding mapping.",
        "qtype": "Implementation_Details",
        "response": "The \"Face Embedding Mapping Model\" (FEM) adjusts embedding distributions by mapping the leaked face embedding from the \"Target FR/PPFR\" model (which is an initial domain) into the corresponding target domain of the pre-trained \"IPA-FaceID\" diffusion model. This re-mapped embedding is then directly used by \"IPA-FaceID\" to generate realistic \"Generated identity\" face images. The goal of this adjustment is to ensure that the mapped embedding is compatible with \"IPA-FaceID\" for accurate and ID-preserving face generation."
    },
    {
        "question": "How does Conditional Referring Module incorporate target-related cues with visual features for embedding refinement?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Considering the situation at stage t, we first concatenate one target-related cue Q_t and the M negative text cues obtained from other images, to form Q_concat. We then fuse the visual features V_t with Q_concat through a vision-to-text cross-attention, to obtain vision-attended cue features F_v2t.",
            "Using the vision-attended cue features F_v2t, we then enrich the global textual features Q_global into cue-enhanced textual features Q_tilde through another text-to-text cross-attention.",
            "To compute the response map, we first update the visual features V_t to V_{t+1} by integrating them with the updated referring text embedding Q_tilde using a text-to-visual cross-attention, thereby reducing the cross-modality discrepancy."
        ],
        "final_answer": "At each stage the CRM first combines the current short–phrase cue with negative cues and attends over the image features via a vision-to-text cross-attention to yield vision-attended cue features. Those features then inform a text-to-text cross-attention that refines the global referring embedding into a cue-enhanced text embedding. Finally, a text-to-visual cross-attention uses that refined text embedding to update (refine) the visual features and produce the stage’s response map.",
        "relevant_elements": [
            "Conditional Referring Module",
            "target-related cues",
            "visual features"
        ],
        "id": 185,
        "masked_question": "How does [mask1] incorporate target-related cues with [mask2] for embedding refinement?",
        "masked_number": 2,
        "masked_elements": [
            "Conditional Referring Module",
            "visual features"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.01544v2_figure_2.png",
        "paperid": "2410.01544v2",
        "paper_path": "./papers/2410.01544v2.json",
        "figure_id": "2410.01544v2_figure_2.png",
        "caption": "Figure 2: The pipeline of PCNet.\nGiven a pair of image-text as input,\nPCNet enhances the visual-linguistic alignment\nby progressively comprehending the target-related textual nuances in the text description. It starts with using a LLM to decompose the input description into several target-related short phrases as target-related textual cues. The proposed Conditional Referring Module (CRM) then processes these cues to update the linguistic embeddings across multiple stages.\nTwo novel loss functions, Region-aware Shrinking (RaS) and Instance-aware Disambiguation (IaD), are also proposed to supervise the progressive comprehension process.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Region-aware Shrinking loss leverage mask proposals to refine foreground activation and suppress background?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Specifically, at stage t, we first employ a pretrained proposal generator to obtain a set of mask proposals, 𝓜ₜ = {Mₜᵏ}ₖ₌₁ᴺ, where each proposal Mₜᵏ ∈ [0,1] and N is the total number of segment proposals.",
            "We then compute a alignment score between the response map Rₜ and each proposal Mₜᵏ as: sₜ,ₖ = ∑ (Rₜ ⊙ Mₜᵏ). The proposal with the highest score is then treated as the target foreground region, while the combination of other proposals is regarded as non-target background regions.",
            "By introducing region-wise ambiguity, L_{RaS} can direct non-target regions to converge towards attenuation while maintaining and improving the quality of the response map in the target region. Additionally, the mask proposals can also provide a shape prior to the target region, which helps to further enhance the accuracy of the target object localization."
        ],
        "final_answer": "Region-aware Shrinking loss first uses a pretrained proposal generator to obtain multiple mask proposals. It measures how well each proposal overlaps the current response map and picks the highest‐scoring mask as the foreground, treating all others as background. By defining a region-wise ambiguity score (the ratio of background activation vs. total activation) and penalizing increases in that ambiguity across stages, RaS forces background activations to shrink while preserving and sharpening the true foreground response. The mask proposals thus serve both to separate foreground from background and to provide a shape prior that refines target activation.",
        "relevant_elements": [
            "Region-aware Shrinking loss",
            "mask proposals",
            "foreground activation"
        ],
        "id": 186,
        "masked_question": "How does [mask1] leverage [mask2] to refine foreground activation and suppress background?",
        "masked_number": 2,
        "masked_elements": [
            "Region-aware Shrinking loss",
            "mask proposals"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.01544v2_figure_2.png",
        "paperid": "2410.01544v2",
        "paper_path": "./papers/2410.01544v2.json",
        "figure_id": "2410.01544v2_figure_2.png",
        "caption": "Figure 2: The pipeline of PCNet.\nGiven a pair of image-text as input,\nPCNet enhances the visual-linguistic alignment\nby progressively comprehending the target-related textual nuances in the text description. It starts with using a LLM to decompose the input description into several target-related short phrases as target-related textual cues. The proposed Conditional Referring Module (CRM) then processes these cues to update the linguistic embeddings across multiple stages.\nTwo novel loss functions, Region-aware Shrinking (RaS) and Instance-aware Disambiguation (IaD), are also proposed to supervise the progressive comprehension process.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does LLM decomposition influence CRM stage-wise refinement compared to fixed-text embedding methods?",
        "relevant_section_ids": [
            "1",
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "However, these methods encode the entire referring text as a single language embedding. They can easily overlook some critical cues related to the target object in the text description, leading to localization ambiguity and even errors.",
            "Inspired by the human comprehension process, we propose in this paper a novel Progressive Comprehension Network (PCNet) for WRIS. We first employ a Large Language Model (LLM) to dissect the input text description into multiple short phrases. These decomposed phrases are considered as target-related cues and fed into a novel Conditional Referring Module (CRM), which helps update the global referring embedding and enhance target localization in a multi-stage manner.",
            "To do this, we leverage the strong in-context capability of the LLM to decompose the text description. ... In this way, phrases generated by LLM are related to the target object and align closely with our objective.",
            "Given the decomposed phrases (i.e., target-related cues), we propose a CRM to enhance the discriminative ability on the target object region conditioned on these phrases, thereby improving localization accuracy. As shown in Fig. 2, the CRM operates across K consecutive stages. At each stage, it first utilizes a different target-related cue to modulate the global referring embedding via a referring modulation block and then produces the image-to-text response map through a response map generation block."
        ],
        "final_answer": "By using an LLM to split the referring text into multiple short phrases, PCNet feeds a different cue into each CRM stage. At each stage the CRM modulates the global referring embedding with that stage’s phrase and refines the response map. In contrast, fixed-text embedding methods collapse the entire description into one embedding and perform only a single, coarse alignment—whereas LLM decomposition enables a progressive, multi-stage refinement that better captures fine-grained cues and reduces ambiguity.",
        "relevant_elements": [
            "LLM",
            "CRM"
        ],
        "id": 187,
        "masked_question": "How does [mask1] decomposition influence [mask2] stage-wise refinement compared to fixed-text embedding methods?",
        "masked_number": 2,
        "masked_elements": [
            "LLM",
            "CRM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.01544v2_figure_2.png",
        "paperid": "2410.01544v2",
        "paper_path": "./papers/2410.01544v2.json",
        "figure_id": "2410.01544v2_figure_2.png",
        "caption": "Figure 2: The pipeline of PCNet.\nGiven a pair of image-text as input,\nPCNet enhances the visual-linguistic alignment\nby progressively comprehending the target-related textual nuances in the text description. It starts with using a LLM to decompose the input description into several target-related short phrases as target-related textual cues. The proposed Conditional Referring Module (CRM) then processes these cues to update the linguistic embeddings across multiple stages.\nTwo novel loss functions, Region-aware Shrinking (RaS) and Instance-aware Disambiguation (IaD), are also proposed to supervise the progressive comprehension process.",
        "qtype": "Literature_Background",
        "response": "The [mask1] (LLM) decomposition influences the [mask2] stage-wise refinement by breaking down the input text description into multiple short, target-related phrases or cues (`T_sub`). In contrast to fixed-text embedding methods which encode the entire referring text as a single language embedding, this decomposition allows the model to progressively incorporate these finer-grained textual cues at each stage of the Conditional Referring Module (CRM).\n\nThis progressive integration of cues in the stage-wise refinement (i.e., `Stage 0` to `Stage N-1`) allows the model to:\n1.  **Enhance discriminative ability:** Each stage utilizes a different target-related cue to modulate the global referring embedding, which helps to enhance the discriminative ability on the target object region.\n2.  **Improve localization accuracy:** The stage-wise process, supported by the Region-aware Shrinking (RaS) loss, helps to gradually reduce background interference and refine the foreground activation in the response map, leading to more compact and accurate localization as more cues are integrated.\n3.  **Address ambiguity and"
    },
    {
        "question": "How does CRM-conditioned response map facilitate RaS loss improvement over Cls-only supervision?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "Section 3.2: “At each stage, [the CRM] first utilizes a different target-related cue to modulate the global referring embedding via a referring modulation block and then produces the image-to-text response map through a response map generation block. … To achieve global visual-linguistic alignment, we adopt classification loss in [30] to optimize the generation of the response map at each stage.”",
            "Section 3.3: “Despite modulating the referring attention with the target-related cues stage-by-stage, image-text classification often activates irrelevant background objects due to its reliance on global and coarse response map constraints. Ideally, as the number of target-related cues used increases across each stage, the response map should become more compact and accurate. … We propose a novel region-aware shrinking (RaS) loss, which segments the response map into foreground (target) and background (non-target) regions. Through contrastive enhancement between these regions, our method gradually reduces the background interference while refining the foreground activation in the response map.”"
        ],
        "final_answer": "By conditioning each stage’s response map on progressively finer, cue-specific embeddings (via the CRM), the model produces multi-stage activations that are increasingly focused on the true target and less on background clutter. RaS loss then leverages these CRM-refined maps—by splitting them into foreground and background regions and applying a contrastive ‘shrinking’ constraint—to drive background activations down while preserving and sharpening the foreground. In contrast, Cls-only supervision treats the map globally and remains prone to coarse, background‐biased activations.",
        "relevant_elements": [
            "CRM",
            "RaS",
            "Cls"
        ],
        "id": 188,
        "masked_question": "How does [mask1]-conditioned response map facilitate [mask2] loss improvement over Cls-only supervision?",
        "masked_number": 2,
        "masked_elements": [
            "CRM",
            "RaS"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.01544v2_figure_2.png",
        "paperid": "2410.01544v2",
        "paper_path": "./papers/2410.01544v2.json",
        "figure_id": "2410.01544v2_figure_2.png",
        "caption": "Figure 2: The pipeline of PCNet.\nGiven a pair of image-text as input,\nPCNet enhances the visual-linguistic alignment\nby progressively comprehending the target-related textual nuances in the text description. It starts with using a LLM to decompose the input description into several target-related short phrases as target-related textual cues. The proposed Conditional Referring Module (CRM) then processes these cues to update the linguistic embeddings across multiple stages.\nTwo novel loss functions, Region-aware Shrinking (RaS) and Instance-aware Disambiguation (IaD), are also proposed to supervise the progressive comprehension process.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How do the VAE Encoder and VAE Decoder modules reflect Stable Diffusion's autoencoding design for quality preservation?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "Our network structure is inspired by the Latent Diffusion Model (LDM) (Rombach et al., 2022), which employs a pretrained autoencoder (VQ-VAE) to map images from pixel space to latent space, where the diffusion process is performed. As demonstrated in (Rombach et al., 2022), operating in latent space promotes local realism and avoids the blurriness that often arises from pixel-space losses, such as L1 or L2 objectives.",
            "As shown in Fig. 1, an occluded lower half of the target image and a reference identity image at time t are each passed through a pre-trained VAE encoder. The resulting outputs are concatenated along the channel dimension to create a comprehensive latent feature representation. Ultimately, the fused feature is fed into a pre-trained VAE decoder to generate the final result. This refined process ensures that the generated video not only aligns perfectly with the audio track but also maintains the visual coherence and quality expected in state-of-the-art audio-vision synchronization systems."
        ],
        "final_answer": "MuseTalk borrows Stable Diffusion’s two-stage autoencoding design by freezing a high-capacity VAE encoder and decoder around its U-Net fusion backbone. Images are first encoded into a compact latent space—just as in LDM/VQ-VAE—where multi-scale cross-attention mixing of audio and visual features preserves local detail and avoids pixel-level blur. After fusion, the pre-trained VAE decoder reconstructs high-quality frames, thereby inheriting the stability and realism benefits of Stable Diffusion’s latent autoencoding architecture.",
        "relevant_elements": [
            "VAE Encoder",
            "VAE Decoder"
        ],
        "id": 189,
        "masked_question": "How do the [mask1] and [mask2] modules reflect Stable Diffusion's autoencoding design for quality preservation?",
        "masked_number": 2,
        "masked_elements": [
            "VAE Encoder",
            "VAE Decoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.10122v2_figure_1.png",
        "paperid": "2410.10122v2",
        "paper_path": "./papers/2410.10122v2.json",
        "figure_id": "2410.10122v2_figure_1.png",
        "caption": "Figure 1: Illustration of our MuseTalk framework. We first encodes a reference facial image and a occluded lower half target image into perceptually equivalent latent space. Subsequently, we employ a multi-scale learning network structure to effectively fuse audio and visual features at various scales, thereby facilitating a more comprehensive integration of the two modalities. Consequently, the decoded results from the latent space yield more realistic and lip-synced talking face visual content.",
        "qtype": "Literature_Background",
        "response": "The [mask1] and [mask2] modules reflect Stable Diffusion's autoencoding design for quality preservation in the following ways:\n\n1.  **Mapping to Latent Space for Quality Preservation:** The text states that MuseTalk's network structure is \"inspired by the Latent Diffusion Model (LDM)... which employs a pretrained autoencoder (VQ-VAE) to map images from pixel space to latent space\". It explicitly mentions that \"operating in latent space promotes local realism and avoids the blurriness that often arises from pixel-space losses.\"\n2.  **[mask1] (VAE Encoders):** The red box ([mask1]) encapsulates two \"VAE Encoder\" modules. As described in the text, \"an occluded lower half of the target image ($I_s^t$) and a reference identity image ($"
    },
    {
        "question": "How does the Whisper Encoder collaborate with audio attn. modules for multi-scale U-Net fusion similar to cross-attention methods?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "For the audio data, we leverage a pre-trained Whisper (Radford et al., 2023) encoder to extract features from a sequence audio segment. The length of the audio segment is set to T, centered at time t. This segment is first re-sampled to 16,000 Hz and then transformed into an 80-channel log magnitude Mel spectrogram, which serves as the input A^{t}_{mel}. The output audio feature shape is a^{T×d}.",
            "Our network structure is inspired by the Latent Diffusion Model (LDM) (Rombach et al., 2022), which employs a pretrained autoencoder (VQ-VAE) to map images into latent space. The training objective is formulated as L, where f represents the backbone denoising network, including several condition-related cross attention modules.",
            "The U-Net’s multi-scale learning network architecture adeptly fuses audio and visual features across various scales with the capability of modeling conditional distributions of the form p(v|a), enabling a more nuanced and holistic integration of the two modalities."
        ],
        "final_answer": "The frozen Whisper encoder first processes each synchronized audio segment into a sequence of d-dimensional embeddings (shape T×d). These audio embeddings are then injected as conditioning inputs into multiple “audio attn.” modules—i.e. cross-attention layers—at different resolutions within the U-Net backbone. At each scale, the U-Net’s cross-attention (audio attn.) layer attends to the Whisper embeddings, allowing the network to align and fuse audio cues with the visual latent features in a multi-scale manner.",
        "relevant_elements": [
            "Whisper Encoder",
            "Audio attn."
        ],
        "id": 190,
        "masked_question": "How does the [mask1] collaborate with [mask2] modules for multi-scale U-Net fusion similar to cross-attention methods?",
        "masked_number": 2,
        "masked_elements": [
            "Whisper Encoder",
            "Audio attn."
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.10122v2_figure_1.png",
        "paperid": "2410.10122v2",
        "paper_path": "./papers/2410.10122v2.json",
        "figure_id": "2410.10122v2_figure_1.png",
        "caption": "Figure 1: Illustration of our MuseTalk framework. We first encodes a reference facial image and a occluded lower half target image into perceptually equivalent latent space. Subsequently, we employ a multi-scale learning network structure to effectively fuse audio and visual features at various scales, thereby facilitating a more comprehensive integration of the two modalities. Consequently, the decoded results from the latent space yield more realistic and lip-synced talking face visual content.",
        "qtype": "Literature_Background",
        "response": "The Whisper Encoder ([mask1]) processes the synchronized audio input ($A^t_{mel}$) to extract comprehensive audio features, denoted as $a^{T \\times d}$. These audio features then serve as a conditioning signal for the Backbone UNet.\n\nWithin the Backbone UNet, the \"Audio attention\" modules ([mask2], shown in red and highlighted by the blue box) are responsible for integrating these audio features with the visual features. The text explicitly mentions that the backbone denoising network (which is the U-Net) includes \"several condition-related cross attention modules.\" Given that the audio features are fed into these \"Audio attention\" modules, it implies that these modules function as cross-attention mechanisms.\n\nTherefore, the Whisper Encoder collaborates with the \"Audio attention\" modules by providing the"
    },
    {
        "question": "How does introducing audio attention in Backbone Unet affect lip-speech synchronization performance?",
        "relevant_section_ids": [
            "4.4"
        ],
        "relevant_context": [
            "Leveraging the multi-scale data fusion mechanism within the UNet architecture, MuseTalk achieves effective audio-visual integration for visual dubbing.",
            "As shown in Table 3, shallow feature fusion proves insufficient, particularly in enhancing lip synchronization (LSE-C).",
            "In contrast, the full multi-scale fusion significantly improves both audio-visual coherence and image quality, underscoring its importance in achieving high-quality results."
        ],
        "final_answer": "Introducing audio attention (i.e. multi-scale cross-attention) throughout the Backbone U-Net markedly improves lip-speech synchronization performance, yielding higher LSE-C scores compared to shallower or no audio-visual fusion.",
        "relevant_elements": [
            "audio attention",
            "Backbone Unet"
        ],
        "id": 191,
        "masked_question": "How does introducing [mask1] in Backbone Unet affect lip-speech synchronization performance?",
        "masked_number": 1,
        "masked_elements": [
            "audio attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.10122v2_figure_1.png",
        "paperid": "2410.10122v2",
        "paper_path": "./papers/2410.10122v2.json",
        "figure_id": "2410.10122v2_figure_1.png",
        "caption": "Figure 1: Illustration of our MuseTalk framework. We first encodes a reference facial image and a occluded lower half target image into perceptually equivalent latent space. Subsequently, we employ a multi-scale learning network structure to effectively fuse audio and visual features at various scales, thereby facilitating a more comprehensive integration of the two modalities. Consequently, the decoded results from the latent space yield more realistic and lip-synced talking face visual content.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does concatenating VAE Encoder outputs influence identity preservation in the VAE Decoder output?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "For talking face generation, where identity consistency and lip synchronization are critical, it’s essential to establish a more direct correlation between the fused features and the final results. Therefore, we make the following adjustments: … instead of a single input image, we use an occluded lower half of the target image along with a reference facial image, while the driving condition is a sequence of audio embeddings.",
            "As shown in Fig. 1, an occluded lower half of the target image I_s^t and a reference identity image I_ref^t at time t are each passed through a pre-trained VAE encoder. The resulting outputs v_ref and v_s are then concatenated along the channel dimension to create a comprehensive image feature representation ṽ, …",
            "Ultimately, the fused feature v_f is fed into a pre-trained VAE decoder to generate the final results. This refined process ensures that the generated video not only aligns perfectly with the audio track but also maintains the visual coherence and quality expected in state-of-the-art audio–vision synchronization systems."
        ],
        "final_answer": "By concatenating the two VAE encoder outputs—one carrying the reference face’s identity and the other the occluded source face—the model builds a richer latent representation that explicitly contains identity information. Feeding this combined representation into the VAE decoder guides it to reconstruct the output with stronger identity consistency, thus better preserving the subject’s identity in the generated frames.",
        "relevant_elements": [
            "VAE Encoder",
            "VAE Decoder"
        ],
        "id": 192,
        "masked_question": "How does concatenating [mask1] outputs influence identity preservation in the VAE Decoder output?",
        "masked_number": 1,
        "masked_elements": [
            "VAE Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.10122v2_figure_1.png",
        "paperid": "2410.10122v2",
        "paper_path": "./papers/2410.10122v2.json",
        "figure_id": "2410.10122v2_figure_1.png",
        "caption": "Figure 1: Illustration of our MuseTalk framework. We first encodes a reference facial image and a occluded lower half target image into perceptually equivalent latent space. Subsequently, we employ a multi-scale learning network structure to effectively fuse audio and visual features at various scales, thereby facilitating a more comprehensive integration of the two modalities. Consequently, the decoded results from the latent space yield more realistic and lip-synced talking face visual content.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does dual-view contrastive learning impact embedding alignment between original-view and attribute-level augmented-view graphs?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "Dual-view contrastive learning is defined between two views, the original view, and the augmented view, to learn more representative and intrinsic node embeddings for GAD tasks, which will help capture anomaly information.",
            "The node’s attribute in the original view forms a positive pair with the augmented view and a negative pair with another node’s attribute in the original and augmented views."
        ],
        "final_answer": "Dual-view contrastive learning pulls the embedding of each node in the original-view graph closer to its counterpart in the attribute-level augmented-view graph (treating them as positive pairs), while pushing embeddings of different nodes apart (treating them as negative pairs). This encourages alignment of the same-node representations across the two views and enhances the discriminative power of the embeddings.",
        "relevant_elements": [
            "Dual-view Contrastive Learning",
            "Attribute-level Augmentation",
            "Original-view Graph Reconstruction"
        ],
        "id": 193,
        "masked_question": "How does [mask1] impact embedding alignment between original-view and attribute-level augmented-view graphs?",
        "masked_number": 1,
        "masked_elements": [
            "Dual-view Contrastive Learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.12556v1_figure_1.png",
        "paperid": "2411.12556v1",
        "paper_path": "./papers/2411.12556v1.json",
        "figure_id": "2411.12556v1_figure_1.png",
        "caption": "Figure 1. The overview of the proposed UMGAD. There are three interaction types in the multiplex heterogeneous graph: U-P-U links users reviewing at least one product, U-S-U link users having at least one identical star rating within a week, U-V-U links linguistically similar users.",
        "qtype": "Experimental_Results",
        "response": "The red box, [mask1], represents the \"Dual-view Contrastive Learning\" component of the UMGAD model.\n\nDual-view contrastive learning is specifically designed to learn more representative and intrinsic node embeddings by comparing embeddings from different views. Regarding the embedding alignment between the original-view graph and the attribute-level augmented-view graph, the dual-view contrastive learning component ([mask1]) plays a crucial role.\n\nAccording to Section 4.3, \"Dual-view Contrastive Learning\":\n1.  **Purpose**: It aims \"to learn more representative and intrinsic node embeddings for GAD tasks, which will help capture anomaly information.\"\n2.  **Mechanism for Attribute-level Alignment**: It \"optimize[s] the node attribute under joint loss by comparing the original-view graph with the attribute-level augmented-view graph\". The node's attribute in the original view forms a \"positive pair\" with its counterpart in the augmented view, and a \"negative pair\" with another node's attribute in either view.\n3.  **Loss Function**: It employs a specific contrastive loss function, denoted as $\\mathcal{L}_{CL}^{Attr}$, which is a component of the overall contrastive loss within [mask1]. This loss function works by pulling the embeddings of positive pairs (original-view and attribute-level augmented-view for the *same* node) closer together in the embedding space, while pushing the embeddings of negative pairs (original-view of one node and augmented-view of a *different* node) farther apart.\n\nTherefore, [mask1], through its $\\mathcal{L}_{CL}^{"
    },
    {
        "question": "What privacy risks does Attribute Augmentation pose for user data in multiplex heterogeneous graphs reconstruction?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Attribute Augmentation",
            "Multiplex Heterogeneous Graphs"
        ],
        "id": 195,
        "masked_question": "What privacy risks does [mask1] pose for user data in [mask2] reconstruction?",
        "masked_number": 2,
        "masked_elements": [
            "Attribute Augmentation",
            "Multiplex Heterogeneous Graphs"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.12556v1_figure_1.png",
        "paperid": "2411.12556v1",
        "paper_path": "./papers/2411.12556v1.json",
        "figure_id": "2411.12556v1_figure_1.png",
        "caption": "Figure 1. The overview of the proposed UMGAD. There are three interaction types in the multiplex heterogeneous graph: U-P-U links users reviewing at least one product, U-S-U link users having at least one identical star rating within a week, U-V-U links linguistically similar users.",
        "qtype": "Others",
        "response": "The provided context does not contain any information regarding privacy risks associated with \"Attribute Augmentation\" or \"Original-view Graph Reconstruction"
    },
    {
        "question": "How might alternative encoders enhance robustness compared to GCN-Masked Encoder in Original-view Graph Reconstruction?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "GCN-Masked Encoder",
            "Original-view Graph Reconstruction"
        ],
        "id": 196,
        "masked_question": "How might alternative encoders enhance robustness compared to [mask1] in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "GCN-Masked Encoder",
            "Original-view Graph Reconstruction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.12556v1_figure_1.png",
        "paperid": "2411.12556v1",
        "paper_path": "./papers/2411.12556v1.json",
        "figure_id": "2411.12556v1_figure_1.png",
        "caption": "Figure 1. The overview of the proposed UMGAD. There are three interaction types in the multiplex heterogeneous graph: U-P-U links users reviewing at least one product, U-S-U link users having at least one identical star rating within a week, U-V-U links linguistically similar users.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative aggregation functions could MFE module explore to capture non-linear temporal patterns?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "MFE module"
        ],
        "id": 197,
        "masked_question": "What alternative aggregation functions could [mask1] explore to capture non-linear temporal patterns?",
        "masked_number": 1,
        "masked_elements": [
            "MFE module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.23992v1_figure_1.png",
        "paperid": "2410.23992v1",
        "paper_path": "./papers/2410.23992v1.json",
        "figure_id": "2410.23992v1_figure_1.png",
        "caption": "Figure 1: The framework of Ada-MSHyper.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What are the trade-offs of using hypergraph convolution attention in intra-scale interaction module for computation cost?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Intra-Scale Interaction Module"
        ],
        "id": 198,
        "masked_question": "What are the trade-offs of using hypergraph convolution attention in [mask1] for computation cost?",
        "masked_number": 1,
        "masked_elements": [
            "Intra-Scale Interaction Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.23992v1_figure_1.png",
        "paperid": "2410.23992v1",
        "paper_path": "./papers/2410.23992v1.json",
        "figure_id": "2410.23992v1_figure_1.png",
        "caption": "Figure 1: The framework of Ada-MSHyper.",
        "qtype": "Others",
        "response": "The question asks about the trade-offs of using **hypergraph convolution attention** in the Inter-Scale Interaction Module (highlighted by the red box).\n\nBased on the provided context:\n1.  **Inter-Scale Interaction Module (the masked region):** The text clearly states: \"Therefore, we adopt a **hyperedge attention** within the inter-scale interaction module to capture macroscopic variations interactions at different scales.\" This module uses a standard attention mechanism (queries, keys, values) applied to hyperedge representations, not hypergraph convolution attention.\n2.  **Intra-Scale Interaction Module:** In contrast, the text explicitly mentions that **hypergraph convolution attention** is used in the \"Intra-Scale Interaction Module\": \"To capture group-wise interactions among nodes with similar semantic information within each scale, we introduce **hypergraph convolution attention** within the intra-scale interaction module.\"\n\nSince the Inter-Scale Interaction Module (the masked region) uses hyperedge attention and not hypergraph convolution attention, the premise of the question is incorrect based on the provided information. Therefore, it is not possible to describe the trade-offs of hypergraph convolution attention *in this specific module*."
    },
    {
        "question": "What is the motivation behind designing separate intra-scale and inter-scale interaction modules?",
        "relevant_section_ids": [
            "4.4"
        ],
        "relevant_context": [
            "However, we argue that intra-scale interactions and inter-scale interactions reflect different aspects of pattern interactions, where intra-scale interactions mainly depict detailed interactions between nodes with similar semantic information and inter-scale interactions highlight macroscopic variations interactionsTPRNN ###reference_b9###; timemixer ###reference_b27###.",
            "Therefore, instead of directly mixing multi-scale pattern information as a whole, we introduce the multi-scale interaction module to perform inter-scale interactions and intra-scale interactions."
        ],
        "final_answer": "The authors separate intra-scale and inter-scale interaction modules because intra-scale interactions capture detailed, local pattern relationships among semantically similar nodes, while inter-scale interactions capture broader, macroscopic variation interactions across different scales. Modeling these two aspects with dedicated modules allows the model to better exploit both fine‐grained and large‐scale temporal patterns.",
        "relevant_elements": [
            "Intra-Scale Interaction Module",
            "Inter-Scale Interaction Module"
        ],
        "id": 200,
        "masked_question": "What is the motivation behind designing separate [mask1] and inter-scale interaction modules?",
        "masked_number": 1,
        "masked_elements": [
            "Intra-Scale Interaction Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.23992v1_figure_1.png",
        "paperid": "2410.23992v1",
        "paper_path": "./papers/2410.23992v1.json",
        "figure_id": "2410.23992v1_figure_1.png",
        "caption": "Figure 1: The framework of Ada-MSHyper.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to the **Intra-Scale Interaction Module**.\n\nThe motivation behind designing separate **intra-scale** and inter-scale interaction modules is explained in the \"Multi-Scale Interaction Module\" section:\n\"However, we argue that intra-scale interactions and inter-scale interactions reflect different aspects of pattern interactions, where intra-scale interactions mainly depict detailed interactions between nodes with similar semantic information and inter-scale interactions highlight macroscopic variations interactions.\"\n\nTherefore, the modules are separated because:\n*   **Intra-scale interactions** primarily capture **detailed interactions between nodes with similar semantic information** within a specific scale.\n*   **Inter-scale interactions** focus on highlighting **macroscopic variations interactions** across different scales.\n\nBy addressing these different aspects separately, the model aims to promote more comprehensive pattern interactions across different scales."
    },
    {
        "question": "What motivates leveraging intra-consistency within contrastive learning for more robust subject representation?",
        "relevant_section_ids": [
            "1",
            "3.3.2"
        ],
        "relevant_context": [
            "As shown in Fig. 1, this perspective achieves intra‐consistency and inter‐distinctiveness. Firstly, Intra‐consistency is achieved by pulling images of the same subject under different contexts closer, decoupling irrelevant attributes.",
            "This means the features of the same subject with different situations should be as close as possible (intra‐consistency), while the distances between different samples’ features should match those between real subjects (inter‐distinctiveness)."
        ],
        "final_answer": "Leveraging intra‐consistency is motivated by the need to pull different contextual views of the same subject closer together in feature space. This decouples and suppresses irrelevant attributes (such as pose, orientation, or background) and forces the model to focus on the subject’s true intrinsic features, yielding a more robust and faithful subject representation.",
        "relevant_elements": [
            "intra-consistency",
            "contrastive learning"
        ],
        "id": 201,
        "masked_question": "What motivates leveraging [mask1] within contrastive learning for more robust subject representation?",
        "masked_number": 1,
        "masked_elements": [
            "intra-consistency"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.05606v2_figure_1.png",
        "paperid": "2409.05606v2",
        "paper_path": "./papers/2409.05606v2.json",
        "figure_id": "2409.05606v2_figure_1.png",
        "caption": "Figure 1: Comparison with existing perspective. (a) Existing studies learn each subject feature with entangled redundant features (e.g., view, pose), suffering a trade-off between similarity and controllability (redundant and intrinsic features simultaneously overfit or underfit since they are coupled together). (b) In contrast, we rethink it from a cross-differential perspective. By using contrastive learning to ensure intra-consistency (features of the same subject are spatially closer) and inter-distinctiveness (features of different subjects have distinguished differences), our model disentangles the subject intrinsic features from irrelevant features for dual optimization of controllability and similarity.",
        "qtype": "Design_Rationale",
        "response": "The red box ([mask1]) in the image highlights \"Intra-consistency\" within the Contrastive Learning (CL) framework.\n\n**Chain of Thought:**\n1.  **Identify [mask1]:** The red box highlights \"Intra-consistency\".\n2.  **Locate \"Intra-consistency\" in the text:** The text states, \"As shown in Fig. 1 ###reference_###(b), this perspective [cross-differential] achieves intra-consistency and inter-distinctiveness. Firstly, Intra-consistency is achieved by pulling images of the same subject under different contexts closer, decoupling irrelevant attributes.\"\n3.  **Understand the problem it addresses:** The preceding paragraphs discuss the \"self-reconstructive perspective\" and its \"inherent defects,\" which include \"misconstructing the attributes in a specific image as the intrinsic attributes of the subject.\" It explains that \"The image s attributes are entangled, including irrelevant attributes (e.g., orientation, pose, and background), and intrinsic attributes of the subject that remain unchanged despite external interferences. Thus, reconstruction from a single image of the subject will inevitably result in the capture of both irrelevant and subject-intrinsic attributes.\" This leads to issues like \"Insufficient representations result in inaccurate extraction of both intrinsic and irrelevant attributes\" and \"over-representations cause overfitting of both intrinsic and irrelevant attributes.\"\n4.  **Connect \"Intra-consistency\" to the solution:** The text explicitly states that intra-consistency aims to address this by \"pulling images of the same subject under different contexts closer, decoupling irrelevant attributes.\"\n5.  **Relate to \"robust subject representation\":** By \"decoupling irrelevant attributes\" (like orientation, pose, and background) from the intrinsic attributes of the subject, the model focuses on what truly defines the subject, regardless of its context. This leads to a more accurate and robust \"subject representation\" because it is less affected by external, variable factors.\n\n**Answer:**\nLeveraging **Intra-consistency** within contrastive learning is motivated to achieve a more robust subject representation by addressing the issue of disentangling intrinsic subject attributes from irrelevant, entangled attributes (such as orientation, pose, and background) present in specific images. By \"pulling images of the same subject under different contexts closer,\" intra-consistency decouples these irrelevant attributes, preventing the model from misconstructing them as intrinsic features of the subject. This ensures that the learned subject representation focuses solely on its inherent characteristics, leading to greater accuracy and robustness when dealing with variations in the subject's environment or presentation."
    },
    {
        "question": "Why integrate inter-distinctiveness into contrastive learning to enhance discrimination among different subject representations?",
        "relevant_section_ids": [
            "1",
            "3.3.2"
        ],
        "relevant_context": [
            "As shown in Fig. 1 (b), this perspective achieves intra-consistency and inter-distinctiveness. Firstly, Intra-consistency is achieved by pulling images of the same subject under different contexts closer, decoupling irrelevant attributes. Secondly, Inter-distinctiveness is ensured by comparing the specific subject with others, thereby further learning the fine-grained intrinsic features.",
            "The key idea of Multi-scale Appearance Similarity Contrastive Learning (MACL) is to ensure that the distance relationships between multiscale features are consistent with those of real subjects. This means the features of the same subject with different situations should be as close as possible (intra-consistency), while the distances between different samples’ features should match those of real subjects (inter-distinctiveness)."
        ],
        "final_answer": "Inter-distinctiveness is integrated so that, beyond pulling together different views of the same subject (intra-consistency), the model also explicitly pushes apart representations of different subjects. By aligning feature distances among subjects with their true appearance distances, it learns fine-grained intrinsic differences and thus improves discrimination across distinct subject representations.",
        "relevant_elements": [
            "inter-distinctiveness",
            "contrastive learning"
        ],
        "id": 202,
        "masked_question": "Why integrate [mask1] into [mask2] to enhance discrimination among different subject representations?",
        "masked_number": 2,
        "masked_elements": [
            "inter-distinctiveness",
            "contrastive learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.05606v2_figure_1.png",
        "paperid": "2409.05606v2",
        "paper_path": "./papers/2409.05606v2.json",
        "figure_id": "2409.05606v2_figure_1.png",
        "caption": "Figure 1: Comparison with existing perspective. (a) Existing studies learn each subject feature with entangled redundant features (e.g., view, pose), suffering a trade-off between similarity and controllability (redundant and intrinsic features simultaneously overfit or underfit since they are coupled together). (b) In contrast, we rethink it from a cross-differential perspective. By using contrastive learning to ensure intra-consistency (features of the same subject are spatially closer) and inter-distinctiveness (features of different subjects have distinguished differences), our model disentangles the subject intrinsic features from irrelevant features for dual optimization of controllability and similarity.",
        "qtype": "Design_Rationale",
        "response": "The integration of \"Inter-distinctiveness\" into \"Contrastive Learning (CL)\" (as depicted in the blue box) serves to enhance discrimination among different subject representations by directly comparing the target subject with other distinct subjects.\n\nAccording to the text and Figure 1 (b):\n1.  **Cross-differential perspective**: The paper proposes a \"cross-differential perspective\" which uses contrastive learning to capture each subject's accurate representation. This perspective achieves both \"intra-consistency\" and \"inter-distinctiveness\".\n2.  **Role of Inter-distinctiveness**: The text explicitly states, \"Secondly, Inter-distinctiveness is ensured by comparing the specific subject with others, thereby further learning the fine-grained intrinsic features.\"\n\nBy ensuring inter-distinctiveness, contrastive learning pushes the representations of different subjects further apart in the embedding space. This direct comparison with other subjects helps the model learn the unique, fine-grained intrinsic features that differentiate one subject from another, thereby enhancing the model's ability to discriminate between distinct subject representations."
    },
    {
        "question": "How are Positive Samples chosen to pull features of the same subject closer for intra-consistency?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "As shown in Fig. 2 (b) (right), We select frames different from the reference images as MACL positive samples. By aligning images of the same subject, CustomContrast effectively decouples irrelevant features of the subject. The processing details of positive samples are in Appendix B."
        ],
        "final_answer": "Positive samples are chosen by selecting other frames of the same subject that are different from the reference images. These additional frames serve as positives to pull the learned features of the same subject closer, achieving intra-consistency.",
        "relevant_elements": [
            "Positive Samples",
            "intra-consistency"
        ],
        "id": 203,
        "masked_question": "How are [mask1] chosen to pull features of the same subject closer for intra-consistency?",
        "masked_number": 1,
        "masked_elements": [
            "Positive Samples"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.05606v2_figure_1.png",
        "paperid": "2409.05606v2",
        "paper_path": "./papers/2409.05606v2.json",
        "figure_id": "2409.05606v2_figure_1.png",
        "caption": "Figure 1: Comparison with existing perspective. (a) Existing studies learn each subject feature with entangled redundant features (e.g., view, pose), suffering a trade-off between similarity and controllability (redundant and intrinsic features simultaneously overfit or underfit since they are coupled together). (b) In contrast, we rethink it from a cross-differential perspective. By using contrastive learning to ensure intra-consistency (features of the same subject are spatially closer) and inter-distinctiveness (features of different subjects have distinguished differences), our model disentangles the subject intrinsic features from irrelevant features for dual optimization of controllability and similarity.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] refers to the \"Positive Samples\" displayed in the red box. The text states:\n\n\"As shown in Fig. 2 (b) (right), We select **frames different from the reference images as MACL positive samples**. By aligning images of the same subject, CustomContrast effectively decouples irrelevant features of the subject.\"\n\nTherefore, the positive samples are chosen as **frames different from the reference images that depict the same subject**, to pull features of the same subject closer for intra-consistency, thereby decoupling irrelevant features."
    },
    {
        "question": "How is inter-distinctiveness maintained through Negative Samples selection and feature distancing across subjects?",
        "relevant_section_ids": [
            "3.3.2"
        ],
        "relevant_context": [
            "The key idea of Multi-scale Appearance Similarity Contrastive Learning (MACL) is to ensure that the distance relationships between multiscale features are consistent with those of real subjects. This means the features of the same subject with different situations should be as close as possible (intra-consistency), while the distances between different samples’ features should match those between real subjects (inter-distinctiveness).",
            "We design MACL scaling factors to implement the aforementioned constraints. These factors scale the generated samples’ similarity based on the real subjects’ similarity. We use cosine similarity, denoted as sim, to measure the similarity between the Z components of different samples at all cross-attention layers. The appearance representation of the segmented subject images, obtained by CLIP image encoder, is utilized to compute the appearance similarity matrix S, where S_{j,k}=sim(g(x_j),g(x_k)). Here, segmented subject images x approximate the real subjects, allowing MACL to focus on the subjects themselves rather than the background. The appearance scaling factor is S."
        ],
        "final_answer": "Inter-distinctiveness is maintained in MACL by treating all other-subject images in the batch as negative samples and weighting their pairwise feature similarities by real‐subject appearance distances. Concretely, for each pair of different subjects, the model computes a scaling factor S_{j,k} using CLIP‐based cosine similarity on their segmented real images. In the contrastive loss, distances between learned features of different subjects are multiplied by those S_{j,k} factors, thereby enforcing that features of distinct subjects stay as far apart as their real appearances dictate.",
        "relevant_elements": [
            "Negative Samples",
            "inter-distinctiveness"
        ],
        "id": 204,
        "masked_question": "How is [mask1] maintained through Negative Samples selection and feature distancing across subjects?",
        "masked_number": 1,
        "masked_elements": [
            "inter-distinctiveness"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.05606v2_figure_1.png",
        "paperid": "2409.05606v2",
        "paper_path": "./papers/2409.05606v2.json",
        "figure_id": "2409.05606v2_figure_1.png",
        "caption": "Figure 1: Comparison with existing perspective. (a) Existing studies learn each subject feature with entangled redundant features (e.g., view, pose), suffering a trade-off between similarity and controllability (redundant and intrinsic features simultaneously overfit or underfit since they are coupled together). (b) In contrast, we rethink it from a cross-differential perspective. By using contrastive learning to ensure intra-consistency (features of the same subject are spatially closer) and inter-distinctiveness (features of different subjects have distinguished differences), our model disentangles the subject intrinsic features from irrelevant features for dual optimization of controllability and similarity.",
        "qtype": "Implementation_Details",
        "response": "\"Inter-distinctiveness\" is maintained by introducing **scaling factors** to align the feature distances of learned representations with the real subject distances, particularly using **negative samples**.\n\nHere's a step-by-step breakdown based on the provided context and image:\n\n1.  **Goal of Inter-distinctiveness**: As stated in Section 3.3.2, \"the distances between different samples features should match those between real subjects (inter-distinctiveness).\" This means that features of distinct subjects should be clearly separated in the feature space, reflecting their actual similarity to each other.\n\n2.  **Role of Negative Samples**: The image explicitly shows \"Negative Samples\" which are different subjects (e.g., a fox plush, a minion plush) distinct from the main teddy bear subject. These samples are used to push feature representations of different subjects apart in the embedding space.\n\n3.  **Feature Distancing Mechanism**: The text explains that \"we achieve... inter-distinctiveness by introducing scaling factors to align the feature distances with negative samples to real subject distances.\""
    },
    {
        "question": "How does Tool Retrieval inform Executor’s tool selection process for code generation?",
        "relevant_section_ids": [
            "4.1.2"
        ],
        "relevant_context": [
            "CellAgent integrates multiple tools for single-cell analysis tasks to ensure operational stability. This integration is primarily facilitated by the Tool Retrieval module, denoted as . The integrated tools are registered within the CellAgent framework, allowing the Tool Selector to detect their presence and retrieve a list of potentially useful tools for Code Programmer at the beginning of each subtask.",
            "Additionally, in our implementation, the Tool classes are equipped with standardized documentation, known as docstrings in Python. This feature enables the Executor to access documentation for the selected tools, enhancing the accuracy of code generation."
        ],
        "final_answer": "The Tool Retrieval module maintains a registry of all integrated single-cell analysis tools and their docstrings. At each subtask, the Executor’s Tool Selector queries this registry to detect available tools and pulls back a shortlist of potentially useful ones. These tools and their documentation are then passed to the Code Programmer, guiding accurate code generation for the task.",
        "relevant_elements": [
            "Tool Retrieval",
            "Executor"
        ],
        "id": 205,
        "masked_question": "How does [mask1] inform Executor’s tool selection process for code generation?",
        "masked_number": 1,
        "masked_elements": [
            "Tool Retrieval"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.09811v1_figure_1.png",
        "paperid": "2407.09811v1",
        "paper_path": "./papers/2407.09811v1.json",
        "figure_id": "2407.09811v1_figure_1.png",
        "caption": "Figure 1: Schematic of the CellAgent Framework. a, Example of user input received by the CellAgent, comprising single-cell data and user-provided text information.\nb, Upon receiving user input, the Planner role first parses user intent and decomposes the task into subtasks.\nc, Illustration of final results, including results of individual subtasks and the final task outcome.\nd, Detailed view of the CellAgent s processing flow for subtasks. The current subtask and historical code memory are inputted to an Executor, which initially retrieves tools and outputs available tools for this step. Subsequently, corresponding documentation for these tools is acquired, and the Executor derives solutions (text analysis and code generation) based on the documentation. These codes are executed in the code sandbox, and if exceptions are encountered, solutions are regenerated until successful execution of this task. Then, the Evaluator assesses the results of the current task and allows the Executor to optimize solutions. Ultimately, based on its evaluation of results under multiple solutions, the Evaluator aggregates results to obtain the final outcome of this step.",
        "qtype": "Implementation_Details",
        "response": "The content highlighted by the red box, labeled \"Tool Retrieval,\" lists all the integrated computational tools available within the CellAgent framework (e.g., Liger, Combat, Sc-Type).\n\nHere's how it informs the Executor's tool selection process for code generation:\n\n1.  **Tool Registration and Availability:** The \"Tool Retrieval\" module is responsible for integrating and registering all available tools within CellAgent. This means it maintains a comprehensive list of all functionalities that CellAgent can leverage.\n2.  **Input for Tool Selector:** At the beginning of each subtask, the `Tool Selector` (a component of the Executor) first retrieves this complete list of all registered tools from the \"Tool Retrieval\" module.\n3.  **Contextual Tool Selection:** Based on this comprehensive list, the `Tool Selector` then, considering the description of the current task step and the user's overall requirements, selects a subset of *potentially useful tools* relevant to that specific task.\n4.  **Documentation for Code Generation:** Additionally, the tools integrated via \"Tool Retrieval\" are equipped with standardized documentation (docstrings). The Executor (specifically, the `Code Programmer` within the Executor) gains access to this documentation for the selected tools. This documentation is crucial for the `Code Programmer` to accurately understand how to use the chosen tools and then generate the correct code for the task.\n\nIn summary, the \"Tool Retrieval\" module provides the Executor's `Tool Selector` with the full repertoire of available tools, enabling it to intelligently choose the most appropriate ones for a given subtask. Subsequently, it provides the `Code Programmer` with the necessary documentation to implement these selected tools correctly in the generated code."
    },
    {
        "question": "How does Evaluator coordinate with Executor for multi-trial solution aggregation?",
        "relevant_section_ids": [
            "4.1",
            "4.1.1"
        ],
        "relevant_context": [
            "Evaluator is tasked with assessing the results of the current step and choosing the best among the multiple outcomes produced by the Executor’s self-optimization.",
            "During execution, it receives the string representation of data, the task description for the current step, user preference requirements, and most crucially, the execution codes. Subsequently, the Evaluator conducts an evaluation. If in current trial, the Evaluator can assess the results of multiple trials and select the optimal solution, the final solution for the current step will be determined. Otherwise, the Code Programmer will be prompted to optimize the solution."
        ],
        "final_answer": "The Evaluator collects all code variants (trials) generated by the Executor during self-optimization, runs its integrated evaluation procedures on each trial’s output, ranks or scores them, and then selects the highest‐scoring code as the final solution for that step (or else instructs the Executor to re-optimize if no trial meets quality criteria).",
        "relevant_elements": [
            "Executor",
            "Evaluator"
        ],
        "id": 206,
        "masked_question": "How does [mask1] coordinate with Executor for multi-trial solution aggregation?",
        "masked_number": 1,
        "masked_elements": [
            "Evaluator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.09811v1_figure_1.png",
        "paperid": "2407.09811v1",
        "paper_path": "./papers/2407.09811v1.json",
        "figure_id": "2407.09811v1_figure_1.png",
        "caption": "Figure 1: Schematic of the CellAgent Framework. a, Example of user input received by the CellAgent, comprising single-cell data and user-provided text information.\nb, Upon receiving user input, the Planner role first parses user intent and decomposes the task into subtasks.\nc, Illustration of final results, including results of individual subtasks and the final task outcome.\nd, Detailed view of the CellAgent s processing flow for subtasks. The current subtask and historical code memory are inputted to an Executor, which initially retrieves tools and outputs available tools for this step. Subsequently, corresponding documentation for these tools is acquired, and the Executor derives solutions (text analysis and code generation) based on the documentation. These codes are executed in the code sandbox, and if exceptions are encountered, solutions are regenerated until successful execution of this task. Then, the Evaluator assesses the results of the current task and allows the Executor to optimize solutions. Ultimately, based on its evaluation of results under multiple solutions, the Evaluator aggregates results to obtain the final outcome of this step.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Planner leverage Memory compared to hierarchical memory mechanisms in existing multi-agent frameworks?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "Planner",
            "Memory"
        ],
        "id": 207,
        "masked_question": "How does [mask1] leverage [mask2] compared to hierarchical memory mechanisms in existing multi-agent frameworks?",
        "masked_number": 2,
        "masked_elements": [
            "Planner",
            "Memory"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.09811v1_figure_1.png",
        "paperid": "2407.09811v1",
        "paper_path": "./papers/2407.09811v1.json",
        "figure_id": "2407.09811v1_figure_1.png",
        "caption": "Figure 1: Schematic of the CellAgent Framework. a, Example of user input received by the CellAgent, comprising single-cell data and user-provided text information.\nb, Upon receiving user input, the Planner role first parses user intent and decomposes the task into subtasks.\nc, Illustration of final results, including results of individual subtasks and the final task outcome.\nd, Detailed view of the CellAgent s processing flow for subtasks. The current subtask and historical code memory are inputted to an Executor, which initially retrieves tools and outputs available tools for this step. Subsequently, corresponding documentation for these tools is acquired, and the Executor derives solutions (text analysis and code generation) based on the documentation. These codes are executed in the code sandbox, and if exceptions are encountered, solutions are regenerated until successful execution of this task. Then, the Evaluator assesses the results of the current task and allows the Executor to optimize solutions. Ultimately, based on its evaluation of results under multiple solutions, the Evaluator aggregates results to obtain the final outcome of this step.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Executor integrate Tool Retrieval with Code Sandbox strategies from automated code execution methodologies?",
        "relevant_section_ids": [
            "4.1",
            "4.1.2"
        ],
        "relevant_context": [
            "CellAgent integrates multiple tools for single-cell analysis tasks to ensure operational stability. This integration is primarily facilitated by the Tool Retrieval module, denoted as . The integrated tools are registered within the CellAgent framework, allowing the Tool Selector to detect their presence and retrieve a list of potentially useful tools for Code Programmer at the beginning of each subtask. Additionally, in our implementation, the Tool classes are equipped with standardized documentation, known as docstrings in Python. This feature enables the Executor to access documentation for the selected tools, enhancing the accuracy of code generation.",
            "To ensure the security and reliability of code execution, CellAgent implements a Code Sandbox, isolating the code generated by LLMs for execution. Specifically, this is achieved through Jupyter Notebook Conversion (nbconvert), wherein data loading and each step of code generated by LLMs are executed within a comprehensive Jupyter notebook. This implementation approach decouples the CellAgent framework’s running and code execution of single-cell data analysis, enhancing the security of executing generated code. Additionally, it facilitates result management for single-cell task analysis tasks and reproducibility."
        ],
        "final_answer": "Within the Executor role, the Tool Retrieval module first provides the Tool Selector with a registry of available tools and their documentation. The Tool Selector chooses the appropriate tools and passes them to the Code Programmer, which emits the code needed for the current subtask. That generated code is then run inside a Code Sandbox—an isolated Jupyter Notebook environment spun up via nbconvert—ensuring safe, reproducible, and decoupled execution of the LLM-generated analysis steps without affecting the main framework.",
        "relevant_elements": [
            "Executor",
            "Tool Retrieval",
            "Code Sandbox"
        ],
        "id": 208,
        "masked_question": "How does [mask1] integrate [mask2] with Code Sandbox strategies from automated code execution methodologies?",
        "masked_number": 2,
        "masked_elements": [
            "Executor",
            "Tool Retrieval"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.09811v1_figure_1.png",
        "paperid": "2407.09811v1",
        "paper_path": "./papers/2407.09811v1.json",
        "figure_id": "2407.09811v1_figure_1.png",
        "caption": "Figure 1: Schematic of the CellAgent Framework. a, Example of user input received by the CellAgent, comprising single-cell data and user-provided text information.\nb, Upon receiving user input, the Planner role first parses user intent and decomposes the task into subtasks.\nc, Illustration of final results, including results of individual subtasks and the final task outcome.\nd, Detailed view of the CellAgent s processing flow for subtasks. The current subtask and historical code memory are inputted to an Executor, which initially retrieves tools and outputs available tools for this step. Subsequently, corresponding documentation for these tools is acquired, and the Executor derives solutions (text analysis and code generation) based on the documentation. These codes are executed in the code sandbox, and if exceptions are encountered, solutions are regenerated until successful execution of this task. Then, the Evaluator assesses the results of the current task and allows the Executor to optimize solutions. Ultimately, based on its evaluation of results under multiple solutions, the Evaluator aggregates results to obtain the final outcome of this step.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Motion Segment Sampling compare to recurrent generation frameworks in managing temporal coherence across overlapping segments?",
        "relevant_section_ids": [
            "2.2",
            "4.2"
        ],
        "relevant_context": [
            "Previous methods like Multi-Act [23] and TEACH [2] utilize a recurrent generation framework, and generate motion conditioned on the previously generated motion segment and the corresponding text prompt. However, these models suffer from error accumulation over time, causing issues like motion drift, repetitive patterns, and even ‘freezing’ after several iterations.",
            "This sliding window technique allows us to iteratively sample overlapping short motion segments from the long sequence, denoted as Xᵢ. By maintaining overlap between adjacent segments, the sliding window preserves continuity and smoothness between them, thereby enhancing the temporal coherence of the generated long motion sequence."
        ],
        "final_answer": "Recurrent generation frameworks such as Multi-Act and TEACH produce each new sub-motion purely by conditioning on the last generated segment and its text prompt, which leads to cumulative errors over time (motion drift, repetitiveness, even freezing). In contrast, Motion Segment Sampling uses a sliding window to extract overlapping short segments; this explicit overlap enforces smoothness and continuity between neighboring segments, yielding more stable temporal coherence without the error accumulation seen in recurrent schemes.",
        "relevant_elements": [
            "Motion Segment Sampling"
        ],
        "id": 209,
        "masked_question": "How does [mask1] compare to recurrent generation frameworks in managing temporal coherence across overlapping segments?",
        "masked_number": 1,
        "masked_elements": [
            "Motion Segment Sampling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.18303v1_figure_2.png",
        "paperid": "2411.18303v1",
        "paper_path": "./papers/2411.18303v1.json",
        "figure_id": "2411.18303v1_figure_2.png",
        "caption": "Figure 2: Overview of InfiniDreamer for arbitrarily long human motion generation. Given a list of text prompts, our framework generates a coherent and continuous long-sequence motion that aligns closely with each prompt. To achieve this, we start by initializing a long motion sequence using the (1) Motion Sequence Initialization module. Next, the (2) Motion Segment Sampling module iteratively samples short, overlapping sequence segments from the initialized motion. Finally, we refine each sampled segment with our proposed (3) Segment Score Distillation, optimizing each segment to align with the prior distribution of the pre-trained motion diffusion model. Through this iterative process, the framework synthesizes a seamless and fluid long-duration motion sequence, with realistic motions matching each prompt and smooth transitions connecting them.",
        "qtype": "Literature_Background",
        "response": "The element highlighted by [mask1] refers to the **(2) Motion Segment Sampling** module within the InfiniDreamer framework.\n\nHere's how it compares to recurrent generation frameworks in managing temporal coherence across overlapping segments:\n\n1.  **Recurrent Generation Frameworks:** According to the \"Long Human Motion Generation\" section, previous methods utilizing a recurrent generation framework (e.g., Multi-Act, TEACH) \"generate motion conditioned on the previously generated motion segment.\" However, these models \"suffer from error accumulation over time, causing issues like motion drift, repetitive patterns, and even ’freezing’ after several iterations.\" This indicates that they struggle to maintain temporal coherence over long durations due to the sequential compounding of errors.\n\n2.  **Motion Segment Sampling (InfiniDreamer):** The \"Motion Segment Sampling Module\" in InfiniDreamer employs a \"sliding window\" to \"iteratively sample overlapping short motion segments from the long sequence.\" By explicitly \"maintaining overlap between adjacent segments, the sliding window preserves continuity and smoothness between them, thereby enhancing the temporal coherence of the generated long motion sequence.\" Furthermore, these sampled segments are refined through \"Segment Score Distillation,\" which \"iteratively optimizes each short motion segment to bring it closer to the high"
    },
    {
        "question": "How does Segment Score Distillation adapt Score Distillation Sampling principles to refine local motion segments using diffusion priors?",
        "relevant_section_ids": [
            "3.1",
            "4.2"
        ],
        "relevant_context": [
            "3.1: Score Distillation Sampling (SDS) was originally introduced in DreamFusion [37] for the task of text-to-3D generation. It leverages the probability density distillation from a text-to-image diffusion model to optimize the parameters of any differentiable 3D generator, enabling zero-shot text-to-3D generation without requiring explicit 3D supervision.",
            "4.2: Segment Score Distillation. This module leverages a pre-trained motion diffusion model to optimize the distribution of the sampled short sequences, ensuring that each segment aligns with the underlying diffusion sample distribution. Specifically, Segment Score Distillation (SSD) iteratively optimizes each short motion segment to bring it closer to the high-quality distribution learned by the diffusion model, thereby enhancing the coherence and quality of the overall long motion sequence.",
            "4.2: To achieve this, for each sampled short motion segment x_i^0, we first randomly sample a timestep t, then obtain each noised segment x_i^t through x_i^t = √(ᾱ_t) x_i^0 + √(1−ᾱ_t) ε, where ᾱ_t and ε are noise scheduling parameters. Using the motion diffusion model in an unconditional setting, we then incorporate an alignment loss to align the sampled motion segment with the predicted signal x̂_0: L_sds = E_{t,ε}[w(t) ‖x̂_0^i − x_0^i‖²] + L_geo."
        ],
        "final_answer": "Segment Score Distillation (SSD) adapts Score Distillation Sampling by applying the same diffusion-based distillation procedure locally on overlapping short motion segments. For each segment, SSD adds noise according to a randomly chosen diffusion timestep, uses a pre-trained motion diffusion model to predict the denoised segment, and then minimizes a weighted L2 alignment loss between the predicted and original (noiseless) segment. This “segment-wise” distillation aligns each local motion clip with the high-quality distribution learned by the diffusion prior, while additional geometric losses (position, foot contact, velocity) ensure realistic, smooth transitions across the full long sequence.",
        "relevant_elements": [
            "Segment Score Distillation"
        ],
        "id": 210,
        "masked_question": "How does [mask1] adapt Score Distillation Sampling principles to refine local motion segments using diffusion priors?",
        "masked_number": 1,
        "masked_elements": [
            "Segment Score Distillation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.18303v1_figure_2.png",
        "paperid": "2411.18303v1",
        "paper_path": "./papers/2411.18303v1.json",
        "figure_id": "2411.18303v1_figure_2.png",
        "caption": "Figure 2: Overview of InfiniDreamer for arbitrarily long human motion generation. Given a list of text prompts, our framework generates a coherent and continuous long-sequence motion that aligns closely with each prompt. To achieve this, we start by initializing a long motion sequence using the (1) Motion Sequence Initialization module. Next, the (2) Motion Segment Sampling module iteratively samples short, overlapping sequence segments from the initialized motion. Finally, we refine each sampled segment with our proposed (3) Segment Score Distillation, optimizing each segment to align with the prior distribution of the pre-trained motion diffusion model. Through this iterative process, the framework synthesizes a seamless and fluid long-duration motion sequence, with realistic motions matching each prompt and smooth transitions connecting them.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does integrating DDIM sampling in Motion Sequence Initialization facilitate subsequent Segment Score Distillation?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "To create this initial sequence, we start by randomly initializing the entire long motion sequence M, which provides a rough, unsmoothed outline of the target motion. Then, we employ a pre-trained Motion Diffusion Model (MDM) [49] with DDIM sampling [46] to generate each motion segment s_i within the sequence. Each segment s_i is conditioned on the respective text prompt c_i, ensuring that the generated motion aligns semantically with the desired motion described in the prompt.",
            "Segment Score Distillation. This module leverages a pre-trained motion diffusion model Φ to optimize the distribution of the sampled short sequences, ensuring that each segment aligns with the underlying diffusion sample distribution."
        ],
        "final_answer": "By using DDIM sampling during Motion Sequence Initialization, each segment is already generated under the same diffusion prior and conditioned on its text prompt, giving it a rough but semantically and statistically plausible shape. This head start means that when Segment Score Distillation begins, it can focus on fine‐grained alignment to the learned diffusion distribution and the addition of geometric constraints, rather than having to pull each segment out of random noise, thereby improving stability, coherence, and convergence speed.",
        "relevant_elements": [
            "Motion Sequence Initialization",
            "Segment Score Distillation"
        ],
        "id": 211,
        "masked_question": "How does integrating DDIM sampling in [mask1] facilitate subsequent [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Motion Sequence Initialization",
            "Segment Score Distillation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.18303v1_figure_2.png",
        "paperid": "2411.18303v1",
        "paper_path": "./papers/2411.18303v1.json",
        "figure_id": "2411.18303v1_figure_2.png",
        "caption": "Figure 2: Overview of InfiniDreamer for arbitrarily long human motion generation. Given a list of text prompts, our framework generates a coherent and continuous long-sequence motion that aligns closely with each prompt. To achieve this, we start by initializing a long motion sequence using the (1) Motion Sequence Initialization module. Next, the (2) Motion Segment Sampling module iteratively samples short, overlapping sequence segments from the initialized motion. Finally, we refine each sampled segment with our proposed (3) Segment Score Distillation, optimizing each segment to align with the prior distribution of the pre-trained motion diffusion model. Through this iterative process, the framework synthesizes a seamless and fluid long-duration motion sequence, with realistic motions matching each prompt and smooth transitions connecting them.",
        "qtype": "Experimental_Results",
        "response": "Integrating DDIM sampling in **(1) Motion Sequence Initialization** facilitates subsequent **(2) Motion Segment Sampling** and **(3) Segment Score Distillation** by providing an initial, text-conditioned long motion sequence (M). This initial sequence, generated by the pre-trained Motion Diffusion Model with DDIM sampling, serves as the foundational structure from which short, overlapping motion segments are iteratively sampled in the **Motion Segment Sampling** module. These sampled segments are then refined and optimized in the **Segment Score Distillation** module to align with the prior distribution of the motion diffusion model, ensuring coherence and quality."
    },
    {
        "question": "How does sliding window size in Motion Segment Sampling influence coherence during Segment Score Distillation?",
        "relevant_section_ids": [
            "4.2",
            "6"
        ],
        "relevant_context": [
            "To achieve this, we employ a sliding window of size s, which moves along the long motion sequence with a stride size p. This sliding window technique allows us to iteratively sample overlapping short motion segments from the long sequence, denoted as Mi. By maintaining overlap between adjacent segments, the sliding window preserves continuity and smoothness between them, thereby enhancing the temporal coherence of the generated long motion sequence.",
            "Ablation on Sliding Window Size s. In Tab. 3, we present the impact of the hyper-parameter Sliding Window Size s on model performance. s controls the size of each sampled segment, whereas a larger s allows the model to incorporate more contextual information. We observe that with a very small s, the performance of transition segments declines sharply. However, as s increases, the transition quality exhibits fluctuating declines. This suggests that a moderate context length is beneficial for transition generation, whereas an overly extended context introduces interference. In terms of motion segment generation, performance consistently decreases as s grows. We speculate this is due both to MDM’s limitations in handling long sequences and to the interference in semantic alignment caused by excessive context length."
        ],
        "final_answer": "The sliding window size s governs how much temporal context is seen by each sampled segment during Segment Score Distillation. Small window sizes break the overlap needed for smooth transitions and sharply degrade coherence. Increasing s initially improves transition coherence by providing more context, but making s too large introduces interference between distant frames and again harms smoothness. Thus, a moderate sliding window size best balances coherence in the distilled segments.",
        "relevant_elements": [
            "Motion Segment Sampling",
            "Segment Score Distillation"
        ],
        "id": 212,
        "masked_question": "How does sliding window size in [mask1] influence coherence during Segment Score Distillation?",
        "masked_number": 1,
        "masked_elements": [
            "Motion Segment Sampling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.18303v1_figure_2.png",
        "paperid": "2411.18303v1",
        "paper_path": "./papers/2411.18303v1.json",
        "figure_id": "2411.18303v1_figure_2.png",
        "caption": "Figure 2: Overview of InfiniDreamer for arbitrarily long human motion generation. Given a list of text prompts, our framework generates a coherent and continuous long-sequence motion that aligns closely with each prompt. To achieve this, we start by initializing a long motion sequence using the (1) Motion Sequence Initialization module. Next, the (2) Motion Segment Sampling module iteratively samples short, overlapping sequence segments from the initialized motion. Finally, we refine each sampled segment with our proposed (3) Segment Score Distillation, optimizing each segment to align with the prior distribution of the pre-trained motion diffusion model. Through this iterative process, the framework synthesizes a seamless and fluid long-duration motion sequence, with realistic motions matching each prompt and smooth transitions connecting them.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] in the image represents the \"Motion Segment Sampling\" module, where a sliding window of size `L` is used to sample short motion segments from the \"Long motion sequences M\". These sampled segments are then fed into the \"Segment Score Distillation\" module for optimization.\n\nHere's how the sliding window size `L` influences coherence during Segment Score Distillation:\n\n1.  **Contextual Information:** The sliding window size `L` directly controls the size of each sampled segment, determining how much contextual information is incorporated. A larger `L` means more context is included in each segment optimized by Segment Score Distillation.\n\n2.  **Temporal Coherence:** By maintaining overlap between adjacent segments, the sliding window technique, regardless of its specific size (though influenced by it), inherently preserves continuity and smoothness, thereby enhancing the overall temporal coherence of the generated long motion sequence.\n\n3.  **Influence on Transition Segments Coherence:**\n    *   **Very small `L`:** Leads to a sharp decline in the performance (co"
    },
    {
        "question": "How does lower Hessian Lipschitz constant accelerate convergence of Newton iterative solver?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "On the other hand, the convergence of the solver (i.e., the number of iterations) highly depends on the properties of the problem. In particular when optimizing P with Lipschitz continuous Hessian L using Newton’s method, we have a quadratic convergence rate (Nocedal and Wright, 2006) written as: … It can be seen that, the number of iterations required to reach a certain error threshold scales with the Hessian’s Lipschitz constant.",
            "In this work, we focus on accelerating the simulation by reducing the number of iterations k through the use of our Lipschitz regularization in subspace construction."
        ],
        "final_answer": "When the Hessian of the objective has a smaller Lipschitz constant, Newton’s method still enjoys quadratic convergence but requires fewer iterations to reach a given error tolerance. In other words, reducing the Hessian Lipschitz constant directly lowers the number of Newton steps needed for convergence, thereby accelerating the iterative solve.",
        "relevant_elements": [
            "Hessian Lipschitz constant",
            "Newton iterative solver"
        ],
        "id": 214,
        "masked_question": "How does lower [mask1] accelerate convergence of [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Hessian Lipschitz constant",
            "Newton iterative solver"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.03807v1_figure_1.png",
        "paperid": "2409.03807v1",
        "paper_path": "./papers/2409.03807v1.json",
        "figure_id": "2409.03807v1_figure_1.png",
        "caption": "Figure 1. We propose a Lipschitz optimization method that can significantly accelerate the convergence speed of reduced-order simulations driven by neural-network-based approaches. (a) The deformation process can be formulated as a path through a configuration manifold ℳ⊆ℝnℳsuperscriptℝ𝑛\\mathcal{M}\\subseteq\\mathbb{R}^{n}caligraphic_M ⊆ blackboard_R start_POSTSUPERSCRIPT italic_n end_POSTSUPERSCRIPT, where reduced-order solvers tend to find a mapping 𝒇θ (𝒛)subscript𝒇𝜃𝒛\\bm{f}_{\\theta}(\\bm{z})bold_italic_f start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT ( bold_italic_z ) that maps a low-dimensional subspace ℝrsuperscriptℝ𝑟\\mathbb{R}^{r}blackboard_R start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT to the manifold. (b) Our method enhances the objective landscape in the neural subspace by minimizing the second-order Lipschitz regularization energy, which substantially improves convergence speed when using iterative solvers like Newton s method. (c, d) Compared to conventional linear subspace methods (driven by PCA) and direct neural subspace constructions, our method achieves faster convergence and maintains quality when using the same subspace dimension.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What alternative regularization could augment Lipschitz regularization energy for faster convergence with iterative solvers?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "iterative solvers",
            "Lipschitz regularization energy"
        ],
        "id": 216,
        "masked_question": "What alternative regularization could augment [mask1] for faster convergence with iterative solvers?",
        "masked_number": 1,
        "masked_elements": [
            "Lipschitz regularization energy"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.03807v1_figure_1.png",
        "paperid": "2409.03807v1",
        "paper_path": "./papers/2409.03807v1.json",
        "figure_id": "2409.03807v1_figure_1.png",
        "caption": "Figure 1. We propose a Lipschitz optimization method that can significantly accelerate the convergence speed of reduced-order simulations driven by neural-network-based approaches. (a) The deformation process can be formulated as a path through a configuration manifold ℳ⊆ℝnℳsuperscriptℝ𝑛\\mathcal{M}\\subseteq\\mathbb{R}^{n}caligraphic_M ⊆ blackboard_R start_POSTSUPERSCRIPT italic_n end_POSTSUPERSCRIPT, where reduced-order solvers tend to find a mapping 𝒇θ (𝒛)subscript𝒇𝜃𝒛\\bm{f}_{\\theta}(\\bm{z})bold_italic_f start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT ( bold_italic_z ) that maps a low-dimensional subspace ℝrsuperscriptℝ𝑟\\mathbb{R}^{r}blackboard_R start_POSTSUPERSCRIPT italic_r end_POSTSUPERSCRIPT to the manifold. (b) Our method enhances the objective landscape in the neural subspace by minimizing the second-order Lipschitz regularization energy, which substantially improves convergence speed when using iterative solvers like Newton s method. (c, d) Compared to conventional linear subspace methods (driven by PCA) and direct neural subspace constructions, our method achieves faster convergence and maintains quality when using the same subspace dimension.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations might learned positional embedding E_PE face with varied map prior instances in complex intersections?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "E_PE",
            "Map Prior Instances"
        ],
        "id": 217,
        "masked_question": "What limitations might learned positional embedding [mask1] face with varied map prior instances in complex intersections?",
        "masked_number": 1,
        "masked_elements": [
            "E_PE"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.10316v1_figure_1.png",
        "paperid": "2411.10316v1",
        "paper_path": "./papers/2411.10316v1.json",
        "figure_id": "2411.10316v1_figure_1.png",
        "caption": "Figure 1: Overview of the model architecture of M3TR and the investigated point query encoder designs. For our evaluated task of HD map completion, we mask out instances from the ground truth map ℳGTsubscriptℳGT\\mathcal{M_{\\mathrm{GT}}}caligraphic_M start_POSTSUBSCRIPT roman_GT end_POSTSUBSCRIPT to create a map prior ℳPsubscriptℳP\\mathcal{M_{\\mathrm{P}}}caligraphic_M start_POSTSUBSCRIPT roman_P end_POSTSUBSCRIPT. Using ℳPsubscriptℳP\\mathcal{M_{\\mathrm{P}}}caligraphic_M start_POSTSUBSCRIPT roman_P end_POSTSUBSCRIPT, we try to reconstruct ℳGTsubscriptℳGT\\mathcal{M_{\\mathrm{GT}}}caligraphic_M start_POSTSUBSCRIPT roman_GT end_POSTSUBSCRIPT. The map prior instances are supplied to the model as queries, influenced by the shown point query encoder and the detection query set design which is further illustrated in Fig. 5.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How could alternative reference point generation mitigate errors in P_ref under occluded sensor observations?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "T_ref",
            "P_ref"
        ],
        "id": 218,
        "masked_question": "How could alternative reference point generation mitigate errors in [mask1] under occluded sensor observations?",
        "masked_number": 1,
        "masked_elements": [
            "P_ref"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.10316v1_figure_1.png",
        "paperid": "2411.10316v1",
        "paper_path": "./papers/2411.10316v1.json",
        "figure_id": "2411.10316v1_figure_1.png",
        "caption": "Figure 1: Overview of the model architecture of M3TR and the investigated point query encoder designs. For our evaluated task of HD map completion, we mask out instances from the ground truth map ℳGTsubscriptℳGT\\mathcal{M_{\\mathrm{GT}}}caligraphic_M start_POSTSUBSCRIPT roman_GT end_POSTSUBSCRIPT to create a map prior ℳPsubscriptℳP\\mathcal{M_{\\mathrm{P}}}caligraphic_M start_POSTSUBSCRIPT roman_P end_POSTSUBSCRIPT. Using ℳPsubscriptℳP\\mathcal{M_{\\mathrm{P}}}caligraphic_M start_POSTSUBSCRIPT roman_P end_POSTSUBSCRIPT, we try to reconstruct ℳGTsubscriptℳGT\\mathcal{M_{\\mathrm{GT}}}caligraphic_M start_POSTSUBSCRIPT roman_GT end_POSTSUBSCRIPT. The map prior instances are supplied to the model as queries, influenced by the shown point query encoder and the detection query set design which is further illustrated in Fig. 5.",
        "qtype": "Others",
        "response": "The red box ([mask1]) highlights design 'C' of the 'Point Query Encoder'. According to the text, in design 'C', the reference point ($P_{ref,j}^i$) for each query is **directly defined based on the map prior point information**.\n\nHere's how this mitigates errors under occluded sensor observations:\n\n1.  **Dependency on Priors vs. Sensor Data:** In previous works (and designs A and B), the reference point is typically generated from positional embeddings, which are"
    },
    {
        "question": "What motivates masking ground truth maps to supply map prior instances instead of full maps?",
        "relevant_section_ids": [
            "3.2",
            "3.4"
        ],
        "relevant_context": [
            "Map priors M_p are derived from the complete ground truth map M using the scenario specific prior generator g which masks out or selects only specific map elements.",
            "However, transformer models quickly learn to pass through prior elements almost identically and, if known as prior, any downstream application would prefer the map prior over the corresponding, but possibly noisy prediction. Hence, we propose to focus on exactly those map elements which are unknown to the model at inference time.",
            "This exploits the entire combinatorial variety of dataset diversity and map prior categories and leads to an M-fold increase in training data, promising greater generalization performance."
        ],
        "final_answer": "Masking the ground truth maps to provide only partial map prior instances serves two key purposes: first, it prevents the model from simply ‘‘copying through’’ all elements of a full prior (which it would do when given complete maps), and instead forces it to focus on and learn to complete only the missing or changed elements. Second, by generating multiple masked versions of each scene, it acts as an augmentation that multiplies the training data and thereby improves generalization.",
        "relevant_elements": [
            "Masking of Map Instances",
            "Map Prior Instances"
        ],
        "id": 219,
        "masked_question": "What motivates [mask1] to supply map prior instances instead of full maps?",
        "masked_number": 1,
        "masked_elements": [
            "Masking of Map Instances"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.10316v1_figure_1.png",
        "paperid": "2411.10316v1",
        "paper_path": "./papers/2411.10316v1.json",
        "figure_id": "2411.10316v1_figure_1.png",
        "caption": "Figure 1: Overview of the model architecture of M3TR and the investigated point query encoder designs. For our evaluated task of HD map completion, we mask out instances from the ground truth map ℳGTsubscriptℳGT\\mathcal{M_{\\mathrm{GT}}}caligraphic_M start_POSTSUBSCRIPT roman_GT end_POSTSUBSCRIPT to create a map prior ℳPsubscriptℳP\\mathcal{M_{\\mathrm{P}}}caligraphic_M start_POSTSUBSCRIPT roman_P end_POSTSUBSCRIPT. Using ℳPsubscriptℳP\\mathcal{M_{\\mathrm{P}}}caligraphic_M start_POSTSUBSCRIPT roman_P end_POSTSUBSCRIPT, we try to reconstruct ℳGTsubscriptℳGT\\mathcal{M_{\\mathrm{GT}}}caligraphic_M start_POSTSUBSCRIPT roman_GT end_POSTSUBSCRIPT. The map prior instances are supplied to the model as queries, influenced by the shown point query encoder and the detection query set design which is further illustrated in Fig. 5.",
        "qtype": "Design_Rationale",
        "response": "The motivation for supplying map prior instances (partial maps) instead of full maps is primarily driven by the goals of the \"HD Map Completion Task\" as described in the text:\n\n1.  **To simulate realistic map changes and update scenarios:** Real-world map changes are rare and often not labeled in public datasets. To address this, the authors synthetically derive map priors (`M_P`) from the complete ground truth map (`M_GT`) by \"masking out or selecting only specific map elements.\" This creation of \"map prior scenarios\" allows them to reflect real map changes more accurately and systematically.\n2.  **To investigate the importance of individual map features:** By varying which map elements are provided as prior instances, the researchers can \"investigate the importance of individual map features as a prior by evaluating their impact on detection performance for the elements that need to be perceived online.\" This helps understand which prior information is most critical for map completion.\n3.  **To ensure the model learns"
    },
    {
        "question": "What motivates combining zero-padded point information with learned prior embeddings in the Point Query Encoder?",
        "relevant_section_ids": [
            "3.5.x"
        ],
        "relevant_context": [
            "While in A, the baseline proposed in MapEX [22], the zero-padded point information is directly used as point embedding Q_pt, we propose to combine it with a learned prior embedding E_pt which is added to it in B and C.",
            "This makes use of the prior information, but provides a learnable degree of freedom for the model."
        ],
        "final_answer": "They combine zero-padded point information with learned prior embeddings in order to leverage the available prior map information while still giving the model a learnable degree of freedom to adapt and improve map completion.",
        "relevant_elements": [
            "Point Query Encoder",
            "learned prior embeddings"
        ],
        "id": 220,
        "masked_question": "What motivates combining zero-padded point information with [mask1] in the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "learned prior embeddings",
            "Point Query Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.10316v1_figure_1.png",
        "paperid": "2411.10316v1",
        "paper_path": "./papers/2411.10316v1.json",
        "figure_id": "2411.10316v1_figure_1.png",
        "caption": "Figure 1: Overview of the model architecture of M3TR and the investigated point query encoder designs. For our evaluated task of HD map completion, we mask out instances from the ground truth map ℳGTsubscriptℳGT\\mathcal{M_{\\mathrm{GT}}}caligraphic_M start_POSTSUBSCRIPT roman_GT end_POSTSUBSCRIPT to create a map prior ℳPsubscriptℳP\\mathcal{M_{\\mathrm{P}}}caligraphic_M start_POSTSUBSCRIPT roman_P end_POSTSUBSCRIPT. Using ℳPsubscriptℳP\\mathcal{M_{\\mathrm{P}}}caligraphic_M start_POSTSUBSCRIPT roman_P end_POSTSUBSCRIPT, we try to reconstruct ℳGTsubscriptℳGT\\mathcal{M_{\\mathrm{GT}}}caligraphic_M start_POSTSUBSCRIPT roman_GT end_POSTSUBSCRIPT. The map prior instances are supplied to the model as queries, influenced by the shown point query encoder and the detection query set design which is further illustrated in Fig. 5.",
        "qtype": "Design_Rationale",
        "response": "The red box ([mask1]) highlights `E^i_pt,j`, which is described in the text as a \"learned prior embedding\". The blue box ([mask2]) outlines the \"Point Query Encoder\" section of the model.\n\nAccording to the \"Point Query Design\" subsection in the context:\n\"While in Ⓐ, the baseline proposed in MapEX [22], the zero-padded point information is directly used as point embedding `Qᵢᵖᵗ,ʲ`, we propose to combine it with a learned prior embedding `Eᵢᵖᵗ,ʲ` which is added to it in Ⓑ and Ⓒ. This makes use of the prior information, but provides a learnable degree of freedom for the model.\"\n\nTherefore, the motivation for combining zero-padded point information with the **learned prior embedding (`E^i_pt,j`)** in the **Point Query Encoder** is:\n1.  To make use of the prior information.\n2.  To provide a learnable degree of freedom for the model."
    },
    {
        "question": "What motivates freezing SAM when training a DETR head for in-context segmentation?",
        "relevant_section_ids": [
            "5.2"
        ],
        "relevant_context": [
            "To adapt SAM for in-context learning, we propose an architecture that largely reuses the base knowledge already present in the pretrained model.",
            "Specifically, we freeze both encoder and decoder and solely train a DETR [4  ###reference_b4###] decoder head to bridge the semantics of the reference image with the target images.",
            "This way, we hope to minimise visual feature discrepancy from reference and target since both representations come from the same frozen model."
        ],
        "final_answer": "They freeze SAM to leverage its pretrained segmentation knowledge and ensure that the reference and target image features come from the same frozen model, thereby minimising visual feature discrepancies and allowing a lightweight DETR head to focus solely on learning the semantic mapping.",
        "relevant_elements": [
            "SAM",
            "DETR head"
        ],
        "id": 221,
        "masked_question": "What motivates freezing [mask1] when training a DETR head for in-context segmentation?",
        "masked_number": 1,
        "masked_elements": [
            "SAM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15288v1_figure_1.png",
        "paperid": "2411.15288v1",
        "paper_path": "./papers/2411.15288v1.json",
        "figure_id": "2411.15288v1_figure_1.png",
        "caption": "Figure 1: Exploring SAM’s Semantic Gap for Image Understanding. (1) Quantifying SAM’s Semantic Understanding: Despite training on a very large dataset, SAM lacks inherent semantics, as shown by its lower ImageNet1K classification accuracy compared to CLIP and DINOv2 models. (2) Recovering Semantics with Fine-tuning: SAM’s ability to generalise remains limited; it can identify classes in the training set but struggles with unseen classes even with in-context learning through DETR. (3) Injecting Semantics from External Models: By integrating semantic-rich representations from models like DINOv2, we can enhance SAM’s ability to match semantics and improve its understanding of segmented regions.",
        "qtype": "Design_Rationale",
        "response": "The masked component, [mask1], refers to the SAM model (both its encoder and decoder).\n\nBased on the \"Adapting SAM\" section in the context, the motivation for freezing SAM when training a DETR head for in-context segmentation is twofold:\n1.  **To largely reuse the base knowledge already present in the pretrained SAM model.**\n2.  **To minimize visual feature discrepancy from reference and target images.** Since both the reference and target image representations come from the same frozen SAM model, it helps ensure consistency in the features being used by the DETR head to bridge semantics."
    },
    {
        "question": "What is the reasoning for matching DINOv2 features with SAM regions via cosine similarity for instance detection?",
        "relevant_section_ids": [
            "6"
        ],
        "relevant_context": [
            "Then, we use DINOv2 to extract the latent feature representations for all reference images, and the target image, respectively. Lastly, we match the DINOv2 features of the target image with all the encoded reference images features via cosine similarity.",
            "By adopting this approach, our baseline achieves semantic matching at instance level through feature-based similarity rather than extensive training.",
            "Furthermore, being a fully training-free method makes it naturally adaptable to novel classes (without any risk of overfitting to seen categories)."
        ],
        "final_answer": "They match DINOv2 features with SAM regions via cosine similarity to exploit DINOv2’s semantically rich embeddings, directly comparing reference and target region feature vectors to detect instances. This training-free, feature-based semantic matching enables instance-level detection and naturally generalises to novel classes without overfitting.",
        "relevant_elements": [
            "DINOv2 features",
            "SAM regions"
        ],
        "id": 222,
        "masked_question": "What is the reasoning for matching [mask1] with SAM regions via cosine similarity for instance detection?",
        "masked_number": 1,
        "masked_elements": [
            "DINOv2 features"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15288v1_figure_1.png",
        "paperid": "2411.15288v1",
        "paper_path": "./papers/2411.15288v1.json",
        "figure_id": "2411.15288v1_figure_1.png",
        "caption": "Figure 1: Exploring SAM’s Semantic Gap for Image Understanding. (1) Quantifying SAM’s Semantic Understanding: Despite training on a very large dataset, SAM lacks inherent semantics, as shown by its lower ImageNet1K classification accuracy compared to CLIP and DINOv2 models. (2) Recovering Semantics with Fine-tuning: SAM’s ability to generalise remains limited; it can identify classes in the training set but struggles with unseen classes even with in-context learning through DETR. (3) Injecting Semantics from External Models: By integrating semantic-rich representations from models like DINOv2, we can enhance SAM’s ability to match semantics and improve its understanding of segmented regions.",
        "qtype": "Design_Rationale",
        "response": "The reasoning for matching the DINOv2 features from the reference image ([mask1]) with SAM regions via cosine similarity for instance detection is to **inject semantic understanding into SAM and enable it to identify specific instances of objects based on their semantic similarity to a given reference set.**\n\nAs described in the \"Injecting Semantics into SAM\" section, the process involves three main steps:\n1.  **Generate object proposals** for regions in the target image using SAM.\n2.  **Extract latent"
    },
    {
        "question": "How does the DETR decoder integrate SAM decoder outputs with reference image embeddings?",
        "relevant_section_ids": [
            "5.2"
        ],
        "relevant_context": [
            "As shown in Figure 2, the output embeddings from the SAM decoder for the reference image are added to the DETR query tokens.",
            "Thus, the DETR head learns to predict object instances in the target image given the reference image query tokens."
        ],
        "final_answer": "The DETR decoder takes the embeddings produced by the frozen SAM mask decoder on the reference image and adds them to its own query tokens, allowing the DETR head to use those reference-image–conditioned queries to predict object instances in the target image.",
        "relevant_elements": [
            "DETR decoder",
            "SAM decoder"
        ],
        "id": 223,
        "masked_question": "How does the [mask1] integrate [mask2] outputs with reference image embeddings?",
        "masked_number": 2,
        "masked_elements": [
            "DETR decoder",
            "SAM decoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15288v1_figure_1.png",
        "paperid": "2411.15288v1",
        "paper_path": "./papers/2411.15288v1.json",
        "figure_id": "2411.15288v1_figure_1.png",
        "caption": "Figure 1: Exploring SAM’s Semantic Gap for Image Understanding. (1) Quantifying SAM’s Semantic Understanding: Despite training on a very large dataset, SAM lacks inherent semantics, as shown by its lower ImageNet1K classification accuracy compared to CLIP and DINOv2 models. (2) Recovering Semantics with Fine-tuning: SAM’s ability to generalise remains limited; it can identify classes in the training set but struggles with unseen classes even with in-context learning through DETR. (3) Injecting Semantics from External Models: By integrating semantic-rich representations from models like DINOv2, we can enhance SAM’s ability to match semantics and improve its understanding of segmented regions.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does cosine similarity operate on DINOv2 and SAM features to match target and reference regions?",
        "relevant_section_ids": [
            "6"
        ],
        "relevant_context": [
            "First, we generate object proposals for all regions in the test image by prompting SAM with a dense grid of points.",
            "Then, we use DINOv2 to extract the latent feature representations for all reference images, and the target image, respectively.",
            "Lastly, we match the DINOv2 features of the target image with all the encoded reference images features via cosine similarity."
        ],
        "final_answer": "For each candidate region proposed by SAM in the target image, we extract its latent feature vector using a pretrained DINOv2 encoder. We do the same for each reference image (or region) to obtain their DINOv2 feature vectors. We then compute the cosine similarity between every target-region feature and every reference-region feature. Regions are matched (and hence assigned to a reference category) based on which reference feature yields the highest cosine similarity, after which simple post-processing removes duplicate detections.",
        "relevant_elements": [
            "DINOv2",
            "SAM"
        ],
        "id": 224,
        "masked_question": "How does cosine similarity operate on [mask1] and [mask2] features to match target and reference regions?",
        "masked_number": 2,
        "masked_elements": [
            "DINOv2",
            "SAM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.15288v1_figure_1.png",
        "paperid": "2411.15288v1",
        "paper_path": "./papers/2411.15288v1.json",
        "figure_id": "2411.15288v1_figure_1.png",
        "caption": "Figure 1: Exploring SAM’s Semantic Gap for Image Understanding. (1) Quantifying SAM’s Semantic Understanding: Despite training on a very large dataset, SAM lacks inherent semantics, as shown by its lower ImageNet1K classification accuracy compared to CLIP and DINOv2 models. (2) Recovering Semantics with Fine-tuning: SAM’s ability to generalise remains limited; it can identify classes in the training set but struggles with unseen classes even with in-context learning through DETR. (3) Injecting Semantics from External Models: By integrating semantic-rich representations from models like DINOv2, we can enhance SAM’s ability to match semantics and improve its understanding of segmented regions.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the framework transfer adaptation dynamics features to accurately reconstruct deployment dynamics?",
        "relevant_section_ids": [
            "1"
        ],
        "relevant_context": [
            "Our key innovation is training a hybrid machine-learning framework in a laboratory environment using a variety of synthetic dynamical systems other than data from the target system itself, and deploy the trained architecture to reconstruct the dynamics of the target system from one-time sparse observations.",
            "More specifically, we exploit the machine-learning framework of transformers with training data not from the target system but from a number of known, synthetic systems that show qualitatively similar dynamical behaviors to those of the target system, for which complete data are available. The training process can thus be regarded as a “laboratory-calibration” process during which the transformer learns the dynamical rules generating the synthetic but complete data. The so-trained transformer is then deployed to the real application with the random and sparse data, and is expected to adapt to the unseen data and reconstruct the underlying dynamics."
        ],
        "final_answer": "By pre-training a transformer on a diverse set of fully observed synthetic systems (the “adaptation” dynamics), the model learns a general feature extractor for underlying dynamical rules.  At deployment, these learned features are applied to the sparse, one-time observations of the target system, enabling the transformer (and the downstream reservoir computer) to fill in the missing points and faithfully reconstruct the full “deployment” dynamics without ever having seen target-system training data.",
        "relevant_elements": [
            "adaptation dynamics",
            "deployment dynamics"
        ],
        "id": 225,
        "masked_question": "How does the framework transfer [mask1] features to accurately reconstruct deployment dynamics?",
        "masked_number": 1,
        "masked_elements": [
            "adaptation dynamics"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.21222v1_figure_1.png",
        "paperid": "2410.21222v1",
        "paper_path": "./papers/2410.21222v1.json",
        "figure_id": "2410.21222v1_figure_1.png",
        "caption": "Figure 1: Dynamics reconstruction from random and sparse data.\n(a) The textbook case of a random time series\nsampled at a frequency higher than the Nyquist frequency, where the dynamical data\ncan be faithfully reconstructed. (b) Training data from the target system (left)\nand a segment of time series of six data points in a time interval containing\napproximately two cycles of oscillation. According to the Nyquist criterion, the\nsignal can be faithfully reconstructed with more than 20 uniformly sampled data\npoints (see text). When the data points are far fewer than 20 and even worse, they\nare randomly sampled, reconstruction becomes challenging. However, if training data\nfrom the same target system are available, existing machine-learning methods can\nbe used to reconstruct the dynamics from the sparse data [33]. (c) If\nno training data from the target system are available, hybrid machine learning\nproposed here provides a viable solution to reconstructing the dynamics from sparse\ndata. (d) Problem statement. Given random and sparse data, the goal is to reconstruct\nthe dynamics of the target system governed by d⁢𝐱/d⁢t=f⁢(𝐱,t)𝑑𝐱𝑑𝑡𝑓𝐱𝑡d\\mathbf{x}/dt=f(\\mathbf{x},t)italic_d bold_x / italic_d italic_t = italic_f ( bold_x , italic_t ). A\nhurdle that needs to be overcome is that, for any given three points, there exist\ninfinitely many ways to fit the data, as illustrated on the right side. (e) Training\nof the machine-learning framework is done using complete data from a large number of\nsynthetic dynamical systems [𝐡1,𝐡2,⋯,𝐡k]subscript𝐡1subscript𝐡2⋯subscript𝐡𝑘[\\mathbf{h}_{1},\\mathbf{h}_{2},\\cdots,\\mathbf{h}_{k}][ bold_h start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , bold_h start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT , ⋯ , bold_h start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT ]. The\nframework is then adapted to reconstruct and predict the dynamics of the target\nsystems [𝐟1,⋯,𝐟m]subscript𝐟1⋯subscript𝐟𝑚[\\mathbf{f}_{1},\\cdots,\\mathbf{f}_{m}][ bold_f start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , ⋯ , bold_f start_POSTSUBSCRIPT italic_m end_POSTSUBSCRIPT ]. (f) An example: in the testing\n(deployment) phase, sparse observations are provided to the trained neural network\nfor dynamics reconstruction.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the transformer adapt synthetic training to handle sparse observations without target-system data?",
        "relevant_section_ids": [
            "1",
            "2"
        ],
        "relevant_context": [
            "Our key innovation is training a hybrid machine-learning framework in a laboratory environment using a variety of synthetic dynamical systems other than data from the target system itself, and deploy the trained architecture to reconstruct the dynamics of the target system from one-time sparse observations.",
            "More specifically, we exploit the machine-learning framework of transformers with training data not from the target system but from a number of known, synthetic systems that show qualitatively similar dynamical behaviors to those of the target system, for which complete data are available. The training process can thus be regarded as a “laboratory-calibration” process during which the transformer learns the dynamical rules generating the synthetic but complete data. The so-trained transformer is then deployed to the real application with the random and sparse data, and is expected to adapt to the unseen data and reconstruct the underlying dynamics.",
            "Selecting an appropriate neural network architecture for reconstructing dynamics from sparse data requires meeting two fundamental requirements: (1) dynamical memory to capture long-range dependencies in the sparse data, and (2) flexibility to handle input sequences of varying lengths. Transformers, originally developed for natural language processing, satisfy these requirements and have proven effective for time series analysis.",
            "To evaluate the reliability of the generated output, we minimize a combined loss function with two components: (1) a mean squared error (MSE) loss that measures absolute error between the output and ground truth, and (2) a smoothness loss that ensures the output maintains appropriate continuity."
        ],
        "final_answer": "The transformer is first laboratory-calibrated on complete trajectories from a set of synthetic dynamical systems (rather than on the target system), allowing it to learn general update rules for nonlinear time series.  By using positional encoding to handle irregular time stamps, multi-head self-attention to capture long-range dependencies, and a combined MSE plus smoothness loss to enforce both accuracy and continuity, the so-trained transformer can be deployed directly on one-time, sparse observations from an unseen target system and automatically fill in missing data to reconstruct the underlying dynamics.",
        "relevant_elements": [
            "transformer",
            "sparse observations"
        ],
        "id": 226,
        "masked_question": "How does the [mask1] adapt synthetic training to handle sparse observations without target-system data?",
        "masked_number": 1,
        "masked_elements": [
            "transformer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.21222v1_figure_1.png",
        "paperid": "2410.21222v1",
        "paper_path": "./papers/2410.21222v1.json",
        "figure_id": "2410.21222v1_figure_1.png",
        "caption": "Figure 1: Dynamics reconstruction from random and sparse data.\n(a) The textbook case of a random time series\nsampled at a frequency higher than the Nyquist frequency, where the dynamical data\ncan be faithfully reconstructed. (b) Training data from the target system (left)\nand a segment of time series of six data points in a time interval containing\napproximately two cycles of oscillation. According to the Nyquist criterion, the\nsignal can be faithfully reconstructed with more than 20 uniformly sampled data\npoints (see text). When the data points are far fewer than 20 and even worse, they\nare randomly sampled, reconstruction becomes challenging. However, if training data\nfrom the same target system are available, existing machine-learning methods can\nbe used to reconstruct the dynamics from the sparse data [33]. (c) If\nno training data from the target system are available, hybrid machine learning\nproposed here provides a viable solution to reconstructing the dynamics from sparse\ndata. (d) Problem statement. Given random and sparse data, the goal is to reconstruct\nthe dynamics of the target system governed by d⁢𝐱/d⁢t=f⁢(𝐱,t)𝑑𝐱𝑑𝑡𝑓𝐱𝑡d\\mathbf{x}/dt=f(\\mathbf{x},t)italic_d bold_x / italic_d italic_t = italic_f ( bold_x , italic_t ). A\nhurdle that needs to be overcome is that, for any given three points, there exist\ninfinitely many ways to fit the data, as illustrated on the right side. (e) Training\nof the machine-learning framework is done using complete data from a large number of\nsynthetic dynamical systems [𝐡1,𝐡2,⋯,𝐡k]subscript𝐡1subscript𝐡2⋯subscript𝐡𝑘[\\mathbf{h}_{1},\\mathbf{h}_{2},\\cdots,\\mathbf{h}_{k}][ bold_h start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , bold_h start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT , ⋯ , bold_h start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT ]. The\nframework is then adapted to reconstruct and predict the dynamics of the target\nsystems [𝐟1,⋯,𝐟m]subscript𝐟1⋯subscript𝐟𝑚[\\mathbf{f}_{1},\\cdots,\\mathbf{f}_{m}][ bold_f start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , ⋯ , bold_f start_POSTSUBSCRIPT italic_m end_POSTSUBSCRIPT ]. (f) An example: in the testing\n(deployment) phase, sparse observations are provided to the trained neural network\nfor dynamics reconstruction.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does adaptation dynamics [h1,h2,...,hk] training diverge from Nyquist criterion–based interpolation?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "adaptation dynamics [h1,h2,...,hk]",
            "Nyquist criterion"
        ],
        "id": 228,
        "masked_question": "How does [mask1] training diverge from [mask2]–based interpolation?",
        "masked_number": 2,
        "masked_elements": [
            "adaptation dynamics [h1,h2,...,hk]",
            "Nyquist criterion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.21222v1_figure_1.png",
        "paperid": "2410.21222v1",
        "paper_path": "./papers/2410.21222v1.json",
        "figure_id": "2410.21222v1_figure_1.png",
        "caption": "Figure 1: Dynamics reconstruction from random and sparse data.\n(a) The textbook case of a random time series\nsampled at a frequency higher than the Nyquist frequency, where the dynamical data\ncan be faithfully reconstructed. (b) Training data from the target system (left)\nand a segment of time series of six data points in a time interval containing\napproximately two cycles of oscillation. According to the Nyquist criterion, the\nsignal can be faithfully reconstructed with more than 20 uniformly sampled data\npoints (see text). When the data points are far fewer than 20 and even worse, they\nare randomly sampled, reconstruction becomes challenging. However, if training data\nfrom the same target system are available, existing machine-learning methods can\nbe used to reconstruct the dynamics from the sparse data [33]. (c) If\nno training data from the target system are available, hybrid machine learning\nproposed here provides a viable solution to reconstructing the dynamics from sparse\ndata. (d) Problem statement. Given random and sparse data, the goal is to reconstruct\nthe dynamics of the target system governed by d⁢𝐱/d⁢t=f⁢(𝐱,t)𝑑𝐱𝑑𝑡𝑓𝐱𝑡d\\mathbf{x}/dt=f(\\mathbf{x},t)italic_d bold_x / italic_d italic_t = italic_f ( bold_x , italic_t ). A\nhurdle that needs to be overcome is that, for any given three points, there exist\ninfinitely many ways to fit the data, as illustrated on the right side. (e) Training\nof the machine-learning framework is done using complete data from a large number of\nsynthetic dynamical systems [𝐡1,𝐡2,⋯,𝐡k]subscript𝐡1subscript𝐡2⋯subscript𝐡𝑘[\\mathbf{h}_{1},\\mathbf{h}_{2},\\cdots,\\mathbf{h}_{k}][ bold_h start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , bold_h start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT , ⋯ , bold_h start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT ]. The\nframework is then adapted to reconstruct and predict the dynamics of the target\nsystems [𝐟1,⋯,𝐟m]subscript𝐟1⋯subscript𝐟𝑚[\\mathbf{f}_{1},\\cdots,\\mathbf{f}_{m}][ bold_f start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT , ⋯ , bold_f start_POSTSUBSCRIPT italic_m end_POSTSUBSCRIPT ]. (f) An example: in the testing\n(deployment) phase, sparse observations are provided to the trained neural network\nfor dynamics reconstruction.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Attribute normalization & expansion extend SNOMED CT-based ontology normalization techniques in retrieval?",
        "relevant_section_ids": [
            "3.3",
            "3.3.1",
            "3.3.2"
        ],
        "relevant_context": [
            "In this section, we formalize a similarity-based approach to first normalize the attribute values with respect to a domain reference, and then to expand them, when relevant, to a set of candidate values, such that to enable and maximize downstream matching likelihood. In this process, we focus on patient Diagnosis and trial targeted Condition, as these attributes bear the significant alignment signal.",
            "Given , the set of diagnosis values for a patient , and , the set of condition values of a CTR , for each  and  we define their normalized variants  and , where  is a reference ontology for the medical domain (e.g., Systematized Nomenclature of Medicine-Clinical Terms (SNOMED CT) Donnelly et al. (2006)).  consists of standardized and universal representation of concepts (denoted by ), properties, and relationships between concepts within the domain, organized in a taxonomic structure.  denotes a similarity function (e.g., Jaccard) between an attribute value and some ontology concept . In practice, given the potential size of the concept-set in the ontology, a nearest-neighbour search algorithm (e.g., Locality Sensitive Hashing (LSH) Datar et al. (2004)) could be employed to efficiently normalize each noun-phrase or constant  to their most similar terms . Finally, the normalized  and  are defined by:  and , respectively.",
            "In addition to normalization, the domain ontology opens the possibility for leveraging its defined properties and hierarchical concept relationships to expand some of the normalized attribute values with their relevant ontological neighborhood. We apply the predicate expansion method to a patient normalized diagnosis, , to maximize its match against a trial's targeted conditions. Thus, the expansion of normalized  is defined by ."
        ],
        "final_answer": "Attribute normalization & expansion extends standard SNOMED CT–based ontology normalization purely by mapping terms to their closest SNOMED CT concepts, by (1) using a similarity function (e.g., Jaccard) and approximate nearest-neighbor search (e.g., LSH) to normalize raw patient and trial attribute values into SNOMED CT concepts, and then (2) leveraging the SNOMED CT IS-A hierarchy to expand each normalized concept into its n-level ontological neighborhood. This two-step process not only grounds attributes in SNOMED CT codes but also enriches retrieval by including semantically related terms, boosting recall and alignment between patient diagnoses and trial conditions.",
        "relevant_elements": [
            "Attribute normalization & expansion",
            "SNOMED CT"
        ],
        "id": 229,
        "masked_question": "How does [mask1] extend [mask2]-based ontology normalization techniques in retrieval?",
        "masked_number": 2,
        "masked_elements": [
            "Attribute normalization & expansion",
            "SNOMED CT"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.18998v1_figure_1.png",
        "paperid": "2409.18998v1",
        "paper_path": "./papers/2409.18998v1.json",
        "figure_id": "2409.18998v1_figure_1.png",
        "caption": "Figure 1: End-to-end depiction of the set-reasoning guided patient-trial matching.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Retrieval & Filtering leverage Demographic Filter to enhance initial trial selection methodologies?",
        "relevant_section_ids": [
            "4.2",
            "4.3"
        ],
        "relevant_context": [
            "Additionally, the approach proposed in this work allows for additional, albeit weaker, relevance types, viz., age-relevance (R_age) and gender-relevance (R_gender). Specifically, given a patient note t with associated age and gender attribute-sets, A_P and G_P, and a CTR c with its age and gender attribute-sets, A_c, G_c, where ⊤ denotes any case variation thereof. In practice, R_age and R_gender can be used as a demographic filter (DF), applied on condition-relevant candidates.",
            "Having defined the age-/gender-/condition-relevance notions of a CTR, given a patient note, we treat the concept of condition relevance as a means for initial retrieval of clinical trials, followed by age and gender filtering, as defined above."
        ],
        "final_answer": "The system first retrieves trials whose Condition attributes match the patient’s diagnosis (condition‐relevance). It then applies the Demographic Filter (DF) by requiring that the patient’s age and gender values fall within each trial’s Age and Gender attribute‐sets, respectively. By pruning out any trial that fails these demographic checks, the initial retrieval is refined to trials more appropriate for the patient’s specific age and gender.",
        "relevant_elements": [
            "Retrieval & Filtering",
            "Demographic Filter"
        ],
        "id": 230,
        "masked_question": "How does [mask1] leverage [mask2] to enhance initial trial selection methodologies?",
        "masked_number": 2,
        "masked_elements": [
            "Retrieval & Filtering",
            "Demographic Filter"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.18998v1_figure_1.png",
        "paperid": "2409.18998v1",
        "paper_path": "./papers/2409.18998v1.json",
        "figure_id": "2409.18998v1_figure_1.png",
        "caption": "Figure 1: End-to-end depiction of the set-reasoning guided patient-trial matching.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does 1 Level Retrieval optimize the demographic filter's selection of CTR candidates?",
        "relevant_section_ids": [
            "3.3.2",
            "4.2",
            "4.3"
        ],
        "relevant_context": [
            "In addition to normalization, the domain ontology opens the possibility for leveraging its defined properties and hierarchical concept relationships to expand some of the normalized attribute values with their relevant ontological neighborhood. … We apply the predicate expansion method to a patient normalized diagnosis, \\hat{d}_1, to maximize its match against a trial’s targeted conditions. Thus, the expansion of normalized \\hat{d}_1 is defined by D_1. (Section 3.3.2)",
            "Additionally, the approach proposed in this work allows for additional, albeit weaker, relevance types, viz., age-relevance (φ_age) and gender-relevance (φ_gender). … In practice, φ_age and φ_gender can be used as a demographic filter (DF), applied on condition-relevant candidates. (Section 4.2)",
            "Having defined the age-/gender-/condition-relevance notions of a CTR, given a patient note, we treat the concept of condition relevance as a means for initial retrieval of clinical trials, followed by age and gender filtering, as defined above. … In other words, the higher the overlap between a CTR’s condition and a patient’s diagnosis, the more relevant the trial would be. (Section 4.3)"
        ],
        "final_answer": "By using 1 Level Retrieval, the patient’s normalized diagnosis is first expanded to include only those concepts one taxonomic hop away in the ontology. This yields a focused set of condition‐relevant trials. The demographic filter (matching age and gender) is then applied exclusively to this narrowed, semantically relevant pool. As a result, the filter operates on far fewer, but more appropriate, CTRs—improving both efficiency and precision of candidate selection.",
        "relevant_elements": [
            "1 Level Retrieval",
            "Demographic Filter"
        ],
        "id": 231,
        "masked_question": "How does [mask1] optimize the [mask2]'s selection of CTR candidates?",
        "masked_number": 2,
        "masked_elements": [
            "1 Level Retrieval",
            "Demographic Filter"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.18998v1_figure_1.png",
        "paperid": "2409.18998v1",
        "paper_path": "./papers/2409.18998v1.json",
        "figure_id": "2409.18998v1_figure_1.png",
        "caption": "Figure 1: End-to-end depiction of the set-reasoning guided patient-trial matching.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does fine-grained labeling inform the scoring function in re-ranking CTR candidates?",
        "relevant_section_ids": [
            "4.4",
            "5"
        ],
        "relevant_context": [
            "Next, we perform further eligibility (as opposed to just relevance) analysis by means of labeling. The eligibility of some CTR $r$ with respect to some patient note $p$, denoted by $\\eta$, is an attribute of the CTR indicating that its inclusion/exclusion criteria allow the patient’s participation in the study. We formally define eligibility with respect to inclusion/exclusion treatment ($\\eta_{tt}$), inclusion/exclusion demographics ($\\eta_{dd}$), and inclusion/exclusion disease ($\\eta_{\\delta\\delta}$). In each case, we employ a labeling function $\\mathcal{L}_{label}$, implemented via a LLM-based instruction, that takes as input a natural language description of some attribute value $e_i$ of $r$ and additional instructive information $I$ to label each $e_i$ with one or more labels based on its $l$ attributes, as described next.",
            "Every scoring function defined below adheres to principle 1: any CTR that is not condition-, age-, and gender-relevant is discarded. The remaining two principles are captured in the scoring functions at various degrees, with the aid of a count function $c(\\cdot)$, defined over $E^{\\text{fine}}$ or $E^{\\text{coarse}}$, that counts the occurrences of some eligibility label $l$."
        ],
        "final_answer": "Fine-grained labeling uses an LLM-based labeling function to assign per-criterion eligibility labels (e.g., “Eligible,” “Excluded,” “No information”) to each inclusion and exclusion predicate in a candidate trial. The re-ranking scoring functions then rely on simple count functions over these fine-grained labels – tallying how many criteria are labeled eligible or excluded – to compute each trial’s final score and order the candidates.",
        "relevant_elements": [
            "Fine-Grained Labeling",
            "Re-Ranking"
        ],
        "id": 232,
        "masked_question": "How does [mask1] inform the scoring function in re-ranking CTR candidates?",
        "masked_number": 1,
        "masked_elements": [
            "Fine-Grained Labeling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.18998v1_figure_1.png",
        "paperid": "2409.18998v1",
        "paper_path": "./papers/2409.18998v1.json",
        "figure_id": "2409.18998v1_figure_1.png",
        "caption": "Figure 1: End-to-end depiction of the set-reasoning guided patient-trial matching.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Sparse Upcycling support modular integration of pretrained weights in the MoE Module?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "In this work, we propose to incorporate MoE training into any existing dense LLM checkpoints via the Sparse Upcycling technique (Komatsuzaki et al., 2022), which duplicates the original model to create experts and continue training them on a downstream dataset as a normal MoE.",
            "Importantly, we follow Li et al. (2024b) to only upcycle the MLP connector and the visual encoder since upcycling a dense LLM is found to be worse than just using an MoE LLM. Moreover, we highlight that the dense training stage is unrelated to MoE, and thus the checkpoints can be re-used to train different MoE algorithms."
        ],
        "final_answer": "Sparse Upcycling makes the MoE module fully modular by taking any pretrained dense checkpoint (e.g., the MLP connector and visual encoder), cloning it to form multiple experts, and then plugging these pretrained experts directly into the MoE layer (with its router, balancing losses, etc.). This lets the MoE Module reuse off-the-shelf pretrained weights without costly pretraining or architecture changes, simply extending a dense model into a sparse Mixture-of-Experts.",
        "relevant_elements": [
            "Sparse Upcycling",
            "MoE Module"
        ],
        "id": 233,
        "masked_question": "How does [mask1] support modular integration of pretrained weights in the MoE Module?",
        "masked_number": 1,
        "masked_elements": [
            "Sparse Upcycling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.00918v1_figure_1.png",
        "paperid": "2411.00918v1",
        "paper_path": "./papers/2411.00918v1.json",
        "figure_id": "2411.00918v1_figure_1.png",
        "caption": "Figure 1: The detailed design of LiBMoE, which comprises three major modules. First, the MoE module implements various MoE algorithms. Second, the training modules handles the training process and supports various configurations. Lastly, the evaluation module supports almost 100 zero-shot benchmarks and a wide-range of metrics.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does the Dense Training Module support upcycling into the MoE Training Module for efficient MoE training?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "In this work, we propose to incorporate MoE training into any existing dense LLM checkpoints via the Sparse Upcycling technique (Komatsuzaki et al., 2022), which duplicates the original model to create experts and continue training them on a downstream dataset as a normal MoE. Consequently, we can bypass the expensive pre-training step and evaluate MoE algorithms with the most advanced public LLMs.",
            "Importantly, we follow Li et al. (2024b) to only upcycle the MLP connector and the visual encoder since upcycling a dense LLM is found to be worse than just using an MoE LLM. Moreover, we highlight that the dense training stage is unrelated to MoE, and thus the checkpoints can be re-used to train different MoE algorithms.",
            "Second, the training module optimization processes for all three training stages, which supports loading state-of-the-art LLMs, handling custom datasets, hyper-parameter configurations, the sparse upcycling algorithms, and the main training loop."
        ],
        "final_answer": "The Dense Training Module first produces a fully trained ‘dense’ checkpoint (by pre-training the model and then fine-tuning the MLP connector to link the visual encoder and LLM). This dense checkpoint is then passed to the MoE Training Module via LibMoE’s built-in sparse upcycling pipeline, which duplicates the checkpoint across multiple experts and continues training them as a sparse MoE. By reusing the dense checkpoint and only upcycling the connector and encoder, the framework avoids costly full pre-training runs and enables efficient MoE training on downstream data.",
        "relevant_elements": [
            "Dense Training Module",
            "MoE Training Module"
        ],
        "id": 234,
        "masked_question": "How does the [mask1] support upcycling into the [mask2] for efficient MoE training?",
        "masked_number": 2,
        "masked_elements": [
            "Dense Training Module",
            "MoE Training Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.00918v1_figure_1.png",
        "paperid": "2411.00918v1",
        "paper_path": "./papers/2411.00918v1.json",
        "figure_id": "2411.00918v1_figure_1.png",
        "caption": "Figure 1: The detailed design of LiBMoE, which comprises three major modules. First, the MoE module implements various MoE algorithms. Second, the training modules handles the training process and supports various configurations. Lastly, the evaluation module supports almost 100 zero-shot benchmarks and a wide-range of metrics.",
        "qtype": "Experimental_Results",
        "response": "The Dense Training Module (mask1) supports efficient MoE training by performing an initial \"dense training\" stage on a Vision Language Model. This stage initializes components like the MLP connector and trains it to connect the pre-trained visual encoder to the pre-trained LLM.\n\nThe key to efficiency comes from the fact that the output of this dense training (a \"Pre"
    },
    {
        "question": "What ethical considerations emerge from Sparse Upcycling of a Pre-trained Vision-Language Model?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Sparse Upcycling",
            "Pre-trained Vision-Language Model"
        ],
        "id": 235,
        "masked_question": "What ethical considerations emerge from [mask1] of a Pre-trained Vision-Language Model?",
        "masked_number": 1,
        "masked_elements": [
            "Sparse Upcycling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.00918v1_figure_1.png",
        "paperid": "2411.00918v1",
        "paper_path": "./papers/2411.00918v1.json",
        "figure_id": "2411.00918v1_figure_1.png",
        "caption": "Figure 1: The detailed design of LiBMoE, which comprises three major modules. First, the MoE module implements various MoE algorithms. Second, the training modules handles the training process and supports various configurations. Lastly, the evaluation module supports almost 100 zero-shot benchmarks and a wide-range of metrics.",
        "qtype": "Others",
        "response": "The provided text describes what sparse upcycling is and its technical benefits, primarily focusing on reducing computational costs and democratizing access to training large Mixture-of-Experts (MoE) models. It highlights that sparse upcycling allows researchers to \"skip the expensive costs of training from scratch\" and \"bypass the expensive pre-training step,\" making these models \"affordable to a wide-range of researchers.\"\n\nHowever, the text **does not discuss any ethical considerations** related to sparse upcycling itself or the use of pre-trained vision-language models in this context. It focuses strictly on the efficiency and accessibility improvements.\n\nTherefore, the question is unanswerable based on the provided context."
    },
    {
        "question": "What limitations might Hybrid Loss face balancing linguistic, classification, and robustness objectives in aligned LLMs?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Hybrid Loss",
            "Aligned LLMs"
        ],
        "id": 237,
        "masked_question": "What limitations might [mask1] face balancing linguistic, classification, and robustness objectives in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Hybrid Loss",
            "Aligned LLMs"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.08661v1_figure_1.png",
        "paperid": "2408.08661v1",
        "paper_path": "./papers/2408.08661v1.json",
        "figure_id": "2408.08661v1_figure_1.png",
        "caption": "Figure 1: The overall framework of MIA-Tuner and the two pipelines designed for aligned and unaligned LLMs, resprectively.",
        "qtype": "Others",
        "response": "The [mask1], which represents the \"Goal of Hybrid Loss\" for fine-tuning aligned LLMs, aims to balance three objectives: linguistic capability, classification accuracy, and robustness of output answers.\n\nThe context states: \"We curate a hybrid loss that is composed of three parts to address the aforementioned requirements: where the components , , and correspond to the loss of the linguistics, classification, and robustness parts, respectively"
    },
    {
        "question": "What motivates distinct pipeline designs for aligned and unaligned LLMs?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "Subsequently, considering the different intentions of aligned and unaligned LLMs, we design two distinct pipelines for fine-tuning aligned and unaligned LLMs, respectively.",
            "For aligned LLMs, which are already aligned with human feedback, we fully explore this characteristic to fine-tune LLMs to become pre-training text detection assistants. We use instruction fine-tuning to align LLMs with our intention of directly answering “Yes” or “No” [to whether a pending text belongs to their pre-training set].",
            "Unlike aligned LLM, unaligned LLM cannot directly answer the pre-training text detection question. Therefore, following existing research, we use the loss as a metric to discriminate member texts and fine-tune LLM to amplify the obscured differences in this distribution."
        ],
        "final_answer": "The pipelines differ because aligned LLMs—being instruction-tuned—can be prompted to directly answer yes/no membership queries, whereas unaligned LLMs lack that capability and must rely on loss-based detection metrics, motivating two separate fine-tuning strategies.",
        "relevant_elements": [
            "Aligned LLMs",
            "Unaligned LLMs"
        ],
        "id": 239,
        "masked_question": "What motivates distinct pipeline designs for [mask1] and [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Aligned LLMs",
            "Unaligned LLMs"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.08661v1_figure_1.png",
        "paperid": "2408.08661v1",
        "paper_path": "./papers/2408.08661v1.json",
        "figure_id": "2408.08661v1_figure_1.png",
        "caption": "Figure 1: The overall framework of MIA-Tuner and the two pipelines designed for aligned and unaligned LLMs, resprectively.",
        "qtype": "Design_Rationale",
        "response": "The distinct pipeline designs for aligned LLMs (A. Aligned LLMs, highlighted in red) and unaligned LLMs (B. Unaligned LLMs, highlighted in blue) are motivated by their inherent characteristics and capabilities:\n\n1.  **For Aligned LLMs (A. Aligned LLMs):** The text states, \"For aligned LLMs, which are already aligned with human feedback, we fully explore this characteristic to fine-tune LLMs to become pre-training text detection assistants. We use instruction fine-tuning to align LLMs with our intention of directly answering 'Yes' or 'No' the given pending text belongs to the pre-training set.\" This means aligned LLMs can be directly prompted"
    },
    {
        "question": "What motivates including classification loss and robustness loss components in the hybrid loss?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "Specifically, we designed a new hybrid loss from three dimensions to ensure that aligned large language models can assist users in identifying pre-training set texts through dialogue: 1) Linguistics: LLM should resist basic linguistic capability to answer user questions. 2) Classification: LLM should be proficient in distinguishing between member and non-member texts. 3) Robustness: LLM should ensure the validity of output answers.",
            "We further adopt the cross-entropy loss as the classification part of the hybrid loss. Particularly, we first renormalize the probability that the victim aligned LLM answers “Yes” or “No”, then measure the negative log-likelihood of the victim LLM performs a correct answer.",
            "Furthermore, we assign a penalty value to illegal tokens other than “Yes” or “No” as part of the robustness of the hybrid loss: where  refers to all illegal answer tokens."
        ],
        "final_answer": "The classification loss is included so that the LLM becomes proficient at distinguishing member texts (those seen during pre-training) from non-member texts. The robustness loss is included to ensure that the model’s outputs remain valid—penalizing any illegal tokens other than the permitted answers “Yes” or “No.”",
        "relevant_elements": [
            "Hybrid Loss",
            "Classification Loss",
            "Robustness Loss"
        ],
        "id": 240,
        "masked_question": "What motivates including [mask1] and [mask2] components in the hybrid loss?",
        "masked_number": 2,
        "masked_elements": [
            "Classification Loss",
            "Robustness Loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.08661v1_figure_1.png",
        "paperid": "2408.08661v1",
        "paper_path": "./papers/2408.08661v1.json",
        "figure_id": "2408.08661v1_figure_1.png",
        "caption": "Figure 1: The overall framework of MIA-Tuner and the two pipelines designed for aligned and unaligned LLMs, resprectively.",
        "qtype": "Design_Rationale",
        "response": "*   **Step 1: Identify [mask1] and [mask2] in the image.**\n    *   [mask1] (red box) refers to \"Classification Loss: L = - log(p_theta(label))\".\n    *   [mask2] (blue box) refers to \"Robustness Loss: L = - log(1 - p_theta(others))\".\n\n*   **Step 2: Locate the relevant section in the text.**\n    *   The section \"Hybrid Loss for Aligned LLMs\" directly discusses the components of the hybrid loss.\n\n*   **Step 3: Find the motivation for the Classification Loss ([mask1]).**\n    *   The text states under \"Hybrid Loss for Aligned LLMs\": \"Specifically, we designed a new hybrid loss from three dimensions to ensure that aligned large language models can assist users in identifying pre-training set texts through dialogue: ... 2) Classification: LLM should be proficient in distinguishing between member and non-member texts.\"\n    *   It further states: \"where the components , , and correspond to the loss of the linguistics, classification, and robustness parts, respectively.\" This confirms that \"Classification\" refers to the classification loss.\n    *   Therefore, the motivation for the classification component is that \"LLM should be proficient in distinguishing between member and non-member texts.\"\n\n*   **Step 4: Find the motivation for the Robustness Loss ([mask2]).**\n    *   The text states under \"Hybrid Loss for Aligned LLMs\": \"... 3) Robustness: LLM should ensure the validity of output answers.\"\n    *   This directly links the \"Robustness\" part of the loss to the goal of \"LLM should ensure the validity of output answers.\"\n    *   Therefore, the motivation for the robustness component is that \"LLM should ensure the validity of output answers.\"\n\n**Answer:**\nThe motivation for including the **Classification Loss** ([mask1]) component in the hybrid loss is to ensure that the \"LLM should be proficient in distinguishing between member and non-member texts\". The motivation for including the **Robustness Loss** ([mask2]) component is to ensure that the \"LLM should ensure the validity of output answers\"."
    },
    {
        "question": "What motivates placing Deduplication before Transformation in the raw code pipeline?",
        "relevant_section_ids": [
            "2.1.1"
        ],
        "relevant_context": [
            "The purpose of deduplication is to construct an unbiased and diverse training set while significantly reducing the data volume.",
            "Owing to the extremely high repetition of the source code in Github, we prioritize the deduplication process early in the pipeline and adopt an aggressive file-level deduplication strategy."
        ],
        "final_answer": "Because GitHub hosts an extremely high volume of duplicate code, deduplication is performed early to remove redundant files, reduce dataset size, and ensure an unbiased, diverse training set before applying transformations.",
        "relevant_elements": [
            "Deduplication",
            "Transformation"
        ],
        "id": 241,
        "masked_question": "What motivates placing [mask1] before Transformation in the raw code pipeline?",
        "masked_number": 1,
        "masked_elements": [
            "Deduplication"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.04905v2_figure_2.png",
        "paperid": "2411.04905v2",
        "paper_path": "./papers/2411.04905v2.json",
        "figure_id": "2411.04905v2_figure_2.png",
        "caption": "Figure 2: The illustration of our pretraining data processing workflow.",
        "qtype": "Design_Rationale",
        "response": "The motivation for placing **Deduplication** before Transformation in the raw code pipeline is primarily for **efficiency and resource optimization**.\n\nThe text states:\n1.  \"The purpose of deduplication is to construct an unbiased and diverse training set while **significantly reducing the data volume**.\"\n2.  \"Owing to the **extremely high repetition of the source code in Github**, we prioritize the deduplication process early in the pipeline and adopt an aggressive file-level deduplication strategy...\"\n3.  \"Due to the prevalence of forking and copy-pasting within the codebase, **nearly 75% of files are completely duplicated**.\"\n\nBy performing deduplication first, the pipeline eliminates a vast amount of redundant data (up to 75% of files are duplicates) before applying subsequent processing steps, including Transformation. This ensures that the computationally intensive transformation operations (like Copyright Removal and PII Reduction, which involve identifying and modifying specific patterns) are applied only to the unique and necessary files, thus saving significant computational resources and time."
    },
    {
        "question": "What drives using FastText Model Training prior to Recall From Common Crawl?",
        "relevant_section_ids": [
            "2.1.2"
        ],
        "relevant_context": [
            "As shown in Figure 2, the processing pipeline of code-related web data comprises four main components: 1) FastText Model Training: To maintain a controllable vocabulary size in fastText and enable tokenization of Chinese texts using spaces, we first apply the BPE tokenizer to segment the corpus. Subsequently, the open-source FastText framework is utilized for model training.",
            "2) Recall From Common Crawl: We perform recall on Common Crawl to generate the code-related web corpus."
        ],
        "final_answer": "FastText Model Training is used first to build a classifier with a manageable (controllable) vocabulary size and to support tokenization of Chinese text via space‐separated BPE tokens. Once trained, this classifier is then applied to recall relevant code‐related content from the Common Crawl.",
        "relevant_elements": [
            "FastText Model Training",
            "Recall From Common Crawl"
        ],
        "id": 242,
        "masked_question": "What drives using [mask1] prior to [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "FastText Model Training",
            "Recall From Common Crawl"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.04905v2_figure_2.png",
        "paperid": "2411.04905v2",
        "paper_path": "./papers/2411.04905v2.json",
        "figure_id": "2411.04905v2_figure_2.png",
        "caption": "Figure 2: The illustration of our pretraining data processing workflow.",
        "qtype": "Design_Rationale",
        "response": "To answer the question, let's break down the process as described in the text and shown in the diagram:\n\n1.  **Identify [mask1] and [mask2]:**\n    *   [mask1] (red box) is \"FastText Model Training\".\n    *   [mask2] (blue box) is \"Recall From Common Crawl\".\n\n2.  **Locate relevant information in the text:**\n    The section \"2.1.2 Code-Related Web Data\" describes this pipeline.\n    *   It states: \"we first annotate 500,000 high-quality code-like data from"
    },
    {
        "question": "How does Deduplication determine file retention to balance volume reduction and data diversity?",
        "relevant_section_ids": [
            "2.1",
            "2.1.1"
        ],
        "relevant_context": [
            "The purpose of deduplication is to construct an unbiased and diverse training set while significantly reducing the data volume.",
            "Exact Deduplication: … We compute the SHA256 hash value for each document, where files with identical hash values are compared, and only the code files with the highest star count as well as the latest commit time are retained.",
            "Fuzzy Deduplication: … we split the raw text into 5-gram pieces, and then calculate the 2048 MinHash functions. Additionally, we utilize LSH … to retain only those distinct files with the highest stars and latest commit time."
        ],
        "final_answer": "Deduplication first groups identical files by computing SHA256 hashes (exact deduplication) and then groups near-identical files using 5-gram MinHash with LSH (fuzzy deduplication). Within each identical or near-identical group, it retains only the file with the highest GitHub star count and most recent commit time, thereby cutting duplicate volume while preserving diverse, high-quality code examples.",
        "relevant_elements": [
            "Deduplication"
        ],
        "id": 243,
        "masked_question": "How does [mask1] determine file retention to balance volume reduction and data diversity?",
        "masked_number": 1,
        "masked_elements": [
            "Deduplication"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.04905v2_figure_2.png",
        "paperid": "2411.04905v2",
        "paper_path": "./papers/2411.04905v2.json",
        "figure_id": "2411.04905v2_figure_2.png",
        "caption": "Figure 2: The illustration of our pretraining data processing workflow.",
        "qtype": "Implementation_Details",
        "response": "The deduplication process balances volume reduction and data diversity by:\n\n1.  **Reducing Volume:** Eliminating documents containing identical or near-identical code content through both exact and fuzzy deduplication methods. This aggressively removes redundant files, which comprise a significant portion (nearly 75% for exact duplicates).\n2.  **Maintaining Diversity and Quality (File Retention Criteria):** For both exact and fuzzy duplicates, when multiple copies or near-copies are identified, **only the code files with the highest star count and the latest commit time are retained**. This strategy prioritizes retaining the most popular, active, and likely highest-quality version of the code, thus ensuring that the diverse content (unique concepts, distinct files) is represented by its \"best\" instance, contributing to an unbiased and diverse training set."
    },
    {
        "question": "How does FastText Model Training calibrate classifier thresholds to optimize recall from Common Crawl?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "FastText Model Training",
            "Recall From Common Crawl"
        ],
        "id": 244,
        "masked_question": "How does [mask1] calibrate classifier thresholds to optimize recall from [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "FastText Model Training",
            "Recall From Common Crawl"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.04905v2_figure_2.png",
        "paperid": "2411.04905v2",
        "paper_path": "./papers/2411.04905v2.json",
        "figure_id": "2411.04905v2_figure_2.png",
        "caption": "Figure 2: The illustration of our pretraining data processing workflow.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does CKA process Z_A^fθ and Z_A^fϕ to yield each entry in s(A,Θ,Φ)?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "We compute the similarity between two models fθ and fφ for a dataset by applying CKA [14, 42] to their vector representations Z_A^fθ and Z_A^fφ.",
            "CKA computes the similarity based on the normalized Hilbert–Schmidt Independence Criterion [28], applied to the kernel matrices of both representations.",
            "Using CKA with a linear kernel focuses on global similarity structure, while an RBF kernel with small σ measures local similarity structure [42, 2]."
        ],
        "final_answer": "Each entry in s(A, Θ, Φ) is obtained by taking the two representation matrices Z_A^fθ and Z_A^fφ, forming their kernel matrices (here with a linear kernel), computing the Hilbert–Schmidt Independence Criterion between these kernels, and then normalizing by the product of their norms. This normalized HSIC value is the CKA similarity score that populates s(A, Θ, Φ) for the model pair (fθ, fφ).",
        "relevant_elements": [
            "CKA",
            "Z_A^fθ",
            "Z_A^fϕ"
        ],
        "id": 245,
        "masked_question": "How does [mask1] process Z_A^fθ and Z_A^fϕ to yield each entry in s(A,Θ,Φ)?",
        "masked_number": 1,
        "masked_elements": [
            "CKA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.05561v1_figure_1.png",
        "paperid": "2411.05561v1",
        "paper_path": "./papers/2411.05561v1.json",
        "figure_id": "2411.05561v1_figure_1.png",
        "caption": "Figure 1: Pairwise similarity analysis framework. Let 𝑨𝑨{\\bm{A}}bold_italic_A and 𝑩𝑩{\\bm{B}}bold_italic_B be two sets of stimuli and ΘΘ\\Thetaroman_Θ and ΦΦ\\Phiroman_Φ be two sets of models. For each dataset, we extract representations from all functions within the two model sets. Subsequently, for each pair of models (fθ,fϕ)subscript𝑓𝜃subscript𝑓italic-ϕ(f_{\\theta},f_{\\phi})( italic_f start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT , italic_f start_POSTSUBSCRIPT italic_ϕ end_POSTSUBSCRIPT ), where fθ∈Θsubscript𝑓𝜃Θf_{\\theta}\\in\\Thetaitalic_f start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT ∈ roman_Θ and fϕ∈Φsubscript𝑓italic-ϕΦf_{\\phi}\\in\\Phiitalic_f start_POSTSUBSCRIPT italic_ϕ end_POSTSUBSCRIPT ∈ roman_Φ, we compute the CKA similarities between their representations, yielding a similarity vector 𝒔(𝑨,Θ,Φ)subscript𝒔𝑨ΘΦ{\\bm{s}}_{\\left({\\bm{A}},\\Theta,\\Phi\\right)}bold_italic_s start_POSTSUBSCRIPT ( bold_italic_A , roman_Θ , roman_Φ ) end_POSTSUBSCRIPT. This vector can be displayed as a matrix, where each entry represents the similarity between two models for a single dataset. In the scatter plot, we contrast two such vectors computed on the same models but evaluated on different datasets. The Pearson correlation coefficient ρ𝜌\\rhoitalic_ρ between the similarities quantifies the consistency of similarities across the two datasets. The distribution of ρ𝜌\\rhoitalic_ρ across all dataset pairs indicates the stability of (relative) representational similarities across stimuli.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] refers to CKA (Canonical Correlation Analysis, or Centered Kernel Alignment as used in this context).\n\nHere's how CKA processes `Z_A^fθ` and `Z_A^fϕ` to yield each entry in `s(A,Θ,Φ)`:\n\n1.  **Input:** CKA takes the matrix of stacked vector representations `Z_A^fθ` (from model `fθ` in set Θ on dataset A) and `Z_A^fϕ` (from model `fϕ` in set Φ on dataset A).\n2.  **Kernel Matrices:** It computes kernel matrices from both representations. The text specifies that a linear kernel is typically used unless otherwise mentioned.\n3.  **Similarity Calculation:** CKA then computes the similarity between these two kernel matrices based on the normalized Hilbert-Schmidt Independence Criterion.\n\nThe resulting single similarity value is one entry in the `s(A,Θ,Φ)` matrix, representing the similarity between the specific model `fθ` and `fϕ` for dataset A."
    },
    {
        "question": "How is Pearson correlation ρ computed across s(A,Θ,Φ) and s(B,Θ,Φ)?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "To quantify the consistency of similarities between two datasets A and B, we use the Pearson correlation coefficient between the similarity vectors s(A,Θ,Φ) and s(B,Θ,Φ), i.e., ρ(s(A,Θ,Φ), s(B,Θ,Φ)).",
            "The Pearson correlation measures the degree to which the similarity trends between models are preserved across datasets, focusing on the relative positioning of model pairs rather than the absolute similarity values."
        ],
        "final_answer": "ρ is computed as the Pearson correlation coefficient between the two similarity vectors s(A,Θ,Φ) and s(B,Θ,Φ).",
        "relevant_elements": [
            "ρ",
            "s(A,Θ,Φ)",
            "s(B,Θ,Φ)"
        ],
        "id": 246,
        "masked_question": "How is Pearson correlation [mask1] computed across [mask2] and s(B,Θ,Φ)?",
        "masked_number": 2,
        "masked_elements": [
            "ρ",
            "s(A,Θ,Φ)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.05561v1_figure_1.png",
        "paperid": "2411.05561v1",
        "paper_path": "./papers/2411.05561v1.json",
        "figure_id": "2411.05561v1_figure_1.png",
        "caption": "Figure 1: Pairwise similarity analysis framework. Let 𝑨𝑨{\\bm{A}}bold_italic_A and 𝑩𝑩{\\bm{B}}bold_italic_B be two sets of stimuli and ΘΘ\\Thetaroman_Θ and ΦΦ\\Phiroman_Φ be two sets of models. For each dataset, we extract representations from all functions within the two model sets. Subsequently, for each pair of models (fθ,fϕ)subscript𝑓𝜃subscript𝑓italic-ϕ(f_{\\theta},f_{\\phi})( italic_f start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT , italic_f start_POSTSUBSCRIPT italic_ϕ end_POSTSUBSCRIPT ), where fθ∈Θsubscript𝑓𝜃Θf_{\\theta}\\in\\Thetaitalic_f start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT ∈ roman_Θ and fϕ∈Φsubscript𝑓italic-ϕΦf_{\\phi}\\in\\Phiitalic_f start_POSTSUBSCRIPT italic_ϕ end_POSTSUBSCRIPT ∈ roman_Φ, we compute the CKA similarities between their representations, yielding a similarity vector 𝒔(𝑨,Θ,Φ)subscript𝒔𝑨ΘΦ{\\bm{s}}_{\\left({\\bm{A}},\\Theta,\\Phi\\right)}bold_italic_s start_POSTSUBSCRIPT ( bold_italic_A , roman_Θ , roman_Φ ) end_POSTSUBSCRIPT. This vector can be displayed as a matrix, where each entry represents the similarity between two models for a single dataset. In the scatter plot, we contrast two such vectors computed on the same models but evaluated on different datasets. The Pearson correlation coefficient ρ𝜌\\rhoitalic_ρ between the similarities quantifies the consistency of similarities across the two datasets. The distribution of ρ𝜌\\rhoitalic_ρ across all dataset pairs indicates the stability of (relative) representational similarities across stimuli.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does CKA kernel choice influence Pearson correlation of s(A,Θ,Φ) across dataset pairs?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "Using CKA with a linear kernel focuses on global similarity structure, while an RBF kernel with small σ measures local similarity structure [42, 2].",
            "We compared their behavior (shown in Fig. 3 and in Appx. E) and observed similar trends for both kernels. Therefore, we use CKA with a linear kernel for the remainder of this paper if not mentioned otherwise."
        ],
        "final_answer": "The choice of CKA kernel (linear versus RBF) does not materially affect the Pearson correlation of s(A,Θ,Φ) across dataset pairs: both kernels yield very similar correlation trends.",
        "relevant_elements": [
            "CKA",
            "Pearson correlation",
            "s(A,Θ,Φ)"
        ],
        "id": 247,
        "masked_question": "How does [mask1] kernel choice influence Pearson correlation of s(A,Θ,Φ) across dataset pairs?",
        "masked_number": 1,
        "masked_elements": [
            "CKA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.05561v1_figure_1.png",
        "paperid": "2411.05561v1",
        "paper_path": "./papers/2411.05561v1.json",
        "figure_id": "2411.05561v1_figure_1.png",
        "caption": "Figure 1: Pairwise similarity analysis framework. Let 𝑨𝑨{\\bm{A}}bold_italic_A and 𝑩𝑩{\\bm{B}}bold_italic_B be two sets of stimuli and ΘΘ\\Thetaroman_Θ and ΦΦ\\Phiroman_Φ be two sets of models. For each dataset, we extract representations from all functions within the two model sets. Subsequently, for each pair of models (fθ,fϕ)subscript𝑓𝜃subscript𝑓italic-ϕ(f_{\\theta},f_{\\phi})( italic_f start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT , italic_f start_POSTSUBSCRIPT italic_ϕ end_POSTSUBSCRIPT ), where fθ∈Θsubscript𝑓𝜃Θf_{\\theta}\\in\\Thetaitalic_f start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT ∈ roman_Θ and fϕ∈Φsubscript𝑓italic-ϕΦf_{\\phi}\\in\\Phiitalic_f start_POSTSUBSCRIPT italic_ϕ end_POSTSUBSCRIPT ∈ roman_Φ, we compute the CKA similarities between their representations, yielding a similarity vector 𝒔(𝑨,Θ,Φ)subscript𝒔𝑨ΘΦ{\\bm{s}}_{\\left({\\bm{A}},\\Theta,\\Phi\\right)}bold_italic_s start_POSTSUBSCRIPT ( bold_italic_A , roman_Θ , roman_Φ ) end_POSTSUBSCRIPT. This vector can be displayed as a matrix, where each entry represents the similarity between two models for a single dataset. In the scatter plot, we contrast two such vectors computed on the same models but evaluated on different datasets. The Pearson correlation coefficient ρ𝜌\\rhoitalic_ρ between the similarities quantifies the consistency of similarities across the two datasets. The distribution of ρ𝜌\\rhoitalic_ρ across all dataset pairs indicates the stability of (relative) representational similarities across stimuli.",
        "qtype": "Literature_Background",
        "response": "The context states: \"Using CKA with a linear kernel focuses on global similarity structure, while an RBF kernel with small $\\sigma$ measures local similarity structure [42, 2]. We compared their behavior (shown in Fig. 3 and in Appx. E) and observed similar trends for both kernels. Therefore, we use CKA with a linear kernel for the remainder of this paper if not mentioned otherwise.\"\n\nThis indicates that while different CKA kernels (linear vs. RBF with small $\\sigma$) capture different aspects of similarity (global vs. local), their \"behavior\" and \"trends\" were observed to be similar. Since the Pearson correlation of `s(A,Θ,Φ)` across dataset pairs quantifies the consistency of these similarity trends, the finding that both kernels exhibit \"similar trends\" implies that the choice of kernel did not significantly alter the measured consistency. Consequently, the paper predominantly uses the linear kernel.\n\nTherefore, the kernel choice, specifically comparing a linear kernel to an RBF kernel with small $\\sigma$, was observed to yield **similar trends** in the calculated CKA similarities, which in turn suggests a similar influence on the Pearson correlation of `s(A,Θ,Φ)` across dataset pairs. The authors found that both kernels effectively preserve the relative ordering of model similarities across datasets, thus leading to similar consistency measurements."
    },
    {
        "question": "How does partitioning models into Θ and Φ affect Pearson correlation-based similarity consistency measurement?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "Specifically, we scrutinize how the pairwise similarities of models from two model sets, Θ and Φ, correspond between two datasets, D_A and D_B. By computing the pairwise representational similarities between all model pairs fθ, fφ, separately for each dataset, where fθ ∈ Θ and fφ ∈ Φ, we obtain a similarity vector s_(A,Θ,Φ) ∈ R^{|Θ|⋅|Φ|}.",
            "To quantify the consistency of similarities between two datasets D_A and D_B, we use the Pearson correlation coefficient between the similarity vectors s_(A,Θ,Φ) and s_(B,Θ,Φ), i.e., ρ(s_(A,Θ,Φ), s_(B,Θ,Φ))."
        ],
        "final_answer": "Partitioning the models into two sets Θ and Φ means that only the pairwise similarities between models in Θ and models in Φ are collected into a single similarity vector for each dataset. The Pearson correlation is then computed between these two vectors—one for each dataset—so the consistency measurement specifically reflects how well the ordering of cross-set (Θ vs. Φ) similarities is preserved across datasets.",
        "relevant_elements": [
            "Θ",
            "Φ",
            "Pearson correlation"
        ],
        "id": 248,
        "masked_question": "How does partitioning models into [mask1] and [mask2] affect Pearson correlation-based similarity consistency measurement?",
        "masked_number": 2,
        "masked_elements": [
            "Θ",
            "Φ"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.05561v1_figure_1.png",
        "paperid": "2411.05561v1",
        "paper_path": "./papers/2411.05561v1.json",
        "figure_id": "2411.05561v1_figure_1.png",
        "caption": "Figure 1: Pairwise similarity analysis framework. Let 𝑨𝑨{\\bm{A}}bold_italic_A and 𝑩𝑩{\\bm{B}}bold_italic_B be two sets of stimuli and ΘΘ\\Thetaroman_Θ and ΦΦ\\Phiroman_Φ be two sets of models. For each dataset, we extract representations from all functions within the two model sets. Subsequently, for each pair of models (fθ,fϕ)subscript𝑓𝜃subscript𝑓italic-ϕ(f_{\\theta},f_{\\phi})( italic_f start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT , italic_f start_POSTSUBSCRIPT italic_ϕ end_POSTSUBSCRIPT ), where fθ∈Θsubscript𝑓𝜃Θf_{\\theta}\\in\\Thetaitalic_f start_POSTSUBSCRIPT italic_θ end_POSTSUBSCRIPT ∈ roman_Θ and fϕ∈Φsubscript𝑓italic-ϕΦf_{\\phi}\\in\\Phiitalic_f start_POSTSUBSCRIPT italic_ϕ end_POSTSUBSCRIPT ∈ roman_Φ, we compute the CKA similarities between their representations, yielding a similarity vector 𝒔(𝑨,Θ,Φ)subscript𝒔𝑨ΘΦ{\\bm{s}}_{\\left({\\bm{A}},\\Theta,\\Phi\\right)}bold_italic_s start_POSTSUBSCRIPT ( bold_italic_A , roman_Θ , roman_Φ ) end_POSTSUBSCRIPT. This vector can be displayed as a matrix, where each entry represents the similarity between two models for a single dataset. In the scatter plot, we contrast two such vectors computed on the same models but evaluated on different datasets. The Pearson correlation coefficient ρ𝜌\\rhoitalic_ρ between the similarities quantifies the consistency of similarities across the two datasets. The distribution of ρ𝜌\\rhoitalic_ρ across all dataset pairs indicates the stability of (relative) representational similarities across stimuli.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does fine-tuning the control encoder while freezing text and image encoders reflect ControlNet’s zero convolution technique?",
        "relevant_section_ids": [
            "2",
            "3.1"
        ],
        "relevant_context": [
            "ControlNet (Zhang et al., 2023a) integrates image-based conditions by incorporating an additional encoder copy into frozen T2I diffusion models via zero convolutions.",
            "We fix the weight of the off-the-shelf image encoder and the text encoder, while finetuning the control encoder."
        ],
        "final_answer": "By freezing the original text and image encoders and only fine-tuning the control encoder, the method mirrors ControlNet’s zero convolution approach: the pre-trained backbone remains untouched while a new, zero-initialized conditional branch (here, the control encoder) is added and trained to inject control signals.",
        "relevant_elements": [
            "Control Encoder",
            "Text Encoder",
            "Image Encoder"
        ],
        "id": 249,
        "masked_question": "How does fine-tuning the [mask1] while freezing [mask2] and image encoders reflect ControlNet’s zero convolution technique?",
        "masked_number": 2,
        "masked_elements": [
            "Control Encoder",
            "Text Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.11236v1_figure_2.png",
        "paperid": "2410.11236v1",
        "paper_path": "./papers/2410.11236v1.json",
        "figure_id": "2410.11236v1_figure_2.png",
        "caption": "Figure 2: \nA brief overview of our pipeline. Here, we take the segmentation mask as a conditional generation example. (a) Conditional Generation. Given text, source image x0subscript𝑥0x_{0}italic_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT, and the conditional control c𝑐citalic_c, we extract feature z0subscript𝑧0z_{0}italic_z start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT, ftsubscript𝑓𝑡f_{t}italic_f start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT, fcsubscript𝑓𝑐f_{c}italic_f start_POSTSUBSCRIPT italic_c end_POSTSUBSCRIPT, respectively. Then, we fine-tune the Diffusion model to generate two intermediate features for the image decoder.\n(b) Uncertainty Learning. Given the two features, we decode the two images, i.e., x^01superscriptsubscript^𝑥01\\hat{x}_{0}^{1}over^ start_ARG italic_x end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT and x^02superscriptsubscript^𝑥02\\hat{x}_{0}^{2}over^ start_ARG italic_x end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT. Then we apply the reward model to obtain the two layout predictions c^1subscript^𝑐1\\hat{c}_{1}over^ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT and c^2subscript^𝑐2\\hat{c}_{2}over^ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT.\nWe leverage the prediction discrepancy as the uncertainty indicator to rectify the original reward loss.",
        "qtype": "Literature_Background",
        "response": "The image shows the **Control Encoder** (masked in red) being fine-tuned, while the **Text Encoder** and **Image Encoder** (masked in blue) are frozen.\n\nHere's how this setup reflects ControlNet's zero convolution technique, according to the provided context:\n\n1.  **Freezing Pre-trained Model Components:** The text states, \"We fix the weight of the off-the-shelf image encoder and the text encoder...\" This directly mirrors ControlNet's core idea of keeping the main pre-trained text-to-image (T2I) diffusion model (represented by the frozen Text and Image Encoders, which are part of the larger diffusion model) fixed.\n2.  **Introducing a New Trainable Control"
    },
    {
        "question": "How does two-stage reward model evaluation on decoder outputs parallel ensemble uncertainty estimation methods?",
        "relevant_section_ids": [
            "2",
            "3.1"
        ],
        "relevant_context": [
            "ensemble methods (Lakshminarayanan et al., 2017; Malinin et al., 2019; Wenzel et al., 2020) combine various deterministic models in the prediction process to improve prediction accuracy, but is constrained by the computational burden associated with operating multiple independent networks and the requisite diversity across ensemble models.",
            "In particular, we conduct two generation forward with identical condition c but different t1 and t2, and resampled Gaussian noise ε1 and ε2.",
            "We explicitly leverage the reward variance between these two generations as an uncertainty indicator.",
            "Therefore, instead of directly regressing uncertainty, we perform predictions twice to estimate the prediction variance, which serves as a cognitive uncertainty indicator for the reward model. Additionally, this method has the side benefit of not introducing the extra training parameters."
        ],
        "final_answer": "By running two independent decoder passes with the same conditioning (but different noise levels), extracting rewards from each, and measuring the variance between them, Ctrl-U mimics an ensemble: multiple ‘models’ (here, two stochastic decodes) produce reward predictions and their spread serves as an uncertainty estimate. This parallels classical ensemble uncertainty methods, which use the variance across multiple deterministic models to quantify predictive uncertainty, but without needing extra networks or parameters.",
        "relevant_elements": [
            "Image Decoder",
            "Reward Model"
        ],
        "id": 250,
        "masked_question": "How does two-stage [mask1] evaluation on [mask2] outputs parallel ensemble uncertainty estimation methods?",
        "masked_number": 2,
        "masked_elements": [
            "Reward Model",
            "Image Decoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.11236v1_figure_2.png",
        "paperid": "2410.11236v1",
        "paper_path": "./papers/2410.11236v1.json",
        "figure_id": "2410.11236v1_figure_2.png",
        "caption": "Figure 2: \nA brief overview of our pipeline. Here, we take the segmentation mask as a conditional generation example. (a) Conditional Generation. Given text, source image x0subscript𝑥0x_{0}italic_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT, and the conditional control c𝑐citalic_c, we extract feature z0subscript𝑧0z_{0}italic_z start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT, ftsubscript𝑓𝑡f_{t}italic_f start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT, fcsubscript𝑓𝑐f_{c}italic_f start_POSTSUBSCRIPT italic_c end_POSTSUBSCRIPT, respectively. Then, we fine-tune the Diffusion model to generate two intermediate features for the image decoder.\n(b) Uncertainty Learning. Given the two features, we decode the two images, i.e., x^01superscriptsubscript^𝑥01\\hat{x}_{0}^{1}over^ start_ARG italic_x end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT and x^02superscriptsubscript^𝑥02\\hat{x}_{0}^{2}over^ start_ARG italic_x end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT. Then we apply the reward model to obtain the two layout predictions c^1subscript^𝑐1\\hat{c}_{1}over^ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT and c^2subscript^𝑐2\\hat{c}_{2}over^ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT.\nWe leverage the prediction discrepancy as the uncertainty indicator to rectify the original reward loss.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does using two Add Noise injections affect Uncertainty Learning precision in reward adjustment?",
        "relevant_section_ids": [
            "3.1",
            "4.3"
        ],
        "relevant_context": [
            "In particular, we conduct two generation forwards with identical condition c but different t₁ and t₂, and resampled Gaussian noise ε₁ and ε₂.",
            "To estimate inaccurate rewards, we explicitly leverage two diffusion forwards for the identical input conditions. We compare the reward discrepancy between extracted conditions ĉ₁ and ĉ₂ from generated images, which can be considered as a reward indicator at the current timestep.",
            "Discussion. 1). Why not use an auxiliary network to directly regress uncertainty? ... Instead of directly regressing uncertainty, we perform predictions twice to estimate the prediction variance, which serves as a cognitive uncertainty indicator for the reward model.",
            "Design of Uncertainty Estimation. We present an ablation study on the design of the two-time generation in Table 5(b). To mitigate the adverse effects of inaccurate rewards, we forward the identical input condition twice with different noise timesteps to estimate uncertainty.",
            "A short interval, such as Δt=1, where the only randomness stems from resampled noise ε, limits the diversity of the generated images. ... the reward discrepancy is small, and could not serve as an uncertainty indicator. Conversely, a long interval indicates a significant gap between the two noisy latents, which, in turn, increase the generation discrepancy. Too large discrepancy also impacts the accurate uncertainty estimation, and thus compromises reward modeling. When Δt=10, the model achieves the optimal FID and relatively strong mIoU and CLIP‐score."
        ],
        "final_answer": "Injecting noise twice with different timesteps and resampled Gaussian signals enables the model to directly estimate its own prediction variance—i.e. its uncertainty—by measuring how much the two generated outputs disagree.  That variance is then used to modulate the consistency loss: large disagreement (high uncertainty) down‐weights the reward term, while small disagreement leaves it unaffected.  Ablations (§4.3) further show that choosing an appropriate timestep gap is critical: too small a gap yields images too similar to detect uncertainty, too large a gap yields excessive variance that harms estimation, with an intermediate Δt (e.g. 10) giving the best trade‐off of controllability and image quality.",
        "relevant_elements": [
            "Add Noise",
            "Uncertainty Learning"
        ],
        "id": 251,
        "masked_question": "How does using two [mask1] injections affect [mask2] precision in reward adjustment?",
        "masked_number": 2,
        "masked_elements": [
            "Add Noise",
            "Uncertainty Learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.11236v1_figure_2.png",
        "paperid": "2410.11236v1",
        "paper_path": "./papers/2410.11236v1.json",
        "figure_id": "2410.11236v1_figure_2.png",
        "caption": "Figure 2: \nA brief overview of our pipeline. Here, we take the segmentation mask as a conditional generation example. (a) Conditional Generation. Given text, source image x0subscript𝑥0x_{0}italic_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT, and the conditional control c𝑐citalic_c, we extract feature z0subscript𝑧0z_{0}italic_z start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT, ftsubscript𝑓𝑡f_{t}italic_f start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT, fcsubscript𝑓𝑐f_{c}italic_f start_POSTSUBSCRIPT italic_c end_POSTSUBSCRIPT, respectively. Then, we fine-tune the Diffusion model to generate two intermediate features for the image decoder.\n(b) Uncertainty Learning. Given the two features, we decode the two images, i.e., x^01superscriptsubscript^𝑥01\\hat{x}_{0}^{1}over^ start_ARG italic_x end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT and x^02superscriptsubscript^𝑥02\\hat{x}_{0}^{2}over^ start_ARG italic_x end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT. Then we apply the reward model to obtain the two layout predictions c^1subscript^𝑐1\\hat{c}_{1}over^ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT and c^2subscript^𝑐2\\hat{c}_{2}over^ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT.\nWe leverage the prediction discrepancy as the uncertainty indicator to rectify the original reward loss.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does control encoder fine-tuning impact feature fusion within the diffusion module for conditional generation?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "We fix the weight of the off-the-shelf image encoder and the text encoder, while finetuning the control encoder.",
            "Following the ControlNet pipeline (Zhang et al., 2023b), we further fuse text condition f_t and image condition f_c to predict the added noise."
        ],
        "final_answer": "By fine-tuning only the control encoder (while keeping the image and text encoders frozen), the model learns control-specific feature representations (f_c) that are better aligned for fusion with the text features (f_t). This adapted control feature is then merged with the text feature within the diffusion module to more accurately predict and remove noise, thereby strengthening conditional guidance during image generation.",
        "relevant_elements": [
            "Control Encoder",
            "Diffusion"
        ],
        "id": 252,
        "masked_question": "How does [mask1] fine-tuning impact feature fusion within the diffusion module for conditional generation?",
        "masked_number": 1,
        "masked_elements": [
            "Control Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.11236v1_figure_2.png",
        "paperid": "2410.11236v1",
        "paper_path": "./papers/2410.11236v1.json",
        "figure_id": "2410.11236v1_figure_2.png",
        "caption": "Figure 2: \nA brief overview of our pipeline. Here, we take the segmentation mask as a conditional generation example. (a) Conditional Generation. Given text, source image x0subscript𝑥0x_{0}italic_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT, and the conditional control c𝑐citalic_c, we extract feature z0subscript𝑧0z_{0}italic_z start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT, ftsubscript𝑓𝑡f_{t}italic_f start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT, fcsubscript𝑓𝑐f_{c}italic_f start_POSTSUBSCRIPT italic_c end_POSTSUBSCRIPT, respectively. Then, we fine-tune the Diffusion model to generate two intermediate features for the image decoder.\n(b) Uncertainty Learning. Given the two features, we decode the two images, i.e., x^01superscriptsubscript^𝑥01\\hat{x}_{0}^{1}over^ start_ARG italic_x end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 1 end_POSTSUPERSCRIPT and x^02superscriptsubscript^𝑥02\\hat{x}_{0}^{2}over^ start_ARG italic_x end_ARG start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT. Then we apply the reward model to obtain the two layout predictions c^1subscript^𝑐1\\hat{c}_{1}over^ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 1 end_POSTSUBSCRIPT and c^2subscript^𝑐2\\hat{c}_{2}over^ start_ARG italic_c end_ARG start_POSTSUBSCRIPT 2 end_POSTSUBSCRIPT.\nWe leverage the prediction discrepancy as the uncertainty indicator to rectify the original reward loss.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does sharing visual encoding via MoV unify multi-resolution image features with prompt representations?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "In particular, the images and corresponding visual prompts share a visual encoding mechanism for feature sharing, enabling the visual encoders to better understand and associate the relationship between images and visual prompts.",
            "To refine the robust multi-scale visual features, the input images are downsampled to different resolutions denoted as R_i and then respectively fed into the MoV module to encode. Leveraging the strengths of various visual backbones, visual perception is enhanced and key details in images are refined. Subsequently, the encoded visual features are transformed to the same dimension and concatenated channel-wisely to obtain the integrated multi-scale feature maps represented as F.",
            "Notably, a key step to the encoder-sharing mechanism is the “Visual Prompt as Images”. Especially, the dimension (H×W×1) of the visual prompts is processed to the same dimension (H×W×3) with the images. Then, the transformed visual prompts P also can be fed into MoV together with the images, the encoded visual prompts expressed as P′."
        ],
        "final_answer": "EarthMarker treats both the downsampled multi-resolution images and the visual prompts as image inputs to the same Mixture of Visual Experts (MoV) encoder. By resizing all inputs to a common dimension, MoV encodes the various resolutions of the image and the prompt markings jointly. Their feature maps are then projected to the same channel size and concatenated channel-wise, producing an integrated representation that unifies multi-scale image details with prompt embeddings.",
        "relevant_elements": [
            "Sharing Visual Encoding",
            "Mixture of Visual Experts (MoV)"
        ],
        "id": 253,
        "masked_question": "How does [mask1] via MoV unify multi-resolution image features with prompt representations?",
        "masked_number": 1,
        "masked_elements": [
            "Sharing Visual Encoding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.13596v2_figure_2.png",
        "paperid": "2407.13596v2",
        "paper_path": "./papers/2407.13596v2.json",
        "figure_id": "2407.13596v2_figure_2.png",
        "caption": "Figure 2: Left: Overall model architecture of the proposed EarthMarker. Right: Cross-domain Phased Training method.",
        "qtype": "Experimental_Results",
        "response": "The Mixture of Visual Experts (MoV) unifies multi-resolution image features with prompt representations through a sharing visual encoding mechanism.\n\nHere's a breakdown of how it achieves this:\n\n1.  **Multi-resolution Image Features:**\n    *   Input images are first downsampled to various resolutions.\n    *   Each of these multi-resolution images is then fed into the MoV module for encoding.\n    *   The encoded visual features from different resolutions are subsequently transformed to a consistent dimension and concatenated channel-wisely to form integrated multi-scale feature maps.\n\n2.  **Prompt Representations (\"Visual Prompt as Images\"):**\n    *   Visual prompts (such as bounding boxes and points) are processed to match the dimension of the images.\n    *   These transformed visual prompts are then fed into the MoV *alongside the images*.\n    *   By sharing the same visual encoding mechanism (MoV) for both multi-resolution images and dimension-matched visual prompts, the MoV can encode them together, enabling the visual encoders to better understand and associate the relationship between the images and their corresponding visual prompts."
    },
    {
        "question": "How does disjoint parameter LoRA tuning preserve cross-domain knowledge during RS visual prompting phase?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Furthermore, the disjoint parameters strategy is proposed, namely, the updated parameters of each stage are different. This strategy is conducive to the step-by-step solid understanding of images, and naturally solves the interference between image-text understanding, visual prompting comprehension, and fine-grained instruction-following.",
            "RS Visual Prompting Tuning. The last stage focuses on accurately following user instructions and achieving complex region-level and point-level visual reasoning tasks. The MoV, alignment projection, and LLM are fixed. The LoRA method is adopted for tuning.",
            "It should be emphasized that during the whole training, our updatable parameters are disjoint, preventing interference between understanding images at different granularity and the capability to follow visual prompts."
        ],
        "final_answer": "By using a disjoint‐parameter strategy in the RS visual prompting stage, EarthMarker freezes its previously trained modules (MoV encoder, alignment projection layer, and the core LLM weights) and only updates separate low‐rank LoRA adapter matrices. Since LoRA tuning modifies only these adapter parameters—and leaves all earlier weights untouched—it avoids overwriting the cross‐domain image‐text alignment and spatial perception capabilities learned in the prior training phases.",
        "relevant_elements": [
            "LoRA",
            "Disjoint Parameters"
        ],
        "id": 254,
        "masked_question": "How does disjoint parameter [mask1] tuning preserve cross-domain knowledge during RS visual prompting phase?",
        "masked_number": 1,
        "masked_elements": [
            "LoRA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.13596v2_figure_2.png",
        "paperid": "2407.13596v2",
        "paper_path": "./papers/2407.13596v2.json",
        "figure_id": "2407.13596v2_figure_2.png",
        "caption": "Figure 2: Left: Overall model architecture of the proposed EarthMarker. Right: Cross-domain Phased Training method.",
        "qtype": "Experimental_Results",
        "response": "In the RS visual prompting phase (Phase 3), the disjoint parameter tuning, specifically involving the \"LLM + LoRA\" mechanism, preserves cross-domain knowledge by:\n\n1.  **Freezing Core Components:** The Mixture of Visual Experts (MoV), the alignment projection layer, and the main parameters of the Large Language Model (LLM) are kept frozen. These components are responsible for the fundamental image-level understanding from multi-domain image-text alignment (Phase 1) and spatial perception tuning (Phase 2), which involved both natural (COCO, RefCOCO/RefCOCO+) and RS (RSVP-3M image-level) datasets. By freezing these components, the cross-domain knowledge acquired in the earlier phases is retained and not altered.\n\n2.  **Task-Specific Adaptation with LoRA:** Only new, lightweight LoRA (Low-Rank Adaptation) parameters are inserted into the Transformer layers of the LLM and are updated. LoRA enables efficient fine-tuning for specific tasks (region-level and point"
    },
    {
        "question": "What limitations might arise from sharing visual encoding when merging multi-resolution images and visual prompts?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "sharing visual encoding",
            "multi-resolution"
        ],
        "id": 255,
        "masked_question": "What limitations might arise from [mask1] when merging multi-resolution images and visual prompts?",
        "masked_number": 1,
        "masked_elements": [
            "sharing visual encoding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.13596v2_figure_2.png",
        "paperid": "2407.13596v2",
        "paper_path": "./papers/2407.13596v2.json",
        "figure_id": "2407.13596v2_figure_2.png",
        "caption": "Figure 2: Left: Overall model architecture of the proposed EarthMarker. Right: Cross-domain Phased Training method.",
        "qtype": "Others",
        "response": "The provided context does not explicitly state any limitations arising from the Mixture of Visual Experts (MoV) [mask1] when merging multi-resolution images and visual prompts. Instead, it highlights the benefits of this mechanism, such as \"consistent feature extraction and understanding the relationship between visual"
    },
    {
        "question": "What are the trade-offs of replacing the Feature extractor with a transformer-based alternative in BEV projection?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Feature extractor",
            "BEV Projection"
        ],
        "id": 257,
        "masked_question": "What are the trade-offs of replacing the [mask1] with a transformer-based alternative in BEV projection?",
        "masked_number": 1,
        "masked_elements": [
            "Feature extractor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.06851v1_figure_2.png",
        "paperid": "2411.06851v1",
        "paper_path": "./papers/2411.06851v1.json",
        "figure_id": "2411.06851v1_figure_2.png",
        "caption": "Figure 2: Diagram of the proposed architecture. First, the features of all the images are extracted for the whole input sequence. Each set of features of each instant is projected to the BEV using the information generated in the depth channels. For the past frames, it is necessary to apply a transformation that translates them to a unified system in the present frame. The generated BEV feature map is applied to two branches that generate the backward flow and segmentation values.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations arise from repeatedly applying ego warping and flow warp for long input sequences?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Ego warping",
            "Flow warp"
        ],
        "id": 258,
        "masked_question": "What limitations arise from repeatedly applying [mask1] and [mask2] for long input sequences?",
        "masked_number": 2,
        "masked_elements": [
            "Ego warping",
            "Flow warp"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.06851v1_figure_2.png",
        "paperid": "2411.06851v1",
        "paper_path": "./papers/2411.06851v1.json",
        "figure_id": "2411.06851v1_figure_2.png",
        "caption": "Figure 2: Diagram of the proposed architecture. First, the features of all the images are extracted for the whole input sequence. Each set of features of each instant is projected to the BEV using the information generated in the depth channels. For the past frames, it is necessary to apply a transformation that translates them to a unified system in the present frame. The generated BEV feature map is applied to two branches that generate the backward flow and segmentation values.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates using shared-weight Feature extractor and BEV Projection for unified multi-camera BEV representation?",
        "relevant_section_ids": [
            "1",
            "3.1"
        ],
        "relevant_context": [
            "Usually, these end-to-end systems have relatively high processing times and number of parameters, which can be a challenge if they have to be deployed in a real vehicle.",
            "With this problem as the main focus, we propose a multi-camera BEV instance prediction architecture that uses the simplified paradigm presented in [6] and efficient attention modules specialized in dense tasks. The proposed architecture aims for fewer parameters and inference time than other SOTA architectures.",
            "All of the images are processed by a single EfficientNet-B4 [25] simultaneously, obtaining a feature map for each of them, in which there are C_d channels dedicated to depth information and C_f to the features of the environment itself.",
            "Each of the extracted features with C_f channels is transformed into a BEV representation using an outer product with the information of the depth channels D generated by EfficientNet, obtaining a unified map in BEV M with the features of all cameras for each instant."
        ],
        "final_answer": "By sharing the weights of a single EfficientNet-B4 across all cameras, the model greatly reduces its total parameter count and inference time—critical for on-vehicle deployment—while the BEV projection step (“Lift, Splat, Shoot”) fuses each camera’s features into one consistent bird’s-eye view. This unified BEV map preserves depth and spatial information from every camera stream, simplifying downstream instance segmentation and flow prediction.",
        "relevant_elements": [
            "Feature extractor",
            "BEV Projection"
        ],
        "id": 259,
        "masked_question": "What motivates using shared-weight [mask1] and [mask2] for unified multi-camera BEV representation?",
        "masked_number": 2,
        "masked_elements": [
            "Feature extractor",
            "BEV Projection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.06851v1_figure_2.png",
        "paperid": "2411.06851v1",
        "paper_path": "./papers/2411.06851v1.json",
        "figure_id": "2411.06851v1_figure_2.png",
        "caption": "Figure 2: Diagram of the proposed architecture. First, the features of all the images are extracted for the whole input sequence. Each set of features of each instant is projected to the BEV using the information generated in the depth channels. For the past frames, it is necessary to apply a transformation that translates them to a unified system in the present frame. The generated BEV feature map is applied to two branches that generate the backward flow and segmentation values.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "Why adopt parallel SegFormer segmentation and flow branches instead of sequential decoders?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Once we have managed to unify all the information from the cameras in a feature map, two parallel branches are incorporated to process all the spatio-temporal information, generating the segmentation and flow values.",
            "Our proposed model seeks to alleviate the computational impact introduced by the two branches, therefore we decide to implement an architecture based on SegFormer [24] that efficiently uses attention to process the multi-scale features."
        ],
        "final_answer": "They use two parallel SegFormer‐based branches—one for segmentation and one for flow—so that both tasks can be computed simultaneously rather than in sequence. By replacing two costly U-Net decoders with efficient attention modules from SegFormer, the model reduces its computational burden and number of parameters while still capturing rich multi-scale features for both segmentation and flow.",
        "relevant_elements": [
            "SegFormer",
            "segmentation branch",
            "flow branch"
        ],
        "id": 260,
        "masked_question": "Why adopt parallel [mask1] segmentation and flow branches instead of sequential decoders?",
        "masked_number": 1,
        "masked_elements": [
            "SegFormer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.06851v1_figure_2.png",
        "paperid": "2411.06851v1",
        "paper_path": "./papers/2411.06851v1.json",
        "figure_id": "2411.06851v1_figure_2.png",
        "caption": "Figure 2: Diagram of the proposed architecture. First, the features of all the images are extracted for the whole input sequence. Each set of features of each instant is projected to the BEV using the information generated in the depth channels. For the past frames, it is necessary to apply a transformation that translates them to a unified system in the present frame. The generated BEV feature map is applied to two branches that generate the backward flow and segmentation values.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to the SegFormer-based parallel segmentation and flow branches (segmentation branch leading to the purple output, and flow branch leading to \"Flow warp\" and `t_0-1` instance).\n\nAccording to the \"III-B Segmentation and flow branches\" section:\n\"The proposed architecture in [6] uses a U-Net based module in each branch... Our proposed model seeks to alleviate the computational impact introduced by the two branches, therefore we decide to implement an architecture based on SegFormer [24] that efficiently uses attention to process the multi-scale features.\"\n\nTherefore, the parallel SegFormer-based segmentation and flow branches are adopted instead of sequential decoders (or a U-Net based module approach mentioned as an alternative) to **alleviate the computational impact** by efficiently processing multi-scale features using attention."
    },
    {
        "question": "What benefits justify using Omni-Lens-Field to represent PSF Library for Controllable DoF Imaging across multiple lenses?",
        "relevant_section_ids": [
            "1",
            "3.3"
        ],
        "relevant_context": [
            "To address the huge storage space consumption of the original 4D PSF Library (PSFLib), we introduce the storage-efficient Omni-Lens-Field model to accurately characterize the 4D PSFLib for various known lens parameters while occupying low storage consumption.",
            "However, ray tracing is computationally expensive, especially when frequently adjusting the object distance.",
            "Furthermore, the calculated PSFLib requires large storage space.",
            "To address these challenges, we train the Omni-Lens-Field model to represent the 4D PSFLib for a variety of lenses."
        ],
        "final_answer": "Using Omni-Lens-Field avoids the repeated, expensive ray tracing required for each lens and dramatically reduces the storage footprint of the 4D PSF library by learning a single, compact model that can generate PSFs for multiple lenses.",
        "relevant_elements": [
            "Omni-Lens-Field",
            "Controllable DoF Imaging"
        ],
        "id": 262,
        "masked_question": "What benefits justify using [mask1] to represent PSF Library for Controllable DoF Imaging across multiple lenses?",
        "masked_number": 1,
        "masked_elements": [
            "Omni-Lens-Field"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.09754v1_figure_2.png",
        "paperid": "2409.09754v1",
        "paper_path": "./papers/2409.09754v1.json",
        "figure_id": "2409.09754v1_figure_2.png",
        "caption": "Figure 2: Overview of the proposed Depth-aware Controllable DoF Imaging (DCDI) framework. (a) We simulate the Depth-aware Aberration MOS (DAMOS) dataset. The Depth-aware 4D PSFLib is constructed by performing multiple ray tracing simulations, varying the position of the object plane from near to far. (b) The MDE model predicts scene depth map. (c) The latent AiF image is recovered by jointly combining synthetic data, predicted depth map, and depth-aware network architecture. (d) Controllable DoF imaging of multiple lenses is achieved through predicted depth maps, restored AiF images, and depth-aware PSF maps predicted by Omni-Lens-Field.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does Depth-aware Image Simulation select PSFs from the Depth-aware 4D PSF Library for each image patch?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "Different from [38, 59], which neglect the imaging scene depth in the simulation process, we take the scene depth into account in our pipeline.",
            "The depth-aware aberration image is approximately generated by\n$where \\ast$ denotes the convolution operation, $I$ and $I^*$ denote ground truth and aberration image respectively, $\\mathrm{search}$ denotes the searching function that queries the PSFLib and outputs the corresponding PSF of every patch with different scene depths. The depth value of each patch is the average depth value for all pixels within that patch."
        ],
        "final_answer": "For each patch, we first compute its average depth from the ground-truth depth map, then use a ‘search’ function to look up and retrieve the PSF in the Depth-aware 4D PSF Library corresponding to that patch’s average depth, and finally convolve the patch with this depth-matched PSF.",
        "relevant_elements": [
            "Depth-aware Image Simulation",
            "Depth-aware 4D PSF Library"
        ],
        "id": 263,
        "masked_question": "How does [mask1] select PSFs from the [mask2] for each image patch?",
        "masked_number": 2,
        "masked_elements": [
            "Depth-aware Image Simulation",
            "Depth-aware 4D PSF Library"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.09754v1_figure_2.png",
        "paperid": "2409.09754v1",
        "paper_path": "./papers/2409.09754v1.json",
        "figure_id": "2409.09754v1_figure_2.png",
        "caption": "Figure 2: Overview of the proposed Depth-aware Controllable DoF Imaging (DCDI) framework. (a) We simulate the Depth-aware Aberration MOS (DAMOS) dataset. The Depth-aware 4D PSFLib is constructed by performing multiple ray tracing simulations, varying the position of the object plane from near to far. (b) The MDE model predicts scene depth map. (c) The latent AiF image is recovered by jointly combining synthetic data, predicted depth map, and depth-aware network architecture. (d) Controllable DoF imaging of multiple lenses is achieved through predicted depth maps, restored AiF images, and depth-aware PSF maps predicted by Omni-Lens-Field.",
        "qtype": "Implementation_Details",
        "response": "The red box [mask1] points to \"Depth-aware Image Simulation\".\nThe blue box [mask2] points to \"Depth-aware 4D PSF Library\".\n\nBased on the \"III-A Depth-aware Image Dataset Construction\" section, under \"Depth-aware Image Simulation\":\n\"The depth-aware aberration image is approximately generated by\nwhere ... denotes the searching function that queries the PSFLib [mask2] and outputs the corresponding PSF of every patch with different scene depths. The depth value of each patch is the average depth value for all pixels within that patch.\"\n\nTherefore, the \"Depth-aware Image Simulation\" [mask1] selects PSFs from the \"Depth-aware 4D PSFLib\" [mask2] as follows:\n1. The image is divided into patches.\n2. For each patch, the average depth value of all pixels within that patch is calculated.\n3. This average depth value is then used to query the Depth-aware 4D PSFLib [mask2] to find and output the corresponding PSF for that specific patch."
    },
    {
        "question": "How does Omni-Lens-Field map lens parameters and depth map to generate the depth-aware PSF map?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Different from [65, 66], where a network is used to characterize a specific lens, we employ the Omni-Lens-Field model to represent the 4D PSFLib of multiple lenses. As illustrated in Fig. 4, we train the network T to fit the PSFs of multiple imaging lenses, by minimizing the discrepancy between the estimated PSF and the ray-traced PSF. Following [66], L2 Loss is applied during the fitting process, formulated as:\n\n    L_{PSF} = ||T(lens\\_id, x, y, z) - PSF_{raytraced}||_2^2\n\n    where lens_id denotes the lens ID, and x, y, z are the normalized patch coordinates and scene depth.",
            "To fit the mapping of the four-parameter input into an RGB PSF, the Omni-Lens-Field adopts an MLP network. It consists of one input layer with 4 channels, n hidden layers, and three independent output layers, each predicting one of the R, G, B PSF channels.",
            "The depth-aware PSF map of any lens can be predicted by Omni-Lens-Field according to the corresponding depth map and can be expressed as follows:\n\n    PSF_map = T(lens\\_id, x, y, depth_map)"
        ],
        "final_answer": "Omni-Lens-Field is a small MLP that takes as input four values—lens identifier, normalized patch position (x, y), and scene depth—and outputs the corresponding RGB point-spread function. At inference time, for each patch in the image it looks up its (x,y) location and depth from the estimated depth map, feeds these plus the chosen lens ID into the network, and collects the predicted PSFs into a full depth-aware PSF map.",
        "relevant_elements": [
            "Omni-Lens-Field",
            "PSF map"
        ],
        "id": 264,
        "masked_question": "How does [mask1] map lens parameters and depth map to generate the depth-aware PSF map?",
        "masked_number": 1,
        "masked_elements": [
            "Omni-Lens-Field"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.09754v1_figure_2.png",
        "paperid": "2409.09754v1",
        "paper_path": "./papers/2409.09754v1.json",
        "figure_id": "2409.09754v1_figure_2.png",
        "caption": "Figure 2: Overview of the proposed Depth-aware Controllable DoF Imaging (DCDI) framework. (a) We simulate the Depth-aware Aberration MOS (DAMOS) dataset. The Depth-aware 4D PSFLib is constructed by performing multiple ray tracing simulations, varying the position of the object plane from near to far. (b) The MDE model predicts scene depth map. (c) The latent AiF image is recovered by jointly combining synthetic data, predicted depth map, and depth-aware network architecture. (d) Controllable DoF imaging of multiple lenses is achieved through predicted depth maps, restored AiF images, and depth-aware PSF maps predicted by Omni-Lens-Field.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the acquisition function utilize the multi-task Gaussian process covariance to select hyperparameter queries?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Multi-task Bayesian optimization leverages the commonality between tasks to facilitate time-saving learning [7, 8]. The expensive-to-evaluate function is represented by a cheap multi-task Gaussian surrogate model updated by feeding new observations. To lighten the burden of acquiring new observations, the inter-task dependence guides selection of promising points. This dependence is learned by a positive semi-definite covariance matrix over tasks. It sped up the search for hyperparameters.",
            "Then the predictive mean and covariance of the new point x on the t task can be inferred as …",
            "To find the minimum value of f, it is usually to maximize an acquisition function α to determine the next query point x. We use the expected improvement (EI) criterion, let ŷ be the currently observed minimum, I(x,t)=max(ŷ–f(x,t),0). Since f(x,t) follows Gaussian distribution, the expectation can be computed analytically as follows … We can choose the next query point by optimizing the acquisition function corresponding to all tasks {x*,t*}=argmax EI(x,t)."
        ],
        "final_answer": "The acquisition function (expected improvement) uses the posterior predictive mean and variance provided by the multi-task Gaussian process—which encodes inter-task similarity via a positive semi-definite task covariance matrix—to compute, for each candidate hyperparameter and task, the expected reduction below the current best loss. It then selects the next hyperparameter (and task) to evaluate by maximizing this expected improvement across all tasks.",
        "relevant_elements": [
            "acquisition function",
            "Multi-task Gaussian process"
        ],
        "id": 265,
        "masked_question": "How does the [mask1] utilize the multi-task Gaussian process covariance to select hyperparameter queries?",
        "masked_number": 1,
        "masked_elements": [
            "acquisition function"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.06184v1_figure_1.png",
        "paperid": "2411.06184v1",
        "paper_path": "./papers/2411.06184v1.json",
        "figure_id": "2411.06184v1_figure_1.png",
        "caption": "Figure 1: Workflow of the proposed MTBO based SVMs hyperparameter-tuning method on pulmonary nodule classification. The collected whole body CT scans are first preprocessed to delineate the pulmonary nodules. Then, the segmented nodules are discretized via multiple strategies. After that, for the result of each discretization strategy, various types of features are extracted as the input to a specific SVM. Finally, a multi-task Gaussian process is established through the correlation between tasks, the query point is selected by maximizing the acquisition function, and the optimal hyperparameters are determined by iterative query.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] box, which describes selecting the next query (hyperparameters of the selected SVM) by maximizing the acquisition function, utilizes the multi-task Gaussian process covariance in the following way:\n\n1.  **Modeling Inter-Task Dependence:** The multi-task Gaussian process establishes a surrogate model for the performance of multiple SVMs (each corresponding to a different image discretization strategy, which are treated as related tasks). A key component of this model is a positive semi-definite covariance matrix (denoted as K_B in the context's equations). This matrix explicitly learns and quantifies the \"relationship between tasks\" (i.e., how the performance of one SVM/discretization strategy correlates with others).\n\n2.  **Guiding Query Selection:** The context states that \"the inter-task dependence guides selection of promising points"
    },
    {
        "question": "How does the radiomic features extraction module integrate GLCM and GLRLM metrics into unified input vectors?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Radiomic Features Extraction",
            "GLCM",
            "GLRLM"
        ],
        "id": 266,
        "masked_question": "How does the [mask1] module integrate GLCM and GLRLM metrics into unified input vectors?",
        "masked_number": 1,
        "masked_elements": [
            "Radiomic Features Extraction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.06184v1_figure_1.png",
        "paperid": "2411.06184v1",
        "paper_path": "./papers/2411.06184v1.json",
        "figure_id": "2411.06184v1_figure_1.png",
        "caption": "Figure 1: Workflow of the proposed MTBO based SVMs hyperparameter-tuning method on pulmonary nodule classification. The collected whole body CT scans are first preprocessed to delineate the pulmonary nodules. Then, the segmented nodules are discretized via multiple strategies. After that, for the result of each discretization strategy, various types of features are extracted as the input to a specific SVM. Finally, a multi-task Gaussian process is established through the correlation between tasks, the query point is selected by maximizing the acquisition function, and the optimal hyperparameters are determined by iterative query.",
        "qtype": "Implementation_Details",
        "response": "The module labeled \"3. Radiomic Features Extraction\" integrates GLCM (Gray-"
    },
    {
        "question": "How does U-net segmentation integrate with active contour refinement compared to previous segmentation pipelines?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Trained U-net",
            "active contour refinement"
        ],
        "id": 267,
        "masked_question": "How does [mask1] segmentation integrate with active contour refinement compared to previous segmentation pipelines?",
        "masked_number": 1,
        "masked_elements": [
            "Trained U-net"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.06184v1_figure_1.png",
        "paperid": "2411.06184v1",
        "paper_path": "./papers/2411.06184v1.json",
        "figure_id": "2411.06184v1_figure_1.png",
        "caption": "Figure 1: Workflow of the proposed MTBO based SVMs hyperparameter-tuning method on pulmonary nodule classification. The collected whole body CT scans are first preprocessed to delineate the pulmonary nodules. Then, the segmented nodules are discretized via multiple strategies. After that, for the result of each discretization strategy, various types of features are extracted as the input to a specific SVM. Finally, a multi-task Gaussian process is established through the correlation between tasks, the query point is selected by maximizing the acquisition function, and the optimal hyperparameters are determined by iterative query.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How do multiple discretization strategies affect surrogate modeling in multi-task Bayesian optimization versus single-task?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "In this study, we designed multiple discretization strategies, that is, different combinations on θ = (nBins, qRange, qRef). We chose three bin numbers (16, 32, and 64) and three quantization ranges (min-max, mean ± 2SD, and mean ± 3SD). Nine discretization strategies were generated in total. Instead of evaluating one by one, we adopted the multi-task Bayesian optimization to evaluate them simultaneously to save computational costs.",
            "Multi-task Bayesian optimization leverages the commonality between tasks to facilitate time-saving learning. The expensive-to-evaluate function is represented by a cheap multi-task Gaussian surrogate model updated by feeding new observations. To lighten the burden of acquiring new observations, the inter-task dependence guides selection of promising points. This dependence is learned by a positive semi-definite covariance matrix over tasks."
        ],
        "final_answer": "When one generates multiple discretization strategies, each strategy creates a related but distinct evaluation task. Under single-task Bayesian optimization, each strategy (task) would require its own Gaussian-process surrogate and separate optimization. In contrast, multi-task Bayesian optimization builds a single joint (multi-task) Gaussian-process surrogate that includes a covariance matrix capturing inter-task similarities. By sharing information across the nine discretization-strategy tasks via that covariance, the multi-task surrogate converges faster and avoids redundant searches compared to running nine independent (single-task) surrogates.",
        "relevant_elements": [
            "Multiple Image Discretization Strategies",
            "Multi-task Bayesian Optimization Based Hyperparameter Search for SVMs"
        ],
        "id": 268,
        "masked_question": "How do [mask1] affect surrogate modeling in [mask2] versus single-task?",
        "masked_number": 2,
        "masked_elements": [
            "Multiple Image Discretization Strategies",
            "Multi-task Bayesian Optimization Based Hyperparameter Search for SVMs"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.06184v1_figure_1.png",
        "paperid": "2411.06184v1",
        "paper_path": "./papers/2411.06184v1.json",
        "figure_id": "2411.06184v1_figure_1.png",
        "caption": "Figure 1: Workflow of the proposed MTBO based SVMs hyperparameter-tuning method on pulmonary nodule classification. The collected whole body CT scans are first preprocessed to delineate the pulmonary nodules. Then, the segmented nodules are discretized via multiple strategies. After that, for the result of each discretization strategy, various types of features are extracted as the input to a specific SVM. Finally, a multi-task Gaussian process is established through the correlation between tasks, the query point is selected by maximizing the acquisition function, and the optimal hyperparameters are determined by iterative query.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Pooling complement Concept Heatmap extraction compared to standard activation mapping?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "As average pooling performs better in downstream medical classification tasks yan2023robust, we apply average pooling to the heatmaps to deduce the connection between the image and concepts: s = avgpool(h) ∈ R. Intuitively, s is the refined similarity score between the image and concept c. Thus, a concept vector c can be obtained, representing the similarity between an image input x and a set of concepts."
        ],
        "final_answer": "Instead of leaving the concept heatmap as a purely spatial activation map, Med-MICN applies average pooling over each heatmap to collapse the pixel-wise similarity scores into a single “concept score.” This pooling step produces a compact, refined similarity measure for each concept—directly comparable across images and amenable to thresholding for pseudo-labeling—whereas a standard activation map on its own only highlights regions of interest without yielding a concise, globally comparable concept presence score.",
        "relevant_elements": [
            "Pooling",
            "Concept Heatmap"
        ],
        "id": 269,
        "masked_question": "How does [mask1] complement [mask2] extraction compared to standard activation mapping?",
        "masked_number": 2,
        "masked_elements": [
            "Pooling",
            "Concept Heatmap"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.21494v1_figure_1.png",
        "paperid": "2410.21494v1",
        "paper_path": "./papers/2410.21494v1.json",
        "figure_id": "2410.21494v1_figure_1.png",
        "caption": "Figure 1: (a) module, output rich dimensional interpretable conceptual information for the specified disease through the multimodal model and convert the conceptual information into text vectors through the text embedding module; (b) module, access the image to the image embedder to get the image features, and then match with the conceptual textual information to get the relevant attention region. Then, we get the influence score of the relevant region information through pooling, and finally send it to the filter to sieve out the concept information with weak relevance to get the disease concept of image information.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Text Encoder refine GPT-4V outputs compared to prior concept embedding pipelines?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "GPT-4V",
            "Text Encoder"
        ],
        "id": 270,
        "masked_question": "How does [mask1] refine [mask2] outputs compared to prior concept embedding pipelines?",
        "masked_number": 2,
        "masked_elements": [
            "Text Encoder",
            "GPT-4V"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.21494v1_figure_1.png",
        "paperid": "2410.21494v1",
        "paper_path": "./papers/2410.21494v1.json",
        "figure_id": "2410.21494v1_figure_1.png",
        "caption": "Figure 1: (a) module, output rich dimensional interpretable conceptual information for the specified disease through the multimodal model and convert the conceptual information into text vectors through the text embedding module; (b) module, access the image to the image embedder to get the image features, and then match with the conceptual textual information to get the relevant attention region. Then, we get the influence score of the relevant region information through pooling, and finally send it to the filter to sieve out the concept information with weak relevance to get the disease concept of image information.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does average pooling influence the concept score vector’s capacity to distinguish relevant disease concepts?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "As average pooling performs better in downstream medical classification tasks yan2023robust, we apply average pooling to the heatmaps to deduce the connection between the image and concepts: s_i = pool(M_i).",
            "Intuitively, s_i is the refined similarity score between the image and concept C_i. Thus, a concept vector s can be obtained, representing the similarity between an image input x and a set of concepts C: s = {s_i}_{i=1}^k."
        ],
        "final_answer": "By applying average pooling over each concept’s similarity heatmap, Med-MICN collapses spatially distributed evidence into a single, refined similarity score per concept. This pooling operation smooths out local noise and captures the overall strength of association between the image and each disease concept—thereby yielding a concept score vector whose entries more cleanly and distinctly reflect which concepts are genuinely relevant.",
        "relevant_elements": [
            "Pooling",
            "Concept Score Vector"
        ],
        "id": 271,
        "masked_question": "How does average [mask1] influence the concept score vector’s capacity to distinguish relevant disease concepts?",
        "masked_number": 1,
        "masked_elements": [
            "Pooling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.21494v1_figure_1.png",
        "paperid": "2410.21494v1",
        "paper_path": "./papers/2410.21494v1.json",
        "figure_id": "2410.21494v1_figure_1.png",
        "caption": "Figure 1: (a) module, output rich dimensional interpretable conceptual information for the specified disease through the multimodal model and convert the conceptual information into text vectors through the text embedding module; (b) module, access the image to the image embedder to get the image features, and then match with the conceptual textual information to get the relevant attention region. Then, we get the influence score of the relevant region information through pooling, and finally send it to the filter to sieve out the concept information with weak relevance to get the disease concept of image information.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] refers to the \"Pooling\" operation that produces the \"Concept Score Vector\" from the \"Concept Heatmap\".\n\nHere's how average pooling influences the concept score vector's capacity to distinguish relevant disease concepts, based on the provided figure and text:\n\n1.  **From Heatmap to"
    },
    {
        "question": "How does threshold filtering of the concept score vector refine concept label accuracy?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "To align images with concept labels, we determine the presence of a concept attribute in an image based on a threshold value derived from an experiment. If the value s_j exceeds this threshold, we consider the image to possess that specific concept attribute and set the concept label to be True.",
            "Finally, to ensure the truthfulness of concepts, we discard all concepts for which the similarity across all images is below 0.45."
        ],
        "final_answer": "By applying a threshold to the pooled concept‐image similarity scores, only concepts whose score exceeds the threshold are marked as present for a given image, eliminating spurious low‐score detections. Additionally, any concept whose average similarity across all images falls below 0.45 is removed entirely. This two‐stage filtering—per‐image thresholding and global concept pruning—reduces noise and ensures that only high‐confidence concept labels are retained, thereby refining overall label accuracy.",
        "relevant_elements": [
            "Threshold",
            "Concept Label"
        ],
        "id": 272,
        "masked_question": "How does [mask1] filtering of the concept score vector refine [mask2] accuracy?",
        "masked_number": 2,
        "masked_elements": [
            "Threshold",
            "Concept Label"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.21494v1_figure_1.png",
        "paperid": "2410.21494v1",
        "paper_path": "./papers/2410.21494v1.json",
        "figure_id": "2410.21494v1_figure_1.png",
        "caption": "Figure 1: (a) module, output rich dimensional interpretable conceptual information for the specified disease through the multimodal model and convert the conceptual information into text vectors through the text embedding module; (b) module, access the image to the image embedder to get the image features, and then match with the conceptual textual information to get the relevant attention region. Then, we get the influence score of the relevant region information through pooling, and finally send it to the filter to sieve out the concept information with weak relevance to get the disease concept of image information.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does MLM task refine structure-sequence embeddings within pre-trained SSLM?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Next, using the 3Di alphabet as the vocabulary of structural elements and based on the Transformer architecture, we pre-train a protein structural language model, SSLM, from scratch. This aims to effectively model “structure-sequences” of proteins.",
            "The pre-training process employs the classic masked language modeling (MLM) objective, predicting masked elements based on the context of the “structure-sequence”. The probability distribution for predicting a masked element yi is used, where yi is the masked structural element and … are its contexts. The loss function is defined as follows: … The loss is computed only on elements that are masked."
        ],
        "final_answer": "Within SSLM, the MLM task randomly masks out tokens in the discretized structure-sequence (the 3Di alphabet) and trains the Transformer model to predict these masked tokens from their surrounding context. By minimizing the cross-entropy loss on only the masked positions, the self-attention layers learn to capture the sequential and spatial dependencies among structural elements, thereby refining the embeddings of the structure-sequence tokens.",
        "relevant_elements": [
            "MLM task",
            "structure-sequence",
            "pre-trained SSLM"
        ],
        "id": 273,
        "masked_question": "How does [mask1] refine [mask2] embeddings within pre-trained SSLM?",
        "masked_number": 2,
        "masked_elements": [
            "MLM task",
            "structure-sequence"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.15592v2_figure_1.png",
        "paperid": "2410.15592v2",
        "paper_path": "./papers/2410.15592v2.json",
        "figure_id": "2410.15592v2_figure_1.png",
        "caption": "Figure 1: a. Protein representation methods. Proteins can be input into the model in various forms, including amino acid sequences, feature maps, three-dimensional coordinates, functional descriptions, and sequences composed of structural tokens, capturing the multi-level features of proteins. b. Pre-training of SSLM. SSLM is pre-trained on over 100,000 protein structures from the Swiss-Prot database and trained on various masked language modeling tasks, learning the relationships between “structure-sequences” and their corresponding three-dimensional structural features, thereby effectively representing protein structural information. c. CPE-Pro model architecture. The CPE-Pro model integrates a pre-trained protein structure language model with a graph embedding module, inputting the combined representation into the GVP-GNN module for computation. The pooling module aggregates structural information using attention masking, enhancing the quality of the representation. Ultimately, a multilayer perceptron serves as the source discriminator, outputting predicted probabilities.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] \"MLM task\" refines [mask2] \"Struct-Seq\" embeddings within the pre-trained SSLM by employing a masked language modeling objective during the pre-training process.\n\nHere's the step-by-step reasoning:\n1.  **\"Struct-Seq\" (Structure-Sequence):** As described in the text, protein structures are converted into \"structure-sequences\" using Foldseek, mapping the amino acid backbone to a 3Di alphabet. These \"structure-sequences\" serve as input to the pre-trained SSLM.\n2.  **SSLM Pre-training:** The \"Structural Sequence Language Model (SSLM)\" is pre-trained from scratch using the Transformer architecture specifically to model these \"structure-sequences.\"\n3.  **\"MLM task\" (Masked Language Modeling):** The pre-training process utilizes the classic masked language modeling (MLM) objective. This means that during training, certain structural elements within the \"structure-sequences\" are masked out.\n4.  **Refinement Mechanism:** The SSLM's task is then to predict these masked structural elements based on the context of the unmasked elements within the \"structure-sequence.\" By learning to accurately predict the masked parts, the SSLM is compelled to understand and capture the sequential relationships, contextual dependencies, and proximity interactions between local structural elements within the \"structure-sequences.\" This learning process directly refines the embeddings generated by the SSLM for the \"structure-sequences,\" making them richer and more informative representations of the protein's structural information."
    },
    {
        "question": "How does pooling module aggregate fused embeddings to optimize classification head inputs?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "pooling",
            "classification head"
        ],
        "id": 274,
        "masked_question": "How does [mask1] module aggregate fused embeddings to optimize classification head inputs?",
        "masked_number": 1,
        "masked_elements": [
            "pooling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.15592v2_figure_1.png",
        "paperid": "2410.15592v2",
        "paper_path": "./papers/2410.15592v2.json",
        "figure_id": "2410.15592v2_figure_1.png",
        "caption": "Figure 1: a. Protein representation methods. Proteins can be input into the model in various forms, including amino acid sequences, feature maps, three-dimensional coordinates, functional descriptions, and sequences composed of structural tokens, capturing the multi-level features of proteins. b. Pre-training of SSLM. SSLM is pre-trained on over 100,000 protein structures from the Swiss-Prot database and trained on various masked language modeling tasks, learning the relationships between “structure-sequences” and their corresponding three-dimensional structural features, thereby effectively representing protein structural information. c. CPE-Pro model architecture. The CPE-Pro model integrates a pre-trained protein structure language model with a graph embedding module, inputting the combined representation into the GVP-GNN module for computation. The pooling module aggregates structural information using attention masking, enhancing the quality of the representation. Ultimately, a multilayer perceptron serves as the source discriminator, outputting predicted probabilities.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] module, identified as the \"Pooling\" layer, aggregates fused embeddings by utilizing an **attention-based pooling mechanism**. It receives the integrated \"Hidden state\" (which combines features from GVP-GNN blocks and the SSLM output) and incorporates an **attention mask** derived from the pre-trained Structural Sequence Language Model (SSLM).\n\nThis process of aggregation with attention masking serves to:\n1.  **Simplify feature dimensions**: It reduces the dimensionality of the merged feature vectors.\n2.  **Enhance representation quality**: By intelligently selecting and weighting features through attention, it aims to create a more relevant and concise summary of the structural information.\n\nThese optimized, simplified feature representations are then passed as input to the classification head (consisting of an MLP and an output activation layer) for efficient and accurate discrimination tasks."
    },
    {
        "question": "What limitations might arise from pooling outputs of GVP-GNN blocks using the attention mask?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "GVP-GNN blocks",
            "Pooling",
            "Attention mask"
        ],
        "id": 275,
        "masked_question": "What limitations might arise from [mask1] outputs of [mask2] using the attention mask?",
        "masked_number": 2,
        "masked_elements": [
            "Pooling",
            "GVP-GNN blocks"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.15592v2_figure_1.png",
        "paperid": "2410.15592v2",
        "paper_path": "./papers/2410.15592v2.json",
        "figure_id": "2410.15592v2_figure_1.png",
        "caption": "Figure 1: a. Protein representation methods. Proteins can be input into the model in various forms, including amino acid sequences, feature maps, three-dimensional coordinates, functional descriptions, and sequences composed of structural tokens, capturing the multi-level features of proteins. b. Pre-training of SSLM. SSLM is pre-trained on over 100,000 protein structures from the Swiss-Prot database and trained on various masked language modeling tasks, learning the relationships between “structure-sequences” and their corresponding three-dimensional structural features, thereby effectively representing protein structural information. c. CPE-Pro model architecture. The CPE-Pro model integrates a pre-trained protein structure language model with a graph embedding module, inputting the combined representation into the GVP-GNN module for computation. The pooling module aggregates structural information using attention masking, enhancing the quality of the representation. Ultimately, a multilayer perceptron serves as the source discriminator, outputting predicted probabilities.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations emerge when using YOLO-detected bounding boxes for scene-aware CBF in dynamic environments?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "YOLO",
            "scene-aware CBF"
        ],
        "id": 277,
        "masked_question": "What limitations emerge when using [mask1]-detected bounding boxes for [mask2] in dynamic environments?",
        "masked_number": 2,
        "masked_elements": [
            "YOLO",
            "scene-aware CBF"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.10283v1_figure_1.png",
        "paperid": "2409.10283v1",
        "paper_path": "./papers/2409.10283v1.json",
        "figure_id": "2409.10283v1_figure_1.png",
        "caption": "Figure 1: Overview of the ASMA framework, integrating CLIP for vision-language understanding, YOLO for object detection, and scene-aware CBFs via cropped depth-map for safe vision-language drone navigation.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What potential drawbacks arise from cropping the depth map for scene-aware CBF evaluations instead of using full depth maps?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "depth map",
            "scene-aware CBF"
        ],
        "id": 278,
        "masked_question": "What potential drawbacks arise from cropping the [mask1] for [mask2] evaluations instead of using full [mask1]s?",
        "masked_number": 2,
        "masked_elements": [
            "depth map",
            "scene-aware CBF"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.10283v1_figure_1.png",
        "paperid": "2409.10283v1",
        "paper_path": "./papers/2409.10283v1.json",
        "figure_id": "2409.10283v1_figure_1.png",
        "caption": "Figure 1: Overview of the ASMA framework, integrating CLIP for vision-language understanding, YOLO for object detection, and scene-aware CBFs via cropped depth-map for safe vision-language drone navigation.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates extracting keypoints via GPT-2 before applying YOLO detection?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "The operator views images from a ROS topic and issues a command like \"Go to the tree on the right.\" We use the GPT-2 LLM to parse this command into key components: the action (\"go to\"), the landmark (\"tree\"), and the attribute (\"on the right\").",
            "Given the input image X, the YOLO object detection function f_YOLO outputs a bounding box B for the detected landmark y, using which we extract the cropped image X_crop from the original image X."
        ],
        "final_answer": "Extracting keypoints via GPT-2 is motivated by the need to parse the operator’s natural‐language instruction into its constituent action, landmark, and attribute. This ensures YOLO is then applied specifically to the identified landmark (e.g., “tree”), enabling focused and accurate object detection.",
        "relevant_elements": [
            "LLM (GPT-2)",
            "Object Detection (YOLO)"
        ],
        "id": 279,
        "masked_question": "What motivates extracting keypoints via [mask1] before applying YOLO detection?",
        "masked_number": 1,
        "masked_elements": [
            "LLM (GPT-2)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.10283v1_figure_1.png",
        "paperid": "2409.10283v1",
        "paper_path": "./papers/2409.10283v1.json",
        "figure_id": "2409.10283v1_figure_1.png",
        "caption": "Figure 1: Overview of the ASMA framework, integrating CLIP for vision-language understanding, YOLO for object detection, and scene-aware CBFs via cropped depth-map for safe vision-language drone navigation.",
        "qtype": "Design_Rationale",
        "response": "The prompt asks what motivates extracting keypoints via \"Extract Key Points via LLM (GPT-2)\" before applying YOLO detection.\n\n1.  **Identify [mask1] in the diagram**: [mask1] is \"Extract Key Points via LLM (GPT-2)\".\n2.  **Trace the flow in the diagram**:\n    *   The natural language command \"Go to the tree on the right\" feeds into \"Extract Key Points via LLM (GPT-2)\".\n    *   The output of this block is \"go\", \"tree\", \"right\" (action, landmark, attribute).\n    *   Crucially, the \"{landmark}\" (e.g., \"tree\") output from this block is fed into the \"Object Detection (YOLO)\" module.\n3.  **Consult the provided text context**:\n    *   Under \"III-A Vision-Language Understanding Module (VLUM)\", the text states: \"The operator views images from a ROS topic and issues a command like \"Go to the tree on the right.\" **We use the GPT-2 LLM to parse this command into key components: the action (\"go to\"), the landmark (\"tree\"), and the attribute (\"on the right\").** Given the input image , the YOLO object detection function outputs a bounding box for the detected landmark , using which we extract the cropped image from the original image .\"\n\n**Reasoning:**\nThe text clearly explains that the GPT-2 LLM is used to \"parse this command into key components,\" among which is the \"landmark.\" This \"landmark\" is then passed to the YOLO object detection function. YOLO needs to know *what* it is supposed to detect in the image. By extracting the \"landmark\" (e.g., \"tree\") from the natural language command using GPT-2, the system provides YOLO with the specific object it needs to identify. Without this step, YOLO wouldn't know which object in the scene to detect based on the high-level language instruction.\n\n**Answer:**\nThe motivation for extracting keypoints (specifically the \"landmark\") via the LLM (GPT-2) before applying YOLO detection is to **parse the natural language command into its key components, thereby identifying the specific landmark (object) that YOLO needs to detect in the image.** The LLM translates the high-level instruction into a concrete target for the object detection module."
    },
    {
        "question": "Why integrate cosine similarity verification with scene-aware CBF safety enforcement?",
        "relevant_section_ids": [
            "1",
            "3.1"
        ],
        "relevant_context": [
            "Subsequently, ASMA identifies risky observations along the baseline drone VLN’s path by processing ego-centric depth maps to dynamically evaluate scene-aware CBFs. This results in a hybrid approach utilizing AI as well as symbolic rules which adjusts the control commands of a VLN-powered drone using formal safety methods emerging from control theory.",
            "The similarity score S is calculated by measuring the cosine similarity between the embeddings of the original and cropped images with respect to the text prompt. ... These dynamics ensure that S triggers appropriate downstream navigational tasks when verified."
        ],
        "final_answer": "By combining cosine‐similarity‐based landmark verification with scene‐aware control‐barrier‐function enforcement, the system ensures that (1) it is steering toward the correct, operator‐specified landmark (cosine similarity check) and (2) it dynamically enforces safety constraints around that landmark and any obstacles (scene‐aware CBF). This fusion of high‐level vision‐language grounding with low‐level formal safety guarantees produces more robust and reliable drone navigation.",
        "relevant_elements": [
            "Cosine Similarity",
            "Scene-Aware CBF"
        ],
        "id": 280,
        "masked_question": "Why integrate [mask1] verification with [mask2] safety enforcement?",
        "masked_number": 2,
        "masked_elements": [
            "Cosine Similarity",
            "Scene-Aware CBF"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.10283v1_figure_1.png",
        "paperid": "2409.10283v1",
        "paper_path": "./papers/2409.10283v1.json",
        "figure_id": "2409.10283v1_figure_1.png",
        "caption": "Figure 1: Overview of the ASMA framework, integrating CLIP for vision-language understanding, YOLO for object detection, and scene-aware CBFs via cropped depth-map for safe vision-language drone navigation.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates balancing reducing S_C and increasing S_C~ in the adversarial loss formulation?",
        "relevant_section_ids": [
            "3.1",
            "3.3"
        ],
        "relevant_context": [
            "While a traditional adversarial attack’s goal is to make the perturbation imperceptible in the input space, in the HiPS attack, we want the difference in the output space to also be minimal – the only difference should be the omission of the target class.",
            "The corresponding adversarial loss can be computed as L(δ)=−λ₁S_C+λ₂S_{C~}. L aims to reduce the score for the original caption S_C while increase the score for the target caption S_{C~}, where the target object is missing."
        ],
        "final_answer": "The HiPS-cap loss balances reducing S_C and increasing S_{C~} in order to achieve only a minimal change in the model’s output—namely, to remove the target object from the caption while leaving the rest of the description intact. By pushing the adversarial image embedding away from the original caption and towards the target caption (which omits the object), the attack ensures that the only difference between the original and adversarial outputs is the omission of the target class.",
        "relevant_elements": [
            "S_C",
            "S_C~"
        ],
        "id": 281,
        "masked_question": "What motivates balancing reducing [mask1] and increasing [mask2] in the adversarial loss formulation?",
        "masked_number": 2,
        "masked_elements": [
            "S_C",
            "S_C~"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.13010v1_figure_1.png",
        "paperid": "2410.13010v1",
        "paper_path": "./papers/2410.13010v1.json",
        "figure_id": "2410.13010v1_figure_1.png",
        "caption": "Figure 1: A schematic illustration of the Hiding-in-Plain-Sight (HiPS-cap) Attack.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates iterating perturbation updates N times in the HiPS-cap attack?",
        "relevant_section_ids": [
            "2",
            "3.3"
        ],
        "relevant_context": [
            "Section 2: \"Another widely used technique is the Projected Gradient Descent (PGD) attack [2], which is the strongest first-order attack. PGD is an iterative, first-order optimization-based attack, defined as: x_{i+1} = Π_{x+S}(x_i + α sign(∇_x L(x_i))), where i denotes the iteration number ...\"",
            "Section 3.3: \"The adversarial loss L₁ and L₂ can be optimized using existing adversarial attacks such as FGSM and PGD attacks (See Section 2).\""
        ],
        "final_answer": "Because HiPS-cap adopts a PGD-style adversarial optimization, it performs multiple small updates (N iterations) to gradually refine the perturbation and better optimize the adversarial loss (reduce the original caption score and increase the target caption score) within the allowed perturbation budget.",
        "relevant_elements": [
            "perturbations",
            "Repeat N times"
        ],
        "id": 282,
        "masked_question": "What motivates iterating perturbation updates [mask1] in the HiPS-cap attack?",
        "masked_number": 1,
        "masked_elements": [
            "Repeat N times"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.13010v1_figure_1.png",
        "paperid": "2410.13010v1",
        "paper_path": "./papers/2410.13010v1.json",
        "figure_id": "2410.13010v1_figure_1.png",
        "caption": "Figure 1: A schematic illustration of the Hiding-in-Plain-Sight (HiPS-cap) Attack.",
        "qtype": "Design_Rationale",
        "response": "The iteration of perturbation updates in the HiPS-cap attack, indicated by \"Repeat N times\" and the update rule `δ_i+1 = δ_i + αsign(∇δL(δ))`, is motivated by the need to iteratively optimize the HiPS-cap adversarial loss `L(δ) = -λ1Sc + λ2Sc̃`.\n\nThis iterative process is characteristic of gradient-based adversarial attacks like Projected Gradient Descent (PGD) mentioned in the \"Background and Related Works\" section. PGD is described as an \"iterative, first-order optimization-based attack.\" While the given update rule is a simplified form (omitting the projection step explicitly shown in the PGD formula, but retaining the iterative gradient ascent/descent idea), it signifies that the perturbations `δ` are refined over multiple steps.\n\nThe goal is to gradually find the optimal perturbations that effectively decrease the cosine similarity `Sc` between the image embedding and the original caption while increasing `"
    },
    {
        "question": "How does adversarial loss use cosine similarity scores to update perturbations?",
        "relevant_section_ids": [
            "2",
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "One of the seminal methods for generating adversarial attacks is the Fast Gradient Sign Method (FGSM) [1], a simple, single-step ε-bounded attack, defined as: x_adv = x + ε · sign(∇_x L(x, y)).",
            "Another widely used technique is the Projected Gradient Descent (PGD) attack [2], which is an iterative, first-order optimization-based attack, defined as: x_{t+1} = P_{x+S}(x_t + α · sign(∇_x L(x_t, y))), where P is a projection back into the ε-ball.",
            "Since the objective of the HiPS attack is to remove the target object t, our goal is to perturb the image x in such a way that the cosine similarity score for the target object, S_t, is reduced (as if it is absent), while the scores for all other objects remain unchanged.",
            "The corresponding adversarial loss can be computed as L = –S_C + S_{Ĉ}, which aims to reduce the score for the original caption C while increasing the score for the target caption Ĉ."
        ],
        "final_answer": "The attack first computes cosine similarities between the image embedding and either (a) each class label (HiPS-cls) or (b) the original versus target captions (HiPS-cap). It then defines an adversarial loss that penalizes similarity to the target (class or original caption) and rewards similarity to the non-target (other classes or the adversarial caption). Finally, standard gradient-based methods such as FGSM or PGD are used to update the image perturbation δ by taking steps in the direction of the sign of the loss gradient, e.g. δ_{i+1} = δ_i + α · sign(∇_δ L(δ)).",
        "relevant_elements": [
            "adversarial loss",
            "cosine similarity scores",
            "perturbations"
        ],
        "id": 283,
        "masked_question": "How does [mask1] use cosine similarity scores to update perturbations?",
        "masked_number": 1,
        "masked_elements": [
            "adversarial loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.13010v1_figure_1.png",
        "paperid": "2410.13010v1",
        "paper_path": "./papers/2410.13010v1.json",
        "figure_id": "2410.13010v1_figure_1.png",
        "caption": "Figure 1: A schematic illustration of the Hiding-in-Plain-Sight (HiPS-cap) Attack.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Text Encoder distinguish original and adversarial caption embeddings for cosine similarity computation?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "In this variant of the HiPS attack, termed HiPS-cap, rather than using class labels, we generate the attack on CLIP by utilizing the original caption c and a target caption c̃.",
            "Similar to the HiPS-cls approach, we calculate the cosine similarities between the image I and both the original caption c and the target caption c̃ as follows: … The corresponding adversarial loss can be computed as L(δ) = -λ₁ S_c + λ₂ S_c̃. L aims to reduce the score for the original caption S_c while increase the score for the target caption S_c̃, where the target object is missing."
        ],
        "final_answer": "The CLIP text encoder treats the original caption and the adversarial (target) caption as two separate text inputs. It encodes each one independently into its own embedding vector (T for the original caption and T̃ for the target caption) and then computes two separate cosine similarities with the image embedding, yielding S_c and S_c̃ respectively.",
        "relevant_elements": [
            "Text Encoder",
            "original caption",
            "adversarial caption",
            "cosine similarity scores"
        ],
        "id": 284,
        "masked_question": "How does [mask1] distinguish original and adversarial caption embeddings for cosine similarity computation?",
        "masked_number": 1,
        "masked_elements": [
            "Text Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.13010v1_figure_1.png",
        "paperid": "2410.13010v1",
        "paper_path": "./papers/2410.13010v1.json",
        "figure_id": "2410.13010v1_figure_1.png",
        "caption": "Figure 1: A schematic illustration of the Hiding-in-Plain-Sight (HiPS-cap) Attack.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does similarity search handle high-dimensional embeddings while optimizing retrieval latency and accuracy?",
        "relevant_section_ids": [
            "2.2"
        ],
        "relevant_context": [
            "Embeddings are indexed into the server database, whose indexes are constructed by the hierarchical navigable small world graphs (HNSWG).",
            "At searching phase, a query embedding   is submitted to the vector database. The database returns the correlated embeddings that is closest to the query based on similarity metrics like cosine similarity  and Euclidean distance ."
        ],
        "final_answer": "Similarity search on high-dimensional embeddings is made efficient and accurate by building an HNSWG index over the embedding vectors. At query time, this graph‐based structure enables sublinear‐time approximate nearest‐neighbor lookups, returning the top matches by cosine similarity or Euclidean distance and thus balancing retrieval latency with accuracy.",
        "relevant_elements": [
            "similarity search",
            "vector database"
        ],
        "id": 285,
        "masked_question": "How does [mask1] handle high-dimensional embeddings while optimizing retrieval latency and accuracy?",
        "masked_number": 1,
        "masked_elements": [
            "similarity search"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.05034v1_figure_1.png",
        "paperid": "2411.05034v1",
        "paper_path": "./papers/2411.05034v1.json",
        "figure_id": "2411.05034v1_figure_1.png",
        "caption": "Figure 1: Overview of the embedding vector database: Clients upload queries or documents to embedding models, such as Azure OpenAI, to generate and store embeddings. By searching for the most relevant embeddings and using them to prompt the LLM, clients can obtain satisfying results and fine-tune customized private applications.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How can LLM-generated embeddings be optimized for vector database similarity search efficiency?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "LLM",
            "Vector Database"
        ],
        "id": 287,
        "masked_question": "How can [mask1]-generated embeddings be optimized for [mask2] similarity search efficiency?",
        "masked_number": 2,
        "masked_elements": [
            "LLM",
            "Vector Database"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.05034v1_figure_1.png",
        "paperid": "2411.05034v1",
        "paper_path": "./papers/2411.05034v1.json",
        "figure_id": "2411.05034v1_figure_1.png",
        "caption": "Figure 1: Overview of the embedding vector database: Clients upload queries or documents to embedding models, such as Azure OpenAI, to generate and store embeddings. By searching for the most relevant embeddings and using them to prompt the LLM, clients can obtain satisfying results and fine-tune customized private applications.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does vector database retrieval guide LLM prompt formulation in retrieval-augmented generation?",
        "relevant_section_ids": [
            "1"
        ],
        "relevant_context": [
            "By integrating embedding databases with LLMs through a retrieval mechanism, retrieval-augmented generation (RAG) has emerged as a powerful tool for developers in AI assistant APIs.",
            "Upon receiving a query (e.g., a partial sentence), the system first retrieves the top-k most relevant passages from the vector database to serve as prompts, thereby enhancing the quality and factual accuracy of the generated text."
        ],
        "final_answer": "In retrieval-augmented generation, when the LLM receives a query it issues that query to the vector database, retrieves the top-k most similar stored passages, and then uses those retrieved passages as part of its prompt. This incorporation of relevant context guides the LLM’s output, improving both its factual accuracy and overall response quality.",
        "relevant_elements": [
            "Vector Database",
            "LLM"
        ],
        "id": 288,
        "masked_question": "How does [mask1] retrieval guide LLM prompt formulation in retrieval-augmented generation?",
        "masked_number": 1,
        "masked_elements": [
            "Vector Database"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.05034v1_figure_1.png",
        "paperid": "2411.05034v1",
        "paper_path": "./papers/2411.05034v1.json",
        "figure_id": "2411.05034v1_figure_1.png",
        "caption": "Figure 1: Overview of the embedding vector database: Clients upload queries or documents to embedding models, such as Azure OpenAI, to generate and store embeddings. By searching for the most relevant embeddings and using them to prompt the LLM, clients can obtain satisfying results and fine-tune customized private applications.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does alternating graph-based pure geometric optimization enhance pose convergence in bundle-adjusting neural LiDAR fields?",
        "relevant_section_ids": [
            "3.1",
            "3.3"
        ],
        "relevant_context": [
            "In contrast to prior pose-free NeRF methods, our pipeline employs a hybrid approach to optimize poses. As shown in Fig. 2, the framework can be divided into two alternately executed parts: global optimization of bundle-adjusting neural LiDAR fields (Sec. 3.2) and graph-based pure geometric optimization (Sec. 3.3) with the proposed Geo-optimizer.",
            "As illustrated in Fig. 3(b), insufficient geometric guidance leads to certain frame poses being optimized in the wrong direction. Geometric optimizer can address this issue by preventing pose updates strictly following NeRF and correcting wrong optimization directions that do not conform to global geometric consistency. This method involves externally modifying pose parameters and providing effective geometric guidance early in the ill-conditioned optimization process. Consequently, few iterations of graph-based RCD computation suffice to offer ample guidance for NeRF."
        ],
        "final_answer": "By interleaving standard bundle-adjustment (NeRF-based) updates with a few iterations of pure geometric pose refinement over a graph of frames, the Geo-optimizer injects explicit geometric constraints (via a robust, overlapping-aware Chamfer distance) into the otherwise photometric-driven training. This alternating scheme corrects wrong update directions, enforces global consistency across multiple LiDAR scans, and steers the network away from local optima—leading to faster, more accurate convergence of the estimated poses.",
        "relevant_elements": [
            "Bundle-Adjusting Neural LiDAR Fields",
            "Geometry Optimizer"
        ],
        "id": 291,
        "masked_question": "How does alternating graph-based pure geometric optimization enhance pose convergence in [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "Bundle-Adjusting Neural LiDAR Fields"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.05597v1_figure_2.png",
        "paperid": "2407.05597v1",
        "paper_path": "./papers/2407.05597v1.json",
        "figure_id": "2407.05597v1_figure_2.png",
        "caption": "Figure 2: Overview of our proposed GeoNLF. We alternatively execute global optimization of bundle-adjusting neural LiDAR fields and graph-based pure geometric optimization. By integrating selective-reweighting strategy and explicit geometric constraints derived from point clouds, GeoNLF implements outlier-aware and geometry-aware mechanisms.",
        "qtype": "Experimental_Results",
        "response": "The graph-based pure geometric optimization enhances pose convergence in the BA-Neural LiDAR Fields (`[mask1]`) by:\n\n1.  **Providing Strong Geometric Guidance**: The BA-Neural LiDAR Fields (which optimizes poses globally through implicit radiance fields) often lacks geometric constraints and can lead to poor geometric consistency and convergence to local optima. The alternating graph-based pure geometric optimization, utilizing a Graph-based Robust Chamfer Distance (G-RCD) based on multi-frame point clouds, directly incorporates strong geometric information.\n2.  **Correcting Misdirected Pose Updates**: In cases where the Neural LiDAR Fields might steer pose optimization in the wrong direction due to"
    },
    {
        "question": "How does selective-reweighting adjust gradient flow between pose updates and neural LiDAR field optimization?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "Inspired by the capabilities of NeRF in pose inference [64], we decrease the learning rate (η) of neural fields for the top k frames with the highest rendering losses as Eq. 14, while keeping η of poses unchanged.",
            "The strategy facilitates gradient propagation towards outlier poses, while the gradient flow to the radiance fields is concurrently diminished."
        ],
        "final_answer": "Selective-reweighting lowers the learning rate of the neural LiDAR fields for the worst-performing (highest-loss) frames, but leaves the pose learning rate unchanged. This causes more of the overall gradient to flow into correcting the outlier poses while reducing gradient updates to the neural fields.",
        "relevant_elements": [
            "Selective-Reweighting",
            "Bundle-Adjusting Neural LiDAR Fields"
        ],
        "id": 292,
        "masked_question": "How does [mask1] adjust gradient flow between pose updates and neural LiDAR field optimization?",
        "masked_number": 1,
        "masked_elements": [
            "Selective-Reweighting"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.05597v1_figure_2.png",
        "paperid": "2407.05597v1",
        "paper_path": "./papers/2407.05597v1.json",
        "figure_id": "2407.05597v1_figure_2.png",
        "caption": "Figure 2: Overview of our proposed GeoNLF. We alternatively execute global optimization of bundle-adjusting neural LiDAR fields and graph-based pure geometric optimization. By integrating selective-reweighting strategy and explicit geometric constraints derived from point clouds, GeoNLF implements outlier-aware and geometry-aware mechanisms.",
        "qtype": "Experimental_Results",
        "response": "The Selective-Reweighting strategy adjusts the gradient flow by selectively modifying the learning rates for different components. Specifically, for frames identified as having outlier poses (exhibiting significantly higher rendering losses), it **decreases the learning rate of the neural LiDAR fields** while **keeping the learning rate of their poses unchanged**.\n\nThis differential application of learning rates ensures that:\n1.  **Gradient propagation towards outlier poses is facilitated**, allowing for more effective correction of these incorrect poses.\n2.  **The gradient flow to the neural radiance fields is concurrently diminished** for these outlier frames, thereby preventing them from overfitting to erroneous poses and mitigating their adverse impact on the overall scene reconstruction."
    },
    {
        "question": "How does Speech Audio Enhancer output enhance Prosody Detection Tools reliability?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Speech Audio Enhancer",
            "Prosody Detection Tools"
        ],
        "id": 293,
        "masked_question": "How does [mask1] output enhance Prosody Detection Tools reliability?",
        "masked_number": 1,
        "masked_elements": [
            "Speech Audio Enhancer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.13608v1_figure_1.png",
        "paperid": "2408.13608v1",
        "paper_path": "./papers/2408.13608v1.json",
        "figure_id": "2408.13608v1_figure_1.png",
        "caption": "Figure 1. System framework of the automatic speech annotation system.",
        "qtype": "Experimental_Results",
        "response": "The **Speech Audio Enhancer** preprocesses the raw audio to improve its quality by denoising it. This enhanced, cleaner audio is then fed into the \"Speech Style Recognition\" block, which includes \"Prosody Detection Tools\" like the Emphasis Detector and \"Signal Processing Tools\" that analyze pitch, energy, and speed. By providing a high-quality, denoised audio input, the **Speech Audio Enhancer** ensures that these tools have a clearer signal to work with, thereby enabling them to more accurately and reliably detect prosodic features without interference from background noise."
    },
    {
        "question": "How does merging ASR transcripts and Meta Data through LLM influence description richness?",
        "relevant_section_ids": [
            "3.2",
            "3.4"
        ],
        "relevant_context": [
            "Other sundry items available in the original audio information such as title, raw descriptions from the data uploader, and video category tags from the website, are mutually transferred by a language model to summarize the topic of the speech utterance.",
            "It is worth noting that we do not provide any structured formats for the description in advance to fill in the blanks as PromptTTS 2 does, but put emphasis on the richness of vocabulary and the accuracy in conveying the meaning of labels.",
            "The speech description (denoted as the Description version) contains all available attributes regardless of the transcript. Besides, we involved speech transcript as an extra attribute to form a so-called speech instruction (denoted as the Instruction version)."
        ],
        "final_answer": "By feeding both ASR transcripts and original metadata (titles, uploader notes, category tags) into a fine-tuned LLM, the system not only summarizes topic information but also weaves the verbatim content into its outputs.  This end-to-end rewriting produces natural‐language descriptions with richer vocabulary, greater detail, and higher fidelity to both what was said (transcript) and the broader context (metadata).",
        "relevant_elements": [
            "ASR",
            "LLM",
            "Meta Data"
        ],
        "id": 294,
        "masked_question": "How does merging [mask1] transcripts and Meta Data through LLM influence description richness?",
        "masked_number": 1,
        "masked_elements": [
            "ASR"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.13608v1_figure_1.png",
        "paperid": "2408.13608v1",
        "paper_path": "./papers/2408.13608v1.json",
        "figure_id": "2408.13608v1_figure_1.png",
        "caption": "Figure 1. System framework of the automatic speech annotation system.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What ethical risks arise from employing the Gender Predictor in the Speaker Info Identify module?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Gender Predictor",
            "Speaker Info Identify"
        ],
        "id": 295,
        "masked_question": "What ethical risks arise from employing the [mask1] in the [mask2] module?",
        "masked_number": 2,
        "masked_elements": [
            "Gender Predictor",
            "Speaker Info Identify"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.13608v1_figure_1.png",
        "paperid": "2408.13608v1",
        "paper_path": "./papers/2408.13608v1.json",
        "figure_id": "2408.13608v1_figure_1.png",
        "caption": "Figure 1. System framework of the automatic speech annotation system.",
        "qtype": "Others",
        "response": "unanswerable."
    },
    {
        "question": "What alternative approaches could replace Expertised LLaMA 2 for rewriting speech expressiveness descriptions?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "Expertised LLaMA 2"
        ],
        "id": 296,
        "masked_question": "What alternative approaches could replace [mask1] for rewriting speech expressiveness descriptions?",
        "masked_number": 1,
        "masked_elements": [
            "Expertised LLaMA 2"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.13608v1_figure_1.png",
        "paperid": "2408.13608v1",
        "paper_path": "./papers/2408.13608v1.json",
        "figure_id": "2408.13608v1_figure_1.png",
        "caption": "Figure 1. System framework of the automatic speech annotation system.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations arise when using perturbation score to diagnose overconfidence-inducing discontinuity?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "perturbation score",
            "overconfidence-inducing discontinuity"
        ],
        "id": 297,
        "masked_question": "What limitations arise when using [mask1] to diagnose [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "perturbation score",
            "overconfidence-inducing discontinuity"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.16608v1_figure_1.png",
        "paperid": "2410.16608v1",
        "paper_path": "./papers/2410.16608v1.json",
        "figure_id": "2410.16608v1_figure_1.png",
        "caption": "Figure 1: Overview: assessment of embeddings by neighbor embedding methods with an example of image data. a We use a standard pre-trained convolutional neural network (CNN) to obtain features of image samples from the CIFAR10 dataset, and then\nvisualize the features using a neighbor embedding method, specifically t-SNE. b Basic ideas of singularity scores and perturbation scores.\nc t-SNE tends to embed image features into separated clusters even for images with ambiguous semantic meanings (as quantified by higher entropy of predicted class probabilities by the CNN). Perturbation scores identify the embedding points which have ambiguous class membership but less visual uncertainty.\nd Incorrect choice of the hyperparameter leads to visual fractures (FI discontinuity), which is more severe with a smaller perplexity.\nWe recommend choosing the perplexity no smaller than the elbow point.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative methods could complement singularity score for detecting fracture-inducing discontinuity?",
        "relevant_section_ids": [
            "1"
        ],
        "relevant_context": [
            "We propose two point-wise diagnostic scores, namely perturbation scores and singularity scores, to quantify the severity of the two types of map discontinuity at each embedding point."
        ],
        "final_answer": "The perturbation score could be used alongside the singularity score as a complementary diagnostic.",
        "relevant_elements": [
            "singularity score",
            "fracture-inducing discontinuity"
        ],
        "id": 298,
        "masked_question": "What alternative methods could complement [mask1] for detecting fracture-inducing discontinuity?",
        "masked_number": 1,
        "masked_elements": [
            "singularity score"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.16608v1_figure_1.png",
        "paperid": "2410.16608v1",
        "paper_path": "./papers/2410.16608v1.json",
        "figure_id": "2410.16608v1_figure_1.png",
        "caption": "Figure 1: Overview: assessment of embeddings by neighbor embedding methods with an example of image data. a We use a standard pre-trained convolutional neural network (CNN) to obtain features of image samples from the CIFAR10 dataset, and then\nvisualize the features using a neighbor embedding method, specifically t-SNE. b Basic ideas of singularity scores and perturbation scores.\nc t-SNE tends to embed image features into separated clusters even for images with ambiguous semantic meanings (as quantified by higher entropy of predicted class probabilities by the CNN). Perturbation scores identify the embedding points which have ambiguous class membership but less visual uncertainty.\nd Incorrect choice of the hyperparameter leads to visual fractures (FI discontinuity), which is more severe with a smaller perplexity.\nWe recommend choosing the perplexity no smaller than the elbow point.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What is the reasoning behind freezing existing embeddings when computing the LOO-map for new input extension?",
        "relevant_section_ids": [
            "1"
        ],
        "relevant_context": [
            "It is based on a classical strategy from statistics known as the leave-one-out (LOO) method, which posits that adding, deleting, or changing a single input point has negligible effects on the overall inferential results.",
            "Using LOO, we can decouple the pairwise interaction in the algorithm : we add a new input point  to  and freeze  in the optimization problem, allowing only one free variable ."
        ],
        "final_answer": "The existing embeddings are frozen to embody the leave-one-out assumption that inserting one more point hardly alters the original embedding. Freezing decouples the pairwise interactions so that only the new point’s embedding needs to be optimized, yielding a well-defined extension map.",
        "relevant_elements": [
            "LOO-map",
            "embeddings"
        ],
        "id": 299,
        "masked_question": "What is the reasoning behind freezing existing [mask1] when computing the LOO-map for new input extension?",
        "masked_number": 1,
        "masked_elements": [
            "embeddings"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.16608v1_figure_1.png",
        "paperid": "2410.16608v1",
        "paper_path": "./papers/2410.16608v1.json",
        "figure_id": "2410.16608v1_figure_1.png",
        "caption": "Figure 1: Overview: assessment of embeddings by neighbor embedding methods with an example of image data. a We use a standard pre-trained convolutional neural network (CNN) to obtain features of image samples from the CIFAR10 dataset, and then\nvisualize the features using a neighbor embedding method, specifically t-SNE. b Basic ideas of singularity scores and perturbation scores.\nc t-SNE tends to embed image features into separated clusters even for images with ambiguous semantic meanings (as quantified by higher entropy of predicted class probabilities by the CNN). Perturbation scores identify the embedding points which have ambiguous class membership but less visual uncertainty.\nd Incorrect choice of the hyperparameter leads to visual fractures (FI discontinuity), which is more severe with a smaller perplexity.\nWe recommend choosing the perplexity no smaller than the elbow point.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates computing perturbation score as L2 distance between f(x_i+η) and y_i?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Perturbation Score",
            "f(x_i+η)"
        ],
        "id": 300,
        "masked_question": "What motivates computing [mask1] as L2 distance between [mask2] and y_i?",
        "masked_number": 2,
        "masked_elements": [
            "Perturbation Score",
            "f(x_i+η)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.16608v1_figure_1.png",
        "paperid": "2410.16608v1",
        "paper_path": "./papers/2410.16608v1.json",
        "figure_id": "2410.16608v1_figure_1.png",
        "caption": "Figure 1: Overview: assessment of embeddings by neighbor embedding methods with an example of image data. a We use a standard pre-trained convolutional neural network (CNN) to obtain features of image samples from the CIFAR10 dataset, and then\nvisualize the features using a neighbor embedding method, specifically t-SNE. b Basic ideas of singularity scores and perturbation scores.\nc t-SNE tends to embed image features into separated clusters even for images with ambiguous semantic meanings (as quantified by higher entropy of predicted class probabilities by the CNN). Perturbation scores identify the embedding points which have ambiguous class membership but less visual uncertainty.\nd Incorrect choice of the hyperparameter leads to visual fractures (FI discontinuity), which is more severe with a smaller perplexity.\nWe recommend choosing the perplexity no smaller than the elbow point.",
        "qtype": "Design_Rationale",
        "response": "The perturbation score is defined as the L2 distance between \\( f(x_i + \\eta) \\) (the LOO-map output for the perturbed input \\( x_i \\)) and \\( y_i \\) (the original embedding point for \\( x_i \\)).\n\nThis calculation is motivated by the need to **quantify how much an embedding point \\( y_i \\) moves when its corresponding input \\( x_i \\) is moderately perturbed**. According to the text, this measurement \"helps to probe discontinuity of \\( f \\) from the input space\" and specifically \"captures the severity of OI discontinuity\".\n\nIn simple terms:\n*   \\( y_i \\) is where the original input \\( x_i \\) is mapped in the low-dimensional space.\n*   \\( x_i + \\eta \\) represents a slightly altered version of the input \\( x_i \\).\n*   \\( f(x_i + \\eta)"
    },
    {
        "question": "What advantage does globally sharing Transformer Block weights bring to interleaving DiM blocks?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "Motivated by Zamba [1], we introduce the globally-shared transformer (attention) block. This shared attention block is added after each of four DiM blocks as shown in Fig. 1 since we want to preserve the continuity of the 4-sweep alternative scanning order.",
            "By using shared weights, we significantly reduce the number of parameters introduced by different attention blocks.",
            "This layer complements the flow of Mamba since transformers excel at extracting global relations without relying on manually defined orders of input sequences, as in Mamba."
        ],
        "final_answer": "By sharing the transformer block’s weights globally across the interleaved DiM blocks, the model drastically cuts down on additional parameters while still providing a global, order-invariant mixing layer that complements Mamba’s sequence-based processing.",
        "relevant_elements": [
            "Transformer Block",
            "DiM Block",
            "Globally shared weights"
        ],
        "id": 301,
        "masked_question": "What advantage does [mask1] bring to interleaving [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Globally shared weights",
            "Transformer Block"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.04168v1_figure_1.png",
        "paperid": "2411.04168v1",
        "paper_path": "./papers/2411.04168v1.json",
        "figure_id": "2411.04168v1_figure_1.png",
        "caption": "Figure 1: Overview of DiMSUM architecture.",
        "qtype": "Design_Rationale",
        "response": "The component highlighted by the red box, which is the \"Globally-shared attention block\" containing a \"Transformer Block\", is interleaved with the component highlighted by the blue box, which is the \"DiM block\" (containing \"Spatial-frequency Mamba\").\n\nAccording to the \"Globally-shared attention block\" section:\n\"Since Mamba is better than transformer at long-range dependency but weaker than transformer at in-context learning, we propose a hybrid mamba-transformer architecture which favors both these properties... This layer complements the flow of Mamba since transformers excel at extracting global relations without relying on manually defined orders of input sequences, as in Mamba. Hence, with this hybrid architecture, our method effectively addresses Mamba’s order dependence while significantly reducing the FID with very few additional parameters.\"\n\nTherefore, interleaving the [mask1] (Globally-shared attention block/Transformer Block) with the [mask2] (DiM block/Mamba) brings the advantage of:"
    },
    {
        "question": "What rationale drives swapping Sweep scan Mamba and Window scan Mamba queries in Cross-Attention fusion layer?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Cross-Attention fusion layer. Given f_spatial and f_freq are spatial and wavelet features obtained by sweep and window scan. We combine these features using a cross-attention fusion layer as follows:",
            "More specifically, we first compute each feature’s query (q), key (k), and value (v) using linear layers. To fuse the information between spatial and wavelet features, we do cross-attention by swapping the queries (q_spatial <-> q_wavelet) of spatial and wavelet before applying a self-attention module onto each key, query, and value triplet."
        ],
        "final_answer": "They swap the queries of the two modalities so that each modality (spatial vs. frequency) attends to the other’s keys and values, thereby fusing spatial and wavelet information via cross-attention.",
        "relevant_elements": [
            "Sweep scan Mamba",
            "Window scan Mamba",
            "Cross-Attention fusion layer"
        ],
        "id": 302,
        "masked_question": "What rationale drives swapping [mask1] and [mask2] queries in Cross-Attention fusion layer?",
        "masked_number": 2,
        "masked_elements": [
            "Sweep scan Mamba",
            "Window scan Mamba"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.04168v1_figure_1.png",
        "paperid": "2411.04168v1",
        "paper_path": "./papers/2411.04168v1.json",
        "figure_id": "2411.04168v1_figure_1.png",
        "caption": "Figure 1: Overview of DiMSUM architecture.",
        "qtype": "Design_Rationale",
        "response": "The rationale for swapping the queries from **Sweep scan Mamba** (`q1` which is from `f_spatial`) and **Window scan Mamba** (`q2` which is from `f_freq` / `f_wavelet`) in the Cross-Attention fusion layer is explicitly stated in the \"Cross-Attention fusion layer\" section:\n\n\"To fuse the information between spatial and wavelet features, we do cross-attention by swapping the queries (q) of spatial and wavelet before applying a self-attention module onto each key, query, and value triplet.\"\n\nTherefore, the swapping is performed **to fuse the information between spatial and wavelet (frequency) features**."
    },
    {
        "question": "How does the cross-attention fusion layer fuse outputs of Sweep scan Mamba and Window scan Mamba?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Cross-Attention fusion layer. Given f_spatial and f_wavelet are spatial and wavelet features obtained by sweep and window scan. We combine these features using a cross-attention fusion layer as follows:",
            "More specifically, we first compute each feature’s query (Q), key (K), and value (V) using linear layers. To fuse the information between spatial and wavelet features, we do cross-attention by swapping the queries of spatial and wavelet before applying a self-attention module onto each key, query, and value triplet. Finally, we concat the outputs of two cross attentions by channel followed by a linear projection to obtain the output feature."
        ],
        "final_answer": "The fusion layer takes the two token sequences (the Sweep‐scan Mamba output as “spatial” and the Window‐scan Mamba output as “wavelet”), projects each into queries, keys, and values, then swaps the two query sets and runs self‐attention on each (so spatial keys/values attend to wavelet queries and vice versa). The two resulting attention outputs are concatenated along the channel dimension and passed through a linear projection to yield the fused feature.",
        "relevant_elements": [
            "Sweep scan Mamba",
            "Window scan Mamba",
            "Cross-Attention fusion layer"
        ],
        "id": 303,
        "masked_question": "How does the [mask1] fuse outputs of Sweep scan Mamba and Window scan Mamba?",
        "masked_number": 1,
        "masked_elements": [
            "Cross-Attention fusion layer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.04168v1_figure_1.png",
        "paperid": "2411.04168v1",
        "paper_path": "./papers/2411.04168v1.json",
        "figure_id": "2411.04168v1_figure_1.png",
        "caption": "Figure 1: Overview of DiMSUM architecture.",
        "qtype": "Implementation_Details",
        "response": "The DiMSUM architecture fuses the outputs of the Sweep scan Mamba (providing spatial features) and Window scan Mamba (providing frequency/wavelet features) in the Cross-Attention fusion layer using the following steps:\n\n1.  **Generate Q, K, V:** For both the spatial features ($f_{spatial}$) and wavelet features ($f_{freq}$), their respective query ($Q$), key ($K$), and value ($V$) representations are computed using linear layers. This results in $Q_1, K_1, V_1$ for spatial features and $Q_2, K_2, V_2$ for frequency features.\n2.  **Query Swapping for Cross-Attention:** To enable information fusion, the queries are swapped. This means that the cross-attention for spatial features will use the frequency query ($Q_2$), and the cross-attention for frequency features will use the spatial query ($Q_1$).\n3.  **Apply Self-Attention Modules:** A self-attention module is then applied to each modified triplet:\n    *   One attention module combines $(V_1, K_1, Q_2)$.\n    *   Another attention module combines $(V_2, K_2, Q_1)$.\n4.  **Concatenation and Linear Projection:** The outputs from these two cross-attention operations are then concatenated channel-wise. Finally, this combined feature undergoes a linear projection to produce the final fused output feature."
    },
    {
        "question": "How are weights shared among Transformer Blocks inserted between DiM Blocks?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "we introduce the globally-shared transformer (attention) block. This shared attention block is added after each of four DiM blocks as shown in Fig. 1 since we want to preserve the continuity of the 4-sweep alternative scanning order.",
            "By using shared weights, we significantly reduce the number of parameters introduced by different attention blocks."
        ],
        "final_answer": "All of the Transformer Blocks inserted between DiM Blocks use the exact same parameters: a single Transformer Block is inserted after each group of four DiM Blocks and its weights are shared (re-used) globally across all those insertion points.",
        "relevant_elements": [
            "Transformer Block",
            "DiM Block"
        ],
        "id": 304,
        "masked_question": "How are weights shared among [mask1] inserted between DiM Blocks?",
        "masked_number": 1,
        "masked_elements": [
            "Transformer Block"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.04168v1_figure_1.png",
        "paperid": "2411.04168v1",
        "paper_path": "./papers/2411.04168v1.json",
        "figure_id": "2411.04168v1_figure_1.png",
        "caption": "Figure 1: Overview of DiMSUM architecture.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] refers to the \"Transformer Blocks\" shown in the diagram, specifically the ones highlighted by the red box which are inserted between the DiM Blocks.\n\nAccording to the \"Overview of the proposed network\" section:\n\"...whose core is a sequence of DiMSUM blocks, each consisting of DiM blocks that employ a novel Mamba structure with spatial and frequency scanning fusion and a **globally weight-shared transformer block**.\"\n\nAnd more explicitly in the \"Globally-shared attention block\" section:\n\"Motivated by Zamba [1], we introduce the **globally-shared transformer (attention) block**. This shared attention block is added after each of four DiM blocks as shown in Fig. 1 since we want to preserve the continuity of the 4-sweep alternative scanning order. **By using shared weights**, we significantly reduce the number of parameters introduced by different attention blocks.\"\n\nTherefore, the weights among the Transformer Blocks inserted between DiM Blocks are **globally shared**."
    },
    {
        "question": "How does the self-attention module compute its Q, K, V operations over VGG16-extracted features?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Self-Attention",
            "Pretrained VGG16"
        ],
        "id": 305,
        "masked_question": "How does the self-attention module compute its Q, K, V operations over [mask1]-extracted features?",
        "masked_number": 1,
        "masked_elements": [
            "Pretrained VGG16"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.00718v1_figure_2.png",
        "paperid": "2409.00718v1",
        "paper_path": "./papers/2409.00718v1.json",
        "figure_id": "2409.00718v1_figure_2.png",
        "caption": "Figure 2: The proposed framework for the combination of the Fundus and OCT images for the classification of AMD",
        "qtype": "Implementation_Details",
        "response": "The provided context states: \"In the proposed framework, the extracted features from each path through the pre-trained VGG16 model are used as input for the self-attention module.\" It further explains the general self-attention mechanism where \"Q is a query, K is the key, and V is the value\" and \"the attention weights are assessed as follows: Attention(Q, K, V) = softmax(QK^T / sqrt(d_k))V\".\n\nHowever, the text does not detail *how* the Q, K, and V operations (e.g., through linear transformations) are specifically computed *from* the VGG16-extracted features within this framework. It only states that these extracted features serve as the input to the self-attention module."
    },
    {
        "question": "In the fusion module, how are concatenated encoder and attention features integrated before RFC classification?",
        "relevant_section_ids": [
            "2"
        ],
        "relevant_context": [
            "Then, features extracted from the pre-trained VGG16 and self-attention module are concatenated. Finally, we fused all the extracted features from each path and fed them to the RFC for the classification of AMD.",
            "The attention features and extracted prior features from the pre-trained model from each path are fused together by concatenation for a better representation of each feature acquired through the Fundus and OCT images, which are used as input for the classification model."
        ],
        "final_answer": "In the fusion module, the features produced by each VGG16 encoder and their corresponding self-attention outputs are first concatenated together, and then this single fused feature vector is passed directly into the Random Forest Classifier for the final AMD classification.",
        "relevant_elements": [
            "Fusion Module",
            "RFC"
        ],
        "id": 306,
        "masked_question": "In the [mask1], how are concatenated encoder and attention features integrated before [mask2] classification?",
        "masked_number": 2,
        "masked_elements": [
            "Fusion Module",
            "RFC"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.00718v1_figure_2.png",
        "paperid": "2409.00718v1",
        "paper_path": "./papers/2409.00718v1.json",
        "figure_id": "2409.00718v1_figure_2.png",
        "caption": "Figure 2: The proposed framework for the combination of the Fundus and OCT images for the classification of AMD",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Self-Attention complement pretrained VGG16 to enhance global feature modeling beyond local multiscale embeddings?",
        "relevant_section_ids": [
            "2"
        ],
        "relevant_context": [
            "The extracted features through the pre-trained VGG16 model are confined by structure to concentrate primarily on local features of fundus and OCT images while incompetent to acquire the global feature information. Self-attention focuses on specific global features of the images.",
            "In the proposed framework, the extracted features from each path through the pre-trained VGG16 model are used as input for the self-attention module.",
            "The attention features and extracted prior features from the pre-trained model from each path are fused together by concatenation for a better representation of each feature acquired through the Fundus and OCT images, which are used as input for the classification model."
        ],
        "final_answer": "In the MCGAEc framework, pretrained VGG16 at each color-space and scale path yields rich local and multiscale feature embeddings but remains limited in modeling long-range dependencies across the image. By feeding these VGG16-extracted features into a self-attention module, the network computes weighted associations (queries, keys, values) that highlight salient, global feature interactions and inter-variability between paths. Finally, concatenating the self-attention outputs with the original VGG16 features produces a fused representation that combines both fine-grained local details and global contextual information, thereby enhancing the model’s overall feature expressiveness beyond what multiscale VGG16 alone can capture.",
        "relevant_elements": [
            "Self-Attention",
            "pretrained VGG16",
            "Multiscale"
        ],
        "id": 307,
        "masked_question": "How does [mask1] complement [mask2] to enhance global feature modeling beyond local multiscale embeddings?",
        "masked_number": 2,
        "masked_elements": [
            "Self-Attention",
            "pretrained VGG16"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.00718v1_figure_2.png",
        "paperid": "2409.00718v1",
        "paper_path": "./papers/2409.00718v1.json",
        "figure_id": "2409.00718v1_figure_2.png",
        "caption": "Figure 2: The proposed framework for the combination of the Fundus and OCT images for the classification of AMD",
        "qtype": "Literature_Background",
        "response": "To answer the question, we need to understand the function of [mask1] (Self-Attention module) and [mask2] (Pretrained VGG16 modules) based on the provided context.\n\n1.  **Role of [mask2] (Pretrained VGG16):**\n    *   The context states: \"Afterward, we executed the pre-trained VGG16... for extracting the features from considered multiscale color space for fundus and OCT images.\"\n    *   Crucially, it also mentions: \"The extracted features through the pre-trained VGG16 model are confined by structure to concentrate primarily on local features of fundus and OCT images while incompetent to acquire the global feature information.\"\n    *   So, [mask2] provides *local multiscale embeddings*.\n\n2.  **Role of [mask1] (Self-Attention):**\n    *   The context states: \"A"
    },
    {
        "question": "How does RFC build on decision tree ensembles to handle concatenated Self-Attention and pretrained VGG16 features?",
        "relevant_section_ids": [
            "2"
        ],
        "relevant_context": [
            "The computed features through the modality-specific multiscale color space encoder model with self-attention are transferred into the supervised machine learning RFC [19].",
            "The RFC comprises an amalgamation of tree classifiers where a particular classifier is acquired through a random vector, which is sampled individually from the input data, and the respective tree provides a unit vote for the most prevalent class to categorize input data.",
            "The RFC is utilized for the classification of the input data, which relies on the utilization of randomly chosen features at each node to expand a tree.",
            "In RFC, features are illustrated on the inner nodes, which are called decision nodes, and enable to generate the predictions from a sequence of feature-based fragmentation.",
            "RFC employs a collection of random decision trees and integrates them concurrently to construct a robust model that is less acute to the training data.",
            "The RFC algorithm is capable of handling higher dimensional data and utilizing an enormous number of trees in the combination.",
            "The output of the RFC is computed by a majority counting of votes obtained through trees.",
            "Here, RFC is used, which includes considerably lower computational complexity as each particular tree exclusively utilizes a part of the input vector in a Random Forest."
        ],
        "final_answer": "RFC takes the concatenated feature vector coming from the pretrained VGG16 encoders and the self-attention module and feeds it into a Random Forest.  This Random Forest builds an ensemble of decision trees, each trained on a bootstrap sample of the data and a random subset of the concatenated features at each split.  Each tree votes for a class, and the forest aggregates these votes to give the final prediction.  By selecting only a subset of features per tree, the method efficiently handles the high-dimensional concatenated features with low computational cost and high robustness.",
        "relevant_elements": [
            "RFC",
            "Self-Attention",
            "pretrained VGG16"
        ],
        "id": 308,
        "masked_question": "How does [mask1] build on decision tree ensembles to handle concatenated Self-Attention and pretrained VGG16 features?",
        "masked_number": 1,
        "masked_elements": [
            "RFC"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.00718v1_figure_2.png",
        "paperid": "2409.00718v1",
        "paper_path": "./papers/2409.00718v1.json",
        "figure_id": "2409.00718v1_figure_2.png",
        "caption": "Figure 2: The proposed framework for the combination of the Fundus and OCT images for the classification of AMD",
        "qtype": "Literature_Background",
        "response": "The RFC (Random Forest Classifier) handles the concatenated Self-Attention and pretrained VGG16 features by serving as the final classification model.\n\nHere's how it builds on decision tree ensembles to process these features:\n\n1.  **Input:** The RFC receives the features that have been extracted by the pre-trained VGG16 model and refined by the Self-Attention mechanism, then concatenated and further fused from all modality paths (YCbCr, HSV, and Grayscale OCT), and finally flattened into a single high-dimensional vector.\n2.  **Ensemble of Decision Trees:** The RFC is composed of an \"amalgamation of tree classifiers.\" Instead of a single decision tree, it leverages multiple trees.\n3.  **Random Feature Selection:** For each decision tree within the ensemble, at each node, a random subset of features from the input (the concatenated Self-Attention and VGG16 features) is chosen to make decisions and expand"
    },
    {
        "question": "How does Student leverage Teacher: Fine-tuned Model through distillation to minimize private computation?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Teacher: Fine-tuned Model",
            "Student"
        ],
        "id": 310,
        "masked_question": "How does [mask1] leverage Teacher: Fine-tuned Model through distillation to minimize private computation?",
        "masked_number": 1,
        "masked_elements": [
            "Student"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.03561v1_figure_1.png",
        "paperid": "2408.03561v1",
        "paper_path": "./papers/2408.03561v1.json",
        "figure_id": "2408.03561v1_figure_1.png",
        "caption": "Figure 1: End-to-end workflow of our system. The private and public components are highlighted in red and blue, respectively. The gray region represents our fine-tuning framework, Marill, that outputs an MPC-minimized inference model. Note that Marill differs from prior works such as MPCFormer mpcformer  since they output a (fully) fine-tuned model after fine-tuning. Consequently, the inference phase (steps 3-5) in our system also differs from the prior works in two ways: (i) only a part of the inference model is private, and thus, only that part is fed to the MPC engine, and (ii) instead of directly feeding its private input, the client inputs the partial inference result of the model s public component on its private input.\nIn the figure, we only show single token generation; subsequent tokens can be generated similarly since the client has access to all the tokens generated so far.\nAdditionally, we only show two parties each running an MPC engine instance. Orthogonally, there is also an additional helper party in some protocols that helps speed up secure inference (Appendix A).",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does MPC-minimizing Transformation reshape the foundational model to enable partitioned public and private inference?",
        "relevant_section_ids": [
            "5.1"
        ],
        "relevant_context": [
            "Our solution (Fig. 2(a)) effectively leverages public weights by deferring fine-tuning to only the final layers of the transformer, thereby also deferring MPC to these final layers.",
            "During inference, the client receives the weights for the bottom layers (identical to the open-source pre-trained model) from the server, computes the output of these layers locally, and then engages in MPC with the server for the top layers."
        ],
        "final_answer": "By applying an MPC-minimizing transformation (layer-freezing), the foundational model is restructured so that all early layers remain the public pre-trained weights and only the final layers are fine-tuned (kept private). At inference time, the public bottom layers are executed locally by the client, and only the private top layers are jointly evaluated under MPC with the server, thereby cleanly partitioning public and private computation.",
        "relevant_elements": [
            "MPC-minimizing Transformation",
            "Foundational Model"
        ],
        "id": 311,
        "masked_question": "How does [mask1] reshape the [mask2] to enable partitioned public and private inference?",
        "masked_number": 2,
        "masked_elements": [
            "MPC-minimizing Transformation",
            "Foundational Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.03561v1_figure_1.png",
        "paperid": "2408.03561v1",
        "paper_path": "./papers/2408.03561v1.json",
        "figure_id": "2408.03561v1_figure_1.png",
        "caption": "Figure 1: End-to-end workflow of our system. The private and public components are highlighted in red and blue, respectively. The gray region represents our fine-tuning framework, Marill, that outputs an MPC-minimized inference model. Note that Marill differs from prior works such as MPCFormer mpcformer  since they output a (fully) fine-tuned model after fine-tuning. Consequently, the inference phase (steps 3-5) in our system also differs from the prior works in two ways: (i) only a part of the inference model is private, and thus, only that part is fed to the MPC engine, and (ii) instead of directly feeding its private input, the client inputs the partial inference result of the model s public component on its private input.\nIn the figure, we only show single token generation; subsequent tokens can be generated similarly since the client has access to all the tokens generated so far.\nAdditionally, we only show two parties each running an MPC engine instance. Orthogonally, there is also an additional helper party in some protocols that helps speed up secure inference (Appendix A).",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does merging Text Encoder with 3D U-Net features streamline Mask Predictor training under binary supervision?",
        "relevant_section_ids": [
            "3.1",
            "3.2",
            "3.3",
            "3.4"
        ],
        "relevant_context": [
            "Section 3.1: “we design Point-Word Cross-Modal Alignment (PWCA) module … Cross-attention module aligns point-wise and word-wise feature to get the language-aware visual feature.”",
            "Section 3.2: “Query Mask Predictor (QMP) module … takes fused feature Z and learnable queries Q as input and progressively distinguishes the referring target by multi-layer cross-modal transformers. Finally, we extract the proposal masks M based on query embeddings and fused feature Z.”",
            "Section 3.3: “we adopt Query-Sentence Alignment (QSA) to better align the query feature with sentence-level feature … The final mask prediction M is produced by weighted sum of similarity score and proposed mask prediction M′.”",
            "Section 3.4: “we take the Referring 3D Segmentation task as segmentation task with only binary mask Y. Here we utilize the Binary Cross-Entropy (BCE) loss function to compute the segmentation loss.”"
        ],
        "final_answer": "By fusing the text encoder’s word-level and sentence-level features directly into the multi-scale 3D U-Net features via the PWCA cross-attention and QSA alignment modules, the network produces language-aware visual representations that feed straight into a single-stage Query Mask Predictor. This design allows training under only binary mask supervision (using BCE loss), eliminating the need for separate instance or semantic labels and simplifying the entire mask prediction pipeline.",
        "relevant_elements": [
            "Text Encoder",
            "3D U-Net",
            "Mask Predictor"
        ],
        "id": 313,
        "masked_question": "How does merging [mask1] with 3D U-Net features streamline Mask Predictor training under binary supervision?",
        "masked_number": 1,
        "masked_elements": [
            "Text Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.13294v2_figure_1.png",
        "paperid": "2410.13294v2",
        "paper_path": "./papers/2410.13294v2.json",
        "figure_id": "2410.13294v2_figure_1.png",
        "caption": "Figure 1: Comparison between the two-stage method and our single-stage method. (a) The two-stage method initially performs instance segmentation with instance labels then semantic labels to get the instance proposals and bases on the provided query to match the most relevant instance proposal. (b) Our single-stage method only utilizes the binary mask of the described object for training and integrates language and vision features during feature extraction.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What limitations arise from Mask Predictor using only Binary Label supervision in complex scenes?",
        "relevant_section_ids": [
            "1",
            "3.4"
        ],
        "relevant_context": [
            "However, 3D point cloud inherently provide a higher level of complexity and a large scale. There exists numerous different objects in a single 3D scene compared to the referring image segmentation task. Besides, binary mask has less semantic meanings compared to instance labels and semantic labels. These challenges make it difficult to supervise our model to localize and segment target objects with only binary mask.",
            "For Referring 3D Segmentation task, each query always corresponds to one target object in the point cloud scene. The target objects occupy a smaller area in the large scale of 3D point cloud. As a result, the predicted mask often includes backgrounds or other objects.",
            "Area regularization loss uniformly penalizes the predicted probabilities of all points, which can reduce the majority of the background points. However, the network struggles to differentiate between objects that possess characteristics similar to those described target object in the latent space."
        ],
        "final_answer": "Using only binary‐mask supervision in complex 3D scenes makes it hard for the Mask Predictor to accurately localize and segment the correct object. Because point clouds contain many objects and large background regions, the model tends to include background or unrelated objects in its mask, and it cannot reliably distinguish between objects with similar appearance or geometry when trained with only a coarse binary label.",
        "relevant_elements": [
            "Mask Predictor",
            "Binary Label"
        ],
        "id": 314,
        "masked_question": "What limitations arise from [mask1] using only Binary Label supervision in complex scenes?",
        "masked_number": 1,
        "masked_elements": [
            "Mask Predictor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.13294v2_figure_1.png",
        "paperid": "2410.13294v2",
        "paper_path": "./papers/2410.13294v2.json",
        "figure_id": "2410.13294v2_figure_1.png",
        "caption": "Figure 1: Comparison between the two-stage method and our single-stage method. (a) The two-stage method initially performs instance segmentation with instance labels then semantic labels to get the instance proposals and bases on the provided query to match the most relevant instance proposal. (b) Our single-stage method only utilizes the binary mask of the described object for training and integrates language and vision features during feature extraction.",
        "qtype": "Others",
        "response": "The limitations arising from the Mask Predictor using only Binary Label supervision in complex 3D scenes"
    },
    {
        "question": "How might 3D U-Net and Text Encoder integration limit scalability to larger point clouds?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "3D U-Net",
            "Text Encoder"
        ],
        "id": 315,
        "masked_question": "How might [mask1] and Text Encoder integration limit scalability to larger point clouds?",
        "masked_number": 1,
        "masked_elements": [
            "3D U-Net"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.13294v2_figure_1.png",
        "paperid": "2410.13294v2",
        "paper_path": "./papers/2410.13294v2.json",
        "figure_id": "2410.13294v2_figure_1.png",
        "caption": "Figure 1: Comparison between the two-stage method and our single-stage method. (a) The two-stage method initially performs instance segmentation with instance labels then semantic labels to get the instance proposals and bases on the provided query to match the most relevant instance proposal. (b) Our single-stage method only utilizes the binary mask of the described object for training and integrates language and vision features during feature extraction.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What vulnerabilities emerge when encoder training ignores generative model parameter updates?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Encoder",
            "Generative Model"
        ],
        "id": 316,
        "masked_question": "What vulnerabilities emerge when [mask1] training ignores [mask2] parameter updates?",
        "masked_number": 2,
        "masked_elements": [
            "Encoder",
            "Generative Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.10471v2_figure_1.png",
        "paperid": "2407.10471v2",
        "paper_path": "./papers/2407.10471v2.json",
        "figure_id": "2407.10471v2_figure_1.png",
        "caption": "Figure 1. The diagram illustrates the process of supervising generated content through generative watermarking. The synthetic content generated via GMs by Alice will be subject to regulation, while Bob s may pose a high risk to society.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What ethical risks accompany extracting watermarks for supervision and tracing?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Extractor",
            "Watermark"
        ],
        "id": 317,
        "masked_question": "What ethical risks accompany extracting [mask1] for supervision and tracing using [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Watermark",
            "Extractor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.10471v2_figure_1.png",
        "paperid": "2407.10471v2",
        "paper_path": "./papers/2407.10471v2.json",
        "figure_id": "2407.10471v2_figure_1.png",
        "caption": "Figure 1. The diagram illustrates the process of supervising generated content through generative watermarking. The synthetic content generated via GMs by Alice will be subject to regulation, while Bob s may pose a high risk to society.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates integrating Encoder outputs directly into the Generative Model for watermarked audio synthesis?",
        "relevant_section_ids": [
            "1",
            "4"
        ],
        "relevant_context": [
            "In contrast, generative watermarking integrates the watermarking process with content synthesis, utilizing the same GM for both tasks.",
            "To tackle these challenges, we proposed a generative robust audio watermarking (Groot) method tailored for diffusion-model-based audio synthesis. By directly generating watermarked audio through DMs, we can regulate and trace the use conditions of the generated audio and its originating DMs.",
            "Our approach marries generative watermarking with proactive supervision, with the training overhead being exclusive to the encoder and decoder. This eliminates the necessity for complex retraining of DMs. Such a feature makes our method versatile and readily implementable as a plug-and-play solution for any diffusion model."
        ],
        "final_answer": "By feeding the encoder’s output directly into the diffusion model, Groot embeds the watermark as an integral part of the synthesis process. This generative approach enables proactive supervision and reliable tracing of every generated audio sample back to its source model, while avoiding the need to retrain or modify the diffusion model itself—thus delivering a plug-and-play, robust watermarking solution.",
        "relevant_elements": [
            "Encoder",
            "Generative Model"
        ],
        "id": 318,
        "masked_question": "What motivates integrating [mask1] outputs directly into the [mask2] for watermarked audio synthesis?",
        "masked_number": 2,
        "masked_elements": [
            "Encoder",
            "Generative Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.10471v2_figure_1.png",
        "paperid": "2407.10471v2",
        "paper_path": "./papers/2407.10471v2.json",
        "figure_id": "2407.10471v2_figure_1.png",
        "caption": "Figure 1. The diagram illustrates the process of supervising generated content through generative watermarking. The synthetic content generated via GMs by Alice will be subject to regulation, while Bob s may pose a high risk to society.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "Why integrate Extractor for Edited content instead of relying solely on watermark embedding during generation?",
        "relevant_section_ids": [
            "4.2",
            "4.4"
        ],
        "relevant_context": [
            "The watermark extraction process is an independent process that does not necessitate the use of diffusion and denoising process. The watermark decoder is designed to disentangle features between audios and watermarks for recovering the watermark. Our approach enables precise supervision of generated content and corresponding DMs by ensuring that the extracted watermark aligns with the embedded watermark.",
            "Regulating generated contents and tracing associated DMs are achieved by verifying the existence of the watermark within the generated audio through test hypothesis. ... In simpler terms, when the watermark is 100 bits long, the extraction accuracy of 99.63% can be utilized to confirm the existence of the watermark."
        ],
        "final_answer": "Embedding a watermark at generation time alone does not guarantee that the mark can be reliably detected or verified once the audio has been edited or subjected to post-processing. By integrating a dedicated extractor (decoder), the system can recover and check the embedded watermark from edited content, ensuring robust supervision, traceability, and the ability to confirm the watermark’s presence even after arbitrary edits or attacks.",
        "relevant_elements": [
            "Extractor",
            "Edited",
            "Watermark"
        ],
        "id": 319,
        "masked_question": "Why integrate [mask1] for [mask2] content instead of relying solely on watermark embedding during generation?",
        "masked_number": 2,
        "masked_elements": [
            "Extractor",
            "Edited"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.10471v2_figure_1.png",
        "paperid": "2407.10471v2",
        "paper_path": "./papers/2407.10471v2.json",
        "figure_id": "2407.10471v2_figure_1.png",
        "caption": "Figure 1. The diagram illustrates the process of supervising generated content through generative watermarking. The synthetic content generated via GMs by Alice will be subject to regulation, while Bob s may pose a high risk to society.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "Why inject identity embedding from Identity Encoder into Rig Param Decoder to support joint multi-avatar training?",
        "relevant_section_ids": [
            "3.2.3"
        ],
        "relevant_context": [
            "Since different avatars possess varying rigs and unique physiognomy, the generated rig parameters of different avatars not only need to contain consistent expression information but also possess unique facial attributes. Hence, in the decoding process, we also incorporate the identity embedding $z^\\mathrm{id}$ and concatenate it to the expression representation."
        ],
        "final_answer": "Injecting the identity embedding into the Rig Param Decoder allows the network to condition its output on which avatar it is driving. Because each avatar has its own rig structure and facial physiognomy, supplying an identity embedding ensures the decoder can produce avatar-specific rig parameters (capturing unique facial attributes) while still using the same shared network. This enables joint training of multiple avatars in a single model.",
        "relevant_elements": [
            "Identity Encoder",
            "Rig Param Decoder"
        ],
        "id": 321,
        "masked_question": "Why inject identity embedding from [mask1] into [mask2] to support joint multi-avatar training?",
        "masked_number": 2,
        "masked_elements": [
            "Identity Encoder",
            "Rig Param Decoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.13180v2_figure_2.png",
        "paperid": "2409.13180v2",
        "paper_path": "./papers/2409.13180v2.json",
        "figure_id": "2409.13180v2_figure_2.png",
        "caption": "Figure 2. Pipeline overview. FreeAvatar first constructs an expression foundation model in two steps: facial feature space construction with Masked Autoencoder (MAE) and expression feature space optimization via contrastive learning. After that, an Expression-driven Multi-avatar Animator is constructed\nto encode the expression representations into rig parameters. Then, perceptual constraints are employed in a differentiable manner to ensure that the expressions between the input and the avatars remain consistent.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to the \"Identity Encoder\", and [mask2] refers to the \"Rig Param. Decoder\".\n\nHere's why identity embedding from the Identity Encoder is injected into the Rig Parameter Decoder to support joint multi-avatar training:\n\n1.  **Enable Joint Training for Multiple Avatars:** The paper states, \"Unlike previous works that learned in an avatar-specific manner, our method achieves multi-avatar facial transfer within a single network. Specifically, we first devise a dynamic identity injection module that allows for the joint training of multiple avatars.\" (Section 3.2)\n2.  **Account for Avatar Specificity:** The Rig Parameter Decoder is responsible for mapping expression representations to the facial rig parameters of a 3D avatar. However, \"different avatars possess varying rigs and unique physiognomy.\" Therefore, the generated rig parameters must contain both consistent expression information and \"unique facial attributes\" specific to the target avatar. (Section 3.2.3)\n3.  **Incorporate Identity Information into Decoding:** To achieve"
    },
    {
        "question": "How is the confidence-weighted triplet loss margin calibrated during expression feature space optimization?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Expression feature space optimization",
            "Triplet Loss"
        ],
        "id": 322,
        "masked_question": "How is the confidence-weighted [mask1] margin calibrated during expression feature space optimization?",
        "masked_number": 1,
        "masked_elements": [
            "Triplet Loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.13180v2_figure_2.png",
        "paperid": "2409.13180v2",
        "paper_path": "./papers/2409.13180v2.json",
        "figure_id": "2409.13180v2_figure_2.png",
        "caption": "Figure 2. Pipeline overview. FreeAvatar first constructs an expression foundation model in two steps: facial feature space construction with Masked Autoencoder (MAE) and expression feature space optimization via contrastive learning. After that, an Expression-driven Multi-avatar Animator is constructed\nto encode the expression representations into rig parameters. Then, perceptual constraints are employed in a differentiable manner to ensure that the expressions between the input and the avatars remain consistent.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the identity encoder integrate its embedding into the rig parameter decoder to preserve avatar-specific attributes?",
        "relevant_section_ids": [
            "3.2.2",
            "3.2.3"
        ],
        "relevant_context": [
            "3.2.2. Dynamic identity injection. … Specifically, for each iteration, we randomly choose a, which indicates the identity number of the target avatar. Then we employ an Embedding Layer as the identity encoder E_id to extract identity embedding z_id.",
            "3.2.3. Rig parameter decoder. … Since different avatars possess varying rigs and unique physiognomy, the generated rig parameters of different avatars not only need to contain consistent expression information but also possess unique facial attributes. Hence, in the decoding process, we also incorporate the identity embedding z_id and concatenate it to the expression representation."
        ],
        "final_answer": "The identity encoder produces an embedding z_id which is then concatenated with the expression representation before being fed into the rig parameter decoder, thereby conditioning the decoder on avatar-specific attributes.",
        "relevant_elements": [
            "Identity Encoder",
            "Rig Param. Decoder"
        ],
        "id": 323,
        "masked_question": "How does the [mask1] integrate its embedding into the [mask2] to preserve avatar-specific attributes?",
        "masked_number": 2,
        "masked_elements": [
            "Identity Encoder",
            "Rig Param. Decoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.13180v2_figure_2.png",
        "paperid": "2409.13180v2",
        "paper_path": "./papers/2409.13180v2.json",
        "figure_id": "2409.13180v2_figure_2.png",
        "caption": "Figure 2. Pipeline overview. FreeAvatar first constructs an expression foundation model in two steps: facial feature space construction with Masked Autoencoder (MAE) and expression feature space optimization via contrastive learning. After that, an Expression-driven Multi-avatar Animator is constructed\nto encode the expression representations into rig parameters. Then, perceptual constraints are employed in a differentiable manner to ensure that the expressions between the input and the avatars remain consistent.",
        "qtype": "Implementation_Details",
        "response": "The Identity Encoder (mask1) extracts an identity embedding, denoted as `e_id`. To preserve avatar-specific attributes, this `e_id` is then **concatenated** with the expression representation (`e_exp`) from the ViT Encoder. This combined input (`e_exp`, `e_id`) is then fed into the Rig Parameter Decoder (mask2). This concatenation ensures that the rig parameters generated by the decoder not only contain consistent expression information but also capture the unique facial attributes of the specific avatar. The process is described as `r_a = R_exp(e_exp, e_id)`."
    },
    {
        "question": "How does GS-Adapter decoupled cross-attention integrate joint and image embeddings for higher-order semantics fusion?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "The GS-Adapter employs a decoupled cross-attention mechanism to independently process joint and image embeddings. Let Q represent the query matrix, and K and V denote key-value pairs for joint and image embeddings, respectively.",
            "The combined output is:  A = softmax( Q K_{joint}^T / √d ) V_{joint}  +  λ · softmax( Q K_{image}^T / √d ) V_{image} ,  where λ balances image and joint feature contributions."
        ],
        "final_answer": "The GS-Adapter uses two separate cross-attention operations—one over joint embeddings and one over image embeddings—both sharing the same query Q. It computes attention outputs with their respective key–value pairs, then fuses them by summing the two results, weighted by a balancing coefficient λ, to produce higher-order semantic features.",
        "relevant_elements": [
            "GS-Adapter",
            "cross-attention"
        ],
        "id": 324,
        "masked_question": "How does [mask1] decoupled cross-attention integrate joint and image embeddings for higher-order semantics fusion?",
        "masked_number": 1,
        "masked_elements": [
            "GS-Adapter"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.17017v1_figure_2.png",
        "paperid": "2411.17017v1",
        "paper_path": "./papers/2411.17017v1.json",
        "figure_id": "2411.17017v1_figure_2.png",
        "caption": "Figure 2: Overview of TED-VITON: We present the architecture of the proposed model along with details of its block modules. (a) Our model consists of 1) DiT-GarmentNet that encodes fine-grained features of Xgsubscript𝑋𝑔X_{g}italic_X start_POSTSUBSCRIPT italic_g end_POSTSUBSCRIPT, 2) GS-Adapter [45] that captures higher-order semantics of garment image Xgsubscript𝑋𝑔X_{g}italic_X start_POSTSUBSCRIPT italic_g end_POSTSUBSCRIPT, and 3) DiT-TryOnNet, the main Transformer for processing person images. The Transformer input is formed by concatenating the noised latents Xtsubscript𝑋𝑡X_{t}italic_X start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT with the segmentation mask m𝑚mitalic_m, masked image ℰ⁢(Xmodel)ℰsubscript𝑋model\\mathcal{E}(X_{\\text{model}})caligraphic_E ( italic_X start_POSTSUBSCRIPT model end_POSTSUBSCRIPT ), and Densepose [12] ℰ⁢(xpose)ℰsubscript𝑥pose\\mathcal{E}(x_{\\text{pose}})caligraphic_E ( italic_x start_POSTSUBSCRIPT pose end_POSTSUBSCRIPT ). Additionally, a detailed description of the garment (e.g., “[D]: The clothing item is a black T-shirt…”) is generated through an LLM and fed as input to both the DiT-GarmentNet and DiT-TryOnNet. The model aims to preserve garment-specific details through a text preservation loss, which ensures that key textual features are retained. (b) Intermediate features from DiT-TryOnNet and DiT-GarmentNet are concatenated. These are then refined through joint-attention and cross-attention layers, with the GS-Adapter further contributing to the refinement process. In this architecture, the DiT-TryOnNet and GS-Adapter modules are fine-tuned, while other components remain frozen.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "What mechanism merges fine-grained DiT-GarmentNet features with DiT-TryOnNet representations within MM-DiT-Block?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Within the MM-DiT-Block (Fig. 2 (b)), fine-grained garment details fᵍₗ extracted from the l-th transformer layer of DiT-GarmentNet merge with the feature representation fᵗₗ from the corresponding l-th layer of DiT-TryOnNet to form fᵐₗ, which serves as the primary input for attention processing.",
            "Descriptive text embeddings eᵈ, generated by multimodal text encoders, are concatenated with fᵐₗ within the query, key, and value components of the joint attention mechanism (i.e., Q, K, V)."
        ],
        "final_answer": "They are merged via the joint attention mechanism: the fine-grained DiT-GarmentNet features and DiT-TryOnNet representations are combined into a single tensor fᵐₗ, which is then fed into the joint Q/K/V cross-attention block in the MM-DiT-Block.",
        "relevant_elements": [
            "DiT-GarmentNet",
            "DiT-TryOnNet",
            "MM-DiT-Block"
        ],
        "id": 325,
        "masked_question": "What mechanism merges fine-grained [mask1] features with DiT-TryOnNet representations within MM-DiT-Block?",
        "masked_number": 1,
        "masked_elements": [
            "DiT-GarmentNet"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.17017v1_figure_2.png",
        "paperid": "2411.17017v1",
        "paper_path": "./papers/2411.17017v1.json",
        "figure_id": "2411.17017v1_figure_2.png",
        "caption": "Figure 2: Overview of TED-VITON: We present the architecture of the proposed model along with details of its block modules. (a) Our model consists of 1) DiT-GarmentNet that encodes fine-grained features of Xgsubscript𝑋𝑔X_{g}italic_X start_POSTSUBSCRIPT italic_g end_POSTSUBSCRIPT, 2) GS-Adapter [45] that captures higher-order semantics of garment image Xgsubscript𝑋𝑔X_{g}italic_X start_POSTSUBSCRIPT italic_g end_POSTSUBSCRIPT, and 3) DiT-TryOnNet, the main Transformer for processing person images. The Transformer input is formed by concatenating the noised latents Xtsubscript𝑋𝑡X_{t}italic_X start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT with the segmentation mask m𝑚mitalic_m, masked image ℰ⁢(Xmodel)ℰsubscript𝑋model\\mathcal{E}(X_{\\text{model}})caligraphic_E ( italic_X start_POSTSUBSCRIPT model end_POSTSUBSCRIPT ), and Densepose [12] ℰ⁢(xpose)ℰsubscript𝑥pose\\mathcal{E}(x_{\\text{pose}})caligraphic_E ( italic_x start_POSTSUBSCRIPT pose end_POSTSUBSCRIPT ). Additionally, a detailed description of the garment (e.g., “[D]: The clothing item is a black T-shirt…”) is generated through an LLM and fed as input to both the DiT-GarmentNet and DiT-TryOnNet. The model aims to preserve garment-specific details through a text preservation loss, which ensures that key textual features are retained. (b) Intermediate features from DiT-TryOnNet and DiT-GarmentNet are concatenated. These are then refined through joint-attention and cross-attention layers, with the GS-Adapter further contributing to the refinement process. In this architecture, the DiT-TryOnNet and GS-Adapter modules are fine-tuned, while other components remain frozen.",
        "qtype": "Implementation_Details",
        "response": "In Figure 2(b) (MM-DiT-Block), the diagram shows arrows from \"DiT-TryOnNet\" and \"DiT-GarmentNet\" pointing to a circle labeled \"C\". According to the legend in Figure 2(a), \"C\" stands for \"Concat\".\n\nThe text further clarifies this in the \"DiT-TryOnNet\" section, under the description of \"MM-DiT-Block\":\n\"Within the MM-DiT-Block (Fig. 2(b)), fine-grained garment details $\\mathcal{F}^l_{g}$ extracted from the $l$-th transformer layer of DiT-GarmentNet, merge with the feature representation $F^l_{P}$ from the corresponding $l$-th layer DiT-TryOnNet to form $F^l_{P,g}$, which serves as the primary input for attention processing.\"\n\nThis indicates that the mechanism used to merge these features is concatenation.\n\nThe final answer is $\\boxed"
    },
    {
        "question": "How does DiT-GarmentNet utilize CFM loss differently than DiT-TryOnNet to retain garment details?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "SD3 leverages the Conditional Flow Matching (CFM) loss to guide rectified flow during training.",
            "The CFM loss guides the model in generating the VTO result \\(\\hat{X}\\) leveraging DiT-GarmentNet for detail retention and DiT-TryOnNet for fit adjustments based on pose and body type."
        ],
        "final_answer": "DiT-GarmentNet uses the CFM loss specifically to preserve and reconstruct fine-grained garment features—such as textures, patterns, and logos—whereas DiT-TryOnNet applies the same CFM loss primarily to ensure the garment is correctly aligned and fitted onto the person’s body and pose.",
        "relevant_elements": [
            "DiT-GarmentNet",
            "DiT-TryOnNet",
            "CFM loss"
        ],
        "id": 326,
        "masked_question": "How does [mask1] utilize CFM loss differently than DiT-TryOnNet to retain garment details?",
        "masked_number": 1,
        "masked_elements": [
            "DiT-GarmentNet"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.17017v1_figure_2.png",
        "paperid": "2411.17017v1",
        "paper_path": "./papers/2411.17017v1.json",
        "figure_id": "2411.17017v1_figure_2.png",
        "caption": "Figure 2: Overview of TED-VITON: We present the architecture of the proposed model along with details of its block modules. (a) Our model consists of 1) DiT-GarmentNet that encodes fine-grained features of Xgsubscript𝑋𝑔X_{g}italic_X start_POSTSUBSCRIPT italic_g end_POSTSUBSCRIPT, 2) GS-Adapter [45] that captures higher-order semantics of garment image Xgsubscript𝑋𝑔X_{g}italic_X start_POSTSUBSCRIPT italic_g end_POSTSUBSCRIPT, and 3) DiT-TryOnNet, the main Transformer for processing person images. The Transformer input is formed by concatenating the noised latents Xtsubscript𝑋𝑡X_{t}italic_X start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT with the segmentation mask m𝑚mitalic_m, masked image ℰ⁢(Xmodel)ℰsubscript𝑋model\\mathcal{E}(X_{\\text{model}})caligraphic_E ( italic_X start_POSTSUBSCRIPT model end_POSTSUBSCRIPT ), and Densepose [12] ℰ⁢(xpose)ℰsubscript𝑥pose\\mathcal{E}(x_{\\text{pose}})caligraphic_E ( italic_x start_POSTSUBSCRIPT pose end_POSTSUBSCRIPT ). Additionally, a detailed description of the garment (e.g., “[D]: The clothing item is a black T-shirt…”) is generated through an LLM and fed as input to both the DiT-GarmentNet and DiT-TryOnNet. The model aims to preserve garment-specific details through a text preservation loss, which ensures that key textual features are retained. (b) Intermediate features from DiT-TryOnNet and DiT-GarmentNet are concatenated. These are then refined through joint-attention and cross-attention layers, with the GS-Adapter further contributing to the refinement process. In this architecture, the DiT-TryOnNet and GS-Adapter modules are fine-tuned, while other components remain frozen.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How do GS-Adapter and DiT-TryOnNet collaboratively leverage text preservation loss for accurate text rendering?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Prior Preservation for Text Generation. To retain the model’s ability to generate accurate and clear text, such as logos and labels, we introduce a prior preservation mechanism inspired by DreamBooth [37]. This mechanism incorporates a text preservation loss to ensure text clarity and fidelity, preventing the model from losing this capability while fine-tuning for VTO tasks. As the final component of our framework, prior preservation complements the GS-Adapter and DiT-TryOnNet.",
            "As shown in Fig. 2 (a), the total loss function combines two main components: (1) the CFM loss ℒ_CFM defined in Eq. 2, which ensures high-quality VTO outputs by aligning generated images with the desired garment and pose, and (2) the text preservation loss ℒ_TP, which maintains clarity in text details. ... The text preservation loss ℒ_TP is computed as ℒ_TP = ||z – z_b||, where z is the baseline latent representation from the original model, helping to retain text fidelity in the fine-tuned output. The final loss function is given by:\n\nℒ = ℒ_CFM + λ_TP ℒ_TP\n\nwhere λ_TP controls the balance between VTO adaptation and text retention. This approach enables high-quality garment realism while preserving essential text rendering for realistic try-on images."
        ],
        "final_answer": "GS-Adapter and DiT-TryOnNet are trained together with a text preservation loss that penalizes deviation from the original diffusion model’s latent text representation. The GS-Adapter provides high-order semantic garment cues (including logos and text structure) and DiT-TryOnNet renders them onto the person. During fine-tuning, the text preservation loss (‖z – z_b‖) is added to the CFM loss, forcing the network to keep text and logo embeddings close to their pre-trained baselines. In this way, GS-Adapter’s semantics and DiT-TryOnNet’s rendering are jointly optimized to maintain accurate, clear text in the final try-on images.",
        "relevant_elements": [
            "GS-Adapter",
            "DiT-TryOnNet"
        ],
        "id": 327,
        "masked_question": "How do [mask1] and [mask2] collaboratively leverage text preservation loss for accurate text rendering?",
        "masked_number": 2,
        "masked_elements": [
            "GS-Adapter",
            "DiT-TryOnNet"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.17017v1_figure_2.png",
        "paperid": "2411.17017v1",
        "paper_path": "./papers/2411.17017v1.json",
        "figure_id": "2411.17017v1_figure_2.png",
        "caption": "Figure 2: Overview of TED-VITON: We present the architecture of the proposed model along with details of its block modules. (a) Our model consists of 1) DiT-GarmentNet that encodes fine-grained features of Xgsubscript𝑋𝑔X_{g}italic_X start_POSTSUBSCRIPT italic_g end_POSTSUBSCRIPT, 2) GS-Adapter [45] that captures higher-order semantics of garment image Xgsubscript𝑋𝑔X_{g}italic_X start_POSTSUBSCRIPT italic_g end_POSTSUBSCRIPT, and 3) DiT-TryOnNet, the main Transformer for processing person images. The Transformer input is formed by concatenating the noised latents Xtsubscript𝑋𝑡X_{t}italic_X start_POSTSUBSCRIPT italic_t end_POSTSUBSCRIPT with the segmentation mask m𝑚mitalic_m, masked image ℰ⁢(Xmodel)ℰsubscript𝑋model\\mathcal{E}(X_{\\text{model}})caligraphic_E ( italic_X start_POSTSUBSCRIPT model end_POSTSUBSCRIPT ), and Densepose [12] ℰ⁢(xpose)ℰsubscript𝑥pose\\mathcal{E}(x_{\\text{pose}})caligraphic_E ( italic_x start_POSTSUBSCRIPT pose end_POSTSUBSCRIPT ). Additionally, a detailed description of the garment (e.g., “[D]: The clothing item is a black T-shirt…”) is generated through an LLM and fed as input to both the DiT-GarmentNet and DiT-TryOnNet. The model aims to preserve garment-specific details through a text preservation loss, which ensures that key textual features are retained. (b) Intermediate features from DiT-TryOnNet and DiT-GarmentNet are concatenated. These are then refined through joint-attention and cross-attention layers, with the GS-Adapter further contributing to the refinement process. In this architecture, the DiT-TryOnNet and GS-Adapter modules are fine-tuned, while other components remain frozen.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does prompt guidance from Text Encoder enhance Frame Encoder feature extraction relative to vanilla frame methods?",
        "relevant_section_ids": [
            "3.1",
            "3.4"
        ],
        "relevant_context": [
            "While the CLIP Text Encoder transforms the point- and frame-related prompts of the event label into the frame-prompt feature F_txt^f and the point-prompt feature F_txt^p, which guide the semantic consistency of F^f and F^p via contrastive loss L^f and L^p, respectively.",
            "Text-Prompt Embedding. The CLIP Text Encoder extracts text features from the frame- and point-related prompts, converting them into corresponding text features, e.g., F_txt^f and F_txt^p, where C indicates the number of action class.",
            "Training Process. We constrain the event-text consistency via the contrastive loss L^f between the event-frame feature and the frame-prompt feature."
        ],
        "final_answer": "By converting manually designed, class-specific prompts into text embeddings via the CLIP Text Encoder and then enforcing a contrastive loss between those prompt embeddings and the Frame Encoder’s output, the model aligns visual frame features with language semantics. This ‘prompt guidance’ encourages the Frame Encoder to learn more discriminative, semantically meaningful features than a vanilla frame-only encoder that lacks any language-based supervision.",
        "relevant_elements": [
            "Text Encoder",
            "Frame Encoder"
        ],
        "id": 328,
        "masked_question": "How does prompt guidance from [mask1] enhance [mask2] feature extraction relative to vanilla frame methods?",
        "masked_number": 2,
        "masked_elements": [
            "Text Encoder",
            "Frame Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.18328v1_figure_1.png",
        "paperid": "2411.18328v1",
        "paper_path": "./papers/2411.18328v1.json",
        "figure_id": "2411.18328v1_figure_1.png",
        "caption": "Figure 1: Insight of our work. Previous methods are limited to using “heavy” frame-specific encoders to extract features from densely stacked event frames or employing “light” point encoders to process sparse raw event points. Our Frame&Point-based approach integrates prompt-aware language semantic information to achieve a synergistic enhancement among the distinct event representations, balancing efficiency and accuracy.",
        "qtype": "Literature_Background",
        "response": "The prompt guidance from the **Text Encoder** (mask1) enhances the **Frame Encoder's** (mask2)"
    },
    {
        "question": "How does contextualizing event points compare with sliding window sampling for Point Encoder input?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "For these methods, the sparse and asynchronous event stream is sampled and aggregated through a size-fixed sliding window, as shown in Fig. 1 (b). Thus, such a sampling strategy not only disrupts the temporal correlations between events but also operates independently of the subsequent feature extraction.",
            "We address the challenges mentioned above by introducing a Spiking-like Context Learner (SCL) that can extract contextual event points from redundant raw events using Spiking Residual Recurrent Neural Network (SRRNN) and effectively integrate them with subsequent feature exploration."
        ],
        "final_answer": "Unlike fixed-size sliding windows that break event-to-event temporal correlations and sample independently of feature extraction, contextualizing event points via the Spiking-like Context Learner dynamically selects and aggregates points based on learned spiking thresholds, preserving temporal dependencies and tightly coupling sampling with subsequent point‐feature encoding.",
        "relevant_elements": [
            "Contextualizing",
            "Point Encoder"
        ],
        "id": 329,
        "masked_question": "How does [mask1] event points compare with sliding window sampling for Point Encoder input?",
        "masked_number": 1,
        "masked_elements": [
            "Contextualizing"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.18328v1_figure_1.png",
        "paperid": "2411.18328v1",
        "paper_path": "./papers/2411.18328v1.json",
        "figure_id": "2411.18328v1_figure_1.png",
        "caption": "Figure 1: Insight of our work. Previous methods are limited to using “heavy” frame-specific encoders to extract features from densely stacked event frames or employing “light” point encoders to process sparse raw event points. Our Frame&Point-based approach integrates prompt-aware language semantic information to achieve a synergistic enhancement among the distinct event representations, balancing efficiency and accuracy.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Text Encoder integration facilitate alignment between Frame Encoder and Point Encoder outputs?",
        "relevant_section_ids": [
            "3.1",
            "3.4"
        ],
        "relevant_context": [
            "While the CLIP Text Encoder transforms the point- and frame-related prompts of the event label into the frame-prompt feature T_f and the point-prompt feature T_p, which guide the semantic consistency of F_f and F_p via contrastive loss L_f and L_p, respectively. Here, P indicates the number of action classes.",
            "Text-Prompt Embedding. The CLIP Text Encoder extracts text features from the frame- and point-related prompts, converting them into corresponding text features, e.g., T_f and T_p, where P indicates the number of action class.",
            "Training Process. We constrain the event-text consistency via the contrastive loss L between the event-frame/point feature and the frame/point-prompt feature as follows: … Based on Eq. (10), we obtain specific contrastive losses L_f and L_p for the event-frame embedding and event-point embedding branches, respectively. The final overall recognition loss is composed of L_f and L_p, as follows:"
        ],
        "final_answer": "By feeding class‐specific language prompts for both event frames and event points into a shared CLIP Text Encoder, the model obtains two sets of text features (T_f for frames and T_p for points). These text features serve as anchors in two parallel contrastive losses (L_f and L_p) that pull the Frame Encoder’s outputs (F_f) toward T_f and the Point Encoder’s outputs (F_p) toward T_p. In this way, text‐guided contrastive learning aligns both visual modalities in a common semantic space.",
        "relevant_elements": [
            "Text Encoder",
            "Frame Encoder",
            "Point Encoder"
        ],
        "id": 330,
        "masked_question": "How does [mask1] integration facilitate alignment between [mask2] and Point Encoder outputs?",
        "masked_number": 2,
        "masked_elements": [
            "Text Encoder",
            "Frame Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.18328v1_figure_1.png",
        "paperid": "2411.18328v1",
        "paper_path": "./papers/2411.18328v1.json",
        "figure_id": "2411.18328v1_figure_1.png",
        "caption": "Figure 1: Insight of our work. Previous methods are limited to using “heavy” frame-specific encoders to extract features from densely stacked event frames or employing “light” point encoders to process sparse raw event points. Our Frame&Point-based approach integrates prompt-aware language semantic information to achieve a synergistic enhancement among the distinct event representations, balancing efficiency and accuracy.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does contextualizing enhance Point Encoder’s representation of asynchronous event points?",
        "relevant_section_ids": [
            "3.2",
            "4.5"
        ],
        "relevant_context": [
            "Inspired by [51], we find that spiking firing in Spiking Neural Networks (SNN) aligns well with event-based sampling. Therefore, we address the challenges mentioned above by introducing a Spiking-like Context Learner (SCL) that can extract contextual event points from redundant raw events using Spiking Residual Recurrent Neural Network (SRRNN) and effectively integrate them with subsequent feature exploration.",
            "Taking into account the sparsity in spatial dimensions and the density in temporal dimensions of event data, we employ recurrent synaptic connectivity to extract a contiguous and information-dense subset of event points embedded with contextual information, as follows: ... Finally, we aggregate contextual event points Pc from E, where H and W denote the spatial size, T denotes the sampled timestep and C is the channel.",
            "To explore the superiority of the designed SCL, we visualize the events before/after processed by SCL on the SeAct dataset. Notably, we employ the intuitive stacked frames to represent the event points, with red indicating the event before SCL processing and blue indicating the event after SCL processing. As shown in Fig. 4, redundant event points are markedly diminished while critical event points are retained by the SCL. The results demonstrate that our proposed SCL effectively extracts raw event points by leveraging spatiotemporal contextual information, thereby alleviating the burden of feature exploration from event points."
        ],
        "final_answer": "Contextualizing—via the Spiking-like Context Learner—selects and aggregates raw event points into contiguous, information-dense slices governed by spiking thresholds. By pruning redundant points and emphasizing those with rich spatiotemporal context, it delivers a compact, context-aware sequence of event points to the Point Encoder, greatly enhancing its representation of asynchronous streams.",
        "relevant_elements": [
            "Contextualizing",
            "Point Encoder"
        ],
        "id": 331,
        "masked_question": "How does [mask1] enhance [mask2]’s representation of asynchronous event points?",
        "masked_number": 2,
        "masked_elements": [
            "Contextualizing",
            "Point Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.18328v1_figure_1.png",
        "paperid": "2411.18328v1",
        "paper_path": "./papers/2411.18328v1.json",
        "figure_id": "2411.18328v1_figure_1.png",
        "caption": "Figure 1: Insight of our work. Previous methods are limited to using “heavy” frame-specific encoders to extract features from densely stacked event frames or employing “light” point encoders to process sparse raw event points. Our Frame&Point-based approach integrates prompt-aware language semantic information to achieve a synergistic enhancement among the distinct event representations, balancing efficiency and accuracy.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does HS-Adapter's integration of heterogeneous spaces refine attention maps for diverse nuclei domains?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "However, such homogeneous space mapping methods are difficult to learn heterogeneous relationships between different nuclei domains. To tackle the issue, we propose the HS-Adapter that leverages heterogeneous space integration to enhance the domain-specific feature representation of nuclei images.",
            "To improve the information interaction within Multi-Head Attention (MHA) layers, the HS-Adapter respectively concatenates learnable parameters A and B with the query Q and value V branches of SAM, where A and B are projection layers that map embeddings Z into feature spaces with i-th target mapping channel, U_i and V_i are up-projections. Additionally, we place the softmax operation s on W to calculate the weight of each feature space. Finally, W-weighted different feature spaces are merged into a heterogeneous space that is used to update the original query and value projection layers of SAM, guiding the computation of attention maps as: Attention(Q′,K,V′)=Softmax( Q′K^T/√d )V′."
        ],
        "final_answer": "The HS-Adapter projects the image embeddings into multiple learnable feature spaces (heterogeneous spaces) via parallel projection and up-projection layers. It then uses a softmax-weighted combination of these spaces to form a fused heterogeneous embedding, which replaces the standard query and value inputs in the Multi-Head Attention. By doing so, the attention maps are computed over a richer, domain-specific mixture of representations, allowing the model to better capture and distinguish diverse nuclei appearances across different domains.",
        "relevant_elements": [
            "HS-Adapter"
        ],
        "id": 332,
        "masked_question": "How does [mask1]'s integration of heterogeneous spaces refine attention maps for diverse nuclei domains?",
        "masked_number": 1,
        "masked_elements": [
            "HS-Adapter"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.11787v2_figure_1.png",
        "paperid": "2408.11787v2",
        "paper_path": "./papers/2408.11787v2.json",
        "figure_id": "2408.11787v2_figure_1.png",
        "caption": "Figure 1: The overview of our NuSegDG for domain-generalized nuclei image segmentation. (a) Heterogeneous Space Adapter. (b) Gaussian-Kernel Prompt Encoder. (c) Two-Stage Mask Decoder.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How do semantic prompts from GKP-Encoder guide cross-attention in TSM-Decoder to improve instance mask decoding?",
        "relevant_section_ids": [
            "3.3",
            "3.4"
        ],
        "relevant_context": [
            "In this way, the proposed GKP-Encoder, driven by the single-point annotation, not only is labor-saving compared to the box annotation but also provides efficient semantic prompts P_sem and position prompts P_pos for guiding segmentation decoding.",
            "Following this, we combine the image embedding E with semantic information prompts P_sem: E' = E ⊕ P_sem, where ⊕ stands for the element-wise addition operation. Further, we conduct cross-attention with updated query Q' to generate decoding embeddings D."
        ],
        "final_answer": "The GKP-Encoder produces a set of semantic prompt embeddings (P_sem) from the point-based density map. In the TSM-Decoder, these semantic prompts are added element-wise to the frozen image embeddings (E) to form enriched embeddings (E′=E⊕P_sem). During cross-attention, the decoder’s query tokens attend over these enriched keys and values, which injects nucleus-specific semantic cues directly into the attention mechanism and leads to more accurate instance mask decoding.",
        "relevant_elements": [
            "GKP-Encoder",
            "TSM-Decoder"
        ],
        "id": 333,
        "masked_question": "How do semantic prompts from [mask1] guide cross-attention in [mask2] to improve instance mask decoding?",
        "masked_number": 2,
        "masked_elements": [
            "GKP-Encoder",
            "TSM-Decoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.11787v2_figure_1.png",
        "paperid": "2408.11787v2",
        "paper_path": "./papers/2408.11787v2.json",
        "figure_id": "2408.11787v2_figure_1.png",
        "caption": "Figure 1: The overview of our NuSegDG for domain-generalized nuclei image segmentation. (a) Heterogeneous Space Adapter. (b) Gaussian-Kernel Prompt Encoder. (c) Two-Stage Mask Decoder.",
        "qtype": "Experimental_Results",
        "response": "The semantic prompts from the GKP-Encoder ([mask1]), denoted as P_sem, are generated from a high-quality density map derived from single-point annotations.\n\nHere's how they guide cross-attention in"
    },
    {
        "question": "What are possible limitations of HS-Adapter when handling highly imbalanced nuclei domain distributions?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "HS-Adapter"
        ],
        "id": 334,
        "masked_question": "What are possible limitations of [mask1] when handling highly imbalanced nuclei domain distributions?",
        "masked_number": 1,
        "masked_elements": [
            "HS-Adapter"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.11787v2_figure_1.png",
        "paperid": "2408.11787v2",
        "paper_path": "./papers/2408.11787v2.json",
        "figure_id": "2408.11787v2_figure_1.png",
        "caption": "Figure 1: The overview of our NuSegDG for domain-generalized nuclei image segmentation. (a) Heterogeneous Space Adapter. (b) Gaussian-Kernel Prompt Encoder. (c) Two-Stage Mask Decoder.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative approaches could replace GKP-Encoder’s Gaussian prompts to reduce sensitivity to varied nuclei sizes?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "GKP-Encoder"
        ],
        "id": 335,
        "masked_question": "What alternative approaches could replace [mask1]’s Gaussian prompts to reduce sensitivity to varied nuclei sizes?",
        "masked_number": 1,
        "masked_elements": [
            "GKP-Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2408.11787v2_figure_1.png",
        "paperid": "2408.11787v2",
        "paper_path": "./papers/2408.11787v2.json",
        "figure_id": "2408.11787v2_figure_1.png",
        "caption": "Figure 1: The overview of our NuSegDG for domain-generalized nuclei image segmentation. (a) Heterogeneous Space Adapter. (b) Gaussian-Kernel Prompt Encoder. (c) Two-Stage Mask Decoder.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What are limitations of binary node pair classifier in capturing community structures under extreme class imbalance?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "binary node pair classifier"
        ],
        "id": 336,
        "masked_question": "What are limitations of [mask1] in capturing community structures under extreme class imbalance?",
        "masked_number": 1,
        "masked_elements": [
            "binary node pair classifier"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.00670v1_figure_1.png",
        "paperid": "2409.00670v1",
        "paper_path": "./papers/2409.00670v1.json",
        "figure_id": "2409.00670v1_figure_1.png",
        "caption": "Figure 1: An overview about the applications of (i) foundation models (e.g., LLMs) and (ii) our PR-GPT method, including the (a) offline pre-training and (b) online inference. The inference of PR-GPT includes the (b.1) online generalization and (b.2) online refinement.",
        "qtype": "Others",
        "response": "The question asks about the limitations of the `Binary Node Pair Classifier` in capturing community structures under extreme class imbalance.\n\n1.  **Identify the masked component:** The `[mask1]` refers to the \"Binary Node Pair Classifier\" component within the PR-GPT model, as highlighted in the image.\n2.  **Scan the text for mentions of \"Binary Node Pair Classifier\":** The text details the model architecture in Section III-A, particularly in III-A3 \"Binary Node Pair Classification\", where it describes how this classifier estimates whether two nodes are in the same block. It also mentions that it adopts the \"same as our prior method\".\n3.  **Scan the text for \"class imbalance\" or related limitations of this component:** I thoroughly reviewed the provided context, including the Introduction, Problem Statement & Preliminaries, and Methodology sections. While the text discusses the overall problem of graph partitioning, the challenges with large-scale graphs, and the efficiency and quality of PR-GPT under various settings, it **does not mention any specific limitations of the \"Binary Node Pair Classifier\" related to \"extreme class imbalance\"**. The training objectives are mentioned (unsupervised modularity maximization and supervised binary cross-entropy), and data heterogeneity (ratio of within-block to between-block edges, block size heterogeneity) is mentioned as a characteristic of the datasets used for evaluation, but these are properties of the *data* and *problem*, not stated as limitations of the *classifier* itself in handling imbalance.\n\nTherefore, the provided context does not offer information about the limitations of the \"Binary Node Pair Classifier\" in capturing community structures under extreme class imbalance.\n\nunanswerable."
    },
    {
        "question": "What scalability bottlenecks arise in online refinement using an efficient GP method on massive graphs?",
        "relevant_section_ids": [
            "3.3.2",
            "3.4"
        ],
        "relevant_context": [
            "“Compared with running a refinement method on G from scratch, online refinement may be much more efficient, since it reduces the number of nodes to be processed (e.g., reducing N nodes to N′ super-nodes in Fig. 2). Therefore, PR-GPT has the potential to achieve faster GP w.r.t. the refinement method.” (Section III-C2)",
            "“Our analysis about inference time (see Table VII) shows that online refinement is the major bottleneck of PR-GPT.” (Section III-D)"
        ],
        "final_answer": "Even though PR-GPT’s online refinement works on a much smaller super-graph (by merging blocks into super-nodes), running the chosen GP refinement algorithm (e.g., InfoMap) on that weighted super-graph still dominates the total inference time. In practice, this refinement step becomes the major scalability bottleneck when applying PR-GPT to very large graphs.",
        "relevant_elements": [
            "online refinement",
            "efficient GP method"
        ],
        "id": 337,
        "masked_question": "What scalability bottlenecks arise in [mask1] using an [mask2] on massive graphs?",
        "masked_number": 2,
        "masked_elements": [
            "online refinement",
            "efficient GP method"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.00670v1_figure_1.png",
        "paperid": "2409.00670v1",
        "paper_path": "./papers/2409.00670v1.json",
        "figure_id": "2409.00670v1_figure_1.png",
        "caption": "Figure 1: An overview about the applications of (i) foundation models (e.g., LLMs) and (ii) our PR-GPT method, including the (a) offline pre-training and (b) online inference. The inference of PR-GPT includes the (b.1) online generalization and (b.2) online refinement.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates freezing parameters during online generalization rather than fine-tuning on new large graphs?",
        "relevant_section_ids": [
            "1",
            "3.3.1"
        ],
        "relevant_context": [
            "In this study, we explore the potential of deep graph learning (DGL) to obtain a better trade-off between the quality and efficiency of GP. … After that, we directly generalize the pre-trained model (with frozen model parameters) to large graphs  (e.g., more than M nodes) via inductive inference [16 ###reference_b16###] and derive feasible GP results  without re-training (i.e., online generalization).",
            "III-C1 Online Generalization: After the offline pre-training, we can generalize PR-GPT to a large graph  with frozen parameters  and derive a feasible partition  via Algorithm 1 ###reference_###."
        ],
        "final_answer": "Freezing the parameters enables purely inductive inference on new, large graphs without any additional training, which dramatically reduces online compute cost and latency. By not fine-tuning, PR-GPT can immediately produce high-quality partitions at inference time—akin to how an LLM like ChatGPT serves responses without retraining—thus ensuring high efficiency in the online generalization phase.",
        "relevant_elements": [
            "online generalization",
            "frozen parameters"
        ],
        "id": 338,
        "masked_question": "What motivates freezing parameters during [mask1] rather than fine-tuning on new large graphs?",
        "masked_number": 1,
        "masked_elements": [
            "online generalization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.00670v1_figure_1.png",
        "paperid": "2409.00670v1",
        "paper_path": "./papers/2409.00670v1.json",
        "figure_id": "2409.00670v1_figure_1.png",
        "caption": "Figure 1: An overview about the applications of (i) foundation models (e.g., LLMs) and (ii) our PR-GPT method, including the (a) offline pre-training and (b) online inference. The inference of PR-GPT includes the (b.1) online generalization and (b.2) online refinement.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to the \"Online Generalization\" and \"Online Refinement\" phases, illustrated in the red box in Figure 1 as (b.1) and (b.2) respectively.\n\nThe motivation for freezing parameters during these phases rather than fine-tuning on new large graphs is primarily to ensure **high inference efficiency without re-training** and to **transfer the ability to derive high-quality Graph Partitioning (GP) results from pre-training data to new unseen graphs**.\n\nAs stated in the text:\n1.  \"After that, we directly generalize the pre-trained model (with frozen model parameters) to large graphs (e.g., more than M nodes) via inductive inference... and derive feasible GP results without re"
    },
    {
        "question": "What rationale supports binary node pair classification combined with GNN embeddings for graph partitioning?",
        "relevant_section_ids": [
            "3.1",
            "3.1.2",
            "3.1.3"
        ],
        "relevant_context": [
            "PR-GPT reformulates GP as the binary node pair classification and follows a GNN-based end-to-end architecture. An auxiliary variable yᵢⱼ is introduced to represent the binary classification result, where yᵢⱼ=1 if nodes i,j are in the same block and 0 otherwise.",
            "The extracted features H are fed into a multi-layer GNN, which further derives community-preserving embeddings. ... This mechanism further enhances the ability of H to capture community structures, since it forces nodes i with similar neighbors (i.e., dense local linkage) to have similar representations.",
            "Given a node pair (i,j), PR-GPT adopts the following binary classifier ... Namely, ŷᵢⱼ is estimated via a combination of the (i) Euclidean distance and (ii) inner product w.r.t. corresponding embeddings."
        ],
        "final_answer": "By treating graph partitioning as a collection of binary decisions on whether two nodes belong to the same block, PR-GPT can leverage a standard GNN to produce embeddings that naturally cluster nodes with dense mutual connectivity. The GNN’s neighbor-aggregation ensures that nodes in the same community have similar representations, and a lightweight pairwise classifier (using distances and inner products over these embeddings) can then accurately predict pairwise block membership. Finally, positive predictions induce connected components that form the final partition.",
        "relevant_elements": [
            "binary node pair classifier",
            "GNN"
        ],
        "id": 339,
        "masked_question": "What rationale supports [mask1] combined with [mask2] embeddings for graph partitioning?",
        "masked_number": 2,
        "masked_elements": [
            "binary node pair classifier",
            "GNN"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.00670v1_figure_1.png",
        "paperid": "2409.00670v1",
        "paper_path": "./papers/2409.00670v1.json",
        "figure_id": "2409.00670v1_figure_1.png",
        "caption": "Figure 1: An overview about the applications of (i) foundation models (e.g., LLMs) and (ii) our PR-GPT method, including the (a) offline pre-training and (b) online inference. The inference of PR-GPT includes the (b.1) online generalization and (b.2) online refinement.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What guides the design of an embedding-based anomaly detector preceding slow chain-of-thought reasoning?",
        "relevant_section_ids": [
            "1",
            "4.1"
        ],
        "relevant_context": [
            "As shown in Fig. 1, AESOP splits the monitoring task into two separate stages: The first is rapid, real-time detection of anomalies—conditions that deviate from the nominal conditions where the robot performs reliably—by querying similarity with previously recorded observations within the contextual embedding space of an LLM.",
            "Fast Anomaly Detection: To detect anomalies, we need to inform a FM of the context within which the autonomous system is known to be trustworthy. The prior, nominal experiences of the robot serve as such grounding. We construct an anomaly score function s to query whether a current observation oₜ differs from the previous experiences in Dₙ. We do not require any particular methodology to generate the score, we just require that scoring an observation is computationally feasible in real-time; that is, within a single time step. This work emphasizes the value of computing anomaly scores using language-based representations, which we show capture the semantics of the observation within the context of the robot’s task."
        ],
        "final_answer": "The embedding-based anomaly detector is guided by grounding the current observation in the robot’s prior nominal experiences and the need for a lightweight, real-time score: it embeds the observation with a small FM, compares it (e.g., via cosine similarity) against a cache of embeddings from safe, previously seen data, and flags an anomaly if the score crosses a threshold calibrated on those nominal examples.",
        "relevant_elements": [
            "Embedding-based Anomaly Detector",
            "Autoregressive Generation"
        ],
        "id": 340,
        "masked_question": "What guides the design of a [mask1] preceding slow [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Embedding-based Anomaly Detector",
            "Autoregressive Generation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.08735v1_figure_1.png",
        "paperid": "2407.08735v1",
        "paper_path": "./papers/2407.08735v1.json",
        "figure_id": "2407.08735v1_figure_1.png",
        "caption": "Figure 1: We present an embedding-based runtime monitoring scheme using fast and slow language model reasoners in concert. During nominal operation, the fast reasoner differentiates between nominal and anomalous robot observations. If an anomaly is flagged, the system enters a fallback-safe state while the slow reasoner determines the anomaly s hazard. In this fallback-safe state, we guarantee access to a set of safe recovery plans (if the anomaly is consequential) and access to continued nominal operation (if the anomaly is inconsequential).",
        "qtype": "Design_Rationale",
        "response": "The design of the **embedding-based anomaly detector** (mask1) is guided by its purpose to differentiate between nominal and anomalous robot observations in real-time. Specifically, it is designed to detect conditions that deviate from the **robot's prior, nominal experiences**—the situations where the system is known to be trustworthy and reliable.\n\nTo achieve this, the anomaly detector creates a cache of embedding vectors from the robot's offline prior experiences. At runtime, it computes an embedding for the current observation and then uses an anomaly score function (e.g., measuring similarity) to determine how much the current observation differs from these cached nominal experiences. A calibrated threshold then classifies the observation as either nominal or anomalous."
    },
    {
        "question": "How does leveraging MPC-maintained Tree of Recovery Trajectories mitigate autoregressive generation latency?",
        "relevant_section_ids": [
            "4.1",
            "4.2"
        ],
        "relevant_context": [
            "Whether inference is run onboard or the model is queried remotely over unreliable networks in the cloud, we must account for the latency that autoregressive reasoning introduces. For example, a fast moving vehicle may collide with an anomalous obstacle if its reaction time is too slow. Therefore, we account for the LLM’s compute latency by assuming that it takes at most τ timesteps to receive the output string from the slow reasoner.",
            "The second fixes consensus for τ timesteps along the set of recovery trajectories, in effect generating a branching tree of recovery trajectories. If we then use the fast anomaly detector to both trigger execution of the first τ actions of the recovery trajectories and the slower reasoning, we ensure that the options we provide to the slow reasoner are still available when it returns its output."
        ],
        "final_answer": "By maintaining a branching tree of recovery trajectories that fixes the first τ actions of each candidate intervention, the MPC controller can immediately begin executing those pre-planned fallback steps as soon as an anomaly is detected. This effectively buys the τ timesteps needed for the slow, autoregressive LLM reasoning to complete, ensuring that all safe intervention options remain dynamically feasible despite the LLM’s inference latency.",
        "relevant_elements": [
            "MPC-maintained Tree of Recovery Trajectories",
            "Autoregressive Generation"
        ],
        "id": 341,
        "masked_question": "How does leveraging [mask1] mitigate [mask2] latency?",
        "masked_number": 2,
        "masked_elements": [
            "MPC-maintained Tree of Recovery Trajectories",
            "Autoregressive Generation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.08735v1_figure_1.png",
        "paperid": "2407.08735v1",
        "paper_path": "./papers/2407.08735v1.json",
        "figure_id": "2407.08735v1_figure_1.png",
        "caption": "Figure 1: We present an embedding-based runtime monitoring scheme using fast and slow language model reasoners in concert. During nominal operation, the fast reasoner differentiates between nominal and anomalous robot observations. If an anomaly is flagged, the system enters a fallback-safe state while the slow reasoner determines the anomaly s hazard. In this fallback-safe state, we guarantee access to a set of safe recovery plans (if the anomaly is consequential) and access to continued nominal operation (if the anomaly is inconsequential).",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does the embedding-based anomaly detector calibrate its anomaly threshold using nominal experience embeddings online?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "Finally, to classify whether an observation should be treated as nominal or anomalous, we can calibrate a threshold τ as the p quantile of the nominal prior experiences, i.e., the smallest value of A(x) that upper bounds at least p nominal samples.",
            "Note that for nominal embeddings, we must compute the anomaly score A(x_i) in a leave-one-out fashion, since A(x_i) for i."
        ],
        "final_answer": "The detector computes anomaly scores for all prior (nominal) embeddings—scoring each nominal point in a leave-one-out manner—and then sets its threshold τ to the empirical p-th quantile of those scores (i.e. the smallest score exceeding at least p of the nominal samples).",
        "relevant_elements": [
            "Embedding-based Anomaly Detector"
        ],
        "id": 342,
        "masked_question": "How does the [mask1] calibrate its anomaly threshold using nominal experience embeddings online?",
        "masked_number": 1,
        "masked_elements": [
            "Embedding-based Anomaly Detector"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.08735v1_figure_1.png",
        "paperid": "2407.08735v1",
        "paper_path": "./papers/2407.08735v1.json",
        "figure_id": "2407.08735v1_figure_1.png",
        "caption": "Figure 1: We present an embedding-based runtime monitoring scheme using fast and slow language model reasoners in concert. During nominal operation, the fast reasoner differentiates between nominal and anomalous robot observations. If an anomaly is flagged, the system enters a fallback-safe state while the slow reasoner determines the anomaly s hazard. In this fallback-safe state, we guarantee access to a set of safe recovery plans (if the anomaly is consequential) and access to continued nominal operation (if the anomaly is inconsequential).",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the MPC-maintained tree of recovery trajectories coordinate consensus across embedding-based anomaly detector and autoregressive generation latencies?",
        "relevant_section_ids": [
            "4.1",
            "4.2"
        ],
        "relevant_context": [
            "4.1: Whether inference is run onboard or the model is queried remotely over unreliable networks in the cloud, we must account for the latency that autoregressive reasoning introduces. For example, a fast moving vehicle may collide with an anomalous obstacle if its reaction time is too slow. Therefore, we account for the LLM’s compute latency by assuming that it takes at most k timesteps to receive the output string from the slow reasoner.",
            "4.2: In addition, the MPC problem includes two consensus constraints, one associated with the fast anomaly detector and the other with the slow reasoner. First, by fixing consensus along the first input of the nominal trajectory and all the recovery trajectories, we ensure that the set of feasible interventions is non-empty during nominal operation. The second fixes consensus for k timesteps along the set of recovery trajectories, in effect generating a branching tree of recovery trajectories. If we then use the fast anomaly detector to both trigger execution of the first k actions of the recovery trajectories and the slower reasoning, we ensure that the options we provide to the slow reasoner are still available when it returns its output."
        ],
        "final_answer": "The MPC enforces two consensus constraints: (1) it locks the very first control input across the nominal plan and every recovery trajectory so that, as soon as the embedding‐based anomaly detector fires, the robot can immediately begin following one of the recovery branches; and (2) it keeps all recovery trajectories identical for k timesteps (the worst‐case LLM response time). This constructs a branching tree of fallback plans that remain dynamically feasible while the slow, autoregressive LLM is still reasoning, guaranteeing that whichever intervention the LLM eventually selects will still be available.",
        "relevant_elements": [
            "MPC-maintained Tree of Recovery Trajectories",
            "Embedding-based Anomaly Detector",
            "Autoregressive Generation"
        ],
        "id": 343,
        "masked_question": "How does the [mask1] coordinate consensus across embedding-based anomaly detector and autoregressive generation latencies?",
        "masked_number": 1,
        "masked_elements": [
            "MPC-maintained Tree of Recovery Trajectories"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.08735v1_figure_1.png",
        "paperid": "2407.08735v1",
        "paper_path": "./papers/2407.08735v1.json",
        "figure_id": "2407.08735v1_figure_1.png",
        "caption": "Figure 1: We present an embedding-based runtime monitoring scheme using fast and slow language model reasoners in concert. During nominal operation, the fast reasoner differentiates between nominal and anomalous robot observations. If an anomaly is flagged, the system enters a fallback-safe state while the slow reasoner determines the anomaly s hazard. In this fallback-safe state, we guarantee access to a set of safe recovery plans (if the anomaly is consequential) and access to continued nominal operation (if the anomaly is inconsequential).",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does dynamic camera pose synthesis apply perturbation κ to OEM parameters while sampling φ, θ, and α?",
        "relevant_section_ids": [
            "4.1.1",
            "4.1.2"
        ],
        "relevant_context": [
            "To create a robust model capable of handling changes in calibration, we introduce perturbations to the OEM camera parameters, generating perturbed parameters P′, where δ represents the perturbation defined as P′ = P + δ, with κ controlling the maximum desired perturbation.",
            "Specifically, the centroid’s position P on the hemisphere is determined by: P = [r sin φ cos θ, r sin φ sin θ, r cos φ], where r denotes the hemisphere radius, and φ, θ are angles sampled from a uniform distribution, ensuring the centroid is randomly positioned over the hemisphere.",
            "Next, a rotation R is applied to align the camera’s viewing direction towards the fiducials’ centroid, and then a secondary random rotation R′ is applied by an intrinsic rotation angle α around the centroid point."
        ],
        "final_answer": "Dynamic camera pose synthesis first perturbs the OEM intrinsic and extrinsic parameters by adding a random offset δ to each parameter (P′ = P + δ) with δ bounded by κ. Then it samples φ and θ uniformly to place the camera’s centroid on a hemisphere of radius r, applies a rotation R to point the camera towards the calibration object, and finally applies an additional random rotation of angle α about the viewing axis to introduce further variability.",
        "relevant_elements": [
            "dynamic camera pose synthesis",
            "perturbation κ",
            "φ, θ, and α"
        ],
        "id": 344,
        "masked_question": "How does [mask1] apply perturbation κ to OEM parameters while sampling φ, θ, and α?",
        "masked_number": 1,
        "masked_elements": [
            "dynamic camera pose synthesis"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.14505v1_figure_2.png",
        "paperid": "2410.14505v1",
        "paper_path": "./papers/2410.14505v1.json",
        "figure_id": "2410.14505v1_figure_2.png",
        "caption": "Figure 2: Technical overview. Our methodology begins with the synthesis of dynamic camera poses (see top fig.). Given spherical angles ϕitalic-ϕ\\phiitalic_ϕ (azimuth), θ𝜃\\thetaitalic_θ (elevation), along with the intrinsic rotation angle α𝛼\\alphaitalic_α, the OEM calibration parameters, the maximum perturbation limit κ𝜅\\kappaitalic_κ, and known 3D fiducials (e.g. a cube calibration object), this module performs two primary functions: (i) it synthesizes poses for the multi-camera system, and (ii) it computes the projected 2D points. Subsequently, it employs point splatting to render images of these points. During training (see bottom fig.), the synthesizes poses and projected points (alternatively rendered images) are used to train the neural network. A differentiable projection ensures the propagation of gradients from the loss ℒℒ\\mathcal{L}caligraphic_L back to the predicted camera parameters.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does differentiable projection enable gradient flow from 2D projected points to camera parameters?",
        "relevant_section_ids": [
            "1",
            "3"
        ],
        "relevant_context": [
            "First, we introduce a real-time neural calibration method for multi-camera systems, marking a departure from traditional offline calibration methods. Our method employs a differentiable projection model to flow gradients between 3D geometries and their 2D projections, allowing for direct optimization of camera parameters.",
            "Differentiable Projection. The image formation process with the pinhole camera model is designed to be differentiable, facilitating the backpropagation of gradients from the loss - a function of the difference between the observed and projected points - to the camera parameters."
        ],
        "final_answer": "By formulating the pinhole camera projection (including lens distortion) as a differentiable function, the network can compute how small changes in the camera parameters affect the 2D projected points. When a reprojection loss is computed between observed and predicted 2D points, gradients can be back-propagated through this differentiable projection step directly to the intrinsic and extrinsic camera parameters, enabling their end-to-end optimization.",
        "relevant_elements": [
            "differentiable projection",
            "2D projected points",
            "camera parameters"
        ],
        "id": 345,
        "masked_question": "How does [mask1] enable gradient flow from 2D projected points to camera parameters?",
        "masked_number": 1,
        "masked_elements": [
            "differentiable projection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.14505v1_figure_2.png",
        "paperid": "2410.14505v1",
        "paper_path": "./papers/2410.14505v1.json",
        "figure_id": "2410.14505v1_figure_2.png",
        "caption": "Figure 2: Technical overview. Our methodology begins with the synthesis of dynamic camera poses (see top fig.). Given spherical angles ϕitalic-ϕ\\phiitalic_ϕ (azimuth), θ𝜃\\thetaitalic_θ (elevation), along with the intrinsic rotation angle α𝛼\\alphaitalic_α, the OEM calibration parameters, the maximum perturbation limit κ𝜅\\kappaitalic_κ, and known 3D fiducials (e.g. a cube calibration object), this module performs two primary functions: (i) it synthesizes poses for the multi-camera system, and (ii) it computes the projected 2D points. Subsequently, it employs point splatting to render images of these points. During training (see bottom fig.), the synthesizes poses and projected points (alternatively rendered images) are used to train the neural network. A differentiable projection ensures the propagation of gradients from the loss ℒℒ\\mathcal{L}caligraphic_L back to the predicted camera parameters.",
        "qtype": "Implementation_Details",
        "response": "The [mask1], labeled as \"Differentiable Projection,\" is crucial because **the image formation process, which it embodies using the pinhole camera model, is explicitly designed to be differentiable.** This differentiability allows for the backpropagation of gradients. Specifically, the gradients flow from the loss function (L), which quantifies the difference between observed and projected 2D points, directly back to the camera parameters (such as `r_6D`, `t`, `f_x`, `f_y`, `c_x`, `c_y`, `k_1,2,3`, `p_1,2`). This enables the neural network to optimize these camera parameters by minimizing the loss based on the error in the 2D projected points."
    },
    {
        "question": "How does dynamic camera pose synthesis leverage OEM calibration parameters compared to offline multi-view calibration methods?",
        "relevant_section_ids": [
            "1",
            "4.1",
            "4.1.1"
        ],
        "relevant_context": [
            "Traditional calibration methods provide analytical frameworks for addressing camera calibration. However, they require capturing an object of known geometry from multiple viewpoints, then extracting points and establishing correspondences.",
            "Traditional methods for detecting calibration errors, such as those based on epipolar geometry, face significant computational challenges in multi-camera setups and do not support on-the-fly recalibration, making them ineffective in dynamic environments.",
            "Dynamic camera pose synthesis begins with the OEM calibration parameters of a multi-camera setup, typically determined by the manufacturing process.",
            "To create a robust model capable of handling changes in calibration, we introduce perturbations to the OEM camera parameters, generating perturbed parameters , where  represents the perturbation defined as , with  controlling the maximum desired perturbation."
        ],
        "final_answer": "Unlike offline multi-view calibration—which starts from scratch by capturing a known object from many viewpoints, extracting correspondences, and solving an analytical calibration problem—dynamic camera pose synthesis begins with the manufacturer’s (OEM) calibration parameters as a baseline and then applies controlled perturbations to those parameters at each training epoch. This on-the-fly synthesis of diverse, perturbed camera poses both leverages the OEM calibration and enables real-time recalibration without the need for new multi-view captures.",
        "relevant_elements": [
            "dynamic camera pose synthesis",
            "OEM calibration parameters"
        ],
        "id": 346,
        "masked_question": "How does dynamic camera pose synthesis leverage [mask1] compared to offline multi-view calibration methods?",
        "masked_number": 1,
        "masked_elements": [
            "OEM calibration parameters"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.14505v1_figure_2.png",
        "paperid": "2410.14505v1",
        "paper_path": "./papers/2410.14505v1.json",
        "figure_id": "2410.14505v1_figure_2.png",
        "caption": "Figure 2: Technical overview. Our methodology begins with the synthesis of dynamic camera poses (see top fig.). Given spherical angles ϕitalic-ϕ\\phiitalic_ϕ (azimuth), θ𝜃\\thetaitalic_θ (elevation), along with the intrinsic rotation angle α𝛼\\alphaitalic_α, the OEM calibration parameters, the maximum perturbation limit κ𝜅\\kappaitalic_κ, and known 3D fiducials (e.g. a cube calibration object), this module performs two primary functions: (i) it synthesizes poses for the multi-camera system, and (ii) it computes the projected 2D points. Subsequently, it employs point splatting to render images of these points. During training (see bottom fig.), the synthesizes poses and projected points (alternatively rendered images) are used to train the neural network. A differentiable projection ensures the propagation of gradients from the loss ℒℒ\\mathcal{L}caligraphic_L back to the predicted camera parameters.",
        "qtype": "Literature_Background",
        "response": "The `[mask1]` refers to the **OEM Calibration Parameters**.\n\nDynamic camera pose synthesis leverages **OEM Calibration Parameters** by using them as a fundamental baseline from which to synthetically generate diverse training data. Unlike offline multi-view calibration methods that typically rely on manually acquiring data from objects of known geometry at various viewpoints, this method:\n\n1.  **Starts with a Known Baseline**: It begins with the pre-existing, nominal OEM calibration parameters for a multi-camera system.\n2.  **Introduces Controlled Perturbations**: It applies controlled perturbations (simulating real-world wear, tear, or debris accumulation) to these initial OEM parameters, dynamically synthesizing a wide range of varied camera poses and intrinsic/extrinsic parameter states.\n3.  **Generates Training Samples**: For each synthesized pose"
    },
    {
        "question": "How does Extraction Decoder complement Large Multimodal Model multistep thinking compared to Feature-level TSR?",
        "relevant_section_ids": [
            "1",
            "3.1.2",
            "3.2.1"
        ],
        "relevant_context": [
            "Some methods through unsupervised learning or feature matching have been proposed to solve the problems of this cross-country TSR problem [20–24]. These methods utilize strategies such as zero-shot learning or few-shot learning for TSR, thus reducing the dependence on training data and alleviating the applicability problem of cross-country traffic signs. However, cross-domain biases exist between the target and template traffic signs as shown in Fig. 1 (b), and performing pairwise matching at the feature level increases this important difference. Therefore, the recognition accuracy of these methods remains to be further improved.",
            "The extraction detector finally retrieves the traffic sign image S from M using the corresponding coordinates of the traffic signs. S represents the final extracted traffic sign image. Note that while S can also be obtained directly from the original road image R via the coordinates, the extracted traffic sign image contains unnecessary backgrounds. In contrast, the designed extraction detector can remove the backgrounds and avoid potential interference for subsequent recognition.",
            "In addition, when multiple traffic signs exist in the original road image, it is difficult for the LMM to perform context description and the prior traffic sign hypotheses generation. Therefore, we simplify the complex and propose a prompt optimization method based on center coordinates. The prompt optimization method provides the center coordinates of traffic signs to inspire the LMM to locate the target traffic sign from the original road image. ... The center coordinates help the LMM to locate the target traffic sign and generate corresponding background descriptions and prior traffic sign hypotheses."
        ],
        "final_answer": "Feature-level TSR methods match visual features of target and template signs directly, which exacerbates cross-domain biases and limits accuracy. By contrast, the Extraction Decoder first segments and crops out each sign—removing distracting background—and supplies precise center-coordinate cues to the Large Multimodal Model. This clean, localized input lets the LMM generate accurate context descriptions and hypothesis prompts and then carry out its multistep reasoning (context → characteristic → differential descriptions) without suffering from feature-level domain gaps.",
        "relevant_elements": [
            "Extraction Decoder",
            "Large Multimodal Model",
            "Feature-level TSR"
        ],
        "id": 348,
        "masked_question": "How does [mask1] complement [mask2] multistep thinking compared to Feature-level TSR?",
        "masked_number": 2,
        "masked_elements": [
            "Extraction Decoder",
            "Large Multimodal Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.01534v1_figure_1.png",
        "paperid": "2409.01534v1",
        "paper_path": "./papers/2409.01534v1.json",
        "figure_id": "2409.01534v1_figure_1.png",
        "caption": "Figure 1: Comparison of different TSR methods. (a) Supervised TSR, which requires a large amount of training data and fine-tuning. (b) Feature-level TSR, which is training data-free. Cross-domain differences between the target and template traffic signs exist. (c) Our think twice before recognizing strategy. Our method stimulates the multiple-thinking capabilities of large multimodal models without requiring training data.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Template Traffic Signs description replace Feature-level TSR matching to reduce cross-domain bias?",
        "relevant_section_ids": [
            "3.2.1"
        ],
        "relevant_context": [
            "Although previous TSR methods have utilized template traffic signs at the feature level, actual traffic sign images are diverse due to lighting conditions, angles, occlusions, etc., and can be different from template traffic sign images. It increases the difficulty of cross-domain recognition at the feature level.",
            "By avoiding computation at the feature level, the generated characteristic descriptions can reduce cross-domain differences between templates and real traffic signs."
        ],
        "final_answer": "Instead of matching raw image features between template and target signs (feature-level matching), the method uses few-shot in-context learning to generate textual characteristic descriptions (focusing on shape, color, and composition) for each template traffic sign. By comparing these high-level descriptions rather than low-level image features, cross-domain biases caused by variations in lighting, angle, and occlusion are significantly reduced.",
        "relevant_elements": [
            "Template Traffic Signs",
            "Feature-level TSR"
        ],
        "id": 349,
        "masked_question": "How does [mask1] description replace [mask2] matching to reduce cross-domain bias?",
        "masked_number": 2,
        "masked_elements": [
            "Template Traffic Signs",
            "Feature-level TSR"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.01534v1_figure_1.png",
        "paperid": "2409.01534v1",
        "paper_path": "./papers/2409.01534v1.json",
        "figure_id": "2409.01534v1_figure_1.png",
        "caption": "Figure 1: Comparison of different TSR methods. (a) Supervised TSR, which requires a large amount of training data and fine-tuning. (b) Feature-level TSR, which is training data-free. Cross-domain differences between the target and template traffic signs exist. (c) Our think twice before recognizing strategy. Our method stimulates the multiple-thinking capabilities of large multimodal models without requiring training data.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does segmentation model affect extraction decoder's precision when isolating traffic signs for think twice strategy?",
        "relevant_section_ids": [
            "3.1.1",
            "4.3.4"
        ],
        "relevant_context": [
            "In the proposed method, we first perform segmentation of the original road image  containing the traffic signs . … The segmentation model is not limited to a specific architecture.",
            "Previous experiments demonstrate that the proposed multi-step thinking can be easily extended to different LMMs and maintains robust performance. In addition, in our designed traffic sign extraction module, the segmentation model is not limited to a specific model and can easily be extended to advanced models. Figure 10 shows traffic sign extraction examples with segment anything model 2 (SAM 2) and ViT-Adapter. As shown in Fig. 10, under different segmentation models, target traffic signs are extracted through the designed extraction module. The most advanced segmentation model such as SAM 2 performs better extraction on traffic signs."
        ],
        "final_answer": "The precision of the extraction decoder in isolating traffic signs directly depends on the quality of the segmentation model. A stronger segmentation model (for example SAM 2 versus ViT-Adapter) produces cleaner, more accurate masks, and thus allows the extraction decoder to remove background clutter more effectively and output more precisely cropped traffic sign images.",
        "relevant_elements": [
            "Segmentation Model",
            "Extraction Decoder"
        ],
        "id": 350,
        "masked_question": "How does [mask1] affect extraction decoder's precision when isolating traffic signs for think twice strategy?",
        "masked_number": 1,
        "masked_elements": [
            "Segmentation Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.01534v1_figure_1.png",
        "paperid": "2409.01534v1",
        "paper_path": "./papers/2409.01534v1.json",
        "figure_id": "2409.01534v1_figure_1.png",
        "caption": "Figure 1: Comparison of different TSR methods. (a) Supervised TSR, which requires a large amount of training data and fine-tuning. (b) Feature-level TSR, which is training data-free. Cross-domain differences between the target and template traffic signs exist. (c) Our think twice before recognizing strategy. Our method stimulates the multiple-thinking capabilities of large multimodal models without requiring training data.",
        "qtype": "Experimental_Results",
        "response": "The segmentation model performs the initial step of separating traffic signs from other objects and the background in the original road image. It generates a mask image that delineates the precise boundaries and locations of traffic signs.\n\nThis mask image is then utilized by the extraction decoder in the following ways:\n1.  **Coordinate Acquisition:** The extraction decoder obtains the coordinates of the traffic signs directly from this mask image using a contour detection algorithm"
    },
    {
        "question": "How does Fourier encoding within the Layout Embedding module improve fusion of positional and semantic layout information?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "Building on this, Fourier [23] encoding is employed to convert these positional coordinates into a frequency domain vector representation, similar to GLIGEN [16].",
            "We use a frozen CLIP text encoder [27] to obtain fixed codes for different categories, which serve as layout condition inputs. The Fourier-encoded coordinates are then fused with the category encodings using an additional linear layer to produce the layout control input: where denotes the concatenation of Fourier-coded coordinates and category codes, and represents the linear transformation layer.",
            "In this manner, spatial location and category information are effectively combined as layout control tokens."
        ],
        "final_answer": "By first mapping raw bounding-box coordinates into a high-dimensional frequency-domain representation via Fourier encoding, the system transforms spatial information into vectors that can be directly concatenated with CLIP-derived category embeddings. A subsequent linear layer then fuses these frequency-encoded positional vectors with semantic codes, yielding unified layout control tokens that jointly carry precise location and category information.",
        "relevant_elements": [
            "Layout Embedding",
            "Fourier encoding"
        ],
        "id": 352,
        "masked_question": "How does [mask1] within the [mask2] module improve fusion of positional and semantic layout information?",
        "masked_number": 2,
        "masked_elements": [
            "Fourier encoding",
            "Layout Embedding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15497v2_figure_1.png",
        "paperid": "2411.15497v2",
        "paper_path": "./papers/2411.15497v2.json",
        "figure_id": "2411.15497v2_figure_1.png",
        "caption": "Figure 1: AeroGen’s overall architecture. (a) The layout embedding module combines bounding box coordinates with vectorized semantic information using Fourier and MLP layers. This encodes layout information to facilitate control, with the prompt description processed by a CLIP text encoder for global conditional guidance. (b) The injection of layout information at the noise level is demonstrated, where a local mask governs the injection position of the layout information, allowing for finer layout control. (c) The overall architecture and training process of AeroGen. At each timestep, the image being denoised first passes through a layout information injection module, which enhances layout conditional guidance.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] (Fourier) module within the [mask2] (Layout Embedding) module improves the fusion of positional and semantic layout information by converting the raw bounding box coordinates into a frequency domain vector representation. This transformation makes the positional information more robust and expressive, enabling it to be effectively combined (concatenated) with the semantic category encodings (obtained via CLIP). Subsequently, an additional linear layer (MLP) processes this combined Fourier-encoded positional and semantic information to produce unified layout control tokens, facilitating a stronger and more effective amalgamation of spatial location and category attributes."
    },
    {
        "question": "How does Layout Mask Attention complement Dual Cross-Attention to enhance local layout precision during diffusion?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "In AeroGen, the text prompt serves as a global condition and is integrated with layout control tokens via a dual cross-attention mechanism. The output is computed as: where  represents the cross-attention mechanism.  and  are the keys and values of the global text condition, while  and  are the layout control tokens.  balances the influence of global and layout conditions.",
            "Layout Mask Attention. In addition to traditional token-based control, recent studies indicate that direct semantic embedding based on feature maps is also an effective method for layout guidance. In the denoising process of a diffusion model, the injection of conditional information is gradual, enabling local attribute editing at the noise level. To this end, conditionally encoded noise region steering is employed and combined with a cropping step for improved layout precision. As shown in Fig. 1 (b), each bounding box is first transformed into a 0/1 mask M, and category attributes are obtained through CLIP encoding. During each denoising step, the mask attention network provides additional layout guidance. The process is expressed as follows: for each denoised image ζ′ₜ and category encoding Q, the mask M is used for attention computation according to the following equation: … This method enables precise manipulation of local noise characteristics during the diffusion generation process, offering finer control over the image layout."
        ],
        "final_answer": "Dual Cross-Attention fuses global text and layout‐token conditions at each U-Net block to guide overall scene composition, while Layout Mask Attention uses per-box binary masks and CLIP-based category embeddings to steer noise injection and feature updates only within each target region. By injecting an explicit mask-controlled attention path, Layout Mask Attention complements Dual Cross-Attention by providing fine-grained, region-specific control over noise and semantic features, resulting in more precise local layout generation during diffusion.",
        "relevant_elements": [
            "Layout Mask Attention",
            "Dual Cross-Attention"
        ],
        "id": 353,
        "masked_question": "How does [mask1] complement Dual Cross-Attention to enhance local layout precision during diffusion?",
        "masked_number": 1,
        "masked_elements": [
            "Layout Mask Attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15497v2_figure_1.png",
        "paperid": "2411.15497v2",
        "paper_path": "./papers/2411.15497v2.json",
        "figure_id": "2411.15497v2_figure_1.png",
        "caption": "Figure 1: AeroGen’s overall architecture. (a) The layout embedding module combines bounding box coordinates with vectorized semantic information using Fourier and MLP layers. This encodes layout information to facilitate control, with the prompt description processed by a CLIP text encoder for global conditional guidance. (b) The injection of layout information at the noise level is demonstrated, where a local mask governs the injection position of the layout information, allowing for finer layout control. (c) The overall architecture and training process of AeroGen. At each timestep, the image being denoised first passes through a layout information injection module, which enhances layout conditional guidance.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How could reliance on CLIP-based global control introduce semantic bias into layout-conditioned image generation?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "CLIP",
            "Global Control"
        ],
        "id": 355,
        "masked_question": "How could reliance on [mask1]-based [mask2] introduce semantic bias into layout-conditioned image generation?",
        "masked_number": 2,
        "masked_elements": [
            "CLIP",
            "Global Control"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15497v2_figure_1.png",
        "paperid": "2411.15497v2",
        "paper_path": "./papers/2411.15497v2.json",
        "figure_id": "2411.15497v2_figure_1.png",
        "caption": "Figure 1: AeroGen’s overall architecture. (a) The layout embedding module combines bounding box coordinates with vectorized semantic information using Fourier and MLP layers. This encodes layout information to facilitate control, with the prompt description processed by a CLIP text encoder for global conditional guidance. (b) The injection of layout information at the noise level is demonstrated, where a local mask governs the injection position of the layout information, allowing for finer layout control. (c) The overall architecture and training process of AeroGen. At each timestep, the image being denoised first passes through a layout information injection module, which enhances layout conditional guidance.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations arise from relying on DetHead features for the Motion Mamba module?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "DetHead",
            "Motion Mamba module"
        ],
        "id": 356,
        "masked_question": "What limitations arise from relying on [mask1] features for the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "DetHead",
            "Motion Mamba module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.10485v2_figure_2.png",
        "paperid": "2407.10485v2",
        "paper_path": "./papers/2407.10485v2.json",
        "figure_id": "2407.10485v2_figure_2.png",
        "caption": "Figure 2: Overall architecture of MM-Tracker. Multi-scale detection features are first extracted using a detection backbone (DetBackbone), which is fed into the detection head (DetHead) to output the object bounding box, score, and category. The object score is optimized using the proposed MMLoss.\nThe detection feature is also fed into the proposed Motion Mamba module (MM), which captures the difference between the two detection features and predicts the motion map. Afterward, the position of the object in the previous frame in the next frame is predicted based on the motion map, and the predicted position of the object is matched with the detected position in the current frame to generate a new object trajectory.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What biases could MMLoss introduce by prioritizing large-motion objects over stationary ones?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "MMLoss"
        ],
        "id": 357,
        "masked_question": "What biases could [mask1] introduce by prioritizing large-motion objects over stationary ones?",
        "masked_number": 1,
        "masked_elements": [
            "MMLoss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.10485v2_figure_2.png",
        "paperid": "2407.10485v2",
        "paper_path": "./papers/2407.10485v2.json",
        "figure_id": "2407.10485v2_figure_2.png",
        "caption": "Figure 2: Overall architecture of MM-Tracker. Multi-scale detection features are first extracted using a detection backbone (DetBackbone), which is fed into the detection head (DetHead) to output the object bounding box, score, and category. The object score is optimized using the proposed MMLoss.\nThe detection feature is also fed into the proposed Motion Mamba module (MM), which captures the difference between the two detection features and predicts the motion map. Afterward, the position of the object in the previous frame in the next frame is predicted based on the motion map, and the predicted position of the object is matched with the detected position in the current frame to generate a new object trajectory.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What is the motivation behind extracting motion features via local correlation and global bi-directional Mamba scanning?",
        "relevant_section_ids": [
            "1",
            "2.1",
            "3.2"
        ],
        "relevant_context": [
            "Several studies (Shuai et al. 2021; Zhou, Koltun, and Krähenbühl 2020; Yao et al. 2023) propose learning-based motion modeling, but most of them are based on local cross-correlation or local convolution and ignore global motion information. Therefore, the lack of global motion modeling limits the tracking accuracy of these trackers in scenes with significant global camera motion.",
            "We propose the Motion Mamba module, which models object motion by local correlation of detection features and global scan of bi-directional mamba block, reached fast and accurate motion modeling.",
            "For each scale, Motion Mamba first uses the cross-correlation of the feature maps at the previous and next moments to extract the local motion information, and then use Motion Mamba block to extract global motion features."
        ],
        "final_answer": "Prior learning-based motion modules used only local convolution or cross-correlation and thus failed to capture large, scene-wide camera movements. By first applying local correlation on bi-temporal detection features, MM-Tracker captures fine, short-range object displacements; by then performing a bi-directional Mamba scan, it aggregates full-frame, long-range motion context. Together this approach yields both fast and accurate modeling of complex global motion patterns while reusing already-computed detection features.",
        "relevant_elements": [
            "Local-Correlation",
            "Global Scan (Bi-directional Mamba)"
        ],
        "id": 358,
        "masked_question": "What is the motivation behind extracting motion features via [mask1] and [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Local-Correlation",
            "Global Scan (Bi-directional Mamba)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.10485v2_figure_2.png",
        "paperid": "2407.10485v2",
        "paper_path": "./papers/2407.10485v2.json",
        "figure_id": "2407.10485v2_figure_2.png",
        "caption": "Figure 2: Overall architecture of MM-Tracker. Multi-scale detection features are first extracted using a detection backbone (DetBackbone), which is fed into the detection head (DetHead) to output the object bounding box, score, and category. The object score is optimized using the proposed MMLoss.\nThe detection feature is also fed into the proposed Motion Mamba module (MM), which captures the difference between the two detection features and predicts the motion map. Afterward, the position of the object in the previous frame in the next frame is predicted based on the motion map, and the predicted position of the object is matched with the detected position in the current frame to generate a new object trajectory.",
        "qtype": "Design_Rationale",
        "response": "The motivation behind extracting motion features via Local-Correlation (mask1) and Global Scan (Bi-directional Mamba) (mask2) is to achieve fast and accurate motion modeling by leveraging both local and global motion information, addressing the limitations of previous methods.\n\nHere's a step-by-step breakdown:\n\n1.  **Purpose of Local-Correlation ([mask1]):** The text states that \"For each scale, Motion Mamba first uses the cross-correlation of the feature maps at the previous and next moments to extract the **local motion information**.\" (Proposed Method -> Motion Mamba Module). This captures fine-grained, localized movements.\n\n2.  **Purpose of Global Scan (Bi-directional Mamba) ([mask2]):** Following the local extraction, the module then \"use Motion Mamba block to extract **global motion features**.\" (Proposed Method -> Motion Mamba Module). The \"Effective Global Information Aggregation\" section elaborates that \"this paper adopts the bidirectional scanning Mamba structure to compute"
    },
    {
        "question": "What is the reasoning for applying Motion Margin loss to detection score optimization rather than standard classification loss?",
        "relevant_section_ids": [
            "2.3",
            "3.3"
        ],
        "relevant_context": [
            "In the UAVMOT scene, the camera’s perspective change will cause large movements of objects, and this perspective change is accidental, making this situation account for a small proportion of the dataset. However, the large motion introduces severe motion blur on objects, requiring us to focus more on those difficult-to-detect objects, which is missed in previous studies. To this end, we propose Motion Margin loss, which imposes larger classification boundaries for objects with larger motions, thus better solving the problem of less training for large motion objects.",
            "This motion blur will greatly increase the difficulty of object detection. However, since there are fewer such cases in the dataset, these difficult-to-detect samples have fewer training times than easy samples, which further increases the detection difficulty. For object tracking tasks, even a few frames that cannot be detected will cause tracking interruption, greatly affecting tracking accuracy. To this end, we propose a Motion Margin loss function to assign different decision boundaries according to different object’s motion. We assign larger decision boundaries to objects with larger motion, thereby forcing the model to output higher scores for objects with larger motion during the learning process, so as to effectively detect these objects during inference.",
            "The function of subtracting m from the output of the network classification layer is to assign different decision boundaries to different object boxes based on their motion value."
        ],
        "final_answer": "Because objects undergoing large, camera-induced motion are both rare in the training data and severely motion-blurred—making them much harder to detect—the standard classification loss (with a fixed decision boundary) under-trains these difficult cases. By applying Motion Margin loss directly to the detection scores, the model imposes larger decision margins for high-motion objects, forcing the network to produce higher confidence scores for them, improving their detection (and thus preventing tracking interruptions) compared to using a conventional, uniform classification loss.",
        "relevant_elements": [
            "DetHead",
            "MMLoss"
        ],
        "id": 359,
        "masked_question": "What is the reasoning for applying [mask1] to detection score optimization rather than standard classification loss?",
        "masked_number": 1,
        "masked_elements": [
            "MMLoss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.10485v2_figure_2.png",
        "paperid": "2407.10485v2",
        "paper_path": "./papers/2407.10485v2.json",
        "figure_id": "2407.10485v2_figure_2.png",
        "caption": "Figure 2: Overall architecture of MM-Tracker. Multi-scale detection features are first extracted using a detection backbone (DetBackbone), which is fed into the detection head (DetHead) to output the object bounding box, score, and category. The object score is optimized using the proposed MMLoss.\nThe detection feature is also fed into the proposed Motion Mamba module (MM), which captures the difference between the two detection features and predicts the motion map. Afterward, the position of the object in the previous frame in the next frame is predicted based on the motion map, and the predicted position of the object is matched with the detected position in the current frame to generate a new object trajectory.",
        "qtype": "Design_Rationale",
        "response": "The reasoning for applying the Motion Margin Loss (MMLoss) to detection score optimization rather than standard classification loss is as follows:\n\n1.  **Addressing Motion Blur and Detection Difficulty:** In UAV-MOT (Unmanned Aerial Vehicle Multiple Object Tracking) scenes, camera view rotation often causes objects to undergo large motions, resulting in severe motion blur. This motion blur significantly increases the difficulty of object detection.\n\n2.  **Tackling Training Imbalance:** These large-motion, motion-blurred objects are infrequent in the dataset, leading to an imbalance where such \"difficult-to-detect\" samples receive less training attention compared to \"easy\" samples. This further exacerbates their detection difficulty.\n\n3.  **Preventing Tracking Interruptions:** For object tracking, failing to detect an object for even a few frames can cause tracking interruptions, severely impacting overall accuracy.\n\n4.  **Enforcing Higher Scores for Difficult Objects:** Standard classification loss might not adequately address this specific challenge. MMLoss is designed to assign *different decision boundaries* based on an object's motion. Specifically, it imposes *larger classification boundaries* for objects with larger motions. This mechanism forces the model, during the learning process, to output **higher detection scores** for these challenging, motion-blurred objects.\n\nBy compelling the model to achieve higher confidence for these difficult cases, MMLoss ensures that large-motion, motion-blurred objects are effectively detected during inference, thereby improving overall tracking robustness and"
    },
    {
        "question": "What motivates penalizing mutual information between S and Z in the CIB objective?",
        "relevant_section_ids": [
            "1",
            "4.2"
        ],
        "relevant_context": [
            "With this regard, we propose a Causal Information Bottleneck (CIB) optimization objective. CIB aligns the information in the latent variables S with observed variables X with a bottleneck set by the mutual information (MI) between S and Z. The derived function will minimize the MI between S and Z while learning the other causal relations, ensuring their disentanglement within the causal framework.",
            "The term, I(S; Z) ensures S and Z to be effectively disentangled."
        ],
        "final_answer": "Penalizing the mutual information between S and Z is motivated by the goal of enforcing a clean disentanglement between the label-causative factor S and the label-non-causative factor Z, so that each captures distinct, non-overlapping information.",
        "relevant_elements": [
            "S",
            "Z",
            "CIB objective"
        ],
        "id": 360,
        "masked_question": "What motivates penalizing mutual information between [mask1] and [mask2] in the CIB objective?",
        "masked_number": 2,
        "masked_elements": [
            "S",
            "Z"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.23091v4_figure_1.png",
        "paperid": "2410.23091v4",
        "paper_path": "./papers/2410.23091v4.json",
        "figure_id": "2410.23091v4_figure_1.png",
        "caption": "Figure 1: Illustration of training (Left) and inference (Right) processes of our proposed CausalDiff model. During training, the model constructs a structural causal model leveraging a conditional diffusion model, disentangling the (label) Y-causative feature S𝑆Sitalic_S and the Y-non-causative feature Z𝑍Zitalic_Z through maximization of the Causal Information Bottleneck (CIB).\nIn the inference stage, CausalDiff first purifies an adversarial example X~~𝑋\\tilde{X}over~ start_ARG italic_X end_ARG, yielded by perturbing X𝑋Xitalic_X according to the target victim model parameterized by θ𝜃\\thetaitalic_θ, to obtain the benign counterpart X∗superscript𝑋X^{*}italic_X start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT. Then, it infers the Y-causative feature S∗superscript𝑆S^{*}italic_S start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT for label prediction. We visualize the vectors of S𝑆Sitalic_S and Z𝑍Zitalic_Z inferred from a perturbed image of a horse using a diffusion model. We find that S𝑆Sitalic_S captures the general concept of a horse, even when the input image only shows the head, while Z𝑍Zitalic_Z carries information about the horse’s skin color.",
        "qtype": "Design_Rationale",
        "response": "To answer the question, I will first identify what [mask1] and [mask2] represent from the image annotations.\n[mask1] is \"S Label-causative factor\".\n[mask2] is \"Z Label-non-causative factor\".\n\nSo the question asks about penalizing mutual information between S and Z. Penalizing mutual information means minimizing it.\n\nI will now refer to the \"Causal Information Bottleneck Optimization\" section in the provided context.\nThe text states: \"To learn the causal factors S in our SCM and disentangle them, we propose a Causal Information Bottleneck (CIB) optimization objective.\"\nFurther down, when explaining the terms in the CIB objective (which is given in the figure as `CIB(X, Y, S, Z) = I(X; S, Z) + I(Y; S) - I(S; Z) - λI(X; S, Z)`), the text says:\n\"The term, -I(S; Z) ensures S and Z to be effectively disentangled.\"\n\nSince the CIB objective is maximized, a negative term `-I(S; Z)` implies that I(S; Z) is being minimized or \"penalized.\" The explicit motivation given for this term is to ensure the effective disentanglement of S and Z.\n\nThe final answer is $\\boxed{\\text{to ensure their disentanglement}}$"
    },
    {
        "question": "What is the rationale for adversarial purification preceding causal factor inference?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "Following a typical attack paradigm, x̃ is produced by adding an adversarial perturbation to a target clean example x when attacking a model θ.",
            "To make a robust prediction on x̃, our robust inference process comprises three steps: 1) purifying x̃ to benign ẍ by the unconditional diffusion model pϕ, 2) inferring S and Z from ẍ utilizing the causal model qψ, and 3) predicting ŷ based on S using a classifier fα."
        ],
        "final_answer": "Since the input image x̃ has been corrupted by adversarial noise, the first step is to purify it—i.e. remove the perturbation—so that the subsequent causal factor inference can recover the true label-causative and non-causative features from a near-clean example, leading to more reliable latent inference and robust classification.",
        "relevant_elements": [
            "Adversarial Purification",
            "Causal Factor Inference"
        ],
        "id": 361,
        "masked_question": "What is the rationale for [mask1] preceding causal factor inference?",
        "masked_number": 1,
        "masked_elements": [
            "Adversarial Purification"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.23091v4_figure_1.png",
        "paperid": "2410.23091v4",
        "paper_path": "./papers/2410.23091v4.json",
        "figure_id": "2410.23091v4_figure_1.png",
        "caption": "Figure 1: Illustration of training (Left) and inference (Right) processes of our proposed CausalDiff model. During training, the model constructs a structural causal model leveraging a conditional diffusion model, disentangling the (label) Y-causative feature S𝑆Sitalic_S and the Y-non-causative feature Z𝑍Zitalic_Z through maximization of the Causal Information Bottleneck (CIB).\nIn the inference stage, CausalDiff first purifies an adversarial example X~~𝑋\\tilde{X}over~ start_ARG italic_X end_ARG, yielded by perturbing X𝑋Xitalic_X according to the target victim model parameterized by θ𝜃\\thetaitalic_θ, to obtain the benign counterpart X∗superscript𝑋X^{*}italic_X start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT. Then, it infers the Y-causative feature S∗superscript𝑆S^{*}italic_S start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT for label prediction. We visualize the vectors of S𝑆Sitalic_S and Z𝑍Zitalic_Z inferred from a perturbed image of a horse using a diffusion model. We find that S𝑆Sitalic_S captures the general concept of a horse, even when the input image only shows the head, while Z𝑍Zitalic_Z carries information about the horse’s skin color.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does the Causal Information Bottleneck optimize disentanglement between S and Z during model training?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "Among the resultant terms, I(Y; S) indicates that the Y-causative factor S should be correlated with Y. The term, – I(S; Z) ensures S and Z to be effectively disentangled.",
            "To maximize the Causal Information Bottleneck (CIB) in Eq. (5), we derive its lower bound as the concrete training loss function. … where … denotes the Contrastive Log-Ratio Upper Bound (CLUB) of mutual information proposed by Cheng et al. [57]."
        ],
        "final_answer": "The Causal Information Bottleneck adds a negative mutual-information term −I(S; Z) to its objective, which is approximated via a CLUB estimator. By penalizing I(S; Z) during training, it forces the model to minimize the shared information between S and Z, thereby driving them to be disentangled.",
        "relevant_elements": [
            "Causal Information Bottleneck",
            "S",
            "Z"
        ],
        "id": 363,
        "masked_question": "How does the [mask1] optimize disentanglement between [mask2] and Z during model training?",
        "masked_number": 2,
        "masked_elements": [
            "Causal Information Bottleneck",
            "S"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.23091v4_figure_1.png",
        "paperid": "2410.23091v4",
        "paper_path": "./papers/2410.23091v4.json",
        "figure_id": "2410.23091v4_figure_1.png",
        "caption": "Figure 1: Illustration of training (Left) and inference (Right) processes of our proposed CausalDiff model. During training, the model constructs a structural causal model leveraging a conditional diffusion model, disentangling the (label) Y-causative feature S𝑆Sitalic_S and the Y-non-causative feature Z𝑍Zitalic_Z through maximization of the Causal Information Bottleneck (CIB).\nIn the inference stage, CausalDiff first purifies an adversarial example X~~𝑋\\tilde{X}over~ start_ARG italic_X end_ARG, yielded by perturbing X𝑋Xitalic_X according to the target victim model parameterized by θ𝜃\\thetaitalic_θ, to obtain the benign counterpart X∗superscript𝑋X^{*}italic_X start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT. Then, it infers the Y-causative feature S∗superscript𝑆S^{*}italic_S start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT for label prediction. We visualize the vectors of S𝑆Sitalic_S and Z𝑍Zitalic_Z inferred from a perturbed image of a horse using a diffusion model. We find that S𝑆Sitalic_S captures the general concept of a horse, even when the input image only shows the head, while Z𝑍Zitalic_Z carries information about the horse’s skin color.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does ICL-based memory influence the Mutation for Bypass step's candidate generation?",
        "relevant_section_ids": [
            "4.1",
            "4.3"
        ],
        "relevant_context": [
            "Section 4.1: “The ICL-based memory module works in three steps: starts with an empty database and gradually expands it with successful jailbreak prompts. Specifically, M₁ records all prompts recognized for their capability to succeed and utilizes these for modifications to the novel sensitive prompts. 2) retrieves successful prompts from the database. To prevent overwhelming the VLM, it selects the top n prompts using a semantic-based memory retriever. 3) reflects these selected prompts to identify the factors contributing to their success and uses this information to guide the mutation of the failed target prompt.”",
            "Section 4.3 (Step 2): “Since the safety filters have not been bypassed, the planning module activates the semantic-based memory retriever to access the ICL-based memory module. It then directs the VLM brain to formulate a mutation strategy using the ‘ICL Prompt,’ ‘ICL-Strategy Prompt,’ and ‘Strategy Prompt.’ Once the VLM brain responds, the planning module sends a ‘Modify Prompt’ to the VLM brain to generate several new candidate jailbreak prompts based on its guidance.”"
        ],
        "final_answer": "In the Mutation for Bypass step, the agent first retrieves past successful jailbreak prompts from its ICL-based memory via a semantic retriever. These retrieved examples are injected into ‘ICL Prompt’ and ‘ICL-Strategy Prompt’ templates so that the VLM brain can analyze their key success factors. Guided by those in-context examples, the VLM then produces multiple new candidate jailbreak prompts tailored to bypass the safety filter.",
        "relevant_elements": [
            "ICL-based Memory",
            "Mutation for Bypass"
        ],
        "id": 364,
        "masked_question": "How does [mask1] influence the Mutation for Bypass step's candidate generation?",
        "masked_number": 1,
        "masked_elements": [
            "ICL-based Memory"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.00523v2_figure_1.png",
        "paperid": "2408.00523v2",
        "paper_path": "./papers/2408.00523v2.json",
        "figure_id": "2408.00523v2_figure_1.png",
        "caption": "Figure 1: Overall pipeline of Atlas.",
        "qtype": "Implementation_Details",
        "response": "The `ICL-based Memory` module stores successful jailbreak prompts from past experiences. During the \"Mutation for Bypass\" step (Step 2), the system activates a semantic-based memory retriever to access these successful prompts from the `ICL-based Memory`. The information from these retrieved prompts is then used to identify key factors contributing to their success. This understanding guides the VLM brain, via specific prompts like \"ICL Prompt\" and \"ICL-Strategy Prompt,\" to formulate a mutation strategy. This strategy subsequently informs and guides the VLM brain in modifying the current target prompt to generate new candidate jailbreak prompts aimed at bypassing safety filters."
    },
    {
        "question": "How does planning module leverage chain-of-thought reasoning from prior multi-agent frameworks?",
        "relevant_section_ids": [
            "2.1",
            "4.3"
        ],
        "relevant_context": [
            "Section 2.1: \"Planning. The planning module breaks down the necessary steps or subtasks that the agent will solve individually to answer the user’s request. This step is crucial for enabling the agent to reason more effectively about the problem and find a reliable solution.\nIn this work, we use a popular technique called Chain of Thought (CoT) [53, 27, 60, 55] for task decomposition.\"",
            "Section 4.3: \"Specifically, we divide the jailbreak prompt generation task into sub-tasks and apply chain-of-thought (COT) [53, 27, 60, 55] to enhance reasoning and instruction-following. The planning module uses multi-turn COT by sending one sub-task at a time to the VLM brain. After receiving a response, it provides the context and the next sub-task.\""
        ],
        "final_answer": "The planning module adopts a multi‐turn chain‐of‐thought (CoT) strategy—borrowed from prior multi‐agent work—to break the jailbreak prompt generation into a sequence of subtasks. It sends each subtask in turn to the agent’s LLM/VLM brain, then feeds back that response as context for the next subtask, thereby structuring the overall workflow through explicit CoT reasoning.",
        "relevant_elements": [
            "planning module",
            "chain-of-thought reasoning"
        ],
        "id": 367,
        "masked_question": "How does [mask1] leverage chain-of-thought reasoning from prior multi-agent frameworks?",
        "masked_number": 1,
        "masked_elements": [
            "planning module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.00523v2_figure_1.png",
        "paperid": "2408.00523v2",
        "paper_path": "./papers/2408.00523v2.json",
        "figure_id": "2408.00523v2_figure_1.png",
        "caption": "Figure 1: Overall pipeline of Atlas.",
        "qtype": "Literature_Background",
        "response": "The `Planning Module` leverages chain-of-thought (CoT) reasoning from prior multi-agent frameworks in the following ways:\n\n1.  **Task Decomposition:** It divides the complex jailbreak prompt generation task into smaller, manageable sub-tasks.\n2.  **Multi-turn CoT:** It employs a multi-turn chain-of-thought approach.\n3.  **Iterative Processing:** It sends one sub-task at a time to the VLM (Vision-Language Model) brain.\n4.  **Contextual Handover:** After receiving a response from the VLM brain for a sub-task, the planning module provides the context and the subsequent sub-task, ensuring a sequential and reasoned progression through the overall task.\n\nThe entire process is structured into six distinct steps, with four steps for the `Mutation Agent` and two for the `Selection Agent`, demonstrating how CoT guides the flow and decision-making within the system."
    },
    {
        "question": "How does the linear regression mapping on LLM features extend previous encoding methodologies for fMRI language data?",
        "relevant_section_ids": [
            "2",
            "8"
        ],
        "relevant_context": [
            "The 20 hours of speech stimuli were transcribed and then passed through multiple open-source large language models to obtain activation vectors for each word. Multiple models were built using different LLMs to ensure that predictions are stable, i.e. not idiosyncratic to a single model. Regularized linear regression was then used to predict the response timecourse of each voxel as a weighted combination of LLM activations.",
            "Features were extracted from the 18th layer of the 30-billion parameter LLaMA model [13], and the 33rd layer of the 30-billion parameter OPT model [12]. … The OPT features achieved a mean voxelwise correlation of about 0.128 whereas the LLaMA features achieved a mean voxelwise correlation of about 0.132. These performances exceed that of previously published models on the same dataset (mean correlation 0.111) that were able to produce meaningful semantic decoding [45]."
        ],
        "final_answer": "By taking high-dimensional activation vectors from large language models (LLaMA and OPT) for each word and fitting a regularized linear regression from those LLM features to each voxel’s fMRI time course, the authors build on prior fMRI encoding approaches (which typically used hand-crafted or lower-dimensional semantic features). This mapping not only integrates rich, contextual embeddings from state-of-the-art LLMs but also achieves higher prediction accuracy than earlier semantic-decoding models on the same dataset.",
        "relevant_elements": [
            "Linear model",
            "LLM"
        ],
        "id": 368,
        "masked_question": "How does the [mask1] mapping on [mask2] features extend previous encoding methodologies for fMRI language data?",
        "masked_number": 2,
        "masked_elements": [
            "Linear model",
            "LLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.00812v1_figure_1.png",
        "paperid": "2410.00812v1",
        "paper_path": "./papers/2410.00812v1.json",
        "figure_id": "2410.00812v1_figure_1.png",
        "caption": "Figure 1: Driving single-voxel response with generative explanation-mediated validation.\n(a) Voxelwise BOLD responses were recorded using fMRI as human subjects listened to 20 hours of narrative stories. An encoding model f𝑓fitalic_f was fit to predict these responses from the story text. f𝑓fitalic_f consists of a linear model fit on representations extracted from an LLM, which are not readily interpretable. Encoding models were tested by predicting responses on held-out fMRI data, and only well-performing models were selected for further analysis.\n(b) We used an automated procedure to find a verbal description of the function that f𝑓fitalic_f computes for each voxel. First, we tested f𝑓fitalic_f on a large catalog of n𝑛nitalic_n-grams (n=1,2,3)n=1,2,3)italic_n = 1 , 2 , 3 ) and found those that maximally drove predicted responses. These n𝑛nitalic_n-grams were then summarized into stable explanation candidates using a powerful instruction-tuned LLM. Finally, we evaluated each explanation candidate by generating corresponding synthetic sentences and testing that these sentences yielded large predictions from f𝑓fitalic_f.\n(c) To test whether the generated explanations were causally related to activation in the brain, we used an LLM to produce synthetic narrative stories where each paragraph is designed to drive responses based on the generated explanation for one voxel. For each subject we constructed stories to drive 17 well-modeled voxels with diverse selectivity. These stories were then presented to the subjects in a second fMRI experiment.\n(d) Average BOLD response during its driving paragraph for each voxel, relative to baseline, i.e. average response to all non-driving paragraphs. On average, driven responses were significantly higher than baseline for each subject (p=0.020𝑝0.020p=0.020italic_p = 0.020 (S01), p<10−5𝑝superscript105p<10^{-5}italic_p < 10 start_POSTSUPERSCRIPT - 5 end_POSTSUPERSCRIPT (S02), p=0.009𝑝0.009p=0.009italic_p = 0.009 (S03); permutation test, FDR-corrected).\nFor well-driven voxels, this means that the generated explanation is causally related to activation of that voxel, and thus that we have successfully translated the LLM-based encoding model into a verbal explanation.\n(e) Average BOLD response for each selected voxel to each of the driving paragraphs in one subject (S02). Responses to the driving paragraph generated using the explanation for that voxel appear along the main diagonal. Explanations that were used to construct the driving paragraphs are shown below. BOLD responses were generally high for the driving paragraphs for each voxel as well as semantically related paragraphs (e.g. directions and locations, emotional expression and laughter).",
        "qtype": "Literature_Background",
        "response": "The [mask1] referring to the \"Linear\" mapping and [mask2] referring to the \"LLM\" features extend previous encoding methodologies for fMRI language data by achieving higher prediction performance.\n\nSpecifically, the text states: \"The OPT features achieved a mean voxelwise correlation of about 0.128 whereas the LLaMA features achieved a mean voxelwise correlation of about 0.132. These performances exceed that of previously published models on the same dataset (mean correlation 0.111) that were able to produce meaningful semantic decoding [45].\"\n\nThus, the use of a linear mapping on representations extracted from advanced LLMs (like LLaMA and OPT) results in improved prediction accuracy of voxel responses compared to prior methods."
    },
    {
        "question": "How does combining summarization and evaluation LLM steps compare to prior explanation generation pipelines?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Summarization LLM",
            "Evaluate LLM"
        ],
        "id": 369,
        "masked_question": "How does combining [mask1] and [mask2] steps compare to prior explanation generation pipelines?",
        "masked_number": 2,
        "masked_elements": [
            "Summarization LLM",
            "Evaluate LLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.00812v1_figure_1.png",
        "paperid": "2410.00812v1",
        "paper_path": "./papers/2410.00812v1.json",
        "figure_id": "2410.00812v1_figure_1.png",
        "caption": "Figure 1: Driving single-voxel response with generative explanation-mediated validation.\n(a) Voxelwise BOLD responses were recorded using fMRI as human subjects listened to 20 hours of narrative stories. An encoding model f𝑓fitalic_f was fit to predict these responses from the story text. f𝑓fitalic_f consists of a linear model fit on representations extracted from an LLM, which are not readily interpretable. Encoding models were tested by predicting responses on held-out fMRI data, and only well-performing models were selected for further analysis.\n(b) We used an automated procedure to find a verbal description of the function that f𝑓fitalic_f computes for each voxel. First, we tested f𝑓fitalic_f on a large catalog of n𝑛nitalic_n-grams (n=1,2,3)n=1,2,3)italic_n = 1 , 2 , 3 ) and found those that maximally drove predicted responses. These n𝑛nitalic_n-grams were then summarized into stable explanation candidates using a powerful instruction-tuned LLM. Finally, we evaluated each explanation candidate by generating corresponding synthetic sentences and testing that these sentences yielded large predictions from f𝑓fitalic_f.\n(c) To test whether the generated explanations were causally related to activation in the brain, we used an LLM to produce synthetic narrative stories where each paragraph is designed to drive responses based on the generated explanation for one voxel. For each subject we constructed stories to drive 17 well-modeled voxels with diverse selectivity. These stories were then presented to the subjects in a second fMRI experiment.\n(d) Average BOLD response during its driving paragraph for each voxel, relative to baseline, i.e. average response to all non-driving paragraphs. On average, driven responses were significantly higher than baseline for each subject (p=0.020𝑝0.020p=0.020italic_p = 0.020 (S01), p<10−5𝑝superscript105p<10^{-5}italic_p < 10 start_POSTSUPERSCRIPT - 5 end_POSTSUPERSCRIPT (S02), p=0.009𝑝0.009p=0.009italic_p = 0.009 (S03); permutation test, FDR-corrected).\nFor well-driven voxels, this means that the generated explanation is causally related to activation of that voxel, and thus that we have successfully translated the LLM-based encoding model into a verbal explanation.\n(e) Average BOLD response for each selected voxel to each of the driving paragraphs in one subject (S02). Responses to the driving paragraph generated using the explanation for that voxel appear along the main diagonal. Explanations that were used to construct the driving paragraphs are shown below. BOLD responses were generally high for the driving paragraphs for each voxel as well as semantically related paragraphs (e.g. directions and locations, emotional expression and laughter).",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does held-out fMRI testing of the encoding model guide voxel selection for follow-up experiments?",
        "relevant_section_ids": [
            "8"
        ],
        "relevant_context": [
            "For model testing, the subjects listened to the two test stories five times each, and one test story 10 times, at a rate of 1 test story per session. These test responses were averaged across repetitions.",
            "To evaluate the voxelwise encoding models, we used the learned encoding model to generate and evaluate predictions on a held-out test set.",
            "We selected 500 well-modeled, diverse voxels to explain for each subject. To ensure that these voxels were well-modeled, we selected only from voxels with a test correlation above 0.15, (this corresponds to the top 4⁄3% most well-predicted voxels).",
            "After extracting an explanation for 500 voxels per subject, we selected 17 voxels per subject for followup fMRI experiments."
        ],
        "final_answer": "Held-out fMRI testing is used to quantify each voxel’s encoding model performance (via the correlation between predicted and actual responses on stories held out from training). Voxels whose models exceed a threshold test correlation (r > 0.15, the top ~4.3%) are deemed “well‐modeled,” and from this set the authors uniformly sample 500 diverse voxels. From those 500 high‐performers, they then pick 17 voxels per subject for the actual follow‐up fMRI experiments.",
        "relevant_elements": [
            "Encoding model",
            "Voxel selection"
        ],
        "id": 370,
        "masked_question": "How does held-out fMRI testing of the [mask1] guide voxel selection for follow-up experiments?",
        "masked_number": 1,
        "masked_elements": [
            "Encoding model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.00812v1_figure_1.png",
        "paperid": "2410.00812v1",
        "paper_path": "./papers/2410.00812v1.json",
        "figure_id": "2410.00812v1_figure_1.png",
        "caption": "Figure 1: Driving single-voxel response with generative explanation-mediated validation.\n(a) Voxelwise BOLD responses were recorded using fMRI as human subjects listened to 20 hours of narrative stories. An encoding model f𝑓fitalic_f was fit to predict these responses from the story text. f𝑓fitalic_f consists of a linear model fit on representations extracted from an LLM, which are not readily interpretable. Encoding models were tested by predicting responses on held-out fMRI data, and only well-performing models were selected for further analysis.\n(b) We used an automated procedure to find a verbal description of the function that f𝑓fitalic_f computes for each voxel. First, we tested f𝑓fitalic_f on a large catalog of n𝑛nitalic_n-grams (n=1,2,3)n=1,2,3)italic_n = 1 , 2 , 3 ) and found those that maximally drove predicted responses. These n𝑛nitalic_n-grams were then summarized into stable explanation candidates using a powerful instruction-tuned LLM. Finally, we evaluated each explanation candidate by generating corresponding synthetic sentences and testing that these sentences yielded large predictions from f𝑓fitalic_f.\n(c) To test whether the generated explanations were causally related to activation in the brain, we used an LLM to produce synthetic narrative stories where each paragraph is designed to drive responses based on the generated explanation for one voxel. For each subject we constructed stories to drive 17 well-modeled voxels with diverse selectivity. These stories were then presented to the subjects in a second fMRI experiment.\n(d) Average BOLD response during its driving paragraph for each voxel, relative to baseline, i.e. average response to all non-driving paragraphs. On average, driven responses were significantly higher than baseline for each subject (p=0.020𝑝0.020p=0.020italic_p = 0.020 (S01), p<10−5𝑝superscript105p<10^{-5}italic_p < 10 start_POSTSUPERSCRIPT - 5 end_POSTSUPERSCRIPT (S02), p=0.009𝑝0.009p=0.009italic_p = 0.009 (S03); permutation test, FDR-corrected).\nFor well-driven voxels, this means that the generated explanation is causally related to activation of that voxel, and thus that we have successfully translated the LLM-based encoding model into a verbal explanation.\n(e) Average BOLD response for each selected voxel to each of the driving paragraphs in one subject (S02). Responses to the driving paragraph generated using the explanation for that voxel appear along the main diagonal. Explanations that were used to construct the driving paragraphs are shown below. BOLD responses were generally high for the driving paragraphs for each voxel as well as semantically related paragraphs (e.g. directions and locations, emotional expression and laughter).",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does the LLM-driven story construction procedure integrate voxel explanations to isolate individual voxel responses?",
        "relevant_section_ids": [
            "3",
            "8"
        ],
        "relevant_context": [
            "This was done by prompting an instruction-finetuned LLM [16] to generate narratives that should selectively drive cortical activation based on that explanation (Fig. 1c).",
            "Given a selected set of voxels and their explanations, we constructed narrative stories by iteratively prompting an LLM [16] to prioritize a different voxel’s explanation as the main focus of each paragraph. This allowed us to test whether voxels selectively respond to paragraphs that match their explanation.",
            "Stories are generated by repeatedly prompting the LLM in a chat to continue the story, one paragraph at a time. For each paragraph, the LLM is asked to focus on one explanation and to include related key n-grams (Fig. 4a, see full prompts in Section A.1)."
        ],
        "final_answer": "The procedure builds multi-paragraph stories by cycling through the set of target voxels: for each paragraph, the LLM is instructed to craft text around a single voxel’s natural-language explanation and to weave in its key driving n-grams. By measuring each voxel’s response during the paragraph devoted to its own explanation (and comparing to responses during other paragraphs), the experiment isolates and verifies that each explanation selectively drives activity in its corresponding voxel.",
        "relevant_elements": [
            "Story generation",
            "Voxel explanations"
        ],
        "id": 371,
        "masked_question": "How does the [mask1] procedure integrate [mask2] to isolate individual voxel responses?",
        "masked_number": 2,
        "masked_elements": [
            "Story generation",
            "Voxel explanations"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.00812v1_figure_1.png",
        "paperid": "2410.00812v1",
        "paper_path": "./papers/2410.00812v1.json",
        "figure_id": "2410.00812v1_figure_1.png",
        "caption": "Figure 1: Driving single-voxel response with generative explanation-mediated validation.\n(a) Voxelwise BOLD responses were recorded using fMRI as human subjects listened to 20 hours of narrative stories. An encoding model f𝑓fitalic_f was fit to predict these responses from the story text. f𝑓fitalic_f consists of a linear model fit on representations extracted from an LLM, which are not readily interpretable. Encoding models were tested by predicting responses on held-out fMRI data, and only well-performing models were selected for further analysis.\n(b) We used an automated procedure to find a verbal description of the function that f𝑓fitalic_f computes for each voxel. First, we tested f𝑓fitalic_f on a large catalog of n𝑛nitalic_n-grams (n=1,2,3)n=1,2,3)italic_n = 1 , 2 , 3 ) and found those that maximally drove predicted responses. These n𝑛nitalic_n-grams were then summarized into stable explanation candidates using a powerful instruction-tuned LLM. Finally, we evaluated each explanation candidate by generating corresponding synthetic sentences and testing that these sentences yielded large predictions from f𝑓fitalic_f.\n(c) To test whether the generated explanations were causally related to activation in the brain, we used an LLM to produce synthetic narrative stories where each paragraph is designed to drive responses based on the generated explanation for one voxel. For each subject we constructed stories to drive 17 well-modeled voxels with diverse selectivity. These stories were then presented to the subjects in a second fMRI experiment.\n(d) Average BOLD response during its driving paragraph for each voxel, relative to baseline, i.e. average response to all non-driving paragraphs. On average, driven responses were significantly higher than baseline for each subject (p=0.020𝑝0.020p=0.020italic_p = 0.020 (S01), p<10−5𝑝superscript105p<10^{-5}italic_p < 10 start_POSTSUPERSCRIPT - 5 end_POSTSUPERSCRIPT (S02), p=0.009𝑝0.009p=0.009italic_p = 0.009 (S03); permutation test, FDR-corrected).\nFor well-driven voxels, this means that the generated explanation is causally related to activation of that voxel, and thus that we have successfully translated the LLM-based encoding model into a verbal explanation.\n(e) Average BOLD response for each selected voxel to each of the driving paragraphs in one subject (S02). Responses to the driving paragraph generated using the explanation for that voxel appear along the main diagonal. Explanations that were used to construct the driving paragraphs are shown below. BOLD responses were generally high for the driving paragraphs for each voxel as well as semantically related paragraphs (e.g. directions and locations, emotional expression and laughter).",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does SSM balance storage reduction and INR continuity for high-frequency signals via sparse matrix conversion?",
        "relevant_section_ids": [
            "4.3.1"
        ],
        "relevant_context": [
            "However, this kind of signal will cause distribution shift in the global data distribution and reduce the performance and accuracy of INR. Therefore, it is necessary to sacrifice some INR continuity in exchange for improved performance and accuracy.",
            "As depicted in step 3 of Fig. 2, we use sparse matrix storage to convert high-frequency signals whose amplitude meets a certain threshold into Compressed Sparse Row (CSR) data with lower storage overhead."
        ],
        "final_answer": "SSM trades off some INR continuity for better performance and accuracy by thresholding high-frequency components by amplitude and storing only the significant entries in Compressed Sparse Row (CSR) format. This sparse matrix conversion concentrates storage on the few large high-frequency values, dramatically reducing overall storage overhead while tolerating minor continuity loss.",
        "relevant_elements": [
            "SSM",
            "sparse matrix"
        ],
        "id": 372,
        "masked_question": "How does [mask1] balance storage reduction and INR continuity for high-frequency signals via sparse matrix conversion?",
        "masked_number": 1,
        "masked_elements": [
            "SSM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.06155v1_figure_2.png",
        "paperid": "2411.06155v1",
        "paper_path": "./papers/2411.06155v1.json",
        "figure_id": "2411.06155v1_figure_2.png",
        "caption": "Figure 2: Flowchart of Frequency-based Iterative Compression, the spatial compression module in HiHa (Single Time Frame).",
        "qtype": "Experimental_Results",
        "response": "The [mask1], the Sparse Storage Module (SSM), balances storage reduction and INR continuity for high-frequency signals by:\n\n1.  **Storage Reduction:** It converts high-frequency signals whose amplitude meets a certain threshold into **Compressed Sparse Row (CSR) data**. This sparse matrix storage form effectively reduces the storage overhead, as high-frequency signals with high amplitude and high frequency typically occupy only a very tiny proportion of all signals.\n2.  **Balancing with INR Continuity:** High-frequency signals can cause a distribution shift in the global data and reduce the performance and accuracy of Implicit Neural Representations (INR). To address this, SSM **sacrifices some INR continuity** by storing these signals in a sparse matrix form. This allows for improved overall performance and accuracy by not attempting to model these sporadic, high-amplitude signals with a continuous INR, while still capturing their crucial information efficiently."
    },
    {
        "question": "How does MIM leverage multi-layer Siren and 3D-VAR interpolation to trade computational overhead with compression accuracy?",
        "relevant_section_ids": [
            "4.3.2"
        ],
        "relevant_context": [
            "However, this will bring huge memory occupation, computing overhead and straggler parameter. Therefore, we adopt a multi-scale INC manner, utilizing an 1-layer Laplacian Pyramid structure to greatly reduce the computational overhead.",
            "Specifically, for low-frequency harmonics, we firstly downscale the target  to a thumbnail , which is downscaled to , the 4.1 step of Fig. 2. Then we implement the Siren based INR with , and achieve .",
            "Next, a 3-dimensional variational assimilation (3D-VAR) (Rabier, Mcnally et al. 1998) based interpolation is implemented on  upscaling to , due to its widely application in interpolation of spatial atmospheric data, and achieves ."
        ],
        "final_answer": "MIM first downsamples the low-frequency field into a small thumbnail via a one-layer Laplacian pyramid and fits that coarse version cheaply with a Siren-based INR. It then uses fast 3D-VAR interpolation to upsample back to full resolution. This two-step—coarse Siren fit plus interpolation—dramatically cuts computational overhead, while any residual errors beyond the target accuracy can be locally refitted, preserving overall compression fidelity.",
        "relevant_elements": [
            "MIM",
            "multi-layer Siren",
            "3D-VAR interpolation"
        ],
        "id": 373,
        "masked_question": "How does [mask1] leverage [mask2] and 3D-VAR interpolation to trade computational overhead with compression accuracy?",
        "masked_number": 2,
        "masked_elements": [
            "MIM",
            "multi-layer Siren"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.06155v1_figure_2.png",
        "paperid": "2411.06155v1",
        "paper_path": "./papers/2411.06155v1.json",
        "figure_id": "2411.06155v1_figure_2.png",
        "caption": "Figure 2: Flowchart of Frequency-based Iterative Compression, the spatial compression module in HiHa (Single Time Frame).",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What limitations arise from SSM’s sparse matrix storage on reconstructing extreme high-frequency weather anomalies?",
        "relevant_section_ids": [
            "4.3.1"
        ],
        "relevant_context": [
            "However, this kind of signal will cause distribution shift in the global data distribution and reduce the performance and accuracy of INC.",
            "Therefore, it is necessary to sacrifice some INR continuity in exchange for improved performance and accuracy.",
            "As depicted in step 3 of Fig. 2, we use sparse matrix storage to convert high-frequency signals whose amplitude meets a certain threshold into Compressed Sparse Row (CSR) data with lower storage overhead."
        ],
        "final_answer": "By storing extreme high-frequency anomalies in a sparse CSR format, the SSM module reduces storage cost but necessarily gives up part of the INR’s inherent continuity. As a result, the reconstruction of those extreme, localized anomalies can exhibit discontinuities or loss of fine-scale spatial coherence.",
        "relevant_elements": [
            "SSM",
            "sparse matrix storage"
        ],
        "id": 374,
        "masked_question": "What limitations arise from [mask1]’s sparse matrix storage on reconstructing extreme high-frequency weather anomalies?",
        "masked_number": 1,
        "masked_elements": [
            "SSM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.06155v1_figure_2.png",
        "paperid": "2411.06155v1",
        "paper_path": "./papers/2411.06155v1.json",
        "figure_id": "2411.06155v1_figure_2.png",
        "caption": "Figure 2: Flowchart of Frequency-based Iterative Compression, the spatial compression module in HiHa (Single Time Frame).",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How could distribution-aware prompts bias automated sample collection toward stereotypical representations?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Distribution-aware Prompts",
            "Automated Sample Collection"
        ],
        "id": 376,
        "masked_question": "How could [mask1] bias [mask2] toward stereotypical representations?",
        "masked_number": 2,
        "masked_elements": [
            "Distribution-aware Prompts",
            "Automated Sample Collection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.08966v1_figure_2.png",
        "paperid": "2407.08966v1",
        "paper_path": "./papers/2407.08966v1.json",
        "figure_id": "2407.08966v1_figure_2.png",
        "caption": "Figure 2: The overall framework of our LAPT method, where 𝐯d o g/𝐯b o a tsubscript𝐯𝑑𝑜𝑔subscript𝐯𝑏𝑜𝑎𝑡\\mathbf{v}_{dog}/\\mathbf{v}_{boat}bold_v start_POSTSUBSCRIPT italic_d italic_o italic_g end_POSTSUBSCRIPT / bold_v start_POSTSUBSCRIPT italic_b italic_o italic_a italic_t end_POSTSUBSCRIPT, 𝐜d o g/𝐜b o a tsubscript𝐜𝑑𝑜𝑔subscript𝐜𝑏𝑜𝑎𝑡\\mathbf{c}_{dog}/\\mathbf{c}_{boat}bold_c start_POSTSUBSCRIPT italic_d italic_o italic_g end_POSTSUBSCRIPT / bold_c start_POSTSUBSCRIPT italic_b italic_o italic_a italic_t end_POSTSUBSCRIPT, and 𝐥d o g/𝐥b o a tsubscript𝐥𝑑𝑜𝑔subscript𝐥𝑏𝑜𝑎𝑡\\mathbf{l}_{dog}/\\mathbf{l}_{boat}bold_l start_POSTSUBSCRIPT italic_d italic_o italic_g end_POSTSUBSCRIPT / bold_l start_POSTSUBSCRIPT italic_b italic_o italic_a italic_t end_POSTSUBSCRIPT are image features, textual features, and soft labels of dog/boat samples.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates differentiating tokens between ID and negative labels in distribution-aware prompts?",
        "relevant_section_ids": [
            "3.3.1"
        ],
        "relevant_context": [
            "Here, we propose a distribution-aware prompt strategy, which differentiates tokens for ID and OOD classes, as shown in Fig. 2.",
            "Our empirical results suggest that the distribution-aware prompt notably enhances the distinction between ID and OOD distributions, as analyzed in Sec. 4.3."
        ],
        "final_answer": "Differentiating tokens for ID and negative (OOD) labels is motivated by the observation that it notably enhances the distinction between in‐distribution and out‐of‐distribution samples, thereby improving OOD detection performance.",
        "relevant_elements": [
            "distribution-aware prompts"
        ],
        "id": 378,
        "masked_question": "What motivates differentiating tokens between ID and negative labels in [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "distribution-aware prompts"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.08966v1_figure_2.png",
        "paperid": "2407.08966v1",
        "paper_path": "./papers/2407.08966v1.json",
        "figure_id": "2407.08966v1_figure_2.png",
        "caption": "Figure 2: The overall framework of our LAPT method, where 𝐯d o g/𝐯b o a tsubscript𝐯𝑑𝑜𝑔subscript𝐯𝑏𝑜𝑎𝑡\\mathbf{v}_{dog}/\\mathbf{v}_{boat}bold_v start_POSTSUBSCRIPT italic_d italic_o italic_g end_POSTSUBSCRIPT / bold_v start_POSTSUBSCRIPT italic_b italic_o italic_a italic_t end_POSTSUBSCRIPT, 𝐜d o g/𝐜b o a tsubscript𝐜𝑑𝑜𝑔subscript𝐜𝑏𝑜𝑎𝑡\\mathbf{c}_{dog}/\\mathbf{c}_{boat}bold_c start_POSTSUBSCRIPT italic_d italic_o italic_g end_POSTSUBSCRIPT / bold_c start_POSTSUBSCRIPT italic_b italic_o italic_a italic_t end_POSTSUBSCRIPT, and 𝐥d o g/𝐥b o a tsubscript𝐥𝑑𝑜𝑔subscript𝐥𝑏𝑜𝑎𝑡\\mathbf{l}_{dog}/\\mathbf{l}_{boat}bold_l start_POSTSUBSCRIPT italic_d italic_o italic_g end_POSTSUBSCRIPT / bold_l start_POSTSUBSCRIPT italic_b italic_o italic_a italic_t end_POSTSUBSCRIPT are image features, textual features, and soft labels of dog/boat samples.",
        "qtype": "Design_Rationale",
        "response": "The motivation for differentiating tokens between ID and negative labels in the \"Distribution-aware Prompts\" (mask1) is to **notably enhance the distinction between In-Distribution (ID) and Out-of-Distribution (OOD) distributions.** This is achieved by creating learnable context tokens (`V_1` to `V_N` for ID and `V_1^-` to `V_N^-` for negative/OOD) that are specifically tailored to differentiate between these two types of data."
    },
    {
        "question": "Why integrate cross-modal mixing with cross-distribution mixing in the prompt tuning loss?",
        "relevant_section_ids": [
            "3.3.3"
        ],
        "relevant_context": [
            "While the simple classification loss has achieved commendable results, we could further enhance it by addressing potential sample noise and exploring broader data space through carefully designed data mixing strategies.",
            "To mitigate the impact of image noise, we introduce a cross-modal mixing strategy to neutralize potential noise in the images.",
            "By mixing textual and visual representations, we aim to create a more robust feature set that can help the model learn to focus on relevant features while disregarding noisy information.",
            "To enhance the utilization of these spaces, we introduce a cross-distribution mixing strategy, which combines features and corresponding labels of ID and negative samples to create new training samples.",
            "This method not only allows the model to become more aware of the intermediate space between ID and negative regions, but also encourages it to learn more discriminative features that can better generalize to new and unseen OOD samples.",
            "Our cross-modal mixing strategy lowers image noise by blending samples from the same class but across different modalities, creating more robust features. Meanwhile, our cross-distribution mixing scheme goes a step further by mixing automatically collected positive and negative data, allowing us to explore the space that lies between ID and negative regions. This exploration enables our model to better understand and characterize the boundary between ID and OOD, leading to more effective detection of anomalies."
        ],
        "final_answer": "Integrating cross-modal mixing with cross-distribution mixing allows the prompt tuning loss to both mitigate noise in the collected images by blending visual and textual features, and to explore the intermediate feature space between in-distribution and negative (OOD) classes. This combination yields more robust, discriminative prompts that improve the model’s ability to distinguish ID from OOD samples.",
        "relevant_elements": [
            "cross-modal mixing",
            "cross-distribution mixing"
        ],
        "id": 379,
        "masked_question": "Why integrate [mask1] with [mask2] in the prompt tuning loss?",
        "masked_number": 2,
        "masked_elements": [
            "cross-modal mixing",
            "cross-distribution mixing"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.08966v1_figure_2.png",
        "paperid": "2407.08966v1",
        "paper_path": "./papers/2407.08966v1.json",
        "figure_id": "2407.08966v1_figure_2.png",
        "caption": "Figure 2: The overall framework of our LAPT method, where 𝐯d o g/𝐯b o a tsubscript𝐯𝑑𝑜𝑔subscript𝐯𝑏𝑜𝑎𝑡\\mathbf{v}_{dog}/\\mathbf{v}_{boat}bold_v start_POSTSUBSCRIPT italic_d italic_o italic_g end_POSTSUBSCRIPT / bold_v start_POSTSUBSCRIPT italic_b italic_o italic_a italic_t end_POSTSUBSCRIPT, 𝐜d o g/𝐜b o a tsubscript𝐜𝑑𝑜𝑔subscript𝐜𝑏𝑜𝑎𝑡\\mathbf{c}_{dog}/\\mathbf{c}_{boat}bold_c start_POSTSUBSCRIPT italic_d italic_o italic_g end_POSTSUBSCRIPT / bold_c start_POSTSUBSCRIPT italic_b italic_o italic_a italic_t end_POSTSUBSCRIPT, and 𝐥d o g/𝐥b o a tsubscript𝐥𝑑𝑜𝑔subscript𝐥𝑏𝑜𝑎𝑡\\mathbf{l}_{dog}/\\mathbf{l}_{boat}bold_l start_POSTSUBSCRIPT italic_d italic_o italic_g end_POSTSUBSCRIPT / bold_l start_POSTSUBSCRIPT italic_b italic_o italic_a italic_t end_POSTSUBSCRIPT are image features, textual features, and soft labels of dog/boat samples.",
        "qtype": "Design_Rationale",
        "response": "To answer the question, let's break down the purpose of each data mixing strategy and why they are integrated:\n\n1.  **Cross-modal Data Mixing (mask1):**\n    As per the \"Cross-modal mixing\" subsection within \"3.3.3 Prompt tuning with cross-modal and cross-distribution mixing.\", this strategy is introduced \"to mitigate the impact of image noise\" in the collected training images. By mixing textual and visual representations for the same class, it aims to \"create a more robust feature set that can help the model learn to focus on relevant features while disregarding noisy information.\" This also \"encourages it to leverage complementary information from both modalities.\"\n\n2.  **Cross-distribution Data Mixing (mask2):**\n    The \"Cross-distribution mixing\" subsection explains that this strategy is employed \"to explore a broader feature space.\" Specifically, it addresses the underutilization of the intermediate area between ID (in-distribution) and negative regions. By \"combines features and corresponding labels of ID and negative samples to create new training samples,\" it \"effectively bridges the distribution gap, generating a continuous spectrum of features that extend from ID to negative areas.\" This helps the model \"become more aware of the intermediate space between ID and negative regions\" and \"learn more discriminative features that can better generalize to new and unseen OOD samples.\"\n\n**Why integrate them in the prompt tuning loss?**\nThe \"Remarks\" section clarifies the combined benefit: \"Our cross-modal mixing strategy lowers image noise by blending samples from the same class but across different modalities, creating more robust features. Meanwhile, our cross-distribution mixing scheme goes a step further by mixing automatically collected positive and negative data, allowing us to explore the"
    },
    {
        "question": "What motivates introducing label non-IID challenge in the Fed-ECG multi-label classification pipeline?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Among these, non-IID labels have the most pronounced impact on FL model performance. This is because the quantity and types of labels held by each institution can vary greatly, misleading the local supervised training process and causing \"Client Drift\" [48], which hinders global model convergence.",
            "For label distribution in the Fed-ECG multi-label classification task, each sample may belong to multiple categories, but the quantity and proportion of different labels vary significantly among institutions."
        ],
        "final_answer": "The label non-IID challenge is introduced because in Fed-ECG each institution has very different label distributions—both in which categories appear and their frequencies. This heterogeneity can mislead local training (as some clients lack certain labels entirely) and causes client drift, thereby hindering convergence of the global model.",
        "relevant_elements": [
            "Fed-ECG",
            "Label non-IID"
        ],
        "id": 380,
        "masked_question": "What motivates introducing [mask1] challenge in the [mask2] multi-label classification pipeline?",
        "masked_number": 2,
        "masked_elements": [
            "Label non-IID",
            "Fed-ECG"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.07050v1_figure_1.png",
        "paperid": "2411.07050v1",
        "paper_path": "./papers/2411.07050v1.json",
        "figure_id": "2411.07050v1_figure_1.png",
        "caption": "Figure 1: The overall architecture of the proposed FedCVD benchmark. We present two main settings (Fed-ECG, Fed-ECHO) and an experimental platform, highlighting three primary challenges. Green and blue circles in the challenges section indicate their presence in Fed-ECG and Fed-ECHO, respectively. The API section highlights user-facing APIs in orange boxes.",
        "qtype": "Design_Rationale",
        "response": "The motivation for introducing the \"Label non-IID\" challenge in the \"Fed-ECG\" multi-label classification pipeline is due to the natural heterogeneity of label distributions across different institutions.\n\nSpecifically, the text states:\n1.  **Varying label distribution:** \"For label distribution in the Fed-ECG multi-label classification task, each sample may belong to multiple categories, but the quantity and proportion of different labels vary significantly among institutions.\" For example, Institution 1 and 2 mostly have 'NORM' labels, while Institution 3 and 4 mostly have 'STACH'.\n2.  **Missing labels:** \"Some institutions may even lack samples with certain labels, such as both Institution 3 and Institution 4 lacking samples labeled as PAC (Atrial premature complex(es)).\"\n3.  **Impact on training:** \"These non-IID characteristics challenge the four institutions in collaboratively training a multi-label prediction model, as institutions struggle to capture information about the labels they lack during local training, potentially leading to client drift.\" This means the model trained locally by an institution might not learn about labels that are absent or rare in its dataset, making it difficult for the global model to converge effectively."
    },
    {
        "question": "How does Partitioner distribute ECGDataset samples to reflect natural client heterogeneity?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Partitioner",
            "ECGDataset"
        ],
        "id": 382,
        "masked_question": "How does [mask1] distribute [mask2] samples to reflect natural client heterogeneity?",
        "masked_number": 2,
        "masked_elements": [
            "Partitioner",
            "ECGDataset"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.07050v1_figure_1.png",
        "paperid": "2411.07050v1",
        "paper_path": "./papers/2411.07050v1.json",
        "figure_id": "2411.07050v1_figure_1.png",
        "caption": "Figure 1: The overall architecture of the proposed FedCVD benchmark. We present two main settings (Fed-ECG, Fed-ECHO) and an experimental platform, highlighting three primary challenges. Green and blue circles in the challenges section indicate their presence in Fed-ECG and Fed-ECHO, respectively. The API section highlights user-facing APIs in orange boxes.",
        "qtype": "Implementation_Details",
        "response": "The `Part"
    },
    {
        "question": "How does Handler synchronize with the Distributed Backend to coordinate server-client interactions?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Handler",
            "Distributed Backend"
        ],
        "id": 383,
        "masked_question": "How does [mask1] synchronize with the Distributed Backend to coordinate server-client interactions?",
        "masked_number": 1,
        "masked_elements": [
            "Handler"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.07050v1_figure_1.png",
        "paperid": "2411.07050v1",
        "paper_path": "./papers/2411.07050v1.json",
        "figure_id": "2411.07050v1_figure_1.png",
        "caption": "Figure 1: The overall architecture of the proposed FedCVD benchmark. We present two main settings (Fed-ECG, Fed-ECHO) and an experimental platform, highlighting three primary challenges. Green and blue circles in the challenges section indicate their presence in Fed-ECG and Fed-ECHO, respectively. The API section highlights user-facing APIs in orange boxes.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does motion encoder determine discrete indices from the codebook for body and hand parts?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "For each motion sequence, the corresponding encoder first projects the sequence into a latent space: $z_e^p = E^p(x^p)$, using a stack of 1D-CNN layers.",
            "Then, for each pose we can derive a set of discrete tokens $z_q^p$ using a quantizer $Q$, which searches the nearest neighbor from the codebook $e^p$."
        ],
        "final_answer": "After encoding each part-wise motion sequence into a latent vector via the 1D-CNN encoder, the motion encoder quantizes each latent vector by finding its nearest neighbor in the corresponding part-specific codebook. The index of that closest code is then taken as the discrete token for body, left-hand, and right-hand motions.",
        "relevant_elements": [
            "Motion Encoder",
            "Codebook"
        ],
        "id": 384,
        "masked_question": "How does [mask1] determine discrete indices from the [mask2] for body and hand parts?",
        "masked_number": 2,
        "masked_elements": [
            "Motion Encoder",
            "Codebook"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.17799v1_figure_2.png",
        "paperid": "2411.17799v1",
        "paper_path": "./papers/2411.17799v1.json",
        "figure_id": "2411.17799v1_figure_2.png",
        "caption": "Figure 2: An overview of our proposed method, Signs as Tokens (SOKE). Our approach consists of two key components: a decoupled tokenizer (DETO) and an autoregressive multilingual generator (AMG). DETO transforms the input pose sequence to a set of discrete tokens using three distinct vector quantized variational autoencoders, each one composed of a motion encoder (ℰℰ\\mathcal{E}caligraphic_E), a motion decoder (𝒟𝒟\\mathcal{D}caligraphic_D), and a codebook. These components work together to discretize input sign sequences from various body parts. Leveraging a pretrained language model (LM), the AMG can later generate multilingual signs from text prompts with a tailored part-wise decoding strategy.",
        "qtype": "Implementation_Details",
        "response": "The [mask1], which is the Decoupled Tokenizer (DETO), determines discrete indices from the [mask2], which are the Body, LH (left hand), and RH (right hand) Codebooks, for body and hand parts through a quantization process.\n\nHere's a step-by-step explanation based on the provided text:\n\n1.  **Encoding to Latent Space:** For each sign motion sequence (or part-wise motion sequence for body, LH, or RH), the corresponding encoder ($\\mathcal{E}$) in DETO first projects the sequence into a latent space, producing a latent representation $z$.\n2.  **Quantization:** A quantizer ($\\mathcal{Q}$) then takes this latent representation $z$.\n3.  **Nearest Neighbor Search:** For each pose within the latent representation, the quantizer searches the nearest neighbor from the corresponding learnable codebook ($\\mathcal{C}$). This is done by finding the codebook entry $e_k$ that minimizes the Euclidean distance (L2 norm) to the latent vector $z$, i.e., $\\text{argmin}_{e_k \\in \\mathcal{C}} \\|z - e_k\\|_2^2$.\n4.  **Discrete Tokens/Indices:** The index of this nearest codebook entry $e_k$ is then selected as the discrete token for that specific pose.\n\nIn essence, the encoder maps continuous motion data to a latent representation, and then the quantizer finds the closest discrete \"code\" (or index) in the learnable codebook to represent that latent motion."
    },
    {
        "question": "How does part-wise decoding maintain shared weights across separate multilingual LM decoder instances?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "Moreover, we instantiate three LM decoders with shared weights, each one in charge of a single body part."
        ],
        "final_answer": "Part-wise decoding uses three decoder instances—one per body part—that are all copies of the same multilingual LM decoder and thus share the exact same parameters (weights) across these instances.",
        "relevant_elements": [
            "Part-wise Decoding",
            "Multilingual LM Decoder"
        ],
        "id": 385,
        "masked_question": "How does [mask1] maintain shared weights across separate multilingual LM decoder instances?",
        "masked_number": 1,
        "masked_elements": [
            "Part-wise Decoding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.17799v1_figure_2.png",
        "paperid": "2411.17799v1",
        "paper_path": "./papers/2411.17799v1.json",
        "figure_id": "2411.17799v1_figure_2.png",
        "caption": "Figure 2: An overview of our proposed method, Signs as Tokens (SOKE). Our approach consists of two key components: a decoupled tokenizer (DETO) and an autoregressive multilingual generator (AMG). DETO transforms the input pose sequence to a set of discrete tokens using three distinct vector quantized variational autoencoders, each one composed of a motion encoder (ℰℰ\\mathcal{E}caligraphic_E), a motion decoder (𝒟𝒟\\mathcal{D}caligraphic_D), and a codebook. These components work together to discretize input sign sequences from various body parts. Leveraging a pretrained language model (LM), the AMG can later generate multilingual signs from text prompts with a tailored part-wise decoding strategy.",
        "qtype": "Implementation_Details",
        "response": "The red box ([mask1]) highlights the \"Multilingual LM Decoder\" with \"C x3 Part-wise Decoding.\"\n\nAccording to the \"Autoregressive Multilingual Generator\" section, specifically under \"Part-wise Decoding\":\n\"Moreover, we instantiate three LM decoders with shared weights, each one in charge of a single body part.\"\n\nTherefore, the **Multilingual LM Decoder** maintains shared weights by instantiating three LM decoders that share their weights, with each decoder responsible for a single body part (body, left hand, and right hand)."
    },
    {
        "question": "How does Decoupled Tokenizer integrate Body Codebook quantization with VQ-VAE concepts?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "To discretize continuous signs into tokens, we develop a sign tokenizer based on the well-established VQ-VAE. Existing motion generation research primarily focuses on body movements, such as running and jumping, while often neglecting the role of hands. However, in sign language, hands are crucial for conveying information [17,55]. To bridge this gap, we propose DETO, a decoupled tokenizer that utilizes three VQ-VAEs to simultaneously model key regions: the upper body and both hands.",
            "Given a sign motion input M, we first decompose it into three part-wise motion sequences based on kinematic tree of SMPL-X [40]: M=[M_B,M_LH,M_RH], where M_B includes the upper body and face, M_LH and M_RH are left- and right-hand motions. Moreover, we build three distinct VQ-VAEs, where each of them consists of an encoder E, a decoder D, and a learnable codebook C, where N_C represents the number of codes and d_C denotes the code dimension.",
            "Then, for each pose we can derive a set of discrete tokens t=[t_1,…,t_{T/f}] using a quantizer Q, which searches the nearest neighbor from the codebook: t_i = argmin_k || q_i - C_k ||. We then feed the obtained token sequence to the corresponding part-decoder D to reconstruct the input motions: M' = D(t)."
        ],
        "final_answer": "DETO uses the VQ-VAE framework to tokenize each sign sequence into discrete body (and hand) codes. It first splits a motion into body, left-hand, and right-hand streams, then passes each stream through its own VQ-VAE – consisting of an encoder, a learnable codebook, and a decoder. The encoder projects the stream into a latent sequence, and a quantizer snaps each latent to its nearest entry in the part’s codebook (the “body codebook” for the upper body). These nearest-neighbor lookups produce discrete tokens, which are then decoded back into motion, and whose reconstruction and embedding losses drive codebook learning under the standard VQ-VAE losses.",
        "relevant_elements": [
            "Decoupled Tokenizer",
            "Body Codebook"
        ],
        "id": 386,
        "masked_question": "How does [mask1] integrate Body Codebook quantization with VQ-VAE concepts?",
        "masked_number": 1,
        "masked_elements": [
            "Decoupled Tokenizer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.17799v1_figure_2.png",
        "paperid": "2411.17799v1",
        "paper_path": "./papers/2411.17799v1.json",
        "figure_id": "2411.17799v1_figure_2.png",
        "caption": "Figure 2: An overview of our proposed method, Signs as Tokens (SOKE). Our approach consists of two key components: a decoupled tokenizer (DETO) and an autoregressive multilingual generator (AMG). DETO transforms the input pose sequence to a set of discrete tokens using three distinct vector quantized variational autoencoders, each one composed of a motion encoder (ℰℰ\\mathcal{E}caligraphic_E), a motion decoder (𝒟𝒟\\mathcal{D}caligraphic_D), and a codebook. These components work together to discretize input sign sequences from various body parts. Leveraging a pretrained language model (LM), the AMG can later generate multilingual signs from text prompts with a tailored part-wise decoding strategy.",
        "qtype": "Literature_Background",
        "response": "The Decoupled Tokenizer (DETO) integrates Body Codebook quantization with VQ-VAE concepts by implementing a separate Vector Quantized Variational Autoencoder (VQ-VAE) for the upper body, which includes the face.\n\nHere's how it works according to the text:\n1.  **Decomposition**: The continuous sign motion input is first decomposed into three part-wise motion sequences: upper body (including face), left hand, and right hand.\n2.  **VQ-VAE Structure**: For the upper body (and similarly for each hand), a distinct VQ-VAE is built. Each VQ-VAE consists of an encoder ($\\mathcal{E}_B$), a decoder ($\\mathcal{D}_B$), and a learnable codebook ($E_B$), which is referred to as the \"Body Codebook\" in the diagram.\n3.  **Encoding and Latent Space**: The encoder ($\\mathcal{E}_B$) projects the continuous upper body motion sequence into a latent space.\n4.  **Quantization with Codebook**: For each pose in the latent space, a quantizer maps it to a discrete token. This is done by searching for the \"nearest neighbor\" code vector within the learnable **Body Codebook** ($E_B$). This process, `argmin_j ||E(xi) - ej||^2`, effectively discretizes the continuous latent representation of the body motion into"
    },
    {
        "question": "How does Part-wise Decoding adapt Multilingual LM Decoder processes for body-part-specific token output?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "Since we decompose the motion sequence into three parts via the decoupled tokenizer, we accordingly devise a part-wise decoding strategy such that the LM can output token sequences for each body part.",
            "Moreover, we instantiate three LM decoders with shared weights, each one in charge of a single body part.",
            "To prompt the decoders with the information of body parts, decoding process starts from one of the above mentioned special tokens, based on the target language and body part.",
            "For example, the starting token would be set to <> when the model is required to generate upper-body motions for ASL.",
            "Then in each decoding step, the decoders will predict the probability distributions of the next token , conditioned on the encoder hidden states  and the previous predictions: ."
        ],
        "final_answer": "Part-wise Decoding first breaks the motion into three streams (upper body, left hand, right hand) and then runs three separate (but weight-shared) LM decoders—one per body part. Each decoder is ‘‘prompted’’ by a specific special token that encodes the target language and body part (e.g. <> for ASL upper body). Starting from that token and conditioned on the shared encoder’s hidden states, each decoder autoregressively generates the token sequence corresponding to its assigned body part.",
        "relevant_elements": [
            "Autoregressive Multilingual Generator",
            "Part-wise Decoding"
        ],
        "id": 387,
        "masked_question": "How does [mask1] adapt [mask2] processes for body-part-specific token output?",
        "masked_number": 2,
        "masked_elements": [
            "Part-wise Decoding",
            "Multilingual LM Decoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.17799v1_figure_2.png",
        "paperid": "2411.17799v1",
        "paper_path": "./papers/2411.17799v1.json",
        "figure_id": "2411.17799v1_figure_2.png",
        "caption": "Figure 2: An overview of our proposed method, Signs as Tokens (SOKE). Our approach consists of two key components: a decoupled tokenizer (DETO) and an autoregressive multilingual generator (AMG). DETO transforms the input pose sequence to a set of discrete tokens using three distinct vector quantized variational autoencoders, each one composed of a motion encoder (ℰℰ\\mathcal{E}caligraphic_E), a motion decoder (𝒟𝒟\\mathcal{D}caligraphic_D), and a codebook. These components work together to discretize input sign sequences from various body parts. Leveraging a pretrained language model (LM), the AMG can later generate multilingual signs from text prompts with a tailored part-wise decoding strategy.",
        "qtype": "Literature_Background",
        "response": "The \"Part-wise Decoding\" (highlighted by the red box), which is a component of the \"Multilingual LM Decoder\" within the \"Autoregressive Multilingual Generator\" (highlighted by the blue box), adapts its processes for body-part-specific token output in the following ways:\n\n1.  **Instantiation of Multiple Decoders:** It instantiates three LM decoders (with shared weights), where each decoder is specifically \"in charge of a single body part\" (upper body, left hand, or right hand). This specialization allows the generator to produce distinct token sequences for each body part.\n2.  **Prompting with Special Tokens:** To direct the decoders to generate tokens for a specific body part, the decoding process starts with a special token (e.g., `<Lang_B>` for body, `<Lang_LH>` for left hand, `<Lang_RH>` for right hand). These tokens explicitly prompt the decoder with information about the target body part and language, guiding it to predict the corresponding motion tokens."
    },
    {
        "question": "How does Vector Embedding module leverage BERT Encoder transformer principles for semantic representation?",
        "relevant_section_ids": [
            "3",
            "3.1"
        ],
        "relevant_context": [
            "Embedding. We utilized transformer-based models (BERT, RoBERTa) [23] to produce embeddings for text data. These embeddings capture semantic information about the text and are high-dimensional vectors.",
            "Feature Extraction (Embedding). That utilized a deep learning model, denoted as Φ, to convert the preprocessed document titles into embeddings. Thus, each document dᵢ is transformed into an embedding eᵢ."
        ],
        "final_answer": "The Vector Embedding module applies a BERT-based transformer encoder to each piece of text, using the same self-attention and multilayer encoding principles of BERT to produce dense, high-dimensional vectors that capture the contextual and semantic relationships present in the input text.",
        "relevant_elements": [
            "Vector Embedding",
            "BERT Encoder"
        ],
        "id": 388,
        "masked_question": "How does [mask1] module leverage [mask2] transformer principles for semantic representation?",
        "masked_number": 2,
        "masked_elements": [
            "Vector Embedding",
            "BERT Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.17383v1_figure_1.png",
        "paperid": "2409.17383v1",
        "paper_path": "./papers/2409.17383v1.json",
        "figure_id": "2409.17383v1_figure_1.png",
        "caption": "Figure 1: We propose the VectorSearch Framework, utilizing a systematic grid search to fine-tune document retrieval systems by optimizing hyperparameters, index dimensions, and similarity thresholds for enhanced performance.",
        "qtype": "Literature_Background",
        "response": "The module \"Vector Embedding\" (highlighted by the red box) leverages transformer principles as embodied by models like \"BERT\" (highlighted by the blue box) to produce high-dimensional vector representations.\n\nHere's the breakdown from the context:\n1.  **\"Vector Embedding\" (mask1) as the process:** The text states, \"Feature Extraction (Embedding). That utilized a deep learning model... to convert the preprocessed document titles into embeddings.\" It further says, \"To encode the titles of these documents into numerical vectors suitable for vector search, We utilized the capabilities of the SentenceTransformer, renowned for its ability to produce semantically meaningful embeddings.\" This confirms that \"Vector Embedding\" is the process of converting text into numerical vectors.\n\n2.  **\"BERT\" (mask2) as the transformer model:** Under the \"Embedding.\" section, the context explicitly ties the two: \"We utilized transformer-based models (BERT, RoBERTa) to produce embeddings for text data. These embeddings capture semantic information about the text and are high-dimensional vectors.\" The diagram shows BERT as an encoder, specifically with \"12 Encoder\" components, which is characteristic of transformer models.\n\nTherefore, the \"Vector Embedding\" module leverages transformer principles by using transformer-based models such as BERT (and RoBERTa) to generate high-dimensional embeddings that capture the semantic information of the text. These models, with their multi-encoder architecture (e.g., BERT's 12 Encoders), are designed to produce semantically meaningful vector representations."
    },
    {
        "question": "How does Hyperparameter Tuner incorporate grid search methodologies to enhance Model Training efficiency?",
        "relevant_section_ids": [
            "3",
            "3.1"
        ],
        "relevant_context": [
            "We utilized ParameterGrid from the scikit-learn library to systematically explore the hyperparameter space Φ. By iterating over the parameter grid Φ, we identified optimal configurations ϕ* that maximized precision while minimizing query time.",
            "Hyperparameter Tuning (Φ). Defined a set of hyperparameters Φ, where each Φ_i represents a combination of hyperparameters."
        ],
        "final_answer": "The Hyperparameter Tuner constructs a comprehensive grid of hyperparameter settings (Φ) and leverages scikit-learn’s ParameterGrid to systematically iterate through every combination. For each candidate configuration, it trains and evaluates the model—measuring metrics such as precision and query time—and then selects the optimal hyperparameters (ϕ*) that deliver the best performance and lowest latency, thereby streamlining and automating the model training process.",
        "relevant_elements": [
            "Hyperparameter Tuner",
            "Model Training"
        ],
        "id": 389,
        "masked_question": "How does [mask1] incorporate grid search methodologies to enhance Model Training efficiency?",
        "masked_number": 1,
        "masked_elements": [
            "Hyperparameter Tuner"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.17383v1_figure_1.png",
        "paperid": "2409.17383v1",
        "paper_path": "./papers/2409.17383v1.json",
        "figure_id": "2409.17383v1_figure_1.png",
        "caption": "Figure 1: We propose the VectorSearch Framework, utilizing a systematic grid search to fine-tune document retrieval systems by optimizing hyperparameters, index dimensions, and similarity thresholds for enhanced performance.",
        "qtype": "Literature_Background",
        "response": "The **Hyperparameter Tuner** in conjunction with **Model Training** incorporates grid search methodologies by systematically exploring diverse hyperparameter configurations. It utilizes a comprehensive \"parameter grid\" (e.g., from scikit-learn's `ParameterGrid`) that defines various combinations of hyperparameters such as pretrained model selection, index dimensionality, and similarity threshold. For each of these combinations, the model is trained and evaluated to measure performance metrics like mean precision and query time. This systematic iteration over the parameter grid allows for the identification of optimal configurations that maximize precision while minimizing query time, thereby enhancing the overall efficiency and effectiveness of the Model Training process and the document retrieval system."
    },
    {
        "question": "How does the cache module leverage ChromaDB to optimize embedding retrieval during encoding?",
        "relevant_section_ids": [
            "3",
            "4"
        ],
        "relevant_context": [
            "A vector database, ChromaDB, was utilized [24] to index and store the produced embeddings [25]. This allows for efficient storage and retrieval of high-dimensional vectors [17].",
            "We implemented a caching mechanism to store and reuse precomputed embeddings from the Chroma model, enhancing efficiency by eliminating redundant computations. This mechanism efficiently saved embeddings to disk, minimizing the need for recomputation and optimizing resource management."
        ],
        "final_answer": "The cache module uses ChromaDB as a persistent store for embeddings. During encoding, it first looks up whether an embedding already exists in ChromaDB’s index. If it does, the module retrieves that stored embedding directly—avoiding a fresh pass through the SentenceTransformer model. By saving and re-using these precomputed vectors, the system eliminates redundant encoding work, speeds up embedding retrieval, and reduces overall computation and I/O overhead.",
        "relevant_elements": [
            "Cache",
            "ChromaDB"
        ],
        "id": 390,
        "masked_question": "How does the [mask1] module leverage [mask2] to optimize embedding retrieval during encoding?",
        "masked_number": 2,
        "masked_elements": [
            "Cache",
            "ChromaDB"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.17383v1_figure_1.png",
        "paperid": "2409.17383v1",
        "paper_path": "./papers/2409.17383v1.json",
        "figure_id": "2409.17383v1_figure_1.png",
        "caption": "Figure 1: We propose the VectorSearch Framework, utilizing a systematic grid search to fine-tune document retrieval systems by optimizing hyperparameters, index dimensions, and similarity thresholds for enhanced performance.",
        "qtype": "Experimental_Results",
        "response": "The **Cache** module optimizes embedding retrieval during encoding by storing and reusing precomputed embeddings that would otherwise be stored in or retrieved from the **ChromaDB** vector database. This mechanism eliminates redundant computations, enhances computational efficiency, and minimizes network latency by ensuring rapid loading and access to these embeddings without the need for repetitive regeneration or repeated queries to the main database."
    },
    {
        "question": "How does hyperparameter tuner integrate within grid search to optimize model training?",
        "relevant_section_ids": [
            "3",
            "3.1"
        ],
        "relevant_context": [
            "We utilized ParameterGrid from the scikit-learn library to systematically explore the hyperparameter space {\\Theta}. By iterating over the parameter grid {\\Theta}, we identified optimal configurations {\\theta^*} that maximized precision while minimizing query time.",
            "The Parameter Grid is utilized to define a comprehensive parameter grid, encompassing various combinations of hyperparameters such as pretrained model selection (m), index dimensionality (d) and similarity threshold (τ). Model Training and Evaluation defined a function trainEvaluate, where θ represents the hyperparameters of the VectorSearch framework. This function trains and evaluates the model, returning performance metrics."
        ],
        "final_answer": "During grid search, the hyperparameter tuner uses scikit-learn’s ParameterGrid to enumerate all combinations of the configurable settings (e.g., model type, index dimension, similarity threshold). For each candidate combination θ, it calls the trainEvaluate routine to train the model and measure its performance (precision, query time). By iterating through the entire grid and comparing the returned metrics, the tuner selects the θ that best maximizes precision (and/or minimizes query time) and then retrains the final model with those best hyperparameters.",
        "relevant_elements": [
            "Grid Search",
            "Hyperparameter Tuner",
            "Model Training"
        ],
        "id": 391,
        "masked_question": "How does hyperparameter tuner integrate within [mask1] to optimize model training?",
        "masked_number": 1,
        "masked_elements": [
            "Grid Search"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.17383v1_figure_1.png",
        "paperid": "2409.17383v1",
        "paper_path": "./papers/2409.17383v1.json",
        "figure_id": "2409.17383v1_figure_1.png",
        "caption": "Figure 1: We propose the VectorSearch Framework, utilizing a systematic grid search to fine-tune document retrieval systems by optimizing hyperparameters, index dimensions, and similarity thresholds for enhanced performance.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does contrastive learning influence the projection head’s extraction of DOA-specific embeddings?",
        "relevant_section_ids": [
            "3",
            "3.3.2"
        ],
        "relevant_context": [
            "A projection head p is then used to jointly convert the latent features to the audio embeddings over the DOA grid.",
            "In DOA-wise contrastive learning, we maximize the local similarity between DOA-wise audio and visual embeddings when they correspond to the same DOA (positive sample), and minimize it otherwise (negative sample)."
        ],
        "final_answer": "Contrastive learning guides the projection head to produce DOA-specific embeddings by enforcing that audio embeddings at each DOA location are pulled closer to the matching visual embeddings (positive pairs) and pushed away from non-matching ones (negative pairs). This objective makes the projection head learn discriminative, direction-aware features for each point on the DOA grid.",
        "relevant_elements": [
            "contrastive learning",
            "projection head"
        ],
        "id": 392,
        "masked_question": "How does [mask1] influence the [mask2]’s extraction of DOA-specific embeddings?",
        "masked_number": 2,
        "masked_elements": [
            "contrastive learning",
            "projection head"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.22803v1_figure_1.png",
        "paperid": "2410.22803v1",
        "paper_path": "./papers/2410.22803v1.json",
        "figure_id": "2410.22803v1_figure_1.png",
        "caption": "Figure 1: AV-SSL of an audio feature extractor for SELD.",
        "qtype": "Experimental_Results",
        "response": "\"Contrastive learning\" (mask1) directly influences the \"Projection head\" (mask2)'s extraction of DOA-specific embeddings by serving as the self-supervised training objective. The context explains that the `projection head` (`g_a`) is used to convert latent audio features into \"audio embeddings over the DOA grid\" (`Z_a`). During the self-supervised pretraining phase, two variants of contrastive learning (DOA-wise and recording-wise) are employed. These methods define loss functions (e.g., `L_DOA`, `L_rec` based on InfoNCE loss) that maximize the similarity between corresponding audio embeddings (produced by the projection head) and visual embeddings, while minimizing similarity with non-corresponding samples. By optimizing this contrastive loss, the `projection head` is trained to produce DOA-specific audio embeddings that are semantically aligned with"
    },
    {
        "question": "How is the SELD head integrated with the pretrained audio feature extractor during fine-tuning?",
        "relevant_section_ids": [
            "3",
            "3.4"
        ],
        "relevant_context": [
            "Once f_a, f_v, and g are trained jointly in a self-supervised manner, g is connected to another head h for SELD and the entire network is fine-tuned in a supervised manner.",
            "Using annotated data, the audio feature extractor f_a is fine-tuned for SELD based on activity-coupled Cartesian DOA representation (ACCDOA) [shimada2022multi]. ... The projection head h consists of several fully-connected layers, followed by an adaptive average pooling to suit the target time resolution T."
        ],
        "final_answer": "After AV-SSL pretraining, the pretrained audio feature extractor f_a (together with its projection head g) is left intact and a new SELD head h (a stack of fully-connected layers plus adaptive average pooling) is attached on top. The combined network (f_a, g and h) is then fine-tuned end-to-end on labeled SELD data using the ACCDOA loss.",
        "relevant_elements": [
            "SELD head",
            "audio feature extractor"
        ],
        "id": 393,
        "masked_question": "How is the [mask1] integrated with the pretrained audio feature extractor during fine-tuning?",
        "masked_number": 1,
        "masked_elements": [
            "SELD head"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.22803v1_figure_1.png",
        "paperid": "2410.22803v1",
        "paper_path": "./papers/2410.22803v1.json",
        "figure_id": "2410.22803v1_figure_1.png",
        "caption": "Figure 1: AV-SSL of an audio feature extractor for SELD.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What limitations might the audio feature extractor face when projecting FOA data through the projection head?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Audio feature extractor",
            "Projection head"
        ],
        "id": 394,
        "masked_question": "What limitations might the [mask1] face when projecting FOA data through the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Audio feature extractor",
            "Projection head"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.22803v1_figure_1.png",
        "paperid": "2410.22803v1",
        "paper_path": "./papers/2410.22803v1.json",
        "figure_id": "2410.22803v1_figure_1.png",
        "caption": "Figure 1: AV-SSL of an audio feature extractor for SELD.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What ethical implications could arise from contrastive learning using omni-directional visual data from VR recordings?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Contrastive learning",
            "Omni-directional visual data"
        ],
        "id": 395,
        "masked_question": "What ethical implications could arise from [mask1] using omni-directional visual data from VR recordings?",
        "masked_number": 1,
        "masked_elements": [
            "Contrastive learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.22803v1_figure_1.png",
        "paperid": "2410.22803v1",
        "paper_path": "./papers/2410.22803v1.json",
        "figure_id": "2410.22803v1_figure_1.png",
        "caption": "Figure 1: AV-SSL of an audio feature extractor for SELD.",
        "qtype": "Others",
        "response": "The provided context discusses the technical aspects of using omni-directional visual data from VR recordings (specifically from the YT-360 dataset collected from YouTube) for audio-visual self-supervised learning (AV-SSL) and subsequent sound event localization and detection (SELD). It details the architecture, training process, and evaluation of the proposed methods.\n\nHowever, the text **does not contain any information or discussion regarding ethical implications**, such as privacy concerns, consent, potential misuse, or biases that could arise from the collection or use of this type of visual data (360-degree video that might capture people or private spaces).\n\nTherefore, based *only* on the provided context, the question about ethical implications is unanswerable."
    },
    {
        "question": "How might LSH-based Hamming distance similarity fail on heterogeneous model architectures?",
        "relevant_section_ids": [
            "3.2",
            "6"
        ],
        "relevant_context": [
            "After each iteration, client i generates an LSH code h_i from its local model parameters θ_i ... The similarity between two clients i and j is quantified by the Hamming distance between their LSH codes: d_{i,j} = HAM(h_i, h_j). A smaller d_{i,j} indicates greater similarity between the models θ_i and θ_j.",
            "Limitations: Despite its advantages, WPFed has limitations. The application of LSH does not fully support heterogeneous models, restricting the framework’s applicability to clients with varying model architectures or feature spaces."
        ],
        "final_answer": "Because LSH codes are produced by hashing model parameters under the assumption that all models share the same parameter space, clients with different architectures (and thus different parameter dimensions or feature representations) will generate hash codes that are not directly comparable. As a result, the Hamming distance between their LSH codes can become meaningless, causing the similarity measure to fail on heterogeneous model architectures.",
        "relevant_elements": [
            "LSH code",
            "Hamming Distance"
        ],
        "id": 396,
        "masked_question": "How might [mask1]-based [mask2] similarity fail on heterogeneous model architectures?",
        "masked_number": 2,
        "masked_elements": [
            "LSH code",
            "Hamming Distance"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.11378v1_figure_1.png",
        "paperid": "2410.11378v1",
        "paper_path": "./papers/2410.11378v1.json",
        "figure_id": "2410.11378v1_figure_1.png",
        "caption": "Figure 1. Overview of the WPFed framework. ∗In practice, clients publish commitments C𝐶Citalic_C in the announcement instead of the original neighbor ranking R𝑅Ritalic_R; however, R𝑅Ritalic_R is depicted in the figure to simplify the illustration of data flow. ∗∗While only valid neighbors participate in knowledge distillation, all are involved in the neighbor ranking process.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What ethical concerns arise from sharing Xref reference data during P2P communication?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Xref",
            "P2P communication"
        ],
        "id": 397,
        "masked_question": "What ethical concerns arise from sharing [mask1] reference data during P2P communication?",
        "masked_number": 1,
        "masked_elements": [
            "Xref"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.11378v1_figure_1.png",
        "paperid": "2410.11378v1",
        "paper_path": "./papers/2410.11378v1.json",
        "figure_id": "2410.11378v1_figure_1.png",
        "caption": "Figure 1. Overview of the WPFed framework. ∗In practice, clients publish commitments C𝐶Citalic_C in the announcement instead of the original neighbor ranking R𝑅Ritalic_R; however, R𝑅Ritalic_R is depicted in the figure to simplify the illustration of data flow. ∗∗While only valid neighbors participate in knowledge distillation, all are involved in the neighbor ranking process.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates combining Hamming Distance and Ranking Score to determine integrated weights?",
        "relevant_section_ids": [
            "1",
            "3.4"
        ],
        "relevant_context": [
            "Firstly, we enable personalized neighbor selection by introducing a mechanism that allows each client to identify beneficial neighbors on a global scale, considering both inter-client similarity and model quality. … By combining similarity metrics and performance ranking scores, clients can globally define and select an optimal personalized neighbor set, thereby enhancing the effectiveness of decentralized collaborative learning.",
            "Clients use both the similarity metrics and ranking scores to select a personalized set of neighbors that maximize the potential benefit of collaboration. For each potential neighbor j, client i computes a weight w_{i,j} combining the ranking score R_j and the similarity distance d_{i,j}: … This formulation ensures that clients who are both highly ranked and have similar models are given higher weights."
        ],
        "final_answer": "They combine Hamming Distance (to capture inter-client model similarity) and Ranking Score (to capture peer performance) so that the resulting weights favor peers that are both similar in data distribution and high-performing—thereby maximizing the benefit of decentralized collaboration.",
        "relevant_elements": [
            "Hamming Distance",
            "Ranking Score"
        ],
        "id": 398,
        "masked_question": "What motivates combining [mask1] and [mask2] to determine integrated weights?",
        "masked_number": 2,
        "masked_elements": [
            "Hamming Distance",
            "Ranking Score"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.11378v1_figure_1.png",
        "paperid": "2410.11378v1",
        "paper_path": "./papers/2410.11378v1.json",
        "figure_id": "2410.11378v1_figure_1.png",
        "caption": "Figure 1. Overview of the WPFed framework. ∗In practice, clients publish commitments C𝐶Citalic_C in the announcement instead of the original neighbor ranking R𝑅Ritalic_R; however, R𝑅Ritalic_R is depicted in the figure to simplify the illustration of data flow. ∗∗While only valid neighbors participate in knowledge distillation, all are involved in the neighbor ranking process.",
        "qtype": "Design_Rationale",
        "response": "**Step-by-step reasoning:**\n\n1.  **Identify [mask1] and [mask2]:**\n    *   [mask1] is \"Hamming Distance\" (red box).\n    *   [mask2] is \"Ranking Score\" (blue box).\n    *   The diagram shows that the outputs from `Hamming Distance` (d values) and `Ranking Score` (s values) are combined to produce 'w' values, which then feed into \"Top N Integrated Weights\" to select \"Neighbor Candidates.\"\n\n2.  **Consult the text for the purpose of \"Hamming Distance\":**\n    *   Section 3.2, \"Peer Similarity Evaluation,\" states: \"The similarity between two clients i and j is quantified by the Hamming distance between their LSH codes... A smaller dᵢ,ⱼ indicates greater similarity between the models Mᵢ and Mⱼ. This distance metric allows clients to estimate peer similarities efficiently and securely.\"\n    *   The \"Introduction\" section further clarifies: \"Inter-client similarity ensures collaboration with peers possessing similar data distributions, leading to more effective and coherent model updates.\"\n\n3.  **Consult the text for the purpose of \"Ranking Score\":**\n    *   Section 3.3, \"Ranking Score Computation,\" states: \"This metric reflects how frequently client j is considered a top-performer across all clients, serving as an indicator of its overall reliability and expertise.\"\n    *   The \"Introduction\" section adds: \"Assessing model quality guarantees that only high-performing models contribute to the learning process, thereby enhancing overall system performance.\"\n\n4.  **Consult the text for how they are combined and the motivation:**\n    *   Section 3.4, \"Personalized Neighbor Selection,\" directly addresses this: \"Clients use both the similarity metrics and ranking scores to select a personalized set of neighbors that maximize the"
    },
    {
        "question": "What is the rationale for filtering invalid LSH codes via KL Divergence check?",
        "relevant_section_ids": [
            "3.5"
        ],
        "relevant_context": [
            "Publishing LSH codes enables clients to assess model similarities but introduces a security risk: malicious clients may forge LSH codes to appear more similar, thereby gaining undue trust or access.",
            "When client i interacts with neighbor j, it receives the outputs Ŷ^j. Client i compares these with its own outputs Ŷ^i to compute a similarity metric, such as the Kullback–Leibler (KL) divergence.",
            "We implement a filter mechanism to deter LSH deception: if the similarity between Ŷ^i and Ŷ^j ranks in the lower half of all neighbors, then j is excluded from the knowledge distillation process."
        ],
        "final_answer": "The KL Divergence check is used to verify that a peer’s claimed LSH‐based similarity actually corresponds to similar model behavior on a reference dataset. By computing the KL divergence between their output distributions and filtering out those with high divergence (i.e. low similarity), the framework prevents malicious clients from forging LSH codes to appear similar and gaining undue trust.",
        "relevant_elements": [
            "KL Divergence",
            "Filter Invalid LSH"
        ],
        "id": 399,
        "masked_question": "What is the rationale for [mask1] via [mask2] check?",
        "masked_number": 2,
        "masked_elements": [
            "Filter Invalid LSH",
            "KL Divergence"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.11378v1_figure_1.png",
        "paperid": "2410.11378v1",
        "paper_path": "./papers/2410.11378v1.json",
        "figure_id": "2410.11378v1_figure_1.png",
        "caption": "Figure 1. Overview of the WPFed framework. ∗In practice, clients publish commitments C𝐶Citalic_C in the announcement instead of the original neighbor ranking R𝑅Ritalic_R; however, R𝑅Ritalic_R is depicted in the figure to simplify the illustration of data flow. ∗∗While only valid neighbors participate in knowledge distillation, all are involved in the neighbor ranking process.",
        "qtype": "Design_Rationale",
        "response": "The rationale for **Filter Invalid LSH\\*\\*** (mask1) via **KL Divergence** (mask2) check is to mitigate the security risk of malicious clients forging LSH codes to appear more similar than they actually are. By comparing the model outputs (`Y_ref` from \"Model t-1\" and `Y_web` from \"Neighbors\") on reference datasets using KL Divergence, the system can authenticate the LSH codes. If the similarity between the outputs of the client's model and a neighbor's model (as measured by KL Divergence) ranks in the lower half of all neighbors, it suggests a discrepancy with the claimed LSH similarity. In such cases, the neighbor's LSH code is considered invalid for knowledge distillation, and that neighbor is excluded from contributing to the model update, thereby preventing undue trust or access by potentially deceptive peers."
    },
    {
        "question": "What is the benefit of generating paired safe phrases from unsafe concepts using the LLM for steering training?",
        "relevant_section_ids": [
            "3.1.2"
        ],
        "relevant_context": [
            "In our subsequent steering transformation training procedure, we synthesize additional safe terms to steer unsafe embeddings toward safe ones.",
            "The core idea is to associate each unsafe term u with a corresponding safe term s of similar meanings, allowing us to convert unsafe concepts into safe alternatives while preserving the original semantic intent of the prompt."
        ],
        "final_answer": "By using the LLM to generate paired safe phrases for each unsafe concept, SteerDiff obtains supervised pairs of semantically aligned unsafe and safe embeddings. This lets the steering model learn a linear transformation that shifts unsafe embeddings into a safe region while preserving the original semantic intent of the prompt.",
        "relevant_elements": [
            "LLM",
            "Paired Safe Phrases"
        ],
        "id": 400,
        "masked_question": "What is the benefit of generating [mask1] from unsafe concepts using the LLM for steering training?",
        "masked_number": 1,
        "masked_elements": [
            "Paired Safe Phrases"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.02710v1_figure_1.png",
        "paperid": "2410.02710v1",
        "paper_path": "./papers/2410.02710v1.json",
        "figure_id": "2410.02710v1_figure_1.png",
        "caption": "Figure 1: Overview of data collection and training process for SteerDiff: We begin by defining a set of unsafe concepts, Cunsafesubscript𝐶unsafeC_{\\text{unsafe}}italic_C start_POSTSUBSCRIPT unsafe end_POSTSUBSCRIPT (yellow block). Next, we use a LLM to generate related unsafe (red block on the left) and safe (green block on the left) phrases based on each concept c∈Cunsafe𝑐subscript𝐶unsafec\\in C_{\\text{unsafe}}italic_c ∈ italic_C start_POSTSUBSCRIPT unsafe end_POSTSUBSCRIPT. These phrases are then encoded using a pre-trained text encoder to extract embedding features, which are used to train both the identifier and steering model.",
        "qtype": "Design_Rationale",
        "response": "The content highlighted by the red box is \"Paired Safe Phrases T_safe\".\n\nHere's the step-by-step reasoning for its benefit in steering training:\n\n1.  **Role of Paired Safe Phrases (T_safe):** According to the \"Training Data Collection\" section, specifically \"3.1.2 Steer Model Dataset\", \"Paired Safe Phrases T_safe\" are generated by an LLM based on \"Unsafe Phrases T_unsafe\". The core idea is to associate each unsafe term with a corresponding safe term of similar meaning. For example, \"killed\" (unsafe) is paired with \"saved\" (safe).\n2.  **Purpose in Steering Transformation:** The text explicitly states: \"In our subsequent steering transformation training procedure, we synthesize additional safe terms to steer unsafe embeddings toward safe ones.\" This means the \"Paired Safe Phrases T_safe\" are essential for learning this steering transformation.\n3.  **Steer Model Training:** The Steer Model aims to learn a linear transformation matrix (M) that shifts embeddings of unsafe phrases toward safe ones. The \"Steering Toward Safe Content\" section describes the loss function for training the steering model: `L_"
    },
    {
        "question": "How does utilizing separate unsafe embeddings influence the identifier's ability to distinguish inappropriate content?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Since embeddings with similar semantics have closer distances in the embedding space (Mikolov et al., 2013; Radford et al., 2021), we expect the unsafe embeddings to be aggregated.",
            "As demonstrated in 2(b), we observe that SteerDiff successfully learns to distinguish between safe and unsafe phrases, with the two categories being well-separated after applying t-SNE dimensional reduction."
        ],
        "final_answer": "By embedding unsafe phrases separately, the model learns to cluster those unsafe embeddings together and push them away from safe embeddings. This results in well-separated clusters of safe versus unsafe concepts in embedding space, enabling the identifier to more accurately distinguish and classify inappropriate content.",
        "relevant_elements": [
            "Unsafe Embeddings",
            "Identifier"
        ],
        "id": 401,
        "masked_question": "How does utilizing separate [mask1] influence the [mask2]'s ability to distinguish inappropriate content?",
        "masked_number": 2,
        "masked_elements": [
            "Unsafe Embeddings",
            "Identifier"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.02710v1_figure_1.png",
        "paperid": "2410.02710v1",
        "paper_path": "./papers/2410.02710v1.json",
        "figure_id": "2410.02710v1_figure_1.png",
        "caption": "Figure 1: Overview of data collection and training process for SteerDiff: We begin by defining a set of unsafe concepts, Cunsafesubscript𝐶unsafeC_{\\text{unsafe}}italic_C start_POSTSUBSCRIPT unsafe end_POSTSUBSCRIPT (yellow block). Next, we use a LLM to generate related unsafe (red block on the left) and safe (green block on the left) phrases based on each concept c∈Cunsafe𝑐subscript𝐶unsafec\\in C_{\\text{unsafe}}italic_c ∈ italic_C start_POSTSUBSCRIPT unsafe end_POSTSUBSCRIPT. These phrases are then encoded using a pre-trained text encoder to extract embedding features, which are used to train both the identifier and steering model.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does the steer model define its loss to align transformed unsafe embeddings with paired safe embeddings?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "To learn the transformation matrix W, we employ a supervised learning method using a paired dataset of unsafe phrases and their corresponding safe phrases, as described in subsection 3.1.",
            "The training process minimizes the following loss function:\n\\[L = \\sum_{(e_u,e_s)} \\|W e_u - e_s\\|^2,\\]\nwhere e_s represents the embedding of the safe phrases in S."
        ],
        "final_answer": "The steer model uses a supervised mean‐squared‐error loss that minimizes the squared L₂ distance between each linearly transformed unsafe embedding (W e_u) and its corresponding safe embedding (e_s).",
        "relevant_elements": [
            "Steer Model",
            "Unsafe Embeddings",
            "Paired Safe Embeddings"
        ],
        "id": 403,
        "masked_question": "How does the [mask1] define its loss to align transformed unsafe embeddings with paired safe embeddings?",
        "masked_number": 1,
        "masked_elements": [
            "Steer Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.02710v1_figure_1.png",
        "paperid": "2410.02710v1",
        "paper_path": "./papers/2410.02710v1.json",
        "figure_id": "2410.02710v1_figure_1.png",
        "caption": "Figure 1: Overview of data collection and training process for SteerDiff: We begin by defining a set of unsafe concepts, Cunsafesubscript𝐶unsafeC_{\\text{unsafe}}italic_C start_POSTSUBSCRIPT unsafe end_POSTSUBSCRIPT (yellow block). Next, we use a LLM to generate related unsafe (red block on the left) and safe (green block on the left) phrases based on each concept c∈Cunsafe𝑐subscript𝐶unsafec\\in C_{\\text{unsafe}}italic_c ∈ italic_C start_POSTSUBSCRIPT unsafe end_POSTSUBSCRIPT. These phrases are then encoded using a pre-trained text encoder to extract embedding features, which are used to train both the identifier and steering model.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] refers to the \"Steer Model\".\n\n**Chain of thought:**\n1. **Identify the relevant section:** The question asks about the Steer Model's loss function for aligning transformed unsafe embeddings with paired safe embeddings. I should look for sections discussing the \"Steer Model\" or \"Steering Toward Safe Content\" and its training process.\n2. **Locate the \"Steering Toward Safe Content\" subsection:** Subsection 3.3 is titled \"Steering Toward Safe Content.\"\n3. **Find the loss function:** Within subsection 3.3, it describes the training process for learning the transformation matrix. It states: \"The training process minimizes the following loss function: L_steer = (1/N) * sum_i=1^N || E_adjusted_i - E_safe_i ||_2^2\".\n4. **Interpret the loss function:** This formula represents the Mean Squared Error (MSE) or L2 norm squared between `E_adjusted` (the adjusted/transformed embedding of the unsafe phrase) and `E_safe` (the embedding of the corresponding safe phrase). The goal is to minimize the distance between these two types of embeddings after the transformation.\n\nThe Steer Model defines its loss as the Mean Squared Error (L2 norm squared) between the transformed unsafe embeddings and their corresponding paired safe embeddings, aiming to minimize the Euclidean distance between them."
    },
    {
        "question": "How does DSRL transform Euclidean Space visual features before projection into Hyperbolic Space?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "Mapping from Euclidean to hyperbolic spaces. Let x be input Euclidean node features, and o denote the origin on the manifold M of the Lorentz model. There is x ∈ T_o M, where <.,.>_L denotes the Lorentz inner product defined in Eq. 2. We can reasonably regard x as a node on the tangent space at the origin o. HE-GCN uses the exponential map defined in Eq. 4 to generate hyperbolic node representations on the Lorentz model:"
        ],
        "final_answer": "DSRL first treats each Euclidean visual‐feature vector as a point in the tangent space at the origin of the Lorentz hyperboloid model, then applies the Lorentz‐model exponential map at that origin to project these tangent‐space feature vectors onto the hyperbolic manifold.",
        "relevant_elements": [
            "Euclidean Space",
            "Hyperbolic Space",
            "DSRL"
        ],
        "id": 404,
        "masked_question": "How does [mask1] transform Euclidean Space visual features before projection into Hyperbolic Space?",
        "masked_number": 1,
        "masked_elements": [
            "DSRL"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.19252v1_figure_1.png",
        "paperid": "2409.19252v1",
        "paper_path": "./papers/2409.19252v1.json",
        "figure_id": "2409.19252v1_figure_1.png",
        "caption": "Figure 1: (a) Hierarchical diagram in Video Violence Detection (VVD). (b) Our DSRL enhances the detection of ambiguous violence by combining Euclidean and Hyperbolic spaces to balance visual feature expression and hierarchical event relations.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does DSRL exploit Hyperbolic Space's exponential metric to model hierarchical event relations?",
        "relevant_section_ids": [
            "1",
            "4.1"
        ],
        "relevant_context": [
            "– Section 1: “Fortunately, hyperbolic representation learning, characterized by exponentially increasing the metric distances and naturally reflects the hierarchical structure of data, has gained attention and shown promising performance in computer vision tasks…”",
            "– Section 4.1: “HE-GCN uses the exponential map defined in Eq. 4 to generate hyperbolic node representations on the Lorentz model.”"
        ],
        "final_answer": "DSRL projects each video-segment feature from the Euclidean tangent space onto the Lorentz hyperbolic manifold via the exponential map. In hyperbolic space, distances grow exponentially with depth, so nodes that are farther apart along the hierarchy become more widely separated. DSRL’s Hyperbolic Energy-constrained GCN then uses hyperbolic Dirichlet energy and layer-sensitive association degrees to dynamically select and aggregate neighbors at each layer, thereby leveraging the exponential metric to naturally encode and propagate hierarchical event relations.",
        "relevant_elements": [
            "Hyperbolic Space",
            "DSRL"
        ],
        "id": 405,
        "masked_question": "How does [mask1] exploit [mask2]'s exponential metric to model hierarchical event relations?",
        "masked_number": 2,
        "masked_elements": [
            "DSRL",
            "Hyperbolic Space"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.19252v1_figure_1.png",
        "paperid": "2409.19252v1",
        "paper_path": "./papers/2409.19252v1.json",
        "figure_id": "2409.19252v1_figure_1.png",
        "caption": "Figure 1: (a) Hierarchical diagram in Video Violence Detection (VVD). (b) Our DSRL enhances the detection of ambiguous violence by combining Euclidean and Hyperbolic spaces to balance visual feature expression and hierarchical event relations.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does DSRL reconcile Euclidean visual features with hyperbolic hierarchical relations?",
        "relevant_section_ids": [
            "1",
            "4.2"
        ],
        "relevant_context": [
            "However, fusing representation in different spaces remains a challenge; to break the information cocoon, DSI utilises cross-space attention to facilitate information interactions between Euclidean and hyperbolic space to capture better discriminative features, where Euclidean representations have effectiveness on the significant motion and shape changes in the video, while hyperbolic representations accelerate the comprehension of hierarchical relations between events, working together to improve the performance of violence detection in videos.",
            "Although hyperbolic representation learning enhances understanding of event hierarchies, visual representations remain crucial in violence detection. Fusing representations from different spaces is challenging; thus, DSI employs cross-space attention to facilitate interactions between Euclidean and hyperbolic spaces.",
            "Cross-Space Attention Mechanism utilizes the Lorentzian metric to calculate attention scores between nodes from different spaces, accurately measuring semantic similarity and better preserving their true relationships by computing the nonlinear distance between them. We denote the features in Euclidean space as E and the features in hyperbolic space as H. M models the between-graph interaction and guides the transfer of inter-graph message from H to E.",
            "First, we use a linear layer to transform E into a key graph K and value graph V, and H into a query graph Q. We then compute an attention map M via Lorentzian similarity and threshold it to retain only strong cross-space relations. Finally, the enhanced Euclidean features E′ are obtained by fusing the hyperbolic messages V weighted by M with the original Euclidean features E via a gated sum: E′=γ⋅(M·V)+(1−γ)⋅E, where γ controls the contribution of hyperbolic information."
        ],
        "final_answer": "DSRL reconciles visual and hierarchical information by means of its Dual-Space Interaction (DSI) module. DSI uses a cross-space attention mechanism—grounded in Lorentzian (hyperbolic) similarity—to compute attention scores between Euclidean video features and hyperbolic embeddings. It then transfers hyperbolic messages into the Euclidean feature stream and fuses them via a gated sum, so that motion/shape cues from Euclidean space are enhanced by the hierarchical relations captured in hyperbolic space.",
        "relevant_elements": [
            "Euclidean Space",
            "Hyperbolic Space",
            "DSRL"
        ],
        "id": 406,
        "masked_question": "How does [mask1] reconcile Euclidean visual features with hyperbolic hierarchical relations?",
        "masked_number": 1,
        "masked_elements": [
            "DSRL"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.19252v1_figure_1.png",
        "paperid": "2409.19252v1",
        "paper_path": "./papers/2409.19252v1.json",
        "figure_id": "2409.19252v1_figure_1.png",
        "caption": "Figure 1: (a) Hierarchical diagram in Video Violence Detection (VVD). (b) Our DSRL enhances the detection of ambiguous violence by combining Euclidean and Hyperbolic spaces to balance visual feature expression and hierarchical event relations.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does hyperbolic metric amplify discrimination across event category hierarchies?",
        "relevant_section_ids": [
            "1",
            "2"
        ],
        "relevant_context": [
            "Fortunately, hyperbolic representation learning, characterized by exponentially increasing the metric distances and naturally reflects the hierarchical structure of data, has gained attention and shown promising performance in computer vision tasks, like semantic segmentation Atigh et al. (2022), medical image recognition Yu et al. (2022b), action recognition Peng et al. (2020); Long et al. (2020), anomaly recognition Hong et al. (2023).",
            "Hyperbolic representation learning, characterized by exponentially increasing the metric distances and naturally reflects the hierarchical structure of data, has gained attention and shown promising performance in computer vision tasks, like semantic segmentation Atigh et al. (2022), visual representation learning Ge et al. (2023), medical image recognition Yu et al. (2022b), action recognition Peng et al. (2020); Long et al. (2020), anomaly recognition Hong et al. (2023)."
        ],
        "final_answer": "By embedding event features into a hyperbolic space, distances grow exponentially with depth in the hierarchy. This means that events belonging to different levels or branches of the category hierarchy become much farther apart than they would in a Euclidean space, thereby amplifying their separation and making it easier to distinguish between closely related event categories.",
        "relevant_elements": [
            "Hyperbolic Metric",
            "event category hierarchies"
        ],
        "id": 407,
        "masked_question": "How does [mask1] amplify discrimination across event category hierarchies?",
        "masked_number": 1,
        "masked_elements": [
            "Hyperbolic Metric"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.19252v1_figure_1.png",
        "paperid": "2409.19252v1",
        "paper_path": "./papers/2409.19252v1.json",
        "figure_id": "2409.19252v1_figure_1.png",
        "caption": "Figure 1: (a) Hierarchical diagram in Video Violence Detection (VVD). (b) Our DSRL enhances the detection of ambiguous violence by combining Euclidean and Hyperbolic spaces to balance visual feature expression and hierarchical event relations.",
        "qtype": "Literature_Background",
        "response": "The \"Hyperbolic Metric\" (operating within the Hyperbolic Space) amplifies discrimination across event category hierarchies because it is **characterized by exponentially increasing the metric distances**, which **naturally reflects the hierarchical structure of data**. This property allows hyperbolic representation learning to **accelerate the comprehension of hierarchical relations between events**, enabling the system to better understand and distinguish ambiguous violent events by leveraging their context within the event category hierarchy."
    },
    {
        "question": "How does triplet loss relate to traditional metric learning for embedding separation?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Triplet loss"
        ],
        "id": 408,
        "masked_question": "How does [mask1] relate to traditional metric learning for embedding separation?",
        "masked_number": 1,
        "masked_elements": [
            "Triplet loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.15246v1_figure_1.png",
        "paperid": "2408.15246v1",
        "paper_path": "./papers/2408.15246v1.json",
        "figure_id": "2408.15246v1_figure_1.png",
        "caption": "Figure 1: Overview of STG3Net. (A) Data preprocessing involves integrating multiple SRT data, enhancing spot features, and constructing spatial adjacency graphs. (B) STG3Net is employed for latent representation learning. It consists of a backbone module composed of feature graph autoencoder, combined with adversarial learning and G2N for batch correction between multiple slices. (C) The learned latent representations from STG3Net will be utilized in downstream task analysis, including clustering and UMAP visualization. Additionally, the reconstructed gene expression is considered as the denoised outcome.",
        "qtype": "Literature_Background",
        "response": "The [mask1] \"triplet loss\" in STG3Net directly relates to traditional metric learning for embedding separation as follows:\n\n1.  **Core Principle of Triplet Loss:** Traditional metric learning aims to learn an embedding space where similar data points are mapped closer together, and dissimilar data points are pushed further apart. Triplet loss is a specific objective function commonly used in metric learning to achieve this. It operates on triplets of embeddings: an **anchor (a)**, a **positive (p)** example (similar to the anchor), and a **negative (n)** example (dissimilar to the anchor). The goal of the loss is to ensure that the distance between the anchor and the positive example (`d(a,p)`) is smaller than the distance between the anchor and the negative example (`d(a,n)`) by at least a specified `margin`. The formula for triplet loss, as provided in the context, `max(0, d(a,p) - d(a,n) + margin)`, clearly illustrates this principle.\n\n2.  **Application in STG3Net:** In STG3Net, the \"triplet loss\" is applied to the **latent representations** (embeddings) learned by the feature encoder.\n    *   **Anchor:** A spot (`a`) from the current slice.\n    *   **Positive Anchor:** Nodes (`p`) that share global semantic information (belong to the same spatial domain or similar clusters) but are from *different* slices.\n    *   **Negative Anchor:** Nodes (`n`) from the *same* slice but belonging to *different* spatial domains or clusters than the anchor.\n\n3.  **Embedding Separation and Batch Correction:** By minimizing this triplet loss, STG3Net actively:\n    *   **Pulls similar embeddings closer:** It reduces the distance between an anchor spot's latent representation and the latent representations of \""
    },
    {
        "question": "How does slice discriminator adapt GAN principles to enforce batch-invariant latent representations?",
        "relevant_section_ids": [
            "2.4"
        ],
        "relevant_context": [
            "To improve the clustering performance across multiple slices, we have designed a discriminator consisting of three stacked fully connected layers. It takes the latent representation outputted by the encoder as input and produces the probability p_{i,c} of -spot belonging to -slice.",
            "The L_d is minimized when there is a need to discover distinguishing features between slices from the latent representation, allowing the discriminator to accurately predict the slice labels. Conversely, L_d is maximized when there is a need to deceive the discriminator to mitigate batch effects across multiple slices, ensuring that spots from different slices would have the highest similarity."
        ],
        "final_answer": "The slice discriminator is trained to distinguish which slice each spot’s latent embedding comes from (minimizing its classification loss), while the encoder is adversarially trained to maximize that same loss—i.e., to fool the discriminator. This GAN‐style min–max game forces the encoder to produce representations that the discriminator cannot use to predict slice identity, thereby enforcing batch‐invariant latent embeddings.",
        "relevant_elements": [
            "Slice discriminator"
        ],
        "id": 409,
        "masked_question": "How does [mask1] adapt GAN principles to enforce batch-invariant latent representations?",
        "masked_number": 1,
        "masked_elements": [
            "Slice discriminator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.15246v1_figure_1.png",
        "paperid": "2408.15246v1",
        "paper_path": "./papers/2408.15246v1.json",
        "figure_id": "2408.15246v1_figure_1.png",
        "caption": "Figure 1: Overview of STG3Net. (A) Data preprocessing involves integrating multiple SRT data, enhancing spot features, and constructing spatial adjacency graphs. (B) STG3Net is employed for latent representation learning. It consists of a backbone module composed of feature graph autoencoder, combined with adversarial learning and G2N for batch correction between multiple slices. (C) The learned latent representations from STG3Net will be utilized in downstream task analysis, including clustering and UMAP visualization. Additionally, the reconstructed gene expression is considered as the denoised outcome.",
        "qtype": "Literature_Background",
        "response": "The \"Slice discriminator\" ([mask1]) adapts GAN principles to enforce batch-invariant latent representations by operating in an adversarial manner with the encoder, which generates the latent representations.\n\n1.  **Discriminator's Role (Minimize its own loss):** The slice discriminator aims to **accurately predict the slice ID** (batch label) from which a given latent representation originates. It minimizes its own loss by becoming better at distinguishing features unique to each slice within the latent space.\n2.  **Encoder's Role (Maximize discriminator's loss):** Conversely, the encoder, which produces the latent representations, is trained to **\"deceive\" the discriminator**. This means the encoder's objective is to generate latent representations that are **indistinguishable** to the discriminator, regardless of their original slice. By maximizing the discriminator's loss function (from the perspective of the overall model's training, often viewed as the encoder's goal), the model encourages the latent representations from different slices to become highly similar.\n\nThis adversarial training process forces the latent representations to discard slice-specific (batch) information, thus becoming more\nbatch-invariant while retaining biologically meaningful similarities, which improves clustering performance across multiple slices."
    },
    {
        "question": "How does random masking enhance latent feature learning in the feature graph autoencoder?",
        "relevant_section_ids": [
            "2.2",
            "3.4"
        ],
        "relevant_context": [
            "Section 2.2: “To overcome the ‘identity transformation’ issue, we use the augmented representation X^m as the input for training the model. Specifically, from the set of spot vertices, a masked vertex set V^m is randomly sampled with a masking rate μ. For the i-th spot (v_i), if v_i ∈ V^m, x_i^m = M where M represents the mask token vector; otherwise, x_i^m = x_i.”",
            "Section 3.4: “Both STG3Net and SEDR involved randomly masking a portion of spot expressions, forcing the model to learn meaningful representations from neighbors. This ensured that the model obtained good consistency because the masking technique allowed the model to focus more on the current spot’s relationship with its neighbors.”"
        ],
        "final_answer": "By randomly masking a subset of spot‐level expression features and replacing them with a learned mask token, the autoencoder cannot simply copy its inputs. Instead, it must reconstruct the missing values by propagating information over the spatial neighbor graph. This “masked reconstruction” forces the encoder to emphasize spatial context and inter‐spot relationships when forming its latent representation, thereby producing more meaningful and robust features.",
        "relevant_elements": [
            "random masking",
            "feature graph autoencoder"
        ],
        "id": 411,
        "masked_question": "How does [mask1] enhance latent feature learning in the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "random masking",
            "feature graph autoencoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.15246v1_figure_1.png",
        "paperid": "2408.15246v1",
        "paper_path": "./papers/2408.15246v1.json",
        "figure_id": "2408.15246v1_figure_1.png",
        "caption": "Figure 1: Overview of STG3Net. (A) Data preprocessing involves integrating multiple SRT data, enhancing spot features, and constructing spatial adjacency graphs. (B) STG3Net is employed for latent representation learning. It consists of a backbone module composed of feature graph autoencoder, combined with adversarial learning and G2N for batch correction between multiple slices. (C) The learned latent representations from STG3Net will be utilized in downstream task analysis, including clustering and UMAP visualization. Additionally, the reconstructed gene expression is considered as the denoised outcome.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] (the process of concatenating expression matrices and applying random masks to hide"
    },
    {
        "question": "How does augmenting entity embeddings with pre-trained contextual information enhance adapter's relation-specific adaptation?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "At the data level, we augment the embedding of each entity (head or tail) by additional pre-trained contextual information from their related entities, as shown in Fig. 2 (b). The contextual information enables more tailored adaptation to each distinct novel relation.",
            "In summary, the input is the original entity embedding e and the mean contextual embedding aggregated from its neighbors N_e, and the output is the augmented entity embedding e^c. In this way, the augmented embedding e^c preserves the embedding trained via emb, while leveraging pre-trained graph contextual information."
        ],
        "final_answer": "By combining each entity’s learned embedding with a mean of its neighbors’ pre-trained contextual embeddings, the adapter receives context-aware inputs that reflect the local graph structure around the entity. This enriched, relation-specific signal yields a context-aware relation meta that more precisely captures the semantics of each novel relation, enabling the adapter to adapt the meta-learned prior in a way that is tailored to the particular context of that relation.",
        "relevant_elements": [
            "Pre-trained Contextual Info",
            "Adapter"
        ],
        "id": 413,
        "masked_question": "How does augmenting entity embeddings with [mask1] enhance [mask2]'s relation-specific adaptation?",
        "masked_number": 2,
        "masked_elements": [
            "Pre-trained Contextual Info",
            "Adapter"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.09123v2_figure_2.png",
        "paperid": "2410.09123v2",
        "paper_path": "./papers/2410.09123v2.json",
        "figure_id": "2410.09123v2_figure_2.png",
        "caption": "Figure 2: Illustration of key concepts in RelAdapter, hinging on an entity-aware adapter (a, b) in the meta-testing stage (c). Note that we omit the meta-training stage, which is similar to meta-testing but with backpropagation of the query loss to update the model parameters (𝚎𝚖𝚋𝚎𝚖𝚋\\mathtt{emb}typewriter_emb and ΦΦ\\Phiroman_Φ).",
        "qtype": "Experimental_Results",
        "response": "*   **[mask1] identification:** The red box in the image points to \"Pre-trained Contextual Info. f(e_k) | e_k ∈ N_e\". The text confirms this by stating, \"we augment the embedding of each entity (head or tail) by additional pre-trained contextual information from their related entities\". Therefore, [mask1] is **pre-trained contextual information from their related entities**.\n*   **[mask2] identification:** The blue box in the image highlights \"(a) Adapter\". The text refers to \"the adapter network\" and \"the adapter module\". Therefore, [mask2] is **"
    },
    {
        "question": "What are potential limitations of the adapter module when handling highly divergent relations during meta-testing?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Adapter",
            "Meta-Testing"
        ],
        "id": 414,
        "masked_question": "What are potential limitations of the [mask1] module when handling highly divergent relations during meta-testing?",
        "masked_number": 1,
        "masked_elements": [
            "Adapter"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.09123v2_figure_2.png",
        "paperid": "2410.09123v2",
        "paper_path": "./papers/2410.09123v2.json",
        "figure_id": "2410.09123v2_figure_2.png",
        "caption": "Figure 2: Illustration of key concepts in RelAdapter, hinging on an entity-aware adapter (a, b) in the meta-testing stage (c). Note that we omit the meta-training stage, which is similar to meta-testing but with backpropagation of the query loss to update the model parameters (𝚎𝚖𝚋𝚎𝚖𝚋\\mathtt{emb}typewriter_emb and ΦΦ\\Phiroman_Φ).",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What risks stem from relying on pre-trained contextual information within entity context for novel relations?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Entity Context"
        ],
        "id": 415,
        "masked_question": "What risks stem from relying on pre-trained contextual information within [mask1] for novel relations?",
        "masked_number": 1,
        "masked_elements": [
            "Entity Context"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.09123v2_figure_2.png",
        "paperid": "2410.09123v2",
        "paper_path": "./papers/2410.09123v2.json",
        "figure_id": "2410.09123v2_figure_2.png",
        "caption": "Figure 2: Illustration of key concepts in RelAdapter, hinging on an entity-aware adapter (a, b) in the meta-testing stage (c). Note that we omit the meta-training stage, which is similar to meta-testing but with backpropagation of the query loss to update the model parameters (𝚎𝚖𝚋𝚎𝚖𝚋\\mathtt{emb}typewriter_emb and ΦΦ\\Phiroman_Φ).",
        "qtype": "Others",
        "response": "The red-boxed area (b) is \"Entity Context,\" which describes how \"Pre-trained Contextual Info.\" is used to augment entity embeddings.\n\nThe risks stemming from relying on pre-trained contextual information within the \"Entity Context\" for novel relations, particularly without further adaptation, are discussed in the \"Ablation Study\" section:\n\n1.  **Introduction of Noise:** Simply adding pre-trained contextual information to entities without an adaptive mechanism (like the adapter module) can introduce additional noise that harms performance.\n2.  **Harmful without Adaptation:** The model variant \"W/o A\" (without Adapter), which retains the contextual information but removes the adapter, shows a significant drop in performance and can even be worse than MetaR. This indicates that the pre-trained contextual information, while intended to be helpful, can be detrimental if not properly adapted or integrated.\n3.  **Amplified Issues on Smaller Datasets:** This negative effect is particularly pronounced on smaller datasets (like UMLS),"
    },
    {
        "question": "What motivates staging Entity-based Extraction prior to Feature-based Extraction in conventional inference?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Entity-based Extraction",
            "Feature-based Extraction"
        ],
        "id": 418,
        "masked_question": "What motivates staging [mask1] prior to Feature-based Extraction in conventional inference?",
        "masked_number": 1,
        "masked_elements": [
            "Entity-based Extraction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.17558v1_figure_1.png",
        "paperid": "2411.17558v1",
        "paper_path": "./papers/2411.17558v1.json",
        "figure_id": "2411.17558v1_figure_1.png",
        "caption": "Figure 1. The data used in VQA tasks, with the conclusion of the understanding and inference methods from conventional models to multimodal large language models.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What underlies integrating Chain-of-thought within the LLM Control Center for inference?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Chain-of-thought",
            "LLM Control Center"
        ],
        "id": 419,
        "masked_question": "What underlies integrating [mask1] within the [mask2] for inference?",
        "masked_number": 2,
        "masked_elements": [
            "Chain-of-thought",
            "LLM Control Center"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.17558v1_figure_1.png",
        "paperid": "2411.17558v1",
        "paper_path": "./papers/2411.17558v1.json",
        "figure_id": "2411.17558v1_figure_1.png",
        "caption": "Figure 1. The data used in VQA tasks, with the conclusion of the understanding and inference methods from conventional models to multimodal large language models.",
        "qtype": "Design_Rationale",
        "response": "To answer the question, let's break down the image and text:\n\n1.  **Identify [mask1]:** The red box in the image explicitly labels \"Chain-of-thought\". Below it, bullet points describe a step-by-step thinking process (\"Think Step by step\", \"Step 1: Think xxxx\", \"Step 2: Consider xxxxx\", \"Step n: Check xxxx\"). This indicates a structured reasoning approach.\n2.  **Identify [mask2]:** The blue box in the image is labeled \"LLM Control Center\". It's situated within the \"Multimodal Large Language Model\" section under \"Inference\" and is connected to \"Action\", \"Memory\", and \"Agent\" components, suggesting it's the central orchestrator for the LLM's inference processes.\n3.  **Search the text for \"Chain-of-thought\" and its purpose, especially in relation to MLLMs:**\n    *   In Section 1.1, \"What is Visual Question Answering?\", the text states: \"In addition, Multimodal large language models now integrate sophisticated reasoning methods such as instruction"
    },
    {
        "question": "What drives integrating Vision-to-Text Block and Semantic Image Search Block for complementary annotation guidance?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Vision-to-Text Block",
            "Semantic Image Search Block"
        ],
        "id": 420,
        "masked_question": "What drives integrating [mask1] and Semantic Image Search Block for complementary annotation guidance?",
        "masked_number": 1,
        "masked_elements": [
            "Vision-to-Text Block"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.00252v1_figure_1.png",
        "paperid": "2407.00252v1",
        "paper_path": "./papers/2407.00252v1.json",
        "figure_id": "2407.00252v1_figure_1.png",
        "caption": "Figure 1: An overview of an AI-assisted image annotation system. The system begins with unlabeled image training data which is processed through various blocks. The Vision-to-Text Block utilizes image captioning, VQA, and multi-modal alignment to provide predictions. The Pretrained Vision Task Block handles image segmentation, pose estimation, and one-shot classification to generate vision task predictions. The Semantic Image Search Block uses self-supervised learning and active learning to assist the annotator in semantic search. Human annotators receive textual and visual suggestions to annotate the images, which are then used to fine-tune the vision task and semantic search models. The final interface allows annotators to accept, edit, or show similar annotations.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates using both Image Segmentation and One Shot Classification in the Pretrained Vision Task Block?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Image Segmentation",
            "One Shot Classification"
        ],
        "id": 421,
        "masked_question": "What motivates using both [mask1] and [mask2] in the Pretrained Vision Task Block?",
        "masked_number": 2,
        "masked_elements": [
            "Image Segmentation",
            "One Shot Classification"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.00252v1_figure_1.png",
        "paperid": "2407.00252v1",
        "paper_path": "./papers/2407.00252v1.json",
        "figure_id": "2407.00252v1_figure_1.png",
        "caption": "Figure 1: An overview of an AI-assisted image annotation system. The system begins with unlabeled image training data which is processed through various blocks. The Vision-to-Text Block utilizes image captioning, VQA, and multi-modal alignment to provide predictions. The Pretrained Vision Task Block handles image segmentation, pose estimation, and one-shot classification to generate vision task predictions. The Semantic Image Search Block uses self-supervised learning and active learning to assist the annotator in semantic search. Human annotators receive textual and visual suggestions to annotate the images, which are then used to fine-tune the vision task and semantic search models. The final interface allows annotators to accept, edit, or show similar annotations.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How do IJEPA and PaLI jointly generate and update embedding vectors for semantic image retrieval?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Image-based Self Supervised Learning (IJEPA)",
            "Image-based Active Learning (PaLI)"
        ],
        "id": 422,
        "masked_question": "How do [mask1] and PaLI jointly generate and update embedding vectors for semantic image retrieval?",
        "masked_number": 1,
        "masked_elements": [
            "Image-based Self Supervised Learning (IJEPA)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.00252v1_figure_1.png",
        "paperid": "2407.00252v1",
        "paper_path": "./papers/2407.00252v1.json",
        "figure_id": "2407.00252v1_figure_1.png",
        "caption": "Figure 1: An overview of an AI-assisted image annotation system. The system begins with unlabeled image training data which is processed through various blocks. The Vision-to-Text Block utilizes image captioning, VQA, and multi-modal alignment to provide predictions. The Pretrained Vision Task Block handles image segmentation, pose estimation, and one-shot classification to generate vision task predictions. The Semantic Image Search Block uses self-supervised learning and active learning to assist the annotator in semantic search. Human annotators receive textual and visual suggestions to annotate the images, which are then used to fine-tune the vision task and semantic search models. The final interface allows annotators to accept, edit, or show similar annotations.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does One Shot Classification leverage YOLO pose predictions to improve novel class detection?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Pose Estimation",
            "One Shot Classification"
        ],
        "id": 423,
        "masked_question": "How does [mask1] leverage YOLO pose predictions to improve novel class detection?",
        "masked_number": 1,
        "masked_elements": [
            "One Shot Classification"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.00252v1_figure_1.png",
        "paperid": "2407.00252v1",
        "paper_path": "./papers/2407.00252v1.json",
        "figure_id": "2407.00252v1_figure_1.png",
        "caption": "Figure 1: An overview of an AI-assisted image annotation system. The system begins with unlabeled image training data which is processed through various blocks. The Vision-to-Text Block utilizes image captioning, VQA, and multi-modal alignment to provide predictions. The Pretrained Vision Task Block handles image segmentation, pose estimation, and one-shot classification to generate vision task predictions. The Semantic Image Search Block uses self-supervised learning and active learning to assist the annotator in semantic search. Human annotators receive textual and visual suggestions to annotate the images, which are then used to fine-tune the vision task and semantic search models. The final interface allows annotators to accept, edit, or show similar annotations.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does split audio into 5s facilitate ASR fine-tuning segmentation alignment?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "To manage long speech signals, each denoised signal Sᵢ was split into smaller, 5-second segments. … This ensures that all input segments are of equal length, aligning with the fixed-length input requirement of transformers.",
            "After splitting the dialect speech signal Sᵢ into 5-second segments, the corresponding dialect text Tᵈᵢ and standard text Tˢᵢ were also split to align with the speech segments. … This alignment allows each 5-second chunk of the speech signal Sᵢ to be fine-tuned with the corresponding chunk of dialect text during the first-stage fine-tuning, and with the standard text during the second stage."
        ],
        "final_answer": "By chopping long audio into uniform 5-second segments, the pipeline both meets the fixed-length input requirement of transformer ASR models and ensures that each audio chunk is directly paired with its matching text chunk. This synchronized segmentation enables precise, segment-level fine-tuning of the ASR system.",
        "relevant_elements": [
            "Split audio into 5s",
            "ASR"
        ],
        "id": 424,
        "masked_question": "How does [mask1] facilitate ASR fine-tuning segmentation alignment?",
        "masked_number": 1,
        "masked_elements": [
            "Split audio into 5s"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.10879v1_figure_1.png",
        "paperid": "2411.10879v1",
        "paper_path": "./papers/2411.10879v1.json",
        "figure_id": "2411.10879v1_figure_1.png",
        "caption": "Figure 1: (a) Typical Deep Neural Network (DNN) based implementation of ASR that uses word-based annotation combining HMM is used by [1, 2, 3], (b) Recent advancement of LLMs let researchers to get involved in investigation towards the LLMs capability of handling speech signal. The mLLM-based approach has been applied in [4, 5, 6] using feature extraction and alphabet-wise mapping. Existing methods often fall short of processing big speech signal data, specifically with dialect speech signals, due to limitations of data availability and resources. On the other hand, end-to-end frameworks are less explored as per the literature. (c) We introduce a novel approach involving fine-tuning ASR and mLLMs with a large-scale low-resource Bangla dialect speech signal dataset. There are two parts, one is the dialect transcript from the dialect speech signal, which will be performed by the multilingual ASR model and then LLM will translate and standardize the ASR models’ predicted dialect text into standard Bangla text. Our approach includes reliable preprocessing techniques to handle large-scale speech signals.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How is alphabet set-wise annotation performed to guide LLM fine-tuning for dialect transcription?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "alphabet set-wise annotation",
            "LLM"
        ],
        "id": 425,
        "masked_question": "How is [mask1] performed to guide LLM fine-tuning for dialect transcription?",
        "masked_number": 1,
        "masked_elements": [
            "alphabet set-wise annotation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.10879v1_figure_1.png",
        "paperid": "2411.10879v1",
        "paper_path": "./papers/2411.10879v1.json",
        "figure_id": "2411.10879v1_figure_1.png",
        "caption": "Figure 1: (a) Typical Deep Neural Network (DNN) based implementation of ASR that uses word-based annotation combining HMM is used by [1, 2, 3], (b) Recent advancement of LLMs let researchers to get involved in investigation towards the LLMs capability of handling speech signal. The mLLM-based approach has been applied in [4, 5, 6] using feature extraction and alphabet-wise mapping. Existing methods often fall short of processing big speech signal data, specifically with dialect speech signals, due to limitations of data availability and resources. On the other hand, end-to-end frameworks are less explored as per the literature. (c) We introduce a novel approach involving fine-tuning ASR and mLLMs with a large-scale low-resource Bangla dialect speech signal dataset. There are two parts, one is the dialect transcript from the dialect speech signal, which will be performed by the multilingual ASR model and then LLM will translate and standardize the ASR models’ predicted dialect text into standard Bangla text. Our approach includes reliable preprocessing techniques to handle large-scale speech signals.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How can Neural Network optimize Array Signal Processing compared to traditional Spatial Audio Pipeline methods?",
        "relevant_section_ids": [
            "1",
            "3.1"
        ],
        "relevant_context": [
            "The third type of methods, often implemented with planar arrays, employs a three-stage pipeline incorporating localization, beamforming, and Head-Related Transfer Function (HRTF) filtering, referred to as Localization-Beamforming-HRTF (LBH) method [6  ###reference_b6###, 19  ###reference_b19###]. … the critic is that, it relies heavily on each step, which can compromise accurate spatial perception restoration [21  ###reference_b21###].",
            "In recent years, several end-to-end methods have emerged that incorporate the advantages of the previously mentioned approaches while overcoming their limitations. They utilize a microphone array to capture spatial signals and directly convert them into binaural signals [22  ###reference_b22###, 23  ###reference_b23###], which provide dual capability in audio spatialization representation and noise reduction, and have proven effective in synthesizing spatial audio signals.",
            "Based on the importance of spatial audio in hybrid meetings and the shortcomings of previous methods, we propose Array2BR, a novel framework to convert the signals received by a small scale uniform circular array into the binaural spatial signals. Specifically, we introduce an “encoder–decoder” structured network that directly maps multichannel signals to binaural signals, requiring no auxiliary input information beyond the audio signals … In summary, our method excels in meeting the dual requirements of noise reduction and spatialization in telepresence. It is not only easier to deploy but also provides greater practical value for broader applications. Additionally, it demonstrates the best noise reduction and spatialization performance among current end-to-end methods, featuring fewer model parameters and lower computational complexity.",
            "In this study, an end-to-end network is devised to transform the multi-channel signals recorded by a 6 unit circular microphone array into the binaural spatial signals. The overall diagram of the framework … consists of 4 parts: an encoder, a sequential modeling module, a decoder, and a post-processing module.",
            "The encoder module utilizes a  structure [24  ###reference_b24###, 25  ###reference_b25###], which leverages multiple ConvGLU blocks to encode the spatial features from the multi-channel inputs … capturing both local and global spatial-spectral correlations. … ensures that spatial features can be hierarchically extracted at different scales.",
            "Following the encoder, the sequential modeling module is introduced to capture the temporal dependencies in the audio signals. … Each S-TCM block encodes long-term dependencies while maintaining computational efficiency. By modeling these long-range dependencies, the network can effectively capture the dynamics of spatial audio, ensuring that the temporal variations of the sound field are well-represented."
        ],
        "final_answer": "Instead of the traditional multi-stage Localization–Beamforming–HRTF pipeline (which depends on separate DOA estimation, beamforming and HRTF convolution steps), the proposed neural-network-based approach learns in an end-to-end fashion to map raw multi-channel array signals directly to binaural outputs. By using an encoder to hierarchically extract spatial-spectral features, a temporal module (S-TCM) to capture long-range dependencies, and a decoder plus post-processing to reconstruct the binaural signals, the network simultaneously performs spatialization and noise reduction without any auxiliary inputs. This yields improved spatial perception and speech quality, fewer parameters, lower computational complexity, and easier deployment compared to the traditional pipeline.",
        "relevant_elements": [
            "Neural Network",
            "Array Signal Processing"
        ],
        "id": 428,
        "masked_question": "How can [mask1] optimize Array Signal Processing compared to traditional Spatial Audio Pipeline methods?",
        "masked_number": 1,
        "masked_elements": [
            "Neural Network"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.05739v1_figure_1.png",
        "paperid": "2410.05739v1",
        "paper_path": "./papers/2410.05739v1.json",
        "figure_id": "2410.05739v1_figure_1.png",
        "caption": "Figure 1: Array2BR Compared with Traditional Methods",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Beam2BRIR Net adapt principles from Convolution With HRTF to end-to-end binaural synthesis?",
        "relevant_section_ids": [
            "1",
            "3.1"
        ],
        "relevant_context": [
            "The third type of methods, often implemented with planar arrays, employs a three-stage pipeline incorporating localization, beamforming, and Head-Related Transfer Function (HRTF) filtering, referred to as Localization-Beamforming-HRTF (LBH) method [...].",
            "In recent years, several end-to-end methods have emerged that incorporate the advantages of the previously mentioned approaches while overcoming their limitations. They utilize a microphone array to capture spatial signals and directly convert them into binaural signals [...].",
            "Specifically, we introduce an “encoder-decoder” structured network that directly maps multichannel signals to binaural signals, requiring no auxiliary input information beyond the audio signals. Unlike other methods, we use recorded BRIRs instead of HRTFs to generate the target, making it more closely aligned with the acoustic conditions of actual meeting rooms."
        ],
        "final_answer": "Beam2BRIR Net replaces the explicit beamforming-plus-HRTF convolution stage of the traditional pipeline with a single end-to-end encoder-decoder neural network. Rather than convolving beamformed signals with measured HRTFs, it learns convolution-like spatial filters implicitly within its ConvGLU encoder, sequential modeling, and DeconvGLU decoder blocks, and is trained to match recorded BRIR targets. This embeds the HRTF convolution operation inside the network weights and allows direct multichannel-to-binaural synthesis without any separate spatial filtering or auxiliary inputs.",
        "relevant_elements": [
            "Beam2BRIR Net",
            "Convolution With HRTF"
        ],
        "id": 429,
        "masked_question": "How does [mask1] adapt principles from [mask2] to end-to-end binaural synthesis?",
        "masked_number": 2,
        "masked_elements": [
            "Beam2BRIR Net",
            "Convolution With HRTF"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.05739v1_figure_1.png",
        "paperid": "2410.05739v1",
        "paper_path": "./papers/2410.05739v1.json",
        "figure_id": "2410.05739v1_figure_1.png",
        "caption": "Figure 1: Array2BR Compared with Traditional Methods",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does the conditional prompt propagate bias mitigation from degraded to query images?",
        "relevant_section_ids": [
            "3.1",
            "3.2.2"
        ],
        "relevant_context": [
            "During inference, both the conditional image and the query image are fed to the LMM with a prompt instructing the LMM to rate the quality of the query image, under the condition that the conditional image is considered of poor quality. Our design philosophy is to guide the LMM toward confidently and accurately classifying the degraded images as poor quality, reducing its high reliance on image semantics in quality inference. This bias mitigation can, in turn, be propagated to the query image quality inference, assuming that the bias is consistently present in images with similar semantics but varying distortions.",
            "Based on the generated conditional images for each query image, we then input the query image (x) and one of its counterparts (x′) into the LMM, using a specific prompt to propagate the bias mitigation effect from the conditional image to the query image.\n#User: The visual quality of the first image is poor. How about the visual quality of the second image? Good or poor? (Question) [IMAGE_TOKEN1, IMAGE_TOKEN2] (Image1, Image2)\n#Assistant: The quality of the image is [SCORE_TOKEN]."
        ],
        "final_answer": "By feeding both a degraded (conditional) image and the original query image into the LMM under a single prompt that explicitly states “The visual quality of the first image is poor,” and then asking “How about the visual quality of the second image? Good or poor?,” the model carries over its learned understanding that the degraded image is low quality to the judgment of the query image, thereby mitigating its semantic bias.",
        "relevant_elements": [
            "Conditional prompt",
            "Bias Mitigation"
        ],
        "id": 432,
        "masked_question": "How does the [mask1] propagate bias mitigation from degraded to query images?",
        "masked_number": 1,
        "masked_elements": [
            "Conditional prompt"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.12791v1_figure_2.png",
        "paperid": "2411.12791v1",
        "paper_path": "./papers/2411.12791v1.json",
        "figure_id": "2411.12791v1_figure_2.png",
        "caption": "Figure 2: The framework of our perception bias mitigation scheme. It mainly consists of two components: 1) Bias Exposure: Specific distortions are imposed on the query image to significantly degrade the query image quality while preserving its semantics.\nThe disagreement that the LMM rates those distorted images as poor quality exposes the perception bias inherent in the LMM.\n2) Bias Mitigation: Dedicated prompts are defined to mitigate the bias by forcing that the quality of the query image should be assessed under the condition that its degraded counterpart is rated as poor quality. The final quality is then estimated by a semantic similarity based aggregation.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does semantic similarity weighting influence aggregation of quality estimates from conditional images?",
        "relevant_section_ids": [
            "3.2.2",
            "4.4"
        ],
        "relevant_context": [
            "Finally, we aggregate the quality estimation across the four distortion types: \\nwhere p(x'_i|x) is the probability that the distorted image is adopted as the condition. We leverage the semantic similarity between x and x'_i to estimate this probability, based on the assumption that the more semantic information maintained, the more confidently the image can be considered as a condition. We achieve the semantic similarity estimation by feeding another prompt to the LMM as follows, … This yields p(x'_i|x) = softmax(sim(x, x'_i)).",
            "In comparison, our semantic similarity aggregation scheme delivers the best performance across datasets containing synthetic, authentic, and generative distortions, demonstrating its superior generalization on diverse image distortions."
        ],
        "final_answer": "Semantic similarity weighting assigns each conditional image a weight proportional to its LMM–estimated semantic similarity with the query image (via a softmax over similarity scores). Images that share more semantics with the query receive higher weights when aggregating their quality estimates, leading to more accurate and generalizable overall predictions compared to uniform or alternative weighting schemes.",
        "relevant_elements": [
            "Semantic similarity",
            "Aggregation scheme"
        ],
        "id": 433,
        "masked_question": "How does [mask1] weighting influence [mask2] of quality estimates from conditional images?",
        "masked_number": 2,
        "masked_elements": [
            "Semantic similarity",
            "Aggregation scheme"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.12791v1_figure_2.png",
        "paperid": "2411.12791v1",
        "paper_path": "./papers/2411.12791v1.json",
        "figure_id": "2411.12791v1_figure_2.png",
        "caption": "Figure 2: The framework of our perception bias mitigation scheme. It mainly consists of two components: 1) Bias Exposure: Specific distortions are imposed on the query image to significantly degrade the query image quality while preserving its semantics.\nThe disagreement that the LMM rates those distorted images as poor quality exposes the perception bias inherent in the LMM.\n2) Bias Mitigation: Dedicated prompts are defined to mitigate the bias by forcing that the quality of the query image should be assessed under the condition that its degraded counterpart is rated as poor quality. The final quality is then estimated by a semantic similarity based aggregation.",
        "qtype": "Experimental_Results",
        "response": "The user is asking how [mask1] (Semantic similarity) influences [mask2] ($p(y/x) = \\sum_{i=1}^{4} p(y/x, x_i') p(x_i'/x)$), which represents the aggregation of quality estimates from conditional images.\n\nStep-by-step reasoning:\n1.  "
    },
    {
        "question": "What limitations arise from relying solely on semantic similarity for confidence weighting?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "semantic similarity",
            "confidence measure"
        ],
        "id": 434,
        "masked_question": "What limitations arise from relying solely on [mask1] for [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "semantic similarity",
            "confidence measure"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.12791v1_figure_2.png",
        "paperid": "2411.12791v1",
        "paper_path": "./papers/2411.12791v1.json",
        "figure_id": "2411.12791v1_figure_2.png",
        "caption": "Figure 2: The framework of our perception bias mitigation scheme. It mainly consists of two components: 1) Bias Exposure: Specific distortions are imposed on the query image to significantly degrade the query image quality while preserving its semantics.\nThe disagreement that the LMM rates those distorted images as poor quality exposes the perception bias inherent in the LMM.\n2) Bias Mitigation: Dedicated prompts are defined to mitigate the bias by forcing that the quality of the query image should be assessed under the condition that its degraded counterpart is rated as poor quality. The final quality is then estimated by a semantic similarity based aggregation.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What ethical concerns stem from creating conditional images via degradation for bias exposure?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "conditional image",
            "Bias Exposure"
        ],
        "id": 435,
        "masked_question": "What ethical concerns stem from creating [mask1] via degradation for [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "conditional image",
            "Bias Exposure"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.12791v1_figure_2.png",
        "paperid": "2411.12791v1",
        "paper_path": "./papers/2411.12791v1.json",
        "figure_id": "2411.12791v1_figure_2.png",
        "caption": "Figure 2: The framework of our perception bias mitigation scheme. It mainly consists of two components: 1) Bias Exposure: Specific distortions are imposed on the query image to significantly degrade the query image quality while preserving its semantics.\nThe disagreement that the LMM rates those distorted images as poor quality exposes the perception bias inherent in the LMM.\n2) Bias Mitigation: Dedicated prompts are defined to mitigate the bias by forcing that the quality of the query image should be assessed under the condition that its degraded counterpart is rated as poor quality. The final quality is then estimated by a semantic similarity based aggregation.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations might recursive bilateral filtering face on highly textured cost volumes, and how could these be mitigated?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Recursive Bilateral Filtering"
        ],
        "id": 436,
        "masked_question": "What limitations might [mask1] face on highly textured cost volumes, and how could these be mitigated?",
        "masked_number": 1,
        "masked_elements": [
            "Recursive Bilateral Filtering"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.03717v1_figure_1.png",
        "paperid": "2411.03717v1",
        "paper_path": "./papers/2411.03717v1.json",
        "figure_id": "2411.03717v1_figure_1.png",
        "caption": "Figure 1: An illustration of our proposed D3Stereo strategy. Cost volume pyramid is first initialized with RBF. Afterwards, coarse decisive disparities initialized at the deepest layer are hierarchically propagated into former layers with alternating decisive disparity intra-scale diffusion and inter-scale inheritance algorithms.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative propagation strategies could complement intra-scale decisive disparity diffusion and inter-scale decisive disparity inheritance to reduce error accumulation?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Moreover, unlike conventional unidirectional seed-growing process, we also incorporate an adversarial mechanism into our intra-scale decisive disparity diffusion process to update disparities that may have been determined incorrectly in the previous iterations.",
            "This mechanism helps reduce the occurrence of incorrect disparities in the subsequent inter-scale decisive disparity inheritance process."
        ],
        "final_answer": "An adversarial (i.e. bidirectional) disparity propagation mechanism—where previously established disparities that violate local consistency checks are actively revised—can be used alongside intra-scale diffusion and inter-scale inheritance to mitigate error accumulation.",
        "relevant_elements": [
            "Intra-Scale Decisive Disparity Diffusion",
            "Inter-Scale Decisive Disparity Inheritance"
        ],
        "id": 437,
        "masked_question": "What alternative propagation strategies could complement [mask1] and [mask2] to reduce error accumulation?",
        "masked_number": 2,
        "masked_elements": [
            "Intra-Scale Decisive Disparity Diffusion",
            "Inter-Scale Decisive Disparity Inheritance"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.03717v1_figure_1.png",
        "paperid": "2411.03717v1",
        "paper_path": "./papers/2411.03717v1.json",
        "figure_id": "2411.03717v1_figure_1.png",
        "caption": "Figure 1: An illustration of our proposed D3Stereo strategy. Cost volume pyramid is first initialized with RBF. Afterwards, coarse decisive disparities initialized at the deepest layer are hierarchically propagated into former layers with alternating decisive disparity intra-scale diffusion and inter-scale inheritance algorithms.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What design benefit arises from applying recursive bilateral filtering to cost volume pyramids before disparity initialization?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "As discussed in [46], executing I iterations of bilateral filtering with a 3×3 kernel is functionally equivalent in terms of receptive field size to performing the filtering process once, but with a (2I+1)×(2I+1) kernel.",
            "Therefore, with the same computational complexity, our proposed RBF can produce a larger receptive field adhering to a Gaussian distribution, thereby gathering more context information for cost aggregation. In addition, in practical implementations, the GPU memory needs are reduced by a factor of I when using our proposed RBF, significantly optimizing the memory resource usage."
        ],
        "final_answer": "By applying recursive bilateral filtering, the cost volumes acquire a much larger effective receptive field (equivalent to a large-kernel filter) at the same computational cost, which gathers more contextual information for matching, while simultaneously reducing GPU memory usage.",
        "relevant_elements": [
            "Recursive Bilateral Filtering",
            "Cost Volume Pyramid"
        ],
        "id": 438,
        "masked_question": "What design benefit arises from applying [mask1] to cost volume pyramids before disparity initialization?",
        "masked_number": 1,
        "masked_elements": [
            "Recursive Bilateral Filtering"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.03717v1_figure_1.png",
        "paperid": "2411.03717v1",
        "paper_path": "./papers/2411.03717v1.json",
        "figure_id": "2411.03717v1_figure_1.png",
        "caption": "Figure 1: An illustration of our proposed D3Stereo strategy. Cost volume pyramid is first initialized with RBF. Afterwards, coarse decisive disparities initialized at the deepest layer are hierarchically propagated into former layers with alternating decisive disparity intra-scale diffusion and inter-scale inheritance algorithms.",
        "qtype": "Design_Rationale",
        "response": "The design benefit arising from applying Recursive Bilateral Filtering (RBF) to cost volume pyramids before disparity initialization, as indicated by [mask1], is primarily two-fold:\n\n1.  **Memory Efficiency:** The paper explicitly states that the proposed RBF algorithm is for \"memory-efficient cost aggregation\" and \"in practical implementations, the GPU memory needs are reduced by a factor of D when using our proposed RBF, significantly optimizing the memory resource usage.\" This addresses the issue of increased computational demands and memory pressure associated with larger kernel sizes in traditional bilateral filtering.\n2.  **Larger Receptive Field and More Context Information:** The RBF technique allows for producing \"a larger receptive field adhering to a Gaussian distribution, thereby gathering more context information for cost aggregation\" while maintaining the same computational complexity as stacked small kernels. This is beneficial for improving disparity estimation results by incorporating a wider context.\n\nTherefore, applying Recursive Bilateral Filtering ensures efficient memory utilization and enables the gathering of more extensive contextual information by achieving a larger receptive field."
    },
    {
        "question": "What rationale supports exclusively using autoregressive distillation loss without additional losses in FBI-LLM training?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "However, unlike these works, our training process exclusively uses the autoregressive distillation loss without adding any other losses to maintain simplicity.",
            "Our experiments verified that using only the distillation loss yields better results than the vanilla one-hot label based autoregressive loss while maintaining methodological simplicity when working with fully binarized LLMs."
        ],
        "final_answer": "They choose to use only the autoregressive distillation loss in order to keep the training procedure as simple as possible, and empirical results show that this single loss achieves better performance than the standard one-hot label based autoregressive loss when training fully binarized LLMs.",
        "relevant_elements": [
            "autoregressive distillation",
            "FBI-LLM"
        ],
        "id": 441,
        "masked_question": "What rationale supports exclusively using [mask1] loss without additional losses in [mask2] training?",
        "masked_number": 2,
        "masked_elements": [
            "autoregressive distillation",
            "FBI-LLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.07093v1_figure_2.png",
        "paperid": "2407.07093v1",
        "paper_path": "./papers/2407.07093v1.json",
        "figure_id": "2407.07093v1_figure_2.png",
        "caption": "Figure 2: Illustration of the FBI-LLM framework. We take the structure of LLaMA as an example. Left: the LLM block with the proposed FBI-Linear using learnable 𝜶𝜶\\bm{\\alpha}bold_italic_α and 𝜷𝜷\\bm{\\beta}bold_italic_β. Right: our autoregressive distillation and model pertaining procedure.",
        "qtype": "Design_Rationale",
        "response": "The rationale for exclusively using the **autoregressive distillation** loss without additional losses in **FBI-LLM** training is twofold:\n\n1.  **Simplicity**: The authors aimed to maintain methodological simplicity in their training process.\n2.  **Empirical Effectiveness**: Their experiments verified that using only the distillation loss yields better results compared to the vanilla one-hot label based autoregressive loss, specifically when working with fully binarized LLMs, while still maintaining the aforementioned simplicity."
    },
    {
        "question": "How do learnable scale vectors α and β calibrate the binarized weight matrix during FBI-linear forward propagation?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Specifically, in the FBI-linear, we apply scaling at the granularity of the matrix columns.",
            "The calculation process can be formulated as: where W⁽ᵇ⁾_{:,j} denotes the j-th column of the scaled binarized weight matrix W⁽ᵇ⁾. α_j and β_j are the j-th elements in learnable scale vectors α and β respectively."
        ],
        "final_answer": "During forward propagation in an FBI-linear layer, each column j of the binary weight matrix (sign(W⁽ᶠ⁾_{:,j})) is first multiplied by the learnable scale α_j and then shifted by the learnable bias β_j, i.e. W⁽ᵇ⁾_{:,j} = α_j·sign(W⁽ᶠ⁾_{:,j}) + β_j. This column-wise scaling and shifting calibrates the ±1 binarized weights to better approximate the original full-precision weights.",
        "relevant_elements": [
            "FBI-Linear",
            "α",
            "β"
        ],
        "id": 442,
        "masked_question": "How do learnable scale vectors [mask1] and β calibrate the binarized weight matrix during FBI-linear forward propagation?",
        "masked_number": 1,
        "masked_elements": [
            "α"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.07093v1_figure_2.png",
        "paperid": "2407.07093v1",
        "paper_path": "./papers/2407.07093v1.json",
        "figure_id": "2407.07093v1_figure_2.png",
        "caption": "Figure 2: Illustration of the FBI-LLM framework. We take the structure of LLaMA as an example. Left: the LLM block with the proposed FBI-Linear using learnable 𝜶𝜶\\bm{\\alpha}bold_italic_α and 𝜷𝜷\\bm{\\beta}bold_italic_β. Right: our autoregressive distillation and model pertaining procedure.",
        "qtype": "Implementation_Details",
        "response": "The learnable scale vectors **alpha** and beta calibrate the binarized weight matrix `W_b` by applying a column-wise scaling and additive offset. Specifically, for each column `j` of the binarized weight matrix `W_b`, the `j`th element of **alpha** (`alpha^(j)`) is multiplied with the column, and the `j`th element of beta (`beta^(j)`) is then added to it. This process creates the scaled binarized weight matrix `W_b_tilde`, as formulated by `W_b_tilde^(j) = alpha^(j) * W_b^(j) + beta^(j)`. This calibration helps to \"effectively reduce the error between the binarized and original parameters, thereby preserving the more representational capacity.\""
    },
    {
        "question": "How does autoregressive distillation leverage teacher model logits to refine FBI-LLM token distributions?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "In the training, a full-precision pre-trained LLM is used as the teacher model, and the binarized target model acts as the student. Suppose each instance of training data consists of a sequence of input tokens , the teacher prediction probability for the next token can be formulated as: p^T(x^{i+1} | x^0...x^i) = softmax(W^T f(x^0...x^i)), where f represents the activation of the final transformer block.",
            "The cross-entropy between the outputs of the student model and the teacher model is calculated as the final loss function at each step of predicting the next token. It can be formulated as: L_AD = –(1/N) ∑_{i=1}^N ∑_j p^T(j) log p^S(j). Here p^T denotes the token distribution over the vocabulary at the i step predicted by the teacher model, while p^S is the corresponding predicted distribution of the student model."
        ],
        "final_answer": "Autoregressive distillation first runs the full-precision teacher over each prefix x^0…x^i to obtain its logits, applies a softmax to yield a probability distribution p^T over the next token, and then trains the binarized student to match these soft targets by minimizing the cross-entropy between the teacher’s distribution p^T and the student’s distribution p^S at every prediction step.",
        "relevant_elements": [
            "Autoregressive Distillation",
            "Teacher Model",
            "FBI-LLM"
        ],
        "id": 443,
        "masked_question": "How does [mask1] leverage teacher model logits to refine FBI-LLM token distributions?",
        "masked_number": 1,
        "masked_elements": [
            "Autoregressive Distillation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.07093v1_figure_2.png",
        "paperid": "2407.07093v1",
        "paper_path": "./papers/2407.07093v1.json",
        "figure_id": "2407.07093v1_figure_2.png",
        "caption": "Figure 2: Illustration of the FBI-LLM framework. We take the structure of LLaMA as an example. Left: the LLM block with the proposed FBI-Linear using learnable 𝜶𝜶\\bm{\\alpha}bold_italic_α and 𝜷𝜷\\bm{\\beta}bold_italic_β. Right: our autoregressive distillation and model pertaining procedure.",
        "qtype": "Implementation_Details",
        "response": "The \"Autoregressive Distillation\" (as highlighted by [mask1]) leverages teacher model logits to refine FBI-LLM token distributions by using a full-precision pre-trained LLM as a teacher model.\n\nHere's the step-by-step process:\n1.  **Teacher Prediction:** For a given sequence of input tokens, the teacher model (a full-precision LLM) computes its prediction probability for the next token, resulting in a token distribution over the vocabulary ($P^T$). These $P^T$ values are derived from the teacher's logits after being passed through a softmax function.\n2.  **Student Prediction:** Simultaneously, the FBI-LLM (the student model) also predicts its own token distribution ($P^S$) for the next token.\n3.  **Loss Calculation:** The cross-entropy between the student model's predicted token distribution ($P^S$) and the teacher model's predicted token distribution ($P^T$) is calculated as the final loss function at each step of predicting the next token. This loss is formulated as $L = -\\sum_{i=1}^{N} \\sum_{k=1}^{V} P^T_k(x_{i-1}) \\log(P^S_k(x_{i-1}))$.\n4.  **Parameter Update:** During backpropagation, the gradients from this cross-entropy loss, using the Straight-Through Estimator (STE) for non-differentiable `sign` function, are used to update the parameters of the FBI-LLM.\n\nBy minimizing this cross-entropy loss, the FBI-LLM is compelled to align its predicted token distributions ($P^S$) with the more accurate and nuanced token distributions ($P^T$) provided by the full-precision teacher model, thereby refining its token generation capabilities. This process is exclusively driven by the autoregressive distillation loss, without additional losses."
    },
    {
        "question": "How does Prototype Intensity Downsampling correct intensity bias during downsampling support masks?",
        "relevant_section_ids": [
            "3.2.2"
        ],
        "relevant_context": [
            "However, if we use the common bilinear/bicubic interpolation to downsample the original mask to indicate the feature intensity, since the bilinear/bicubic interpolation only uses few points to get the result, the result may be overestimated or underestimated, as shown in Fig. 3, which leads to the distortion of target semantics.",
            "To alleviate this issue, we propose a prototype intensity downsampling to replace the common bilinear/bicubic interpolation in the downsampling of $M^s$. Specifically, we employ a $K\\times K$ convolution layer to process $M^s$: $\\hat M^s = \\mathrm{conv}_{K,K,\\,\\mathrm{stride}=K}(M^s)$, where the parameters in the convolution kernel are all 1 and the stride is $K$. $\\hat M^s$ is calculated by aggregating all pixels in each corresponding region of the feature map. It provides a better estimate of the intensity of prototype features, avoiding the mismatch of semantic clues."
        ],
        "final_answer": "Instead of using bilinear or bicubic interpolation—which only samples a few points and can over‐ or under‐estimate mask intensity—Prototype Intensity Downsampling applies a K×K convolution with all‐ones weights and stride K over the original mask. By summing (or averaging) all pixels in each K×K patch, it produces an accurate intensity value for each feature map cell, correcting the bias introduced by standard interpolation.",
        "relevant_elements": [
            "Prototype Intensity Downsampling",
            "support mask"
        ],
        "id": 444,
        "masked_question": "How does [mask1] correct intensity bias during downsampling support masks?",
        "masked_number": 1,
        "masked_elements": [
            "Prototype Intensity Downsampling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.21351v1_figure_2.png",
        "paperid": "2407.21351v1",
        "paper_path": "./papers/2407.21351v1.json",
        "figure_id": "2407.21351v1_figure_2.png",
        "caption": "Figure 2: Proposed small object few-shot segmentation model. M^ssuperscript^Ms\\hat{\\textbf{{M}}}^{\\rm{s}}over^ start_ARG M end_ARG start_POSTSUPERSCRIPT roman_s end_POSTSUPERSCRIPT indicates the downsampling of support mask. Mas,MsssubscriptsuperscriptMsasubscriptsuperscriptMss\\textbf{{M}}^{\\rm{s}}_{\\rm{a}},\\textbf{{M}}^{\\rm{s}}_{\\rm{s}}M start_POSTSUPERSCRIPT roman_s end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_a end_POSTSUBSCRIPT , M start_POSTSUPERSCRIPT roman_s end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_s end_POSTSUBSCRIPT denote the abnormal prior map and semantic prior map respectively, p denotes a prototype feature. Best viewed in the electronic version.",
        "qtype": "Implementation_Details",
        "response": "The \"Prototype Intensity Downsampling\" module corrects intensity bias during downsampling support masks by replacing traditional bilinear/bicubic interpolation with a specific 1x1 convolution operation.\n\nHere's a step-by-step breakdown:\n1.  **Problem Identification:** Traditional methods like bilinear/bicubic interpolation, when downsampling support masks, only use a limited number of surrounding pixels (e.g., 2x2 or 4x4) to calculate the downsampled value. For small objects, this can lead to overestimation or underestimation of the feature intensity in the downsampled mask, causing distortion of target semantics.\n2.  **Proposed Solution:** To alleviate this, \"Prototype Intensity Downsampling\" employs a specific 1x1 convolution layer to process the support mask (\\`M_s\\`).\n3.  **Mechanism of Correction:**\n    *   The convolution kernel's parameters are all set to 1.\n    *   The stride of the convolution is set to \\`k\\` (the"
    },
    {
        "question": "How does Non-learnable Feature Fusion leverage cosine similarities to fuse query and support features?",
        "relevant_section_ids": [
            "3.2.4"
        ],
        "relevant_context": [
            "are subsequently fused by a non‐learnable feature fusion. The matching mechanism follows [30] to replace the dot produce with the cosine similarities, which is formulated as follows:",
            "where  refers to the reshape function and non normalized,  controls the distribution shape,  refers to the normalization along the row, i.e., reverse softmax [37],  refers to first expanding the new dimension and then replicating along the expanded dimension. Eq. (4) can be regarded as a type of cross‐attention, where the learnable parameters are discarded."
        ],
        "final_answer": "Non‐learnable Feature Fusion first reshapes and L2‐normalizes both the query and support feature maps, then computes their pairwise cosine similarities (instead of a dot-product) to measure how well each query location matches each support location. These similarity scores are passed through a row-wise normalization (reverse softmax) to form attention weights, which are then used to aggregate (cross-attend) the support features into the query feature map. This process requires no learnable parameters and effectively fuses support semantics into the query via cosine‐based attention.",
        "relevant_elements": [
            "Non-learnable Feature Fusion",
            "cosine similarities"
        ],
        "id": 445,
        "masked_question": "How does [mask1] leverage cosine similarities to fuse query and support features?",
        "masked_number": 1,
        "masked_elements": [
            "Non-learnable Feature Fusion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.21351v1_figure_2.png",
        "paperid": "2407.21351v1",
        "paper_path": "./papers/2407.21351v1.json",
        "figure_id": "2407.21351v1_figure_2.png",
        "caption": "Figure 2: Proposed small object few-shot segmentation model. M^ssuperscript^Ms\\hat{\\textbf{{M}}}^{\\rm{s}}over^ start_ARG M end_ARG start_POSTSUPERSCRIPT roman_s end_POSTSUPERSCRIPT indicates the downsampling of support mask. Mas,MsssubscriptsuperscriptMsasubscriptsuperscriptMss\\textbf{{M}}^{\\rm{s}}_{\\rm{a}},\\textbf{{M}}^{\\rm{s}}_{\\rm{s}}M start_POSTSUPERSCRIPT roman_s end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_a end_POSTSUBSCRIPT , M start_POSTSUPERSCRIPT roman_s end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_s end_POSTSUBSCRIPT denote the abnormal prior map and semantic prior map respectively, p denotes a prototype feature. Best viewed in the electronic version.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How do the abnormal prior map and non-learnable feature fusion compare to cross-attention in pixel-level fusion methodologies?",
        "relevant_section_ids": [
            "2.1",
            "3.2.3",
            "3.2.4"
        ],
        "relevant_context": [
            "Few-shot semantic segmentation [...] pixel-level feature fusion methods are proposed to mine the correspondence between the query pixel-level features and the support semantic-related pixel-level features, where the residual connection in the cross attention plays the role of fusing query and support features.",
            "M_s^a matches every pixel-level query feature with the normal support features, if there is a missing defect, it can be highlighted and the normal background can not be. In addition, M_s^a enables SOFS to have FAD ability, we can input the normal support image.",
            "Eq. (4) can be regarded as a type of cross-attention, where the learnable parameters are discarded. We think that the recognition of small objects does not need lots of parameters, more parameters may cause the risk of overfitting the category-specific information."
        ],
        "final_answer": "The abnormal prior map extends the usual pixel-level cross-attention by computing for each query pixel its maximum similarity to support normal features—this highlights abnormal regions and suppresses normal background (enabling few-shot anomaly detection). The non-learnable feature fusion then performs a cross-attention–style matching using cosine similarities but with all learnable weights removed, avoiding the parameter overhead and overfitting risks of conventional cross-attention in small-object scenarios.",
        "relevant_elements": [
            "abnormal prior map",
            "non-learnable feature fusion"
        ],
        "id": 446,
        "masked_question": "How do the [mask1] and [mask2] compare to cross-attention in pixel-level fusion methodologies?",
        "masked_number": 2,
        "masked_elements": [
            "abnormal prior map",
            "non-learnable feature fusion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.21351v1_figure_2.png",
        "paperid": "2407.21351v1",
        "paper_path": "./papers/2407.21351v1.json",
        "figure_id": "2407.21351v1_figure_2.png",
        "caption": "Figure 2: Proposed small object few-shot segmentation model. M^ssuperscript^Ms\\hat{\\textbf{{M}}}^{\\rm{s}}over^ start_ARG M end_ARG start_POSTSUPERSCRIPT roman_s end_POSTSUPERSCRIPT indicates the downsampling of support mask. Mas,MsssubscriptsuperscriptMsasubscriptsuperscriptMss\\textbf{{M}}^{\\rm{s}}_{\\rm{a}},\\textbf{{M}}^{\\rm{s}}_{\\rm{s}}M start_POSTSUPERSCRIPT roman_s end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_a end_POSTSUBSCRIPT , M start_POSTSUPERSCRIPT roman_s end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_s end_POSTSUBSCRIPT denote the abnormal prior map and semantic prior map respectively, p denotes a prototype feature. Best viewed in the electronic version.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How do prototype intensity downsampling and sliding window mechanism mitigate information loss versus multi-scale learning?",
        "relevant_section_ids": [
            "2.2",
            "3.2.2"
        ],
        "relevant_context": [
            "The main challenges for small object recognition include information loss, low tolerance for bounding box perturbation, etc. Information loss refers to the fact that the feature information of small objects is almost wiped out during the downsampling of the feature extractor, it has the greatest impact on performance. To alleviate this issue, there are mainly three kinds of methods. ... The third is to process small objects by multi-scale learning and hierarchical feature fusion [40, 61].",
            "Non-resizing Procedure. The core idea is to ensure that the pixel area of small objects encoded by the model is consistent with that in the original image. As shown in Fig. 2, the non-resizing procedure randomly crops the small object on the original image in training and uses the sliding window mechanism to process all regions of the query image in the test.",
            "Prototype Intensity Downsampling. To extract the prototype feature on the support image, we need to downsample the support mask M^s to ensure that it is consistent with the size of the support feature map. ... Specifically, we employ a k×k convolution layer to process M^s: M̂^s = Conv_{ones}(M^s). M̂^s is calculated by all pixels of corresponding regions of features. It provides a better estimate of the intensity of prototype features, avoiding the mismatch of semantic clues."
        ],
        "final_answer": "Instead of relying on multi-scale feature fusion to recover details lost by downsampling, SOFS keeps the small-object pixels at their original resolution via a sliding-window (non-resizing) procedure and computes prototype intensities by aggregating over every pixel in the support region (prototype intensity downsampling). Together, these two designs preserve the true pixel-level information and avoid the interpolation distortion and semantic weakening that come from both coarse resizing and sparse bilinear/bicubic downsampling, thereby reducing information loss more directly than multi-scale learning.",
        "relevant_elements": [
            "prototype intensity downsampling",
            "sliding window mechanism"
        ],
        "id": 447,
        "masked_question": "How do [mask1] and sliding window mechanism mitigate information loss versus multi-scale learning?",
        "masked_number": 1,
        "masked_elements": [
            "prototype intensity downsampling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.21351v1_figure_2.png",
        "paperid": "2407.21351v1",
        "paper_path": "./papers/2407.21351v1.json",
        "figure_id": "2407.21351v1_figure_2.png",
        "caption": "Figure 2: Proposed small object few-shot segmentation model. M^ssuperscript^Ms\\hat{\\textbf{{M}}}^{\\rm{s}}over^ start_ARG M end_ARG start_POSTSUPERSCRIPT roman_s end_POSTSUPERSCRIPT indicates the downsampling of support mask. Mas,MsssubscriptsuperscriptMsasubscriptsuperscriptMss\\textbf{{M}}^{\\rm{s}}_{\\rm{a}},\\textbf{{M}}^{\\rm{s}}_{\\rm{s}}M start_POSTSUPERSCRIPT roman_s end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_a end_POSTSUBSCRIPT , M start_POSTSUPERSCRIPT roman_s end_POSTSUPERSCRIPT start_POSTSUBSCRIPT roman_s end_POSTSUBSCRIPT denote the abnormal prior map and semantic prior map respectively, p denotes a prototype feature. Best viewed in the electronic version.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How do ADD and CONCAT fusion approaches parallel multimodal feature alignment methodologies?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "We implement two different approaches for incorporating ET features into the RM, as shown in Figure 2. In the first approach, GazeConcat, we concatenate the ET embeddings with the text embeddings.",
            "GazeAdd: The input to the RM consists of the ET embedding e_e and the text embedding e_t, which are added in an elementwise fashion: e_c = e_t + e_e."
        ],
        "final_answer": "Both GazeAdd and GazeConcat mirror standard multimodal fusion strategies. GazeAdd aligns the two modalities by projecting the eye-tracking and text embeddings into the same space and then summing them element-wise (a common ‘additive’ or ‘sum’ fusion in multimodal models). GazeConcat, by contrast, concatenates the projected eye-tracking embedding and the text embedding—delimited by special ⟨eye⟩ tokens—replicating the typical ‘concatenation’ fusion used to stack features from different modalities.",
        "relevant_elements": [
            "ADD",
            "CONCAT"
        ],
        "id": 448,
        "masked_question": "How do [mask1] and [mask2] fusion approaches parallel multimodal feature alignment methodologies?",
        "masked_number": 2,
        "masked_elements": [
            "ADD",
            "CONCAT"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.01532v1_figure_1.png",
        "paperid": "2410.01532v1",
        "paper_path": "./papers/2410.01532v1.json",
        "figure_id": "2410.01532v1_figure_1.png",
        "caption": "Figure 1: GazeReward Framework for using eye-tracking data for reward modelling. We use a generator model to compute ET features on a preference dataset D𝐷Ditalic_D and we train the human preference by combining both text and ET embeddings (See section 3 for details.)",
        "qtype": "Literature_Background",
        "response": "The diagram shows two fusion approaches for combining eye-tracking features with text embeddings: GazeAdd (highlighted in red) and GazeConcat (highlighted in blue)."
    },
    {
        "question": "How do Eye-tracking features generation and Reward model scoring reflect reinforcement learning reward shaping?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Eye-tracking features generation",
            "Reward model"
        ],
        "id": 449,
        "masked_question": "How do [mask1] and Reward model scoring reflect reinforcement learning reward shaping?",
        "masked_number": 1,
        "masked_elements": [
            "Eye-tracking features generation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.01532v1_figure_1.png",
        "paperid": "2410.01532v1",
        "paper_path": "./papers/2410.01532v1.json",
        "figure_id": "2410.01532v1_figure_1.png",
        "caption": "Figure 1: GazeReward Framework for using eye-tracking data for reward modelling. We use a generator model to compute ET features on a preference dataset D𝐷Ditalic_D and we train the human preference by combining both text and ET embeddings (See section 3 for details.)",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does GazeConcat preserve modality distinction when combining ET and text embeddings for reward modeling?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "GazeConcat: The ET embedding, denoted as E_et, is concatenated with the text embedding E_txt to form the input for the RM.",
            "To distinguish between the two modalities, we introduce two special tokens: 〈eye〉 and 〈/eye〉, which flag the start and end of the ET embedding, respectively (Figure 2)."
        ],
        "final_answer": "GazeConcat preserves modality distinction by surrounding the ET embeddings with two special tokens, 〈eye〉 and 〈/eye〉, before concatenating them with the text embeddings so that the model can explicitly identify and separate eye-tracking features from the text modality.",
        "relevant_elements": [
            "GazeConcat"
        ],
        "id": 450,
        "masked_question": "How does [mask1] preserve modality distinction when combining ET and text embeddings for reward modeling?",
        "masked_number": 1,
        "masked_elements": [
            "GazeConcat"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.01532v1_figure_1.png",
        "paperid": "2410.01532v1",
        "paper_path": "./papers/2410.01532v1.json",
        "figure_id": "2410.01532v1_figure_1.png",
        "caption": "Figure 1: GazeReward Framework for using eye-tracking data for reward modelling. We use a generator model to compute ET features on a preference dataset D𝐷Ditalic_D and we train the human preference by combining both text and ET embeddings (See section 3 for details.)",
        "qtype": "Experimental_Results",
        "response": "The red box ([mask1]) illustrates two methods for constructing combined embeddings: GazeAdd (addition) and GazeConcat (concatenation).\n\nThe method that explicitly preserves modality distinction is **GazeConcat**.\n\n1.  **GazeConcat (Concatenation):** As stated in the \"GazeConcat\" section, \"To distinguish between the two modalities, we introduce two special tokens: ⟨eye⟩ and ⟨/eye⟩, which flag the start and end of the ET embedding, respectively.\" These special tokens are added to the input sequence, effectively marking the boundaries of the eye-tracking information within the combined embedding, thereby preserving its distinct modality. The structure is: `⟨eye⟩ ET embedding ⟨/eye⟩ Text embedding`.\n\n2.  **GazeAdd (Addition):** For GazeAdd, the ET embedding and the text embedding are added in an element-wise fashion. This operation combines them directly into a single representation, which does not inherently preserve a distinct separation or boundary between the two modalities after the addition. Rather, it fuses them into a combined numerical vector.\n\nTherefore, the **GazeConcat** approach depicted within [mask1] preserves modality distinction by using special `⟨eye⟩` and `⟨/eye⟩` tokens to delineate the eye-tracking embedding from the text embedding when they are concatenated."
    },
    {
        "question": "How does GazeAdd handle token mismatch between ET prediction tokenizer and RM tokenizer?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "The two ET prediction models use different tokenizers, which also differ from those used by the base models in the RM. As a result, the number of tokens w in the input for the RM and the number of tokens m generated by the ET prediction model may not match.",
            "To address this embedding alignment issue, and have the same dimension, we remap the ET features from the m-token space to the w-token space used by each base model in the RM."
        ],
        "final_answer": "GazeAdd resolves the tokenizer mismatch by remapping the ET feature embeddings from the ET prediction model’s token space into the RM’s token space so that both embeddings have the same length for elementwise addition.",
        "relevant_elements": [
            "GazeAdd"
        ],
        "id": 451,
        "masked_question": "How does [mask1] handle token mismatch between ET prediction tokenizer and RM tokenizer?",
        "masked_number": 1,
        "masked_elements": [
            "GazeAdd"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.01532v1_figure_1.png",
        "paperid": "2410.01532v1",
        "paper_path": "./papers/2410.01532v1.json",
        "figure_id": "2410.01532v1_figure_1.png",
        "caption": "Figure 1: GazeReward Framework for using eye-tracking data for reward modelling. We use a generator model to compute ET features on a preference dataset D𝐷Ditalic_D and we train the human preference by combining both text and ET embeddings (See section 3 for details.)",
        "qtype": "Experimental_Results",
        "response": "The [mask1], which represents the GazeAdd approach, handles the token mismatch by remapping the eye-tracking (ET) features from the $t_{ET}$-token space (used by the ET prediction model) to the $t_{RM}$-token space (used by each base model in the Reward Model). This ensures that the ET features have the same dimension as the text embeddings for elementwise addition."
    },
    {
        "question": "What ethical risks might emerge from using black-box M^l base models within InfoSel-TT ensemble?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "M^l",
            "InfoSel-TT"
        ],
        "id": 454,
        "masked_question": "What ethical risks might emerge from using black-box [mask1] base models within [mask2] ensemble?",
        "masked_number": 2,
        "masked_elements": [
            "M^l",
            "InfoSel-TT"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.12841v1_figure_1.png",
        "paperid": "2407.12841v1",
        "paper_path": "./papers/2407.12841v1.json",
        "figure_id": "2407.12841v1_figure_1.png",
        "caption": "Figure 1: Architecture of our InfoSel, fine-tuned (FT) and InfoSel∗ models. M∗lsubscriptsuperscript𝑀𝑙M^{l}_{*}italic_M start_POSTSUPERSCRIPT italic_l end_POSTSUPERSCRIPT start_POSTSUBSCRIPT ∗ end_POSTSUBSCRIPT and M∗vsubscriptsuperscript𝑀𝑣M^{v}_{*}italic_M start_POSTSUPERSCRIPT italic_v end_POSTSUPERSCRIPT start_POSTSUBSCRIPT ∗ end_POSTSUBSCRIPT refer to black-box LLMs and VQA base models respectively, which are not trainable. The number of these base models is flexible, and is not restricted to 3 as in the figure. The models on the left (suffixed with -TT) are trained for the TQA tasks, while the models on the right (suffixed with -MT) are trained for the VQA tasks.\nAll our models are trained independently. Note that FT and InfoSel∗  are optional if the task-specific datasets do not contain high percentage of unseen labels.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might substitute dynamic classifiers improve selection compared to the dense layer in InfoSel-MT?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "dense layer",
            "InfoSel-MT"
        ],
        "id": 455,
        "masked_question": "How might substitute dynamic classifiers improve selection compared to the [mask1] in InfoSel-MT?",
        "masked_number": 1,
        "masked_elements": [
            "dense layer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.12841v1_figure_1.png",
        "paperid": "2407.12841v1",
        "paper_path": "./papers/2407.12841v1.json",
        "figure_id": "2407.12841v1_figure_1.png",
        "caption": "Figure 1: Architecture of our InfoSel, fine-tuned (FT) and InfoSel∗ models. M∗lsubscriptsuperscript𝑀𝑙M^{l}_{*}italic_M start_POSTSUPERSCRIPT italic_l end_POSTSUPERSCRIPT start_POSTSUBSCRIPT ∗ end_POSTSUBSCRIPT and M∗vsubscriptsuperscript𝑀𝑣M^{v}_{*}italic_M start_POSTSUPERSCRIPT italic_v end_POSTSUPERSCRIPT start_POSTSUBSCRIPT ∗ end_POSTSUBSCRIPT refer to black-box LLMs and VQA base models respectively, which are not trainable. The number of these base models is flexible, and is not restricted to 3 as in the figure. The models on the left (suffixed with -TT) are trained for the TQA tasks, while the models on the right (suffixed with -MT) are trained for the VQA tasks.\nAll our models are trained independently. Note that FT and InfoSel∗  are optional if the task-specific datasets do not contain high percentage of unseen labels.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations arise from relying on EMA-updated Teacher predictions for pseudo-label quality?",
        "relevant_section_ids": [
            "2"
        ],
        "relevant_context": [
            "On the other hand, self-training adapts a student-teacher [5] framework to tackle the data shift problem which is typical in UDA. In this strategy, pseudo-labels are generated by a teacher model trained on the source domain data.",
            "However, due to significant differences in data distributions between the two domains, pseudo-labels inherently possess noise."
        ],
        "final_answer": "Because the teacher’s predictions are generated on target images without ground-truth, and the teacher itself is only an EMA of the student trained on source data, the resulting pseudo-labels can be noisy and unreliable when the source and target distributions differ significantly. This noise in the pseudo-labels can mislead the student and degrade adaptation performance.",
        "relevant_elements": [
            "Teacher",
            "EMA"
        ],
        "id": 456,
        "masked_question": "What limitations arise from relying on [mask1]-updated [mask2] predictions for pseudo-label quality?",
        "masked_number": 2,
        "masked_elements": [
            "EMA",
            "Teacher"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.19748v1_figure_2.png",
        "paperid": "2410.19748v1",
        "paper_path": "./papers/2410.19748v1.json",
        "figure_id": "2410.19748v1_figure_2.png",
        "caption": "Figure 2: Framework overview of C2DA. Given labeled source data {xSsuperscript𝑥𝑆x^{S}italic_x start_POSTSUPERSCRIPT italic_S end_POSTSUPERSCRIPT, ySsuperscript𝑦𝑆y^{S}italic_y start_POSTSUPERSCRIPT italic_S end_POSTSUPERSCRIPT}, we first calculate the source prediction y^Ssuperscript^𝑦𝑆\\hat{y}^{S}over^ start_ARG italic_y end_ARG start_POSTSUPERSCRIPT italic_S end_POSTSUPERSCRIPT by using the student model. Later, we leverage the teacher model to predict pseudo-label y¯Tsuperscript¯𝑦𝑇\\bar{y}^{T}over¯ start_ARG italic_y end_ARG start_POSTSUPERSCRIPT italic_T end_POSTSUPERSCRIPT. We craft the mixed label ym⁢i⁢xsuperscript𝑦𝑚𝑖𝑥y^{mix}italic_y start_POSTSUPERSCRIPT italic_m italic_i italic_x end_POSTSUPERSCRIPT and mixed data xm⁢i⁢xsuperscript𝑥𝑚𝑖𝑥x^{mix}italic_x start_POSTSUPERSCRIPT italic_m italic_i italic_x end_POSTSUPERSCRIPT by blending the images from both domains. We use the student model to predict mix prediction y^m⁢i⁢xsuperscript^𝑦𝑚𝑖𝑥\\hat{y}^{mix}over^ start_ARG italic_y end_ARG start_POSTSUPERSCRIPT italic_m italic_i italic_x end_POSTSUPERSCRIPT. We also do the masking on target images to generate masked images xm⁢asuperscript𝑥𝑚𝑎x^{ma}italic_x start_POSTSUPERSCRIPT italic_m italic_a end_POSTSUPERSCRIPT and leverage the student model to predict masked prediction images y^m⁢asuperscript^𝑦𝑚𝑎\\hat{y}^{ma}over^ start_ARG italic_y end_ARG start_POSTSUPERSCRIPT italic_m italic_a end_POSTSUPERSCRIPT for learning contextual relations. Except for the segmentation losses we also use contrastive loss Lp⁢i⁢xsubscript𝐿𝑝𝑖𝑥L_{pix}italic_L start_POSTSUBSCRIPT italic_p italic_i italic_x end_POSTSUBSCRIPT for ensuring intra-class compactness and inter-class separability.",
        "qtype": "Others",
        "response": "The question asks about the limitations of relying on **EMA-updated Teacher** predictions for pseudo-label quality.\n\n1.  **Identify [mask1] and [mask2]:**\n    *   [mask1] corresponds to \"EMA\".\n    *   [mask2] corresponds to \"Teacher g_theta_bar\".\n\n2.  **Locate relevant information in the text about Student-Teacher frameworks and pseudo-labels:**\n    The \"Unsupervised Domain Adaptation\" section describes self-training: \"In this strategy, pseudo-labels are generated by a teacher model trained on the source domain data. Later, the student model is trained on"
    },
    {
        "question": "What alternative strategies could enhance semantic consistency in the Mix module beyond class-based copying?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Mix"
        ],
        "id": 457,
        "masked_question": "What alternative strategies could enhance semantic consistency in the [mask1] module beyond class-based copying?",
        "masked_number": 1,
        "masked_elements": [
            "Mix"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.19748v1_figure_2.png",
        "paperid": "2410.19748v1",
        "paper_path": "./papers/2410.19748v1.json",
        "figure_id": "2410.19748v1_figure_2.png",
        "caption": "Figure 2: Framework overview of C2DA. Given labeled source data {xSsuperscript𝑥𝑆x^{S}italic_x start_POSTSUPERSCRIPT italic_S end_POSTSUPERSCRIPT, ySsuperscript𝑦𝑆y^{S}italic_y start_POSTSUPERSCRIPT italic_S end_POSTSUPERSCRIPT}, we first calculate the source prediction y^Ssuperscript^𝑦𝑆\\hat{y}^{S}over^ start_ARG italic_y end_ARG start_POSTSUPERSCRIPT italic_S end_POSTSUPERSCRIPT by using the student model. Later, we leverage the teacher model to predict pseudo-label y¯Tsuperscript¯𝑦𝑇\\bar{y}^{T}over¯ start_ARG italic_y end_ARG start_POSTSUPERSCRIPT italic_T end_POSTSUPERSCRIPT. We craft the mixed label ym⁢i⁢xsuperscript𝑦𝑚𝑖𝑥y^{mix}italic_y start_POSTSUPERSCRIPT italic_m italic_i italic_x end_POSTSUPERSCRIPT and mixed data xm⁢i⁢xsuperscript𝑥𝑚𝑖𝑥x^{mix}italic_x start_POSTSUPERSCRIPT italic_m italic_i italic_x end_POSTSUPERSCRIPT by blending the images from both domains. We use the student model to predict mix prediction y^m⁢i⁢xsuperscript^𝑦𝑚𝑖𝑥\\hat{y}^{mix}over^ start_ARG italic_y end_ARG start_POSTSUPERSCRIPT italic_m italic_i italic_x end_POSTSUPERSCRIPT. We also do the masking on target images to generate masked images xm⁢asuperscript𝑥𝑚𝑎x^{ma}italic_x start_POSTSUPERSCRIPT italic_m italic_a end_POSTSUPERSCRIPT and leverage the student model to predict masked prediction images y^m⁢asuperscript^𝑦𝑚𝑎\\hat{y}^{ma}over^ start_ARG italic_y end_ARG start_POSTSUPERSCRIPT italic_m italic_a end_POSTSUPERSCRIPT for learning contextual relations. Except for the segmentation losses we also use contrastive loss Lp⁢i⁢xsubscript𝐿𝑝𝑖𝑥L_{pix}italic_L start_POSTSUBSCRIPT italic_p italic_i italic_x end_POSTSUBSCRIPT for ensuring intra-class compactness and inter-class separability.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What is the motivation for applying pixel contrast in the embedding feature space?",
        "relevant_section_ids": [
            "1",
            "3.3"
        ],
        "relevant_context": [
            "In this work, we propose a unified UDA framework that tightly couples the intra-domain knowledge and the context-aware knowledge. To learn the intra-domain knowledge, we explore pixel-to-pixel relationships to understand the inherent structures of intra-domain images. This approach ensures intra-class compactness as well as inter-class separability. By mapping the pixels into an embedding space, discriminative feature learning can be obtained. This is achieved by pulling together pixels belonging to the same class and pushing apart pixels from different classes, thereby promoting both intra-class compactness and inter-class separability.",
            "The adopted segmentation losses do not consider learning the inherent context within the images, which is important for local-focused segmentation tasks. So, to learn the intra-domain knowledge, we opt to utilize pixel-wise contrastive learning. Specifically, along with the classification head hcls, we use a projection head hproj that generates an embedding space es=hproj of the pixels. Contrastive learning facilitates learning the correlation between the labeled pixels by pulling the positive pairs of pixels together and pushing the negative pairs of pixels away."
        ],
        "final_answer": "The motivation is that standard segmentation losses alone do not capture the inherent pixel-level structure and context in images. By applying pixel contrast in an embedding feature space, the model learns to pull together same-class pixels and push apart different-class pixels, resulting in intra-class compactness and inter-class separability and thus richer, more discriminative representations.",
        "relevant_elements": [
            "Feature Space",
            "Pixel Contrast"
        ],
        "id": 459,
        "masked_question": "What is the motivation for applying [mask1] in the embedding [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Pixel Contrast",
            "Feature Space"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.19748v1_figure_2.png",
        "paperid": "2410.19748v1",
        "paper_path": "./papers/2410.19748v1.json",
        "figure_id": "2410.19748v1_figure_2.png",
        "caption": "Figure 2: Framework overview of C2DA. Given labeled source data {xSsuperscript𝑥𝑆x^{S}italic_x start_POSTSUPERSCRIPT italic_S end_POSTSUPERSCRIPT, ySsuperscript𝑦𝑆y^{S}italic_y start_POSTSUPERSCRIPT italic_S end_POSTSUPERSCRIPT}, we first calculate the source prediction y^Ssuperscript^𝑦𝑆\\hat{y}^{S}over^ start_ARG italic_y end_ARG start_POSTSUPERSCRIPT italic_S end_POSTSUPERSCRIPT by using the student model. Later, we leverage the teacher model to predict pseudo-label y¯Tsuperscript¯𝑦𝑇\\bar{y}^{T}over¯ start_ARG italic_y end_ARG start_POSTSUPERSCRIPT italic_T end_POSTSUPERSCRIPT. We craft the mixed label ym⁢i⁢xsuperscript𝑦𝑚𝑖𝑥y^{mix}italic_y start_POSTSUPERSCRIPT italic_m italic_i italic_x end_POSTSUPERSCRIPT and mixed data xm⁢i⁢xsuperscript𝑥𝑚𝑖𝑥x^{mix}italic_x start_POSTSUPERSCRIPT italic_m italic_i italic_x end_POSTSUPERSCRIPT by blending the images from both domains. We use the student model to predict mix prediction y^m⁢i⁢xsuperscript^𝑦𝑚𝑖𝑥\\hat{y}^{mix}over^ start_ARG italic_y end_ARG start_POSTSUPERSCRIPT italic_m italic_i italic_x end_POSTSUPERSCRIPT. We also do the masking on target images to generate masked images xm⁢asuperscript𝑥𝑚𝑎x^{ma}italic_x start_POSTSUPERSCRIPT italic_m italic_a end_POSTSUPERSCRIPT and leverage the student model to predict masked prediction images y^m⁢asuperscript^𝑦𝑚𝑎\\hat{y}^{ma}over^ start_ARG italic_y end_ARG start_POSTSUPERSCRIPT italic_m italic_a end_POSTSUPERSCRIPT for learning contextual relations. Except for the segmentation losses we also use contrastive loss Lp⁢i⁢xsubscript𝐿𝑝𝑖𝑥L_{pix}italic_L start_POSTSUBSCRIPT italic_p italic_i italic_x end_POSTSUBSCRIPT for ensuring intra-class compactness and inter-class separability.",
        "qtype": "Design_Rationale",
        "response": "The motivation for applying **Pixel Contrast** in the **Feature Space** is to:\n\n1.  **Learn intra-domain knowledge:** By using pixel-wise contrastive learning, the model explores pixel-to-pixel relationships within the images.\n2.  **Achieve intra-class compactness and inter-class separability:**\n    *   Pixels belonging to the same class are pulled closer together (intra-class compactness).\n    *   Pixels from different classes are pushed further apart (inter-class separability).\n3.  **Enhance segmentation performance:** This process of learning discriminative feature representations in the embedding space ultimately leads to improved segmentation by embedding richer contextual relationships and making classes more distinguishable."
    },
    {
        "question": "What reasoning underpins using SMPLx depth maps in SCNet for occlusion-robust pose conditioning?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Existing human personalization methods often utilize 2D skeleton-based pose ControlNets [81], for pose-guided image generation. However, 2D pose estimation lacks the depth and specificity required to accurately capture unique body contours and structures, often leading to a loss of individual physical attributes. This limitation hinders full human personalization, including both face identity and body shape, and makes the models vulnerable to occlusions.",
            "To overcome this limitation, we propose a novel 3D-aware pose conditioning technique using SMPLx-ControlNet (SCNet). By leveraging 3D human models, specifically SMPLx [57], we can accurately represent body shape and pose. Given body shape parameters β, 3D poses θ, and a camera view pose v, we first generate a 3D human model using SMPLx. We then render the SMPLx depth map D, which serves as a strong conditioning signal for the diffusion model and effectively handles occlusions. This SMPLx depth map is used as a precise guidance for image generation with SCNet."
        ],
        "final_answer": "SCNet uses SMPLx depth maps because 2D skeleton poses lack the depth and detailed body‐shape information needed for precise personalization and are vulnerable to occlusions. By rendering a 3D SMPLx depth map—conveying both body contours and depth—SCNet gains a strong conditioning signal that accurately reflects individual shape and handles occluded interactions during image synthesis.",
        "relevant_elements": [
            "SMPLx Depth Map",
            "SCNet"
        ],
        "id": 460,
        "masked_question": "What reasoning underpins using [mask1] in [mask2] for occlusion-robust pose conditioning?",
        "masked_number": 2,
        "masked_elements": [
            "SMPLx Depth Map",
            "SCNet"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.18068v1_figure_2.png",
        "paperid": "2411.18068v1",
        "paper_path": "./papers/2411.18068v1.json",
        "figure_id": "2411.18068v1_figure_2.png",
        "caption": "Figure 2: Overview of PersonaCraft. We extract face and body embeddings from reference images, then perform personalized image synthesis using controllable modules for face identity and body shape customization. Our method applies 3D-aware pose conditioning with SMPLx-ControlNet (SCNet) to generate occlusion-robust images that accurately reflect body shapes.",
        "qtype": "Design_Rationale",
        "response": "To answer the question, let's break down the reasoning step-by-step based on the provided context:\n\n1.  **Identify `[mask1]` and `[mask2]`**:\n    *   `[mask1]` refers to the \"SMPLx Depth Map\" (highlighted by the red box).\n    *   `[mask2]` refers to the \"SCNet\" (SMPLx-ControlNet) (highlighted by the blue box).\n\n2.  **Locate the relevant section in the text**: The section \"3D-Aware Pose Conditioning using SMPLx-ControlNet\" directly addresses the role of the SMPLx Depth Map in SCNet.\n\n3.  **Extract the core problem with existing methods**: The text states: \"Existing human personalization methods often utilize 2D skeleton-based pose ControlNets... However, 2D pose estimation lacks the depth and specificity required to accurately capture unique body contours and structures, often leading to a loss of individual physical attributes. This limitation hinders full human personalization... and makes the models vulnerable to occlusions.\"\n\n4.  **Identify the proposed solution and its benefit**:\n    *   \"To address these issues, we leverage 3D pose information... 3D pose provides a more comprehensive representation of human pose, capturing depth information which can be significant in scenarios with complex poses and occlusions.\"\n    *   However, even 3D *skeleton* conditioning has limitations: \"even with 3D pose, naively using 3D skeleton-based pose conditioning may not fully capture body shape variations.\"\n    *   The proposed solution: \"To overcome this limitation, we propose a novel 3D-aware pose conditioning technique using SMPLx-ControlNet (SCNet). By leveraging 3D human models, specifically SMPLx, we can accurately represent body shape and pose.\"\n\n5.  **Explain the role of the SMPLx Depth Map**: \"Given body shape parameters (`β`), 3D poses, and a camera view pose, we first generate a 3D human model using SMPLx. We then render the SMPLx depth map (`D_smplx`), which serves as a strong conditioning signal for the diffusion model and effectively handles occlusions. This SMPLx depth map is used as a precise guidance for image generation with SCNet.\"\n\n**Reasoning:**\nThe reasoning underpinning using the SMPLx Depth Map (`[mask1]`) in SCNet (`[mask2]`) for occlusion-robust pose conditioning is that it provides a **3D-aware, comprehensive representation of human pose and body shape**, which directly addresses the limitations of 2D skeleton-based pose conditioning. Specifically:\n*   It **captures depth information**, which is crucial for"
    },
    {
        "question": "What purpose do face masks serve when integrating IdentityNet outputs into personalized image synthesis?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "To synthesize personalized images of multiple individuals, we leverage a face ControlNet, IdentitiyNet [72], and SCNet. To ensure precise identity preservation and enhanced image quality, we employ face masks to accurately localize facial regions from the given pose.",
            "Let \\(G_i^k\\) represent the i–th neural block and \\(H_i^k\\) the i–th input feature map. We obtain \\( \\hat{H}_i^k \\) by adding these residual features to \\(H_i^k\\), scaled by their respective conditioning weights \\(w_f\\) and \\(w_b\\), and modulated by face masks \\(M^k\\)."
        ],
        "final_answer": "Face masks are used to accurately localize the facial regions so that IdentityNet’s residual identity features are applied only within the face area, ensuring precise identity preservation and improved image quality.",
        "relevant_elements": [
            "Face Mask",
            "IdentityNet"
        ],
        "id": 461,
        "masked_question": "What purpose do [mask1] serve when integrating [mask2] outputs into personalized image synthesis?",
        "masked_number": 2,
        "masked_elements": [
            "Face Mask",
            "IdentityNet"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.18068v1_figure_2.png",
        "paperid": "2411.18068v1",
        "paper_path": "./papers/2411.18068v1.json",
        "figure_id": "2411.18068v1_figure_2.png",
        "caption": "Figure 2: Overview of PersonaCraft. We extract face and body embeddings from reference images, then perform personalized image synthesis using controllable modules for face identity and body shape customization. Our method applies 3D-aware pose conditioning with SMPLx-ControlNet (SCNet) to generate occlusion-robust images that accurately reflect body shapes.",
        "qtype": "Design_Rationale",
        "response": "When integrating the outputs of IdentityNet (which are \"residual features\") into personalized image synthesis, the Face Masks ([mask1]) serve to **accurately localize facial regions from the given pose**. This localization is crucial for **modulating the residual features from IdentityNet**, ensuring that the identity information is applied precisely to the face areas. This process ultimately helps to **ensure precise identity preservation and enhance the overall image quality** of the synthesized personalized image.\n\nThe Face Landmarks, also part of [mask1], serve as an input to the IdentityNet itself for generating these residual features."
    },
    {
        "question": "How does SCNet scale and integrate SMPLx depth-based residual features into UNet feature blocks?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "We then obtain residual features r^i generated from the shared IdentityNet [71], r^i = IdentityNet(f^i, ℓ^i), given face embeddings f^i and face landmarks ℓ^i. ... Also the residual feature r^s is generated with SCNet S_net, given text t and D derived from β and P.",
            "Let U_l represent the l-th neural block and h_l the l-th input feature map. We obtain h'_l by adding these residual features to h_l, scaled by their respective conditioning weights λ_face and λ_shape, and modulated by face masks M_face."
        ],
        "final_answer": "SCNet processes the SMPLx depth map (along with the text prompt) to produce a set of per-block residual feature maps r^s. During diffusion, each residual r^s_l is added into the corresponding UNet block’s feature map h_l. Before addition, the SCNet residuals are multiplied by a learnable shape-conditioning weight λ_shape. Formally, for each block l: h’_l = h_l + λ_face·M_face⊙r^i_l + λ_shape·r^s_l.",
        "relevant_elements": [
            "SCNet",
            "SMPLx depth map",
            "UNet"
        ],
        "id": 462,
        "masked_question": "How does [mask1] scale and integrate [mask2] residual features into UNet feature blocks?",
        "masked_number": 2,
        "masked_elements": [
            "SCNet",
            "SMPLx depth map"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.18068v1_figure_2.png",
        "paperid": "2411.18068v1",
        "paper_path": "./papers/2411.18068v1.json",
        "figure_id": "2411.18068v1_figure_2.png",
        "caption": "Figure 2: Overview of PersonaCraft. We extract face and body embeddings from reference images, then perform personalized image synthesis using controllable modules for face identity and body shape customization. Our method applies 3D-aware pose conditioning with SMPLx-ControlNet (SCNet) to generate occlusion-robust images that accurately reflect body shapes.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does latent Wasserstein adversarial training stabilize the reward model within the WAE framework?",
        "relevant_section_ids": [
            "1",
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "To develop the first strategy, we propose to stabilize the reward learning by applying Wasserstein adversarial training within the latent space of the Wasserstein Auto-Encoder (WAE) [46]. Similar to VAE [26], WAE keeps the good properties of stable training and a nice latent manifold structure while generating higher-quality images than GAN [46]. Therefore, we propose to apply WAE to enable a more stable training of reward model in adversarial QDIL. In addition, we propose latent Wasserstein adversarial training to further improve the consistency of the reward training stability. (Section 1)",
            "Specifically, WAE-GAN uses an adversary and discriminator in the latent space Z trying to separate \"true\" points sampled from Q_Z and \"fake\" ones sampled from Q_{Z_θ} [19]. In the imitation learning setting, Q_Z corresponds to the distribution of latent data obtained from the encoded demonstrations while Q_{Z_θ} corresponds to the distribution of latent data obtained from the encoded trajectory data from the policy. Analogously, we propose WAE-WGAN, which is equivalent to WAE-GAN except that it sets the divergence measure to the 1-Wasserstein distance, i.e. D = D_W. We choose this option based on results on the improved stability during adversarial training [2]. (Section 3.2)",
            "To further improve WAE-GAIL, we propose to apply Wasserstein adversarial training in the latent space of WAE, which is analogous to the WAE-WGAN proposed in Section 3.2. (Section 3.3)"
        ],
        "final_answer": "Latent Wasserstein adversarial training stabilizes the reward model by carrying out the adversarial game not on raw states and actions but in the WAE’s latent space, and by using the Wasserstein distance (instead of the Jensen–Shannon divergence) as the training objective. This leverages WAE’s inherently stable encoder–decoder structure and its well-behaved latent manifold, leading to more consistent discriminator updates and thus a more stable learned reward function.",
        "relevant_elements": [
            "WAE",
            "latent Wasserstein adversarial training",
            "reward model"
        ],
        "id": 464,
        "masked_question": "How does latent Wasserstein adversarial training stabilize the reward model within the [mask1] framework?",
        "masked_number": 1,
        "masked_elements": [
            "WAE"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.06965v1_figure_1.png",
        "paperid": "2411.06965v1",
        "paper_path": "./papers/2411.06965v1.json",
        "figure_id": "2411.06965v1_figure_1.png",
        "caption": "Figure 1: Illustrations of the two issues of the Adversarial QDIL (i.e., training instability and behavior-overfitted reward) and their corresponding solutions (i.e. WQDIL and Single-Step Archive Exploration). δ⁢(s)𝛿𝑠\\delta(s)italic_δ ( italic_s ) means the Markovian Measure Proxy of state s𝑠sitalic_s, a.k.a. the single-step measure.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the Single-Step Archive Exploration module integrate its bonus into QDRL updates?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "For the exploration bonus, we establish the single-step archive A*, which corresponds to the state-dependent measure δ(s). Similar to the behavior archive A, we partition Ω into numerous cells for discretization. Notably, instead of merely recording whether a cell is occupied, we track the visitation count n_i for each cell i in A*. The exploration reward bonus is defined as:\n\n    r_exp(s) = 1 / (n_{c(δ(s))} + 1)\n\nEach time a state s activates a cell in A*, the visitation count of that cell is incremented by one. This mechanism allows the single-step archive A* to be dynamically updated during training.",
            "The exploration bonus assigns higher rewards to regions in Ω that are less frequently visited, thereby promoting the agent to explore unseen behavior patterns. Additionally, once a region within the single-step behavior space has been sufficiently explored, the bonus decreases, facilitating the exploitation of that region to discover high-performing policies."
        ],
        "final_answer": "The Single-Step Archive Exploration module keeps a visitation count for each cell in a discretized, state-dependent measure space and computes an exploration bonus r_exp(s)=1/(n_{c(δ(s))}+1). This bonus is simply added to the reward used by the QDRL algorithm (e.g., PPGA) at each update, thereby integrating exploration incentives directly into the policy optimization.",
        "relevant_elements": [
            "Single-Step Archive Exploration",
            "QDRL"
        ],
        "id": 465,
        "masked_question": "How does the [mask1] module integrate its bonus into [mask2] updates?",
        "masked_number": 2,
        "masked_elements": [
            "Single-Step Archive Exploration",
            "QDRL"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.06965v1_figure_1.png",
        "paperid": "2411.06965v1",
        "paper_path": "./papers/2411.06965v1.json",
        "figure_id": "2411.06965v1_figure_1.png",
        "caption": "Figure 1: Illustrations of the two issues of the Adversarial QDIL (i.e., training instability and behavior-overfitted reward) and their corresponding solutions (i.e. WQDIL and Single-Step Archive Exploration). δ⁢(s)𝛿𝑠\\delta(s)italic_δ ( italic_s ) means the Markovian Measure Proxy of state s𝑠sitalic_s, a.k.a. the single-step measure.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does WAE + Latent Wasserstein Adversarial Training stabilize the reward model compared to adversarial IL?",
        "relevant_section_ids": [
            "1",
            "2.4",
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "To develop the first strategy, we propose to stabilize the reward learning by applying Wasserstein adversarial training within the latent space of the Wasserstein Auto-Encoder (WAE) [46].",
            "Similar to VAE [26], WAE keeps the good properties of stable training and a nice latent manifold structure while generating higher-quality images than GAN [46].",
            "Using the squared cost, WAE keeps the good properties of VAEs (stable training, and a nice latent manifold structure) while generating better-quality images than GAN [46].",
            "This observation inspired us to apply WAE in improving the stability of adversarial QDIL.",
            "We choose this option based on results on the improved stability during adversarial training [2].",
            "To further improve WAE-GAIL, we propose to apply Wasserstein adversarial training in the latent space of WAE, which is analogous to the WAE-WGAN proposed in Section 3.2."
        ],
        "final_answer": "By encoding state–action pairs into the WAE’s latent space and then using a Wasserstein‐based adversarial loss there (instead of the standard GAN’s JS divergence), the reward discriminator benefits from the WAE’s inherently stable training and well‐structured latent manifold.  Imposing the Wasserstein distance (with Lipschitz‐constrained critics) in latent space yields smoother, more reliable gradients and more consistent discriminator updates.  As a result, the learned reward model is far more stable than in vanilla adversarial IL.",
        "relevant_elements": [
            "WAE + Latent Wasserstein Adversarial Training",
            "Reward model"
        ],
        "id": 466,
        "masked_question": "How does [mask1] stabilize the [mask2] compared to adversarial IL?",
        "masked_number": 2,
        "masked_elements": [
            "WAE + Latent Wasserstein Adversarial Training",
            "Reward model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.06965v1_figure_1.png",
        "paperid": "2411.06965v1",
        "paper_path": "./papers/2411.06965v1.json",
        "figure_id": "2411.06965v1_figure_1.png",
        "caption": "Figure 1: Illustrations of the two issues of the Adversarial QDIL (i.e., training instability and behavior-overfitted reward) and their corresponding solutions (i.e. WQDIL and Single-Step Archive Exploration). δ⁢(s)𝛿𝑠\\delta(s)italic_δ ( italic_s ) means the Markovian Measure Proxy of state s𝑠sitalic_s, a.k.a. the single-step measure.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Single-Step Archive Exploration interact with QDRL methods to mitigate behavior-overfitted rewards in adversarial IL?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "For the exploration bonus, we establish the single-step archive 𝓔, which corresponds to the state-dependent measure φ(s). Similar to the behavior archive, we partition 𝓔 into numerous cells for discretization. Notably, instead of merely recording whether a cell is occupied, we track the visitation count N_i for each cell c_i in 𝓔. The exploration reward bonus is defined as:\n    r_bonus(s) = 1 / sqrt(N_{φ(s)})\nEach time a state s activates a cell in 𝓔, the visitation count of that cell is incremented by one. This mechanism allows the single-step archive 𝓔 to be dynamically updated during training.",
            "The exploration bonus assigns higher rewards to regions in 𝓔 that are less frequently visited, thereby promoting the agent to explore unseen behavior patterns. Additionally, once a region within the single-step behavior space has been sufficiently explored, the bonus decreases, facilitating the exploitation of that region to discover high-performing policies. However, note that the bonus is defined relative to the exploration of other measures such that the bonus never shrinks to zero for a particular measure. With these features together, the reward bonus can effectively mitigate the “behavior-overfitted reward” issue by always encouraging new behavior patterns, thus facilitating diverse behaviors."
        ],
        "final_answer": "Single‐Step Archive Exploration augments the adversarially learned reward in a QDRL loop (e.g. PPGA) with a behavior‐space exploration bonus r_bonus(s)=1/√N_{φ(s)} based on a single‐step measure archive.  QDRL methods then optimize policies using the combined reward r_adversarial + r_bonus.  By giving higher reward to under‐visited single‐step measure cells—and never letting the bonus vanish—this mechanism continually pushes the policy toward new behaviors and prevents the discriminator’s reward model from overfitting to the limited demonstrated behaviors, thereby yielding more diverse policies.",
        "relevant_elements": [
            "Single-Step Archive Exploration",
            "QDRL"
        ],
        "id": 467,
        "masked_question": "How does [mask1] interact with QDRL methods to mitigate behavior-overfitted rewards in adversarial IL?",
        "masked_number": 1,
        "masked_elements": [
            "Single-Step Archive Exploration"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.06965v1_figure_1.png",
        "paperid": "2411.06965v1",
        "paper_path": "./papers/2411.06965v1.json",
        "figure_id": "2411.06965v1_figure_1.png",
        "caption": "Figure 1: Illustrations of the two issues of the Adversarial QDIL (i.e., training instability and behavior-overfitted reward) and their corresponding solutions (i.e. WQDIL and Single-Step Archive Exploration). δ⁢(s)𝛿𝑠\\delta(s)italic_δ ( italic_s ) means the Markovian Measure Proxy of state s𝑠sitalic_s, a.k.a. the single-step measure.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does channel mean shift optimize init color noise to enable controlled chroma background without fine-tuning?",
        "relevant_section_ids": [
            "3.1",
            "4.1"
        ],
        "relevant_context": [
            "Inspired by the relationship between Stable Diffusion’s latent space and generated image color [45], we introduce a novel initial noise optimization technique, channel mean shift. It adjusts the mean of each channel in z_T while keeping its standard deviation constant, enabling control over the generated image’s color. ... To achieve p_i, we iteratively adjust the mean shift s_i for each channel. We initialize the shift with 0 and incrementally adjust s_i until the positive ratio meets or exceeds p_i. Once the target ratio is reached, we record the final shift as s_i*. The noise tensor obtained through this method is called init color noise z_T*.",
            "Inspired by previous research [45], we control the chroma key background color by applying channel mean shift to specific channels of the initial noise z_T. Specifically, we adjust the mean of each channel s_i, where i ∈ {1,2,3}, to influence the color composition of the generated images. In this experiment, we set p_i = 0.8, adjusting the positive ratio of each channel by adding or subtracting s_i relative to 0.5."
        ],
        "final_answer": "Channel mean shift optimizes the init color noise by iteratively adjusting the mean of each noise channel (while preserving its standard deviation) until a user-specified target positive ratio is met. This produces a modified noise tensor (init color noise) that, when fed into Stable Diffusion, yields a uniform, user-controlled chroma key background without any model fine-tuning.",
        "relevant_elements": [
            "Channel Mean Shift",
            "Init Color Noise"
        ],
        "id": 470,
        "masked_question": "How does [mask1] optimize init color noise to enable controlled chroma background without fine-tuning?",
        "masked_number": 1,
        "masked_elements": [
            "Channel Mean Shift"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15580v1_figure_2.png",
        "paperid": "2411.15580v1",
        "paper_path": "./papers/2411.15580v1.json",
        "figure_id": "2411.15580v1_figure_2.png",
        "caption": "Figure 2: Starting with random noise 𝐳T∼𝒩⁢(𝟎,𝐈)similar-tosubscript𝐳𝑇𝒩0𝐈\\mathbf{z}_{T}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})bold_z start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT ∼ caligraphic_N ( bold_0 , bold_I ), init color noise 𝐳T∗superscriptsubscript𝐳𝑇\\mathbf{z}_{T}^{*}bold_z start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT is generated by applying channel mean shift Fcsubscript𝐹𝑐F_{c}italic_F start_POSTSUBSCRIPT italic_c end_POSTSUBSCRIPT. This produces a single-colored image 𝐱0∗superscriptsubscript𝐱0\\mathbf{x}_{0}^{*}bold_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT without a prompt. By combining normal noise with init color noise via a Gaussian mask, TKG-DM generates a chroma key image 𝐱0k⁢e⁢ysuperscriptsubscript𝐱0𝑘𝑒𝑦\\mathbf{x}_{0}^{key}bold_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_k italic_e italic_y end_POSTSUPERSCRIPT with the specified foreground (e.g., “the cat runs in the park”) over a uniform background, effectively separating the foreground from the monochromatic background.",
        "qtype": "Experimental_Results",
        "response": "The [mask1], labeled as \"Channel Mean Shift\", optimizes the initial noise (`z_T`) to enable controlled chroma background without fine-tuning through the following steps:\n\n1.  **Channel Mean Adjustment:** It adjusts the mean (`s_c`) of each channel in the initial Gaussian noise (`z_T`) while keeping its standard deviation constant.\n2.  **Target Positive Ratio:** This adjustment is performed iteratively until a desired \"target positive ratio\" (proportion of positive values) is met for each channel. This ratio directly"
    },
    {
        "question": "How does Gaussian mask blending of normal noise and init color noise isolate foreground content generation?",
        "relevant_section_ids": [
            "3.2",
            "4.2"
        ],
        "relevant_context": [
            "Section 3.2: “To generate the foreground object on the chroma key background, we apply an init noise selection strategy that selectively combines the initial noise z_T and the init color noise z_T* using a 2D Gaussian mask M. This mask creates a gradual transition by preserving the original noise in the foreground region and applying the color-shifted noise to the background region.”",
            "Section 4.2: “For the foreground, self-attention ensures internal consistency and coherence within the object, while cross-attention aligns the generated content with the text prompt. … For the background, the init color noise introduced by channel mean shift dominates the generation process. … Cross-attention has a weaker influence on the background, allowing the init color noise to take precedence. … By exploiting this bias and manipulating the initial noise, TKG-DM effectively decouples the background from the text prompt. This results in a uniform chroma key background and enables the isolated generation of foreground content without interference from undesired background details.”"
        ],
        "final_answer": "TKG-DM multiplies the normal noise tensor (which carries the text-prompt signal) and the color-shifted noise tensor by complementary Gaussian masks. In the central (foreground) region the mask is near one, so the model sees the original noise and thus generates the prompt-aligned object there. In the outer (background) region the mask is near zero, so the model only sees the init color noise and produces a uniform chroma key background. This spatial blending isolates foreground generation from the background and prevents text-driven content from appearing outside the masked region.",
        "relevant_elements": [
            "Gaussian mask",
            "Normal Noise",
            "Init Color Noise"
        ],
        "id": 471,
        "masked_question": "How does [mask1] blending of normal noise and init color noise isolate foreground content generation?",
        "masked_number": 1,
        "masked_elements": [
            "Gaussian mask"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15580v1_figure_2.png",
        "paperid": "2411.15580v1",
        "paper_path": "./papers/2411.15580v1.json",
        "figure_id": "2411.15580v1_figure_2.png",
        "caption": "Figure 2: Starting with random noise 𝐳T∼𝒩⁢(𝟎,𝐈)similar-tosubscript𝐳𝑇𝒩0𝐈\\mathbf{z}_{T}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})bold_z start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT ∼ caligraphic_N ( bold_0 , bold_I ), init color noise 𝐳T∗superscriptsubscript𝐳𝑇\\mathbf{z}_{T}^{*}bold_z start_POSTSUBSCRIPT italic_T end_POSTSUBSCRIPT start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT is generated by applying channel mean shift Fcsubscript𝐹𝑐F_{c}italic_F start_POSTSUBSCRIPT italic_c end_POSTSUBSCRIPT. This produces a single-colored image 𝐱0∗superscriptsubscript𝐱0\\mathbf{x}_{0}^{*}bold_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT ∗ end_POSTSUPERSCRIPT without a prompt. By combining normal noise with init color noise via a Gaussian mask, TKG-DM generates a chroma key image 𝐱0k⁢e⁢ysuperscriptsubscript𝐱0𝑘𝑒𝑦\\mathbf{x}_{0}^{key}bold_x start_POSTSUBSCRIPT 0 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_k italic_e italic_y end_POSTSUPERSCRIPT with the specified foreground (e.g., “the cat runs in the park”) over a uniform background, effectively separating the foreground from the monochromatic background.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How did removing the delta encoder's cross-attention module affect performance on out-of-domain sequences?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "delta encoder",
            "cross-attention"
        ],
        "id": 472,
        "masked_question": "How did removing the [mask1]'s [mask2] module affect performance on out-of-domain sequences?",
        "masked_number": 2,
        "masked_elements": [
            "delta encoder",
            "cross-attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.22949v1_figure_1.png",
        "paperid": "2410.22949v1",
        "paper_path": "./papers/2410.22949v1.json",
        "figure_id": "2410.22949v1_figure_1.png",
        "caption": "Figure 1: Model architecture of MutaPLM. (a) The encoding branch of the protein delta network. The delta encoder takes the subtraction of the PLM representations of the mutant and wild-type as inputs to generate zΔsubscript𝑧Δz_{\\Delta}italic_z start_POSTSUBSCRIPT roman_Δ end_POSTSUBSCRIPT. (b) The decoding branch of the protein delta network. The key components involve a delta decoder that reconstructs mutant features and two prediction heads deciding the position and amino acid of the mutation.",
        "qtype": "Experimental_Results",
        "response": "Unanswerable."
    },
    {
        "question": "What limitations might arise from fixed query features in the delta encoder’s cross attention mechanism?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "delta encoder",
            "cross attention"
        ],
        "id": 474,
        "masked_question": "What limitations might arise from fixed query features in the [mask1]’s [mask2] mechanism?",
        "masked_number": 2,
        "masked_elements": [
            "delta encoder",
            "cross attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.22949v1_figure_1.png",
        "paperid": "2410.22949v1",
        "paper_path": "./papers/2410.22949v1.json",
        "figure_id": "2410.22949v1_figure_1.png",
        "caption": "Figure 1: Model architecture of MutaPLM. (a) The encoding branch of the protein delta network. The delta encoder takes the subtraction of the PLM representations of the mutant and wild-type as inputs to generate zΔsubscript𝑧Δz_{\\Delta}italic_z start_POSTSUBSCRIPT roman_Δ end_POSTSUBSCRIPT. (b) The decoding branch of the protein delta network. The key components involve a delta decoder that reconstructs mutant features and two prediction heads deciding the position and amino acid of the mutation.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What ethical concerns emerge from integrating soft embeds with LLM for guided mutation generation?",
        "relevant_section_ids": [
            "3.1",
            "5"
        ],
        "relevant_context": [
            "To facilitate text-based protein engineering, we maintain N trainable soft tokens, which are appended to the input token embeddings of the LLM to summarize textual semantics. The output representations of the soft tokens are processed by the delta decoder to generate mutations.",
            "While MutaPLM bears promise in mutation explanation and engineering, we emphasize safety concerns that it can be misused to generate pathogenic mutations and harmful bio-agents. Hence, we declare that MutaPLM, upon public release, should be restricted to research purposes, and any further applications should undergo comprehensive experiments and human inspections."
        ],
        "final_answer": "By integrating learnable soft embeddings with an LLM to guide mutation generation, the system could be misused to design pathogenic mutations or harmful biological agents, raising serious biosafety and biosecurity concerns.",
        "relevant_elements": [
            "soft embeds",
            "LLM"
        ],
        "id": 475,
        "masked_question": "What ethical concerns emerge from integrating [mask1] with [mask2] for guided mutation generation?",
        "masked_number": 2,
        "masked_elements": [
            "soft embeds",
            "LLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.22949v1_figure_1.png",
        "paperid": "2410.22949v1",
        "paper_path": "./papers/2410.22949v1.json",
        "figure_id": "2410.22949v1_figure_1.png",
        "caption": "Figure 1: Model architecture of MutaPLM. (a) The encoding branch of the protein delta network. The delta encoder takes the subtraction of the PLM representations of the mutant and wild-type as inputs to generate zΔsubscript𝑧Δz_{\\Delta}italic_z start_POSTSUBSCRIPT roman_Δ end_POSTSUBSCRIPT. (b) The decoding branch of the protein delta network. The key components involve a delta decoder that reconstructs mutant features and two prediction heads deciding the position and amino acid of the mutation.",
        "qtype": "Others",
        "response": "The integration of \"Soft Embeds\" (trainable soft tokens appended to the LLM's input) with the \"LLM\" for guided mutation generation poses the ethical concern that the system could be **misused to generate pathogenic mutations and harmful bio-agents**. The paper explicitly states under \"Limitations and Broader Impacts\" that \"While MutaPLM bears promise in mutation explanation and engineering, we emphasize safety concerns that it can be misused to generate pathogenic mutations and harmful bio-agents.\" This capability of generating mutations is facilitated by the interaction between the soft embeds, the LLM, and the delta decoder."
    },
    {
        "question": "What are the risks of misclassification by LLMs Material Reasoning on physical property assignment?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "LLMs Material Reasoning"
        ],
        "id": 476,
        "masked_question": "What are the risks of misclassification by [mask1] on physical property assignment?",
        "masked_number": 1,
        "masked_elements": [
            "LLMs Material Reasoning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.16800v2_figure_2.png",
        "paperid": "2411.16800v2",
        "paper_path": "./papers/2411.16800v2.json",
        "figure_id": "2411.16800v2_figure_2.png",
        "caption": "Figure 2: Framework of Phys4DGen.\nIn 3D Gaussians Generation stage, from an input image, a static 3D Gaussians will be generated under the guidance of the diffusion model.\nIn Physcial Perception stage, the 3D Gaussians will be segmented into different parts, with corresponding material types and properties assigned to each.\nIn 4D Dynamics Generation stage, we consider each 3D Gaussian kernel as particles within a continuum. Sequentially, we employ MPM to generate dynamics to the static 3D Gaussians. Meanwhile, users can guide the MPM simulator to generate 4D content that aligns with their desired outcomes by adjusting the external forces.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative simulation algorithms could improve Particle-Based Simulator outcomes under external forces?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Particle-Based Simulator",
            "External Force"
        ],
        "id": 477,
        "masked_question": "What alternative simulation algorithms could improve [mask1] outcomes under [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Particle-Based Simulator",
            "External Force"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.16800v2_figure_2.png",
        "paperid": "2411.16800v2",
        "paper_path": "./papers/2411.16800v2.json",
        "figure_id": "2411.16800v2_figure_2.png",
        "caption": "Figure 2: Framework of Phys4DGen.\nIn 3D Gaussians Generation stage, from an input image, a static 3D Gaussians will be generated under the guidance of the diffusion model.\nIn Physcial Perception stage, the 3D Gaussians will be segmented into different parts, with corresponding material types and properties assigned to each.\nIn 4D Dynamics Generation stage, we consider each 3D Gaussian kernel as particles within a continuum. Sequentially, we employ MPM to generate dynamics to the static 3D Gaussians. Meanwhile, users can guide the MPM simulator to generate 4D content that aligns with their desired outcomes by adjusting the external forces.",
        "qtype": "Others",
        "response": "The paper states in the \"4D Dynamics Generation\" section, under \"3.3.2 Dynamics Generation\": \"Phys4DGen can integrate **any particle-based physical simulation algorithm**. In this paper, we use the Material"
    },
    {
        "question": "What is the rationale for aligning segmentation maps with CLIP Fusion in the Physical Perception Module?",
        "relevant_section_ids": [
            "3.2.1"
        ],
        "relevant_context": [
            "CLIP Fusion. However, the 2D segmentation maps are generated independently, lacking connections between the maps of different images.",
            "To ensure consistency with the material groups defined by the input image, we align the segmentation maps of the rendered sequence with the input image’s segmentation map."
        ],
        "final_answer": "Because the segmentation maps of the input image and those of the rendered views are produced independently and thus lack a shared grouping, CLIP Fusion is used to align the rendered sequence’s maps to the input image’s segmentation. This guarantees that all maps share the same material‐group definitions derived from the input image.",
        "relevant_elements": [
            "CLIP Fusion",
            "Physical Perception Module"
        ],
        "id": 479,
        "masked_question": "What is the rationale for aligning segmentation maps with [mask1] in the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "CLIP Fusion",
            "Physical Perception Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.16800v2_figure_2.png",
        "paperid": "2411.16800v2",
        "paper_path": "./papers/2411.16800v2.json",
        "figure_id": "2411.16800v2_figure_2.png",
        "caption": "Figure 2: Framework of Phys4DGen.\nIn 3D Gaussians Generation stage, from an input image, a static 3D Gaussians will be generated under the guidance of the diffusion model.\nIn Physcial Perception stage, the 3D Gaussians will be segmented into different parts, with corresponding material types and properties assigned to each.\nIn 4D Dynamics Generation stage, we consider each 3D Gaussian kernel as particles within a continuum. Sequentially, we employ MPM to generate dynamics to the static 3D Gaussians. Meanwhile, users can guide the MPM simulator to generate 4D content that aligns with their desired outcomes by adjusting the external forces.",
        "qtype": "Design_Rationale",
        "response": "The rationale for aligning segmentation maps with [mask1] (CLIP Fusion) in the [mask2] (Physical Perception Module) is to **ensure consistency of material groups**.\n\nSpecifically, the \"CLIP Fusion\" sub-module (within \"Material Segmentation\") addresses the issue that 2D segmentation maps, generated independently for the input image ($\\mathcal{M}_I$) and the rendered image sequence ($\\mathcal{M}_s$), lack connections between them. By aligning the segmentation maps of the rendered sequence with the input image's segmentation map using CLIP features, the process ensures that the material groups identified across different views are consistent with those defined by the input image. This consistency is crucial for accurately assigning material types and properties to the 3D Gaussian kernels."
    },
    {
        "question": "What motivates implementing bidirectional STDP between Emotional Regions and Mirror Neuron System?",
        "relevant_section_ids": [
            "3.2.1"
        ],
        "relevant_context": [
            "Due to the strict temporal correlation between emotions and external action and perception, the connections between the three clusters of neurons are strengthened.",
            "Since the connections between the modules are bidirectional, it will be interactively and repeatedly facilitated to enhance the bidirectional connection weights. Therefore, we utilize spiking neural networks [56] to model the connections among the emotional brain region, mirror neuron system, and perceptual brain region, with Spike-Timing-Dependent Plasticity (STDP) [57] employed to facilitate learning of temporal sequence-dependent associations."
        ],
        "final_answer": "The strict temporal correlations among emotional activations, mirror-neuron-driven actions, and perceptions motivate using bidirectional STDP so that these inter-regional connections can be interactively and repeatedly strengthened in both directions, embedding the temporal sequence-dependent associations necessary for affective empathy.",
        "relevant_elements": [
            "Emotional Regions",
            "Mirror Neuron System",
            "STDP"
        ],
        "id": 480,
        "masked_question": "What motivates implementing bidirectional [mask1] between [mask2] and Mirror Neuron System?",
        "masked_number": 2,
        "masked_elements": [
            "STDP",
            "Emotional Regions"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.21882v1_figure_1.png",
        "paperid": "2410.21882v1",
        "paper_path": "./papers/2410.21882v1.json",
        "figure_id": "2410.21882v1_figure_1.png",
        "caption": "Figure 1: The procedure of brain-inspired affective empathy-driven moral decision-making algorithm.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does dopamine influence R-STDP updates within the Moral Decision-making Module to reinforce altruistic actions?",
        "relevant_section_ids": [
            "3.1.2",
            "3.2.3"
        ],
        "relevant_context": [
            "In the Ventral Tegmental Area (VTA) [55], dopamine encodes both the agent’s own goals and intrinsic empathy reward, combining with moral utilitarianism theories to form a regulatory factor that prioritizes altruism. Under the modulation of dopamine, the agent continuously interacts with the environment, empathizing with others’ emotional states and learning spontaneously altruistic moral behaviors.",
            "Only when altruistic behaviors are performed that the negative emotions of others are alleviated, which in turn eases one’s own empathically felt negative emotions, resulting in an increase in dopamine levels in the brain and reinforcing the altruistic behavior.",
            "In this paper, we use reward-modulated STDP (R-STDP) [62] to adjust the connection weights between state and action neurons, thereby optimize the moral decision-making strategy. R-STDP uses synaptic eligibility trace to store temporary information of STDP. The eligibility trace accumulates the STDP and decays with a time constant. Then, synaptic weights are updated when a delayed reward R is received, as Eq. 9 shown."
        ],
        "final_answer": "Dopamine functions as the delayed reward signal R in the R‐STDP rule. When the agent’s altruistic action successfully alleviates another’s negative emotion, this increases dopamine levels (the intrinsic empathy reward). The positive dopamine signal then gates the R‐STDP update by multiplying the accumulated eligibility traces, thereby strengthening the synaptic connections that led to the altruistic action and reinforcing that behavior.",
        "relevant_elements": [
            "Dopamine",
            "R-STDP"
        ],
        "id": 483,
        "masked_question": "How does [mask1] influence R-STDP updates within the Moral Decision-making Module to reinforce altruistic actions?",
        "masked_number": 1,
        "masked_elements": [
            "Dopamine"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.21882v1_figure_1.png",
        "paperid": "2410.21882v1",
        "paper_path": "./papers/2410.21882v1.json",
        "figure_id": "2410.21882v1_figure_1.png",
        "caption": "Figure 1: The procedure of brain-inspired affective empathy-driven moral decision-making algorithm.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does privacy-preserving knowledge extraction integrate Gaussian noise into GAT layer embeddings?",
        "relevant_section_ids": [
            "3.2.2"
        ],
        "relevant_context": [
            "In existing CDR frameworks, the user or item embedding was shared as knowledge [9;15;6], which neglects inter-domain privacy. In a GNN-based approach, such direct transfers are subject to privacy attacks. Each message propagation layer can be viewed as a function with user and item embeddings as input. An attacker can easily obtain the user's private rating matrix based on these embeddings. We apply DP to the source domain embeddings E_s [22;45] to safeguard inter-domain privacy.",
            "theorem 1. By perturbing the source domain embeddings with Gaussian noise, the reconstructed data of the ideal attack deviates from the real data and prevents a perfect reconstruction.",
            "In FedGCDR, we adopt the Gaussian mechanism to the source domain embedding E_s^l to obtain \\widetilde{E}_s^l for knowledge transfer. Detailed privacy analysis is included in Appendix A."
        ],
        "final_answer": "FedGCDR applies the Gaussian mechanism from differential privacy directly to each source‐domain GAT layer embedding E_s^l by adding Gaussian noise, thereby producing a perturbed embedding \\widetilde{E}_s^l that is used for cross-domain knowledge transfer and prevents perfect reconstruction of the original private data.",
        "relevant_elements": [
            "Privacy-preserving Knowledge Extraction",
            "Gaussian Noise",
            "GAT Layer"
        ],
        "id": 484,
        "masked_question": "How does [mask1] integrate Gaussian noise into GAT layer embeddings?",
        "masked_number": 1,
        "masked_elements": [
            "Privacy-preserving Knowledge Extraction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.08249v2_figure_2.png",
        "paperid": "2410.08249v2",
        "paper_path": "./papers/2410.08249v2.json",
        "figure_id": "2410.08249v2_figure_2.png",
        "caption": "Figure 2: An overview of FedGCDR. It consists of two key modules and follows a HVH pipeline: (1) Source Domain Training (Horizontal FL): ① Each source domain maintains its graph attention network (GAT)-based federated model. (2) Positive Knowledge Transfer Module (Vertical FL): ② Source domain embeddings are extracted from GAT layers and perturbed with Gaussian noise. ③ The multilayer perceptron aligns the feature space of source domain embeddings and target domain embeddings. (3) Positive Knowledge Activation Module (Horizontal FL): ④ Local graph is expanded with source domain embeddings. ⑤ Enhanced federated training of the target domain is achieved through the expanded graph. ⑥ The target domain maintains its GAT-based federated model. ⑦ The target domain freezes the GAT layer and fine tunes the model.",
        "qtype": "Implementation_Details",
        "response": "The \"Privacy-preserving Knowledge Extraction\" module integrates Gaussian noise into GAT layer embeddings by **extracting source domain embeddings from the GAT layers and then perturbing these extracted embeddings with Gaussian noise**. This process is signified by \"⊕ Gaussian Noise\" (step ② in the diagram) and results in \"Source Domain Embeddings with DP\". The Gaussian mechanism is adopted to safeguard inter-domain privacy, making the reconstructed data from ideal attacks deviate from the real data."
    },
    {
        "question": "How does graph expansion incorporate source embeddings for attention computation during target domain training?",
        "relevant_section_ids": [
            "3.2.3"
        ],
        "relevant_context": [
            "First, we expand ’s (Mary’s) local graph of the target domain as shown in Figure 3. For the source domain embedding matrices , we represent them as  virtual users. Since the virtual users constructed from source domain embeddings represent the same individual , they share correlated preferences, with their features (i.e., embeddings) characterizing ’s preferences. Inspired by social recommendation [48; 49; 50], we consider that there is a implicit social relationship between virtual users and the actual user , because of the correlation in their preferences. Then, we build virtual social links between them to expand the original target domain graph.",
            "Second, by incorporating this expanded graph into target domain training, the GAT model generates corresponding attention coefficients for the virtual users, which can be interpreted as domain-specific attentions."
        ],
        "final_answer": "Graph expansion takes each source-domain embedding matrix and treats it as a \"virtual user,\" then connects these virtual users to the real target-domain user via implicit social links. During target-domain training on this enlarged graph, a GAT computes attention coefficients on the edges between the user and each virtual user; those attention scores serve as domain‐specific attentions that weight how much each source embedding contributes.",
        "relevant_elements": [
            "Graph Expansion",
            "GAT Layer N",
            "Target Domain Training"
        ],
        "id": 485,
        "masked_question": "How does [mask1] incorporate source embeddings for attention computation during [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Graph Expansion",
            "Target Domain Training"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.08249v2_figure_2.png",
        "paperid": "2410.08249v2",
        "paper_path": "./papers/2410.08249v2.json",
        "figure_id": "2410.08249v2_figure_2.png",
        "caption": "Figure 2: An overview of FedGCDR. It consists of two key modules and follows a HVH pipeline: (1) Source Domain Training (Horizontal FL): ① Each source domain maintains its graph attention network (GAT)-based federated model. (2) Positive Knowledge Transfer Module (Vertical FL): ② Source domain embeddings are extracted from GAT layers and perturbed with Gaussian noise. ③ The multilayer perceptron aligns the feature space of source domain embeddings and target domain embeddings. (3) Positive Knowledge Activation Module (Horizontal FL): ④ Local graph is expanded with source domain embeddings. ⑤ Enhanced federated training of the target domain is achieved through the expanded graph. ⑥ The target domain maintains its GAT-based federated model. ⑦ The target domain freezes the GAT layer and fine tunes the model.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the Positive Knowledge Transfer Module’s Gaussian perturbation on GAT Layer embeddings extend FL privacy methods?",
        "relevant_section_ids": [
            "3.2",
            "3.2.2"
        ],
        "relevant_context": [
            "Following the HVH pipeline, we achieve: (1) Privacy enhancement. The two horizontal stages can provide intra-domain privacy preservation, while we further ensure inter-domain privacy by applying DP to the vertical stage.",
            "In existing CDR frameworks, the user or item embedding was shared as knowledge [9;15;6], which neglects inter-domain privacy. In a GNN-based approach, such direct transfers are subject to privacy attacks. Each message propagation layer can be viewed as a function with user and item embeddings as input. An attacker can easily obtain the user’s private rating matrix based on these embeddings. We apply DP to the source domain embeddings E_s^u [22;45] to safeguard inter-domain privacy.",
            "Theorem 1. By perturbing the source domain embeddings with Gaussian noise, the reconstructed data of the ideal attack deviates from the real data and prevents a perfect reconstruction.",
            "In FedGCDR, we adopt the Gaussian mechanism to the source domain embedding E_s^u to obtain \\widetilde{E}_s^u for knowledge transfer."
        ],
        "final_answer": "Beyond standard horizontal FL’s protection of intra-domain gradients/models, FedGCDR’s Positive Knowledge Transfer Module injects Gaussian noise into each source domain’s GAT-layer embeddings (via the DP Gaussian mechanism) before sharing them across domains. This extension ensures inter-domain differential privacy, preventing an attacker from reconstructing users’ private ratings from the transferred embeddings.",
        "relevant_elements": [
            "Positive Knowledge Transfer Module",
            "GAT Layer"
        ],
        "id": 486,
        "masked_question": "How does the [mask1]’s Gaussian perturbation on GAT Layer embeddings extend FL privacy methods?",
        "masked_number": 1,
        "masked_elements": [
            "Positive Knowledge Transfer Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.08249v2_figure_2.png",
        "paperid": "2410.08249v2",
        "paper_path": "./papers/2410.08249v2.json",
        "figure_id": "2410.08249v2_figure_2.png",
        "caption": "Figure 2: An overview of FedGCDR. It consists of two key modules and follows a HVH pipeline: (1) Source Domain Training (Horizontal FL): ① Each source domain maintains its graph attention network (GAT)-based federated model. (2) Positive Knowledge Transfer Module (Vertical FL): ② Source domain embeddings are extracted from GAT layers and perturbed with Gaussian noise. ③ The multilayer perceptron aligns the feature space of source domain embeddings and target domain embeddings. (3) Positive Knowledge Activation Module (Horizontal FL): ④ Local graph is expanded with source domain embeddings. ⑤ Enhanced federated training of the target domain is achieved through the expanded graph. ⑥ The target domain maintains its GAT-based federated model. ⑦ The target domain freezes the GAT layer and fine tunes the model.",
        "qtype": "Literature_Background",
        "response": "The [mask1] refers to the \"Positive Knowledge Transfer Module (V)\".\n\nThe Gaussian perturbation on GAT Layer embeddings extends Federated Learning (FL) privacy methods as follows:\n\n1.  **Intra-domain vs. Inter-domain Privacy:** Standard horizontal FL (used in the initial and final stages of FedGCDR) primarily ensures *intra-domain* privacy by keeping raw user data decentralized on client devices and only exchanging model updates or gradients within a single domain.\n2.  **Addressing Inter-domain Privacy Gap:** When knowledge (specifically, user embeddings from GAT layers) is explicitly transferred *between* different source and target domains (the \"vertical stage\" or Positive Knowledge Transfer Module), there's a risk to *inter-domain* privacy. Direct transfer of these embeddings without protection can expose users' private rating matrices to privacy attacks, as an attacker could reconstruct the original data from the embeddings.\n3.  **Gaussian Perturbation as DP:** To mitigate this, FedGCDR applies Differential Privacy (DP) via Gaussian noise to the source domain embeddings before their transfer.\n4.  "
    },
    {
        "question": "How does Example Mining inform the motion imitator's focus on challenging motion samples via hard negative mining?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "As training progresses, the motion imitator gradually learns to imitate simple motion sequences. However, more challenging examples in the large-scale motion dataset may be overlooked, limiting the model's ability to handle difficult samples.",
            "To address this, we implement a Hard Negative Mining process that identifies motions where the physical simulator fails to imitate as hard samples.",
            "Specifically, a dynamic weight is assigned to each motion sequence in the input data, doubling whenever imitation fails.",
            "This process progressively increases the focus on challenging samples, guiding the imitator to effectively learn from difficult examples."
        ],
        "final_answer": "Example Mining implements a hard negative mining strategy in which any motion sequence that the physics simulator fails to imitate is marked as a hard sample and its associated weight is doubled. By dynamically increasing the weight of these challenging examples each time imitation fails, the imitator’s policy training progressively focuses more on difficult motions.",
        "relevant_elements": [
            "Example Mining",
            "Motion Imitator"
        ],
        "id": 488,
        "masked_question": "How does [mask1] inform the [mask2]'s focus on challenging motion samples via hard negative mining?",
        "masked_number": 2,
        "masked_elements": [
            "Example Mining",
            "Motion Imitator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.14951v1_figure_2.png",
        "paperid": "2411.14951v1",
        "paper_path": "./papers/2411.14951v1.json",
        "figure_id": "2411.14951v1_figure_2.png",
        "caption": "Figure 2: An overview of the Morph framework. Morph comprises a Motion Generator and a Motion Physics Refinement module. Morph employs a two-stage training process: Motion Physics Refinement module training and Motion Generator fine-tuning. And a Imitation Selection Operation is employed to ensure the motion quality after physics refinement.",
        "qtype": "Literature_Background",
        "response": "The \"Example Mining\" module (red box) learns and assigns dynamic weights to each motion sequence based on how well the \"Motion Imitator\" (blue box) performs. Specifically, if the \"Motion Imitator\" fails to imitate a particular motion sequence, the \"Example Mining\" process doubles the weight of that sample. This mechanism progressively increases the focus on these challenging samples (hard negatives), guiding the \"Motion Imitator\" to prioritize learning from and improving its performance on difficult motion examples that it previously struggled with."
    },
    {
        "question": "How does example mining adjust motion weights to improve failed-case handling in the motion imitator policy?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "As training progresses, the motion imitator gradually learns to imitate simple motion sequences. However, more challenging examples in the large-scale motion dataset may be overlooked, limiting the model’s ability to handle difficult samples. To address this, we implement a Hard Negative Mining process that identifies motions where the physical simulator fails to imitate as hard samples.",
            "Specifically, a dynamic weight is assigned to each motion sequence in the input data, doubling whenever imitation fails. This process progressively increases the focus on challenging samples, guiding the imitator to effectively learn from difficult examples."
        ],
        "final_answer": "Example mining (Hard Negative Mining) assigns a dynamic weight to each motion sequence and doubles that weight each time the simulator fails to imitate the sample, thereby increasing the policy’s focus on and improving handling of these challenging failed cases.",
        "relevant_elements": [
            "Example Mining",
            "Motion Imitator",
            "Policy"
        ],
        "id": 490,
        "masked_question": "How does [mask1] adjust motion weights to improve failed-case handling in the motion imitator policy?",
        "masked_number": 1,
        "masked_elements": [
            "Example Mining"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.14951v1_figure_2.png",
        "paperid": "2411.14951v1",
        "paper_path": "./papers/2411.14951v1.json",
        "figure_id": "2411.14951v1_figure_2.png",
        "caption": "Figure 2: An overview of the Morph framework. Morph comprises a Motion Generator and a Motion Physics Refinement module. Morph employs a two-stage training process: Motion Physics Refinement module training and Motion Generator fine-tuning. And a Imitation Selection Operation is employed to ensure the motion quality after physics refinement.",
        "qtype": "Experimental_Results",
        "response": "The [mask1], labeled as \"Example Mining,\" implements a \"Hard Negative Mining process.\" To improve failed-case handling in the motion imitator policy, it identifies motion sequences where the physical simulator fails to imitate the input motion. When such a failure occurs, a dynamic weight assigned to that specific motion sequence is doubled. This process progressively increases the focus on these challenging samples during training, guiding the motion imitator to effectively learn from and better handle difficult examples."
    },
    {
        "question": "How does the imitation selection operation filter non-grounded motions to refine training data for motion generator fine-tuning?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Notably, since the physical simulator cannot replicate non-grounded motions (e.g., sitting on a chair or swimming), such simulated motions may deviate from the true data distribution.",
            "To this end, we apply an Imitation Selection Operation to filter out simulated data of non-grounded motions. Specifically, we calculate the average per-joint position error (MPJPE) between the samples before and after physical optimization. A threshold δ is set to determine whether to accept the physically refined motion \\hat{x} (with δ_i ≤ δ) or input motions x (with δ_i > δ). The selected data is then paired with the original condition signals (e.g., text or music)."
        ],
        "final_answer": "The imitation selection operation computes the MPJPE between each motion before and after physics refinement and rejects any refined samples whose error exceeds a preset threshold δ. For each sequence, if its refinement MPJPE is below δ, the physics-refined version is kept; otherwise the original unrefined motion is used. This filters out non-grounded refinements and produces a large, physically plausible dataset for fine-tuning the motion generator.",
        "relevant_elements": [
            "Imitation Selection Operation",
            "Motion Generator"
        ],
        "id": 491,
        "masked_question": "How does the [mask1] operation filter non-grounded motions to refine training data for [mask2] fine-tuning?",
        "masked_number": 2,
        "masked_elements": [
            "Imitation Selection Operation",
            "Motion Generator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.14951v1_figure_2.png",
        "paperid": "2411.14951v1",
        "paper_path": "./papers/2411.14951v1.json",
        "figure_id": "2411.14951v1_figure_2.png",
        "caption": "Figure 2: An overview of the Morph framework. Morph comprises a Motion Generator and a Motion Physics Refinement module. Morph employs a two-stage training process: Motion Physics Refinement module training and Motion Generator fine-tuning. And a Imitation Selection Operation is employed to ensure the motion quality after physics refinement.",
        "qtype": "Experimental_Results",
        "response": "The `Imitation Selection` operation ([mask1]) filters non-grounded motions by calculating the average per-joint position error (MPJPE) between the original `Low-Quality Noisy Data` (input motion) and the `High-Quality Clean Data` (physically refined motion).\n\nIf the MPJPE exceeds a predefined threshold (γ), it indicates that the physical simulator likely failed to accurately replicate the motion (due to it being non-grounded, e.g., sitting or swimming) and significantly altered it. In such cases, the `Imitation Selection` operation accepts the **original input motion** instead of the problematic physically refined motion. Conversely, if the MPJPE is below or equal to the threshold, it means the physical refinement was successful, and the **physically refined motion** is"
    },
    {
        "question": "How does independent visual encoder maintain separate visual processing before fusion with linguistic features in the visual-linguistic transformer?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "In the Visual Branch, a CNN backbone first extracts a 2D feature map, followed by a stack of transformer encoder layers that generate a flattened sequence of visual features .",
            "Subsequently, we concatenate the visual and textual feature embeddings and appending a learnable token, [REG] token, as the inputs for the multi-modal decoder (Visual-Linguistic Transformer), which embeds the input tokens from different modalities into a aligned semantic space and perform intra- and inter-modal reasoning with the self-attention layers."
        ],
        "final_answer": "The model keeps visual processing independent by using a standalone Visual Branch—first applying a CNN backbone to produce a 2D feature map, then passing it through transformer encoder layers to get a flattened visual feature sequence. Only after these features are fully extracted are they concatenated with the separately computed textual embeddings (plus a [REG] token) and fed into the visual-linguistic transformer for fusion and reasoning.",
        "relevant_elements": [
            "Independent visual encoder",
            "Visual-Linguistic Transformer"
        ],
        "id": 492,
        "masked_question": "How does [mask1] maintain separate visual processing before fusion with linguistic features in the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Independent visual encoder",
            "Visual-Linguistic Transformer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.04999v1_figure_1.png",
        "paperid": "2409.04999v1",
        "paper_path": "./papers/2409.04999v1.json",
        "figure_id": "2409.04999v1_figure_1.png",
        "caption": "Figure 1. (a) Traditional visual grounding framework with independent visual encoder. (b) Our proposed visual grounding framework with Multi-modal (MM) conditional visual encoder. We visualize the ground truth and the attention maps of various visual encoders. The attention distribution of the independent visual encoder appears more diffuse, whereas the attention distributions of the MM-conditional visual encoder are more concentrated on the corresponding object.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does MM conditional visual encoder utilize linguistic backbone outputs to modulate spatial attention prior to fusion?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "In the Visual Branch, a CNN backbone first extracts a 2D feature map, followed by a stack of transformer encoder layers that generate a flattened sequence of visual features . Our proposed Multi-modal Conditional Adaption (MMCA) is hierarchically applied to the parameter matrices of the convolutional and transformer layers. This module takes both visual and textual features as inputs and dynamically updates the weights of the visual encoder to achieve language-guided visual feature extraction.",
            "Given the textual features  and the flattened visual feature , we first apply pooling operations to process textual features of different lengths and visual features of different spatial sizes. Subsequently, linear projections are used to generate fixed-dimensional embeddings  for the respective modal-specific features. We then employ a simple gating mechanism with a sigmoid activation to fuse the visual and textual embeddings:\n\n    z_v = W_v v,\n    z_t = W_t t,\n    g = sigmoid( ReLU( W_g [ z_v, z_t ] ) ),\n    h = z_v + g ⊙ z_t.\n\n    Finally, the fusion embedding  is utilized to generate the coefficients, which guiding the weight update for visual encoder."
        ],
        "final_answer": "Before any late fusion in the decoder, the MM-conditional visual encoder first takes the linguistic backbone’s output (the pooled–projected textual feature) and the current visual feature map, projects each into a fixed–dimensional embedding, and then runs them through a small sigmoid-gated network.  The gate uses both embeddings to compute a per-dimension scale g, and re–weights the textual embedding (z_t) before adding it back to the visual embedding (z_v).  This fused multimodal vector is then linearly mapped to produce coefficients that recompose a set of low-rank weight–update bases.  Applying those updates to the convolutional and self-attention layers steers the visual encoder’s spatial attention toward text‐relevant regions—effectively modulating spatial focus—before the final multimodal fusion step.",
        "relevant_elements": [
            "MM conditional visual encoder",
            "Linguistic Backbone"
        ],
        "id": 493,
        "masked_question": "How does [mask1] utilize linguistic backbone outputs to modulate spatial attention prior to fusion?",
        "masked_number": 1,
        "masked_elements": [
            "MM conditional visual encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.04999v1_figure_1.png",
        "paperid": "2409.04999v1",
        "paper_path": "./papers/2409.04999v1.json",
        "figure_id": "2409.04999v1_figure_1.png",
        "caption": "Figure 1. (a) Traditional visual grounding framework with independent visual encoder. (b) Our proposed visual grounding framework with Multi-modal (MM) conditional visual encoder. We visualize the ground truth and the attention maps of various visual encoders. The attention distribution of the independent visual encoder appears more diffuse, whereas the attention distributions of the MM-conditional visual encoder are more concentrated on the corresponding object.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What ethical issues could the Linguistic Backbone produce by biasing the MM conditional Visual encoder's focus?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Linguistic Backbone",
            "MM conditional Visual encoder"
        ],
        "id": 495,
        "masked_question": "What ethical issues could the [mask1] produce by biasing the [mask2]'s focus?",
        "masked_number": 2,
        "masked_elements": [
            "Linguistic Backbone",
            "MM conditional Visual encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.04999v1_figure_1.png",
        "paperid": "2409.04999v1",
        "paper_path": "./papers/2409.04999v1.json",
        "figure_id": "2409.04999v1_figure_1.png",
        "caption": "Figure 1. (a) Traditional visual grounding framework with independent visual encoder. (b) Our proposed visual grounding framework with Multi-modal (MM) conditional visual encoder. We visualize the ground truth and the attention maps of various visual encoders. The attention distribution of the independent visual encoder appears more diffuse, whereas the attention distributions of the MM-conditional visual encoder are more concentrated on the corresponding object.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations stem from relying on LLM and image generator for diverse same-subject data generation?",
        "relevant_section_ids": [
            "3.1",
            "6"
        ],
        "relevant_context": [
            "We observed that by prompting the SDXL model this way, it can generate photo collages of the same subject with varying poses. However, the generated images usually contain a close-up view of an object in a simple background. To increase the data diversity, we employ a post-processing step that performs background augmentation on the generated objects.",
            "We found that the initial text prompts generated by ChatGPT lack variations and therefore pair the images with the captions obtained from BLIPv2 [17] in training samples."
        ],
        "final_answer": "Relying on the LLM (ChatGPT) to generate object-centric prompts yields captions with limited variation, and relying on the single-image diffusion model (SDXL) to generate same-subject collages produces images that are mostly close-ups against simple backgrounds. These factors reduce diversity in prompts and context, requiring additional background and style augmentation to achieve sufficient variation.",
        "relevant_elements": [
            "LLM",
            "Image generator"
        ],
        "id": 496,
        "masked_question": "What limitations stem from relying on [mask1] and image generator for diverse same-subject data generation?",
        "masked_number": 1,
        "masked_elements": [
            "LLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.06187v1_figure_2.png",
        "paperid": "2407.06187v1",
        "paper_path": "./papers/2407.06187v1.json",
        "figure_id": "2407.06187v1_figure_2.png",
        "caption": "Figure 2:  Overall framework. (a) We generate training data by using large language models and prompting pretrained single-image diffusion models. (b) During training, the JeDi model learns to denoise multiple same-subject images together, where each image attends to every image of the same subject set through coupled self-attention. (c) At inference, personalized generation is performed in an inpainting fashion where the goal is to generate the missing images of the joint-image set.",
        "qtype": "Others",
        "response": "Based on the \"Dataset Creation\" section and the \"Synthetic same-subject (S3) dataset\" subsection within \"Implementation Details,\" the limitations stemming from relying on the LLM (ChatGPT) and image generator (SDXL) for diverse same-subject data generation are:\n\n1.  **Limited image diversity from the image generator:** The pre-trained SDXL model, when prompted initially, \"usually contain a close-up view of an object in a simple background.\" This indicates a lack of variation in background scenes and object contexts.\n2.  **Lack of prompt variation from the LLM:** The initial text prompts generated by ChatGPT were found to \"lack variations,\" requiring further post-processing (like pairing with captions from BLIPv2) to enhance diversity in the training data."
    },
    {
        "question": "What rationale for integrating coupled self-attention across same-subject images during training?",
        "relevant_section_ids": [
            "1",
            "3.2"
        ],
        "relevant_context": [
            "Specifically, we adapt the self-attention layers of the diffusion U-Net so that the attention blocks corresponding to different input images are coupled. That is, the self-attention layer corresponding to each image co-attends to every other image in the sample set. The use of the coupled self-attentions at different levels of hierarchy in the U-Net provides a much stronger representation needed for good input preservation.",
            "More specifially, given a set of same-subject noisy input images, we modify the attention layers of the U-Net to fuse together the self-attention features for different images in the same set. As illustrated in Fig. 6, a coupled self-attention layer has features at each spatial location attending to every other location across all images in the set.",
            "Since the U-Net architecture has attention layers at various resolutions, the use of coupled self-attentions at multiple resolutions makes the generated image set to have consistent high-level semantic features as well as low-level attributes."
        ],
        "final_answer": "By coupling the self-attention layers across all images of the same subject, each image’s features can attend to those of the others. This fused attention at multiple resolutions produces a much stronger joint representation, which (1) preserves fine input appearance, and (2) enforces consistency in both high-level semantics and low-level details across the generated image set.",
        "relevant_elements": [
            "coupled self-attention",
            "same-subject images"
        ],
        "id": 498,
        "masked_question": "What rationale for integrating [mask1] across [mask2] during training?",
        "masked_number": 2,
        "masked_elements": [
            "coupled self-attention",
            "same-subject images"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.06187v1_figure_2.png",
        "paperid": "2407.06187v1",
        "paper_path": "./papers/2407.06187v1.json",
        "figure_id": "2407.06187v1_figure_2.png",
        "caption": "Figure 2:  Overall framework. (a) We generate training data by using large language models and prompting pretrained single-image diffusion models. (b) During training, the JeDi model learns to denoise multiple same-subject images together, where each image attends to every image of the same subject set through coupled self-attention. (c) At inference, personalized generation is performed in an inpainting fashion where the goal is to generate the missing images of the joint-image set.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "Why integrate hand-crafted corner case vulnerable source code during data collection?",
        "relevant_section_ids": [
            "2.1"
        ],
        "relevant_context": [
            "We compiled our dataset from three distinct sources: the National Vulnerability Database (NVD), the Software Assurance Reference Dataset (SARD), and a collection of real-world code enhanced with synthetically added vulnerabilities to cover corner cases where real-world code is not available for certain vulnerabilities for proprietary and security reasons.",
            "Combining the SARD and the NVD for training LLMs can significantly enhance their capabilities in vulnerability analysis. While these two datasets offer either fully synthetic or fully real vulnerabilities, our method of injecting vulnerabilities tries to overcome the issues we see in NVD."
        ],
        "final_answer": "To ensure the dataset includes rare or unusual vulnerability scenarios that do not appear in existing public repositories, the authors inject hand-crafted corner-case vulnerabilities into real code whenever real-world examples are unavailable (often due to proprietary or security constraints). This augmentation fills gaps left by NVD and SARD and helps the model generalize to a broader range of vulnerability patterns.",
        "relevant_elements": [
            "Data Collection",
            "Hand-Crafted Corner Case Vulnerable Source Code"
        ],
        "id": 500,
        "masked_question": "Why integrate [mask1] during data collection?",
        "masked_number": 1,
        "masked_elements": [
            "Hand-Crafted Corner Case Vulnerable Source Code"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.04981v1_figure_1.png",
        "paperid": "2411.04981v1",
        "paper_path": "./papers/2411.04981v1.json",
        "figure_id": "2411.04981v1_figure_1.png",
        "caption": "Figure 1: Our Proposed Approach: An overview of our proposed instruct dataset DeBinVul with a sample example comprising a decompiled binary code input and a list of questions (instructions) and answers. Subsequently, using DeBinVul, we train state-of-the-art LLM models to optimize them and elevate their capabilities in assisting reverse engineers in unveiling vulnerabilities in binary code.",
        "qtype": "Design_Rationale",
        "response": "**Chain of thought:**\n\n1.  **Identify [mask1]:** The [mask1] refers to \"Hand-Crafted Corner Case Vulnerable Source Code,\" highlighted in the red box in \"Step 1: Data Collection\" of the diagram. This indicates it's one of the data sources.\n\n2.  **Locate relevant text:** I need to find information about data collection, specifically the sources for the dataset, in the \"Step 1: Data Collection\" section of the provided context.\n\n3.  **Analyze text for data sources:** The text states, \"We compiled our dataset from three distinct sources: the National Vulnerability Database (NVD), the Software Assurance Reference Dataset (SARD), and a collection of"
    },
    {
        "question": "How does Compile Source Code manage multiple CPU architectures and optimization flags during binary generation?",
        "relevant_section_ids": [
            "2.2"
        ],
        "relevant_context": [
            "Each source code function was compiled six times to ensure comprehensive analysis, resulting in six binaries of a single function. This process involved using two compilers, two optimization levels, and four architectures."
        ],
        "final_answer": "Compile Source Code generates binaries for each function by iterating over two compilers, two optimization levels, and four target CPU architectures, producing multiple binary variants per function.",
        "relevant_elements": [
            "Compile Source Code",
            "Decompile Binary Code"
        ],
        "id": 502,
        "masked_question": "How does [mask1] manage multiple CPU architectures and optimization flags during binary generation?",
        "masked_number": 1,
        "masked_elements": [
            "Compile Source Code"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.04981v1_figure_1.png",
        "paperid": "2411.04981v1",
        "paper_path": "./papers/2411.04981v1.json",
        "figure_id": "2411.04981v1_figure_1.png",
        "caption": "Figure 1: Our Proposed Approach: An overview of our proposed instruct dataset DeBinVul with a sample example comprising a decompiled binary code input and a list of questions (instructions) and answers. Subsequently, using DeBinVul, we train state-of-the-art LLM models to optimize them and elevate their capabilities in assisting reverse engineers in unveiling vulnerabilities in binary code.",
        "qtype": "Implementation_Details",
        "response": "The masked component, \"Compile Source Code with different optimization settings and CPU Arch.,\" manages multiple CPU architectures and optimization flags during binary generation by compiling each source code function six times. This comprehensive process involves using two different compilers, two distinct optimization levels, and four different CPU architectures to generate these six binaries from a single function."
    },
    {
        "question": "How does Fine Tuning loss func integrate dataset signals to adjust SOTA LLMs parameters?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Fine Tuning loss func",
            "SOTA LLMs"
        ],
        "id": 503,
        "masked_question": "How does [mask1] integrate dataset signals to adjust [mask2] parameters?",
        "masked_number": 2,
        "masked_elements": [
            "Fine Tuning loss func",
            "SOTA LLMs"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.04981v1_figure_1.png",
        "paperid": "2411.04981v1",
        "paper_path": "./papers/2411.04981v1.json",
        "figure_id": "2411.04981v1_figure_1.png",
        "caption": "Figure 1: Our Proposed Approach: An overview of our proposed instruct dataset DeBinVul with a sample example comprising a decompiled binary code input and a list of questions (instructions) and answers. Subsequently, using DeBinVul, we train state-of-the-art LLM models to optimize them and elevate their capabilities in assisting reverse engineers in unveiling vulnerabilities in binary code.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Conversation Flow Sampling utilize the title tree hierarchy to generate diverse conversation paths?",
        "relevant_section_ids": [
            "3.2.2"
        ],
        "relevant_context": [
            "To generate coherent and diverse conversations, we implement the following four sampling strategies based on the extracted title trees:",
            "(1) Linear Descent Sampling (LDS): This strategy begins at the root node and permits movement only from parent nodes to their child nodes.",
            "(2) Sibling-Inclusive Descent Sampling (SIDS): This strategy builds on LDS by introducing directional links between sibling nodes.",
            "(3) Single-Tree Random Walk (STRW): This strategy further enhances SIDS by incorporating interconnections among sibling nodes as well as between parent and child nodes, forming a directed graph with bidirectional edges.",
            "(4) Dual-Tree Random Walk (DTRW): It mimics the topic shifts that occur in real conversational scenarios, allowing transitions between two different but related title trees."
        ],
        "final_answer": "Conversation Flow Sampling starts from the hierarchical title tree of Wikipedia pages and then samples paths through it in four ways: (1) Linear Descent Sampling strictly follows parent-to-child links to drill down a single branch; (2) Sibling-Inclusive Descent Sampling adds moves to sibling nodes to explore parallel subtopics; (3) Single-Tree Random Walk makes the tree bidirectional, allowing back-and-forth jumps among parent, child, and sibling nodes; and (4) Dual-Tree Random Walk extends this to switch between two related trees, simulating sudden topic shifts and yielding more varied conversation flows.",
        "relevant_elements": [
            "Extracting Title Tree",
            "Conversation Flow Sampling"
        ],
        "id": 504,
        "masked_question": "How does [mask1] utilize the title tree hierarchy to generate diverse conversation paths?",
        "masked_number": 1,
        "masked_elements": [
            "Conversation Flow Sampling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.23090v1_figure_1.png",
        "paperid": "2410.23090v1",
        "paper_path": "./papers/2410.23090v1.json",
        "figure_id": "2410.23090v1_figure_1.png",
        "caption": "Figure 1: Part (a) is an overview of the CORAL dataset construction process. The red arrows show the sampled conversation flow, with numerical labels on the nodes indicating the round of the sampled conversation turns. The content under each sampled (sub)title serves as the conversational response in CORAL.\nPart (b) is the three conversation compression strategies in conversational RAG.",
        "qtype": "Implementation_Details",
        "response": "The [mask1], which is the \"Conversation Flow Sampling\" component, utilizes the title tree hierarchy to generate diverse conversation paths through four distinct sampling strategies:\n\n1.  **Linear Descent Sampling (LDS):** This strategy follows a progressive logic, moving strictly from parent nodes to their child nodes within the title tree. This emulates a conversation that gradually deepens its focus on a subtopic, such as moving from \"Deepfake\" to \"History\" and then to \"Academic research\" (as shown in Figure 1(a)).\n2.  **Sibling-Inclusive Descent Sampling (SIDS):** Building upon LDS, this strategy introduces directional links between sibling nodes. This allows for the exploration of related subtopics in parallel, enriching the breadth of the discussion within the same conversational structure.\n3.  **Single-Tree Random Walk (STRW):** This strategy further enhances SIDS by incorporating interconnections among sibling nodes and bidirectional edges between parent and child nodes. It forms a directed graph within a single title tree, allowing for more flexible transitions and deeper or broader exploration based on previous turns.\n4.  **Dual-Tree Random Walk (DTRW):** This strategy allows for more significant topic shifts by enabling transitions between two different but related title trees. This mimics real-world conversational scenarios where the discussion might move to a tangentially related subject.\n\nBy employing these four strategies, which are all based on the hierarchical structure of the extracted title trees (where page titles are roots and subheadings form subsequent levels), the Conversation Flow Sampling component ensures the generation of coherent and diverse conversational paths, ranging from straightforward progressive explorations to complex topic shifts and multi-subtopic analyses."
    },
    {
        "question": "How does LLM Summarization transform retrieved passages into concise Passage Summary for generation?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "LLM Summarization",
            "Passage Summary"
        ],
        "id": 505,
        "masked_question": "How does [mask1] transform retrieved passages into concise Passage Summary for generation?",
        "masked_number": 1,
        "masked_elements": [
            "LLM Summarization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.23090v1_figure_1.png",
        "paperid": "2410.23090v1",
        "paper_path": "./papers/2410.23090v1.json",
        "figure_id": "2410.23090v1_figure_1.png",
        "caption": "Figure 1: Part (a) is an overview of the CORAL dataset construction process. The red arrows show the sampled conversation flow, with numerical labels on the nodes indicating the round of the sampled conversation turns. The content under each sampled (sub)title serves as the conversational response in CORAL.\nPart (b) is the three conversation compression strategies in conversational RAG.",
        "qtype": "Implementation_Details",
        "response": "The `LLM Summarization` strategy transforms retrieved passages into a concise Passage Summary by using a Large Language Model (LLM) as a compression function (`φ_r`) for post-retrieval results. This summarization process aims to effectively filter out noise from the retrieved passages and condense the content, thus optimizing it for generating more reliable and concise responses. The goal is to reduce the input length while maintaining or even improving the quality of the generated output and citation labeling accuracy."
    },
    {
        "question": "How does Conversation Flow Sampling leverage hierarchical title trees compared to conversational query rewriting approaches?",
        "relevant_section_ids": [
            "2.2",
            "3.2.2"
        ],
        "relevant_context": [
            "Conversational search enables users to interact with retrieval systems through multi-turn dialogues (Mo et al., 2024a ###reference_b40###). Two main approaches are conversational query rewriting (CQR) and conversational dense retrieval (CDR). CQR transforms context-dependent queries into fully rewritten versions for ad-hoc retrieval, focusing on selecting relevant tokens from the conversation history (Voskarides et al., 2020 ###reference_b55###; Kumar and Callan, 2020 ###reference_b26###; Lin et al., 2021b ###reference_b32###) or using LLMs to generate rewrites (Lin et al., 2020 ###reference_b33###; Yu et al., 2020 ###reference_b65###; Vakulenko et al., 2021 ###reference_b54###; Wu et al., 2022 ###reference_b59###).",
            "To generate coherent and diverse conversations, we implement the following four sampling strategies based on the extracted title trees: (1) Linear Descent Sampling (LDS)… (2) Sibling-Inclusive Descent Sampling (SIDS)… (3) Single-Tree Random Walk (STRW)… (4) Dual-Tree Random Walk (DTRW)…"
        ],
        "final_answer": "Conversation Flow Sampling exploits the natural hierarchy of Wikipedia subheadings by constructing title trees and then sampling paths through those trees—e.g., parent-to-child sequences, sibling explorations, and random walks across related trees—to produce coherent multi-turn conversations that follow the document structure. In contrast, conversational query rewriting approaches ignore external document structure and instead rewrite each turn’s query into a self-contained form by selecting or generating tokens from the preceding dialogue history.",
        "relevant_elements": [
            "Conversation Flow Sampling",
            "Contextualization of Questions"
        ],
        "id": 506,
        "masked_question": "How does [mask1] leverage hierarchical title trees compared to conversational query rewriting approaches?",
        "masked_number": 1,
        "masked_elements": [
            "Conversation Flow Sampling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.23090v1_figure_1.png",
        "paperid": "2410.23090v1",
        "paper_path": "./papers/2410.23090v1.json",
        "figure_id": "2410.23090v1_figure_1.png",
        "caption": "Figure 1: Part (a) is an overview of the CORAL dataset construction process. The red arrows show the sampled conversation flow, with numerical labels on the nodes indicating the round of the sampled conversation turns. The content under each sampled (sub)title serves as the conversational response in CORAL.\nPart (b) is the three conversation compression strategies in conversational RAG.",
        "qtype": "Literature_Background",
        "response": "Figure 2a (Conversation Flow Sampling) illustrates a process where a conversation's turns are sampled by traversing a hierarchical title tree (e.g., Deepfake -> History -> Academic research). The text confirms this, stating that \"Conversation Flow Sampling\" implements four strategies based on \"extracted title trees\" (Section 3.2.2). These strategies ("
    },
    {
        "question": "How do LLM Summarization approaches relate to existing passage summarization methods for conversation history compression?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "LLM Summarization",
            "Passage Summary"
        ],
        "id": 507,
        "masked_question": "How do [mask1] approaches relate to existing passage summarization methods for conversation history compression?",
        "masked_number": 1,
        "masked_elements": [
            "LLM Summarization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.23090v1_figure_1.png",
        "paperid": "2410.23090v1",
        "paper_path": "./papers/2410.23090v1.json",
        "figure_id": "2410.23090v1_figure_1.png",
        "caption": "Figure 1: Part (a) is an overview of the CORAL dataset construction process. The red arrows show the sampled conversation flow, with numerical labels on the nodes indicating the round of the sampled conversation turns. The content under each sampled (sub)title serves as the conversational response in CORAL.\nPart (b) is the three conversation compression strategies in conversational RAG.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does employing a functional connectivity matrix parallel adjacency utilization in graph neural network methods?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "functional connectivity matrix"
        ],
        "id": 508,
        "masked_question": "How does employing a [mask1] parallel adjacency utilization in graph neural network methods?",
        "masked_number": 1,
        "masked_elements": [
            "functional connectivity matrix"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.08221v1_figure_1.png",
        "paperid": "2411.08221v1",
        "paper_path": "./papers/2411.08221v1.json",
        "figure_id": "2411.08221v1_figure_1.png",
        "caption": "Figure 1: SynapsNet overview. (a) The functional connectivity defined between neurons on the model and how input current is inferred based on functional connectivity and population activity (b) An example input frame to the dynamical model which includes past activity over the context window, past input current, past behavioral data, and the unique embedding of the target neuron. (c) The three sets of parameters in SynapsNet: adjacency matrix A𝐴Aitalic_A for each session, embedding vector E𝐸Eitalic_E for each neuron, and dynamical model.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How might integrating the context window resemble state-space model approaches in time-series forecasting?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "context window"
        ],
        "id": 509,
        "masked_question": "How might integrating the [mask1] resemble state-space model approaches in time-series forecasting?",
        "masked_number": 1,
        "masked_elements": [
            "context window"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.08221v1_figure_1.png",
        "paperid": "2411.08221v1",
        "paper_path": "./papers/2411.08221v1.json",
        "figure_id": "2411.08221v1_figure_1.png",
        "caption": "Figure 1: SynapsNet overview. (a) The functional connectivity defined between neurons on the model and how input current is inferred based on functional connectivity and population activity (b) An example input frame to the dynamical model which includes past activity over the context window, past input current, past behavioral data, and the unique embedding of the target neuron. (c) The three sets of parameters in SynapsNet: adjacency matrix A𝐴Aitalic_A for each session, embedding vector E𝐸Eitalic_E for each neuron, and dynamical model.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does PN-Descriptor positive-negative supervision influence adapter weight adjustments across semantic feature levels?",
        "relevant_section_ids": [
            "3.2",
            "3.4"
        ],
        "relevant_context": [
            "Specifically, the Positive-Negative (PN) descriptors are derived as follows: i.e., P(ositive): “A person with an expression of {Cls}.”, and N(egative): “A person with an expression of no {Cls}.” … Keeping the original weights of these well-trained layers, we introduce trainable lightweight adapters after each frozen layer L, denoted as A^{pos} and A^{neg} for positive and negative textual supervision, respectively. (Sec. 3.2)",
            "Through the aforementioned semantically hierarchical information mining process, we obtain: 1) low-level video frame feature r_v, 2) middle-level face parsing features r_p and face landmark features r_l, and 3) high-level fine-grained description features r_d. … Specifically, given a specific video, the supervision for the i-th class is represented by both the positive c_i^{pos} and negative c_i^{neg}. Suppose any representation r^k, the similarity between r^k and c_i^{pos}, as well as r^k and c_i^{neg} is defined by calculating the cosine similarity: S_i^k = cos(r^k, c_i^{pos}) − cos(r^k, c_i^{neg}), which further distinguishes similarity among similar categories. Then, by finding the max similarity across all the categories, we obtain S^k. … Normalizing these similarities, we obtain the weights corresponding to that representation as α^k = exp(S^k)/∑_j exp(S^j). Such weights … resulting in the corresponding weights α_v, α_p, α_l, and α_d. Then the overall multi-modal representation M … is obtained as: M = α_v r_v + α_p r_p + α_l r_l + α_d r_d. (Sec. 3.4)"
        ],
        "final_answer": "The PN descriptors drive adaptive weighting of each semantic-level feature by computing, for every representation (video, parsing, landmarks, description), the difference in cosine similarity to its positive versus negative text embeddings.  After taking the maximum over classes, these similarity differences are normalized into weights (α_v, α_p, α_l, α_d) that scale each level’s output.  In this way, positive-negative supervision directly adjusts how much each adapter-enhanced modality contributes to the final fused representation.",
        "relevant_elements": [
            "PN-Descriptor",
            "Adapters",
            "Semantic Levels"
        ],
        "id": 513,
        "masked_question": "How does [mask1] positive-negative supervision influence adapter weight adjustments across semantic feature levels?",
        "masked_number": 1,
        "masked_elements": [
            "PN-Descriptor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.02157v2_figure_1.png",
        "paperid": "2407.02157v2",
        "paper_path": "./papers/2407.02157v2.json",
        "figure_id": "2407.02157v2_figure_1.png",
        "caption": "Figure 1. \nFrameworks for DFER.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What alternative design could replace Multi-modal LLM for high-level description?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Multi-modal LLM"
        ],
        "id": 514,
        "masked_question": "What alternative design could replace [mask1] for high-level description?",
        "masked_number": 1,
        "masked_elements": [
            "Multi-modal LLM"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.02157v2_figure_1.png",
        "paperid": "2407.02157v2",
        "paper_path": "./papers/2407.02157v2.json",
        "figure_id": "2407.02157v2_figure_1.png",
        "caption": "Figure 1. \nFrameworks for DFER.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What ethical concerns arise from negative PN-Descriptor prompts?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "PN-Descriptor"
        ],
        "id": 515,
        "masked_question": "What ethical concerns arise from negative [mask1] prompts?",
        "masked_number": 1,
        "masked_elements": [
            "PN-Descriptor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.02157v2_figure_1.png",
        "paperid": "2407.02157v2",
        "paper_path": "./papers/2407.02157v2.json",
        "figure_id": "2407.02157v2_figure_1.png",
        "caption": "Figure 1. \nFrameworks for DFER.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What limitations might discrete Graph Diffusion introduce when scaling 3DSG generation to complex scenes?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Graph Diffusion",
            "3DSG"
        ],
        "id": 516,
        "masked_question": "What limitations might discrete [mask1] introduce when scaling 3DSG generation to complex scenes?",
        "masked_number": 1,
        "masked_elements": [
            "Graph Diffusion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.15312v1_figure_2.png",
        "paperid": "2410.15312v1",
        "paper_path": "./papers/2410.15312v1.json",
        "figure_id": "2410.15312v1_figure_2.png",
        "caption": "Figure 2: Overall Framework of the S3D. The figure presents the dual processes of ST2I and SI2T. The RED block represents the hard X→→\\to→3D processes, and the GREEN block represents the 3D→→\\to→X processes.\nThere are three diffusion processes in total, i.e., a shared graph diffusion model for VSG/TSG→→\\to→3DSG generation, and the image diffusion model and text diffusion model.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative modeling approach could replace Image Diffusion to balance spatial fidelity and computational efficiency?",
        "relevant_section_ids": [
            "1"
        ],
        "relevant_context": [
            "Instead of directly employing the SoTA generative I2T models or diffusion-based T2I methods, we consider a solution fully based on discrete diffusions [3], due to several key rationales.",
            "Primarily, for VSU, the most crucial spatial information that determines a scene consists of objects and their relationships, which presents the characteristic of discretization and combination in the spatial layout, while other background and spatial unrelated information would be noisy.",
            "Thus, the discrete representation is more appropriate to model pure spatial semantics in our scenario.",
            "Moreover, the discrete diffusion works on the limited index space [28, 54, 35, 98], which is much more computationally efficient, especially for visual synthesis tasks."
        ],
        "final_answer": "Replace Image Diffusion with a discrete diffusion model (operating over discrete, spatial-aware 3D scene graph representations) to better capture spatial fidelity while reducing computational cost.",
        "relevant_elements": [
            "Image Diffusion"
        ],
        "id": 517,
        "masked_question": "What alternative modeling approach could replace [mask1] to balance spatial fidelity and computational efficiency?",
        "masked_number": 1,
        "masked_elements": [
            "Image Diffusion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.15312v1_figure_2.png",
        "paperid": "2410.15312v1",
        "paper_path": "./papers/2410.15312v1.json",
        "figure_id": "2410.15312v1_figure_2.png",
        "caption": "Figure 2: Overall Framework of the S3D. The figure presents the dual processes of ST2I and SI2T. The RED block represents the hard X→→\\to→3D processes, and the GREEN block represents the 3D→→\\to→X processes.\nThere are three diffusion processes in total, i.e., a shared graph diffusion model for VSG/TSG→→\\to→3DSG generation, and the image diffusion model and text diffusion model.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates dual feature sharing from Graph Diffusion into both Image Diffusion and Text Diffusion?",
        "relevant_section_ids": [
            "1",
            "4.1"
        ],
        "relevant_context": [
            "First, [intermediate processing sharing], they can complement and benefit each other. For SI2T, the 'Image3D' reasoning process is challenging in acquiring necessary 3D features, whereas the descriptive '3DText' process is relatively easier. Conversely, for ST2I, the 'Text3D' process requires complex reasoning of the 3D scene feature, while rendering '3DImage' is much more straightforward. Ideally, if complementing the information during each learning process, i.e., letting the easy part aid the hard part, it should enhance the performance of both tasks.",
            "Second, [3D scene feature sharing], both dual tasks urgently require modeling of the respective 3D features, where such stereospecific insights in 3D perspective can be essentially shared and also complementary between each other.",
            "At the meanwhile, the intermediate features of the '3DX' (X means text or image) diffusion steps are also passed to the counterpart hard 'X3D' processes for further facilitation."
        ],
        "final_answer": "The dual feature sharing is driven by the observation that (1) the two tasks are complementary — the ‘easy’ part of one (e.g. text-to-3D) can help the ‘hard’ part of the other (e.g. image-to-3D), and (2) both require rich, stereospecific 3D scene information. By passing the 3DSG-derived features (and intermediate diffusion representations) from the shared Graph Diffusion model into both the Image Diffusion and Text Diffusion processes, the framework lets each modality leverage the other’s strengths and better align spatial semantics.",
        "relevant_elements": [
            "Graph Diffusion",
            "Image Diffusion",
            "Text Diffusion"
        ],
        "id": 519,
        "masked_question": "What motivates dual feature sharing from [mask1] into both Image Diffusion and Text Diffusion?",
        "masked_number": 1,
        "masked_elements": [
            "Graph Diffusion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.15312v1_figure_2.png",
        "paperid": "2410.15312v1",
        "paper_path": "./papers/2410.15312v1.json",
        "figure_id": "2410.15312v1_figure_2.png",
        "caption": "Figure 2: Overall Framework of the S3D. The figure presents the dual processes of ST2I and SI2T. The RED block represents the hard X→→\\to→3D processes, and the GREEN block represents the 3D→→\\to→X processes.\nThere are three diffusion processes in total, i.e., a shared graph diffusion model for VSG/TSG→→\\to→3DSG generation, and the image diffusion model and text diffusion model.",
        "qtype": "Design_Rationale",
        "response": "The motivation for sharing the 3DSG feature (output from the Graph Diffusion module, [mask1]) into both Image Diffusion and Text Diffusion is to facilitate \"better generation\" in both image synthesis (ST2I) and text generation (SI2T).\n\nThe text explains:\n1.  **3DSG Properties:** \"The 3DSG representation effectively depicts the stereospecific attributes of all objects, and meanwhile models the spatial relations between them, from which both the SI2T and ST2I processes can be beneficial.\" This highlights that 3DSG provides a structured, spatial-aware representation of the 3D scene, including objects, their relations, and layouts.\n2.  **Integration for Generation:** \"Then, the image synthesis (for ST2I) and text generation (SI"
    },
    {
        "question": "What motivates integrating Mask Attribute Conductance in layer importance analysis?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Building upon this insight, we explore the possibility of minimizing the influence of disparities in data input formats via model fine-tuning. To maintain the learned priors, it is essential to retain pre-trained parameters as extensively as possible while employing the fewest but most effective layers for fine-tuning.",
            "To tackle this, we introduce the concept of mask attribution conductance, which quantifies the importance of each layer concerning the fine-tuning objective. We then identify the top-k% most critical layers for fine-tuning."
        ],
        "final_answer": "The authors integrate Mask Attribute Conductance to quantify each layer’s contribution to bridging the distribution shift caused by moving from masked pre-training inputs to whole-image inference. This allows them to fine-tune only the few most critical layers—thereby adapting to the input integrity gap while preserving the majority of the pre-trained image priors.",
        "relevant_elements": [
            "Mask Attribute Conductance",
            "layer importance analysis"
        ],
        "id": 520,
        "masked_question": "What motivates integrating [mask1] in layer importance analysis?",
        "masked_number": 1,
        "masked_elements": [
            "Mask Attribute Conductance"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.19403v1_figure_2.png",
        "paperid": "2409.19403v1",
        "paper_path": "./papers/2409.19403v1.json",
        "figure_id": "2409.19403v1_figure_2.png",
        "caption": "Figure 2: The illumination of our overall pipeline. 1) Pre-training the model with mask image pre-training method tailored to low-level vision. We randomly mask degraded images at the pixel level with a 50%percent5050\\%50 % masking ratio and reconstruct the clean images. 2) The Fine-tuning stage is followed to overcome the input integrity gap caused by changing masked input during pre-training into the whole image during inference.\nWe analyze the importance of each network layer for resolving the input integrity gap according to the proposed MAC and rank them in descending order. The top k%percent𝑘k\\%italic_k % of network layers are selected for fine-tuning on the complete image.",
        "qtype": "Design_Rationale",
        "response": "The `[mask1]` refers to the \"Mask Attribute Conductance (MAC)\" analysis depicted within the \"Layer Importance Analysis\" section of the pipeline.\n\n**Chain of thought:**\n\n1.  **Understand the context of `[mask1]`:** The diagram shows `[mask1]` as a crucial part of the \"Layer Importance Analysis\" within the \"Fine-tuning\" stage. The caption also states, \"We analyze the importance of each network layer for resolving the input integrity gap according to the proposed MAC and rank them in descending order. The top k% of network layers are selected for fine-tuning on the complete image.\"\n2.  **Locate relevant text sections:** The section \"Finetuning with Mask Attribute Conductance Analysis\" (Sec. 3.3) provides detailed information.\n3.  **Identify the problem MAC aims to solve:** The \"Observation\" sub-section under \"Finetuning with Mask Attribute Conductance Analysis\" states: \"During pre-training, the network learns rich content priors. However, the incompleteness of the masked input prevents the direct use of the pre-trained model for inference, as it would result in a distribution shift in the outputs.\" It further clarifies, \"This observation indicates that the hindrance to using mask pre-trained model directly for inference lies in input incompleteness rather than the model s inability to learn the restoration function.\"\n4.  **Identify the goal and how MAC contributes:** The text explains, \"Building upon this insight, we explore the possibility of minimizing the influence of disparities in data input formats via model fine-tuning. To maintain the learned priors, it is essential to retain pre-trained"
    },
    {
        "question": "How does Mask Attribute Conductance quantify each layer’s contribution along the Mask Attribute Path?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "To maintain the learned priors, it is essential to retain pre-trained parameters as extensively as possible while employing the fewest but most effective layers for fine-tuning. To tackle this, we introduce the concept of mask attribution conductance, which quantifies the importance of each layer concerning the fine-tuning objective.",
            "Considering such a nonlinear path \\(X_m\\) from zero input \\(X_0\\) to whole input \\(X_1\\), which path function \\(T\\) satisfies: \\(T(0)=X_0,\\;T(1)=X_1\\). We define this path as a Mask Attribute Path (MAP).",
            "However, \\(T\\) is not differentiable, making it an invalid attribute path function. To solve this problem, we use a group of sigmoid-like functions \\(g_k\\) to approximate \\(T\\).",
            "In practice, we use N-steps discretization to approximate the integral form of Eq. 13, which follows the same procedure as integrated gradients: summing the layer conductance of each discretized step along the Mask Attribute Path."
        ],
        "final_answer": "Mask Attribute Conductance (MAC) quantifies each layer’s contribution by measuring that layer’s conductance (i.e. the accumulated gradient of the network’s output with respect to its activations) integrated along a continuous path from a masked input to the full input. This ‘‘Mask Attribute Path’’ is approximated via sigmoid‐based mask transitions, and the conductance of each layer is summed (using an N-step discrete integral) to yield a scalar importance score for fine-tuning.",
        "relevant_elements": [
            "Mask Attribute Conductance",
            "Mask Attribute Path"
        ],
        "id": 522,
        "masked_question": "How does [mask1] quantify each layer’s contribution along the Mask Attribute Path?",
        "masked_number": 1,
        "masked_elements": [
            "Mask Attribute Conductance"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.19403v1_figure_2.png",
        "paperid": "2409.19403v1",
        "paper_path": "./papers/2409.19403v1.json",
        "figure_id": "2409.19403v1_figure_2.png",
        "caption": "Figure 2: The illumination of our overall pipeline. 1) Pre-training the model with mask image pre-training method tailored to low-level vision. We randomly mask degraded images at the pixel level with a 50%percent5050\\%50 % masking ratio and reconstruct the clean images. 2) The Fine-tuning stage is followed to overcome the input integrity gap caused by changing masked input during pre-training into the whole image during inference.\nWe analyze the importance of each network layer for resolving the input integrity gap according to the proposed MAC and rank them in descending order. The top k%percent𝑘k\\%italic_k % of network layers are selected for fine-tuning on the complete image.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the encoder leverage masked input representations to enable decoder reconstruction?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "MIM is a process that randomly masks certain parts of an image and extracts features from the remaining visible parts to reconstruct the entire image.",
            "During the pre-training stage, we randomly mask the pixels of degraded images (mask images in a patch size) with a mask ratio … we force the network to predict the clear one corresponding to the masked pixels, extracting inherent image information from corrupted images."
        ],
        "final_answer": "By feeding the encoder a version of the corrupted image with randomly masked pixels, the encoder learns to extract feature representations from the unmasked (visible) regions. Those feature representations are then passed to the decoder, which uses them to predict and reconstruct the originally masked (missing) pixels, recovering the full clean image.",
        "relevant_elements": [
            "Encoder",
            "masked input",
            "Decoder"
        ],
        "id": 523,
        "masked_question": "How does the [mask1] leverage masked input representations to enable decoder reconstruction?",
        "masked_number": 1,
        "masked_elements": [
            "Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.19403v1_figure_2.png",
        "paperid": "2409.19403v1",
        "paper_path": "./papers/2409.19403v1.json",
        "figure_id": "2409.19403v1_figure_2.png",
        "caption": "Figure 2: The illumination of our overall pipeline. 1) Pre-training the model with mask image pre-training method tailored to low-level vision. We randomly mask degraded images at the pixel level with a 50%percent5050\\%50 % masking ratio and reconstruct the clean images. 2) The Fine-tuning stage is followed to overcome the input integrity gap caused by changing masked input during pre-training into the whole image during inference.\nWe analyze the importance of each network layer for resolving the input integrity gap according to the proposed MAC and rank them in descending order. The top k%percent𝑘k\\%italic_k % of network layers are selected for fine-tuning on the complete image.",
        "qtype": "Implementation_Details",
        "response": "The encoder in the pre-training stage leverages masked input representations by processing the degraded images where certain pixels have been randomly masked. Its primary role is to **extract features from the *remaining visible parts*** of this masked input. These extracted features form a generic representation of the image, which is then passed to the decoder. The decoder subsequently uses these features to **reconstruct the entire image (specifically, the clean version, with supervision on the masked parts)**, thereby learning the distribution of natural images and acquiring prior knowledge instrumental for image restoration."
    },
    {
        "question": "How does Exact Unlearning utilize outputs of Unlearning Set Selection for retraining sub-models?",
        "relevant_section_ids": [
            "2.1",
            "3.3"
        ],
        "relevant_context": [
            "Exact Unlearning (EU) aims to completely eliminate the influence of target data on the model. The most straightforward method of exact unlearning is retraining the model from scratch on the updated dataset (removing the target data), but this method incurs a significant computational time cost. To mitigate this cost, existing EU methods revamp the training process via ensemble learning, which limits the retraining cost to sub-datasets or sub-models (Bourtoule et al., 2021; Yan et al., 2022).",
            "Motivated by these findings, in this paper, we explore the impact of using varying unlearning sets, which can also reflect the robustness of unlearning. To significantly demonstrate this impact, we adopt a model-agnostic selection strategy to create three types of unlearning sets: core data (which impacts many other data points), edge data (with minimal impact on others), and random data."
        ],
        "final_answer": "Exact Unlearning first takes the selected unlearning set (core, edge, or random data) and then only retrains those sub-models in its ensemble whose training shards overlap with the chosen unlearning set, rather than retraining the entire model from scratch.",
        "relevant_elements": [
            "Exact Unlearning",
            "Unlearning Set Selection"
        ],
        "id": 524,
        "masked_question": "How does [mask1] utilize outputs of Unlearning Set Selection for retraining sub-models?",
        "masked_number": 1,
        "masked_elements": [
            "Exact Unlearning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.14393v1_figure_1.png",
        "paperid": "2408.14393v1",
        "paper_path": "./papers/2408.14393v1.json",
        "figure_id": "2408.14393v1_figure_1.png",
        "caption": "Figure 1: An illustration of CURE4Rec, a comprehensive benchmark tailored for evaluating recommendation unlearning methods. CURE4Rec evaluates unlearning methods using data with varying levels of unlearning impact on four aspects, i.e., unlearning completeness, recommendation utility, unlearning efficiency, and recommendation fairness.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Approximate Unlearning route information between the Original Model and the Unlearned Model?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Approximate Unlearning",
            "Original Model",
            "Unlearned Model"
        ],
        "id": 525,
        "masked_question": "How does [mask1] route information between the Original Model and the Unlearned Model?",
        "masked_number": 1,
        "masked_elements": [
            "Approximate Unlearning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.14393v1_figure_1.png",
        "paperid": "2408.14393v1",
        "paper_path": "./papers/2408.14393v1.json",
        "figure_id": "2408.14393v1_figure_1.png",
        "caption": "Figure 1: An illustration of CURE4Rec, a comprehensive benchmark tailored for evaluating recommendation unlearning methods. CURE4Rec evaluates unlearning methods using data with varying levels of unlearning impact on four aspects, i.e., unlearning completeness, recommendation utility, unlearning efficiency, and recommendation fairness.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How do approximate unlearning methods reconcile random data selection with unlearning efficiency?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Approximate Unlearning",
            "Random Data",
            "Unlearning Efficiency"
        ],
        "id": 527,
        "masked_question": "How do [mask1] methods reconcile random data selection with unlearning efficiency?",
        "masked_number": 1,
        "masked_elements": [
            "Approximate Unlearning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.14393v1_figure_1.png",
        "paperid": "2408.14393v1",
        "paper_path": "./papers/2408.14393v1.json",
        "figure_id": "2408.14393v1_figure_1.png",
        "caption": "Figure 1: An illustration of CURE4Rec, a comprehensive benchmark tailored for evaluating recommendation unlearning methods. CURE4Rec evaluates unlearning methods using data with varying levels of unlearning impact on four aspects, i.e., unlearning completeness, recommendation utility, unlearning efficiency, and recommendation fairness.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does GNN-based node-wise classification on DOM structure improve over serialized DOM processing methods?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Node-wise Classifier",
            "DOM Tree",
            "GNN"
        ],
        "id": 528,
        "masked_question": "How does [mask1]-based node-wise classification on DOM structure improve over serialized DOM processing methods?",
        "masked_number": 1,
        "masked_elements": [
            "GNN"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.04673v1_figure_1.png",
        "paperid": "2408.04673v1",
        "paper_path": "./papers/2408.04673v1.json",
        "figure_id": "2408.04673v1_figure_1.png",
        "caption": "Figure 1. Overview of AutoFAIR s Architecture. The DOM tree is constructed from the data webpage HTML. In Web Reader, nodes are categorized by a graph neural network to locate metadata fields, and for nodes with long text, a language model extracts the metadata. The extracted fields are then mapped according to the FAIR principles through FAIR Alignment, resulting in a FAIR-compliant metadata profile.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does element-wise extractor refine metadata fields after node-wise classification using language model prompting?",
        "relevant_section_ids": [
            "4.2.2"
        ],
        "relevant_context": [
            "Once the node-wise classifier identifies the HTML nodes corresponding to the metadata fields, we utilize language models to extract the relevant information from these nodes.",
            "Specifically, we take the text content of each identified HTML node and use the BERT model to encode this text, guiding the extraction process with a carefully designed prompt."
        ],
        "final_answer": "After the node-wise classifier locates the HTML elements for each metadata field, the element-wise extractor takes the raw text of those nodes and feeds it into a BERT language model with a tailored prompt. The prompt focuses the model on the desired metadata (e.g. spatiotemporal details), and the model’s output is then processed to yield the final, refined metadata values.",
        "relevant_elements": [
            "Element-wise Extractor",
            "Node-wise Classifier"
        ],
        "id": 530,
        "masked_question": "How does [mask1] refine metadata fields after node-wise classification using language model prompting?",
        "masked_number": 1,
        "masked_elements": [
            "Element-wise Extractor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.04673v1_figure_1.png",
        "paperid": "2408.04673v1",
        "paper_path": "./papers/2408.04673v1.json",
        "figure_id": "2408.04673v1_figure_1.png",
        "caption": "Figure 1. Overview of AutoFAIR s Architecture. The DOM tree is constructed from the data webpage HTML. In Web Reader, nodes are categorized by a graph neural network to locate metadata fields, and for nodes with long text, a language model extracts the metadata. The extracted fields are then mapped according to the FAIR principles through FAIR Alignment, resulting in a FAIR-compliant metadata profile.",
        "qtype": "Experimental_Results",
        "response": "The Element-wise Extractor (highlighted by the red box) refines metadata fields after node-wise classification in the following way:\n\n1.  **Input from Node-wise Classifier:** After the node-wise classifier identifies HTML nodes that correspond to metadata fields, the Element-wise Extractor takes the text content of these identified HTML nodes.\n2.  **Language Model Processing:** It then uses a language model (specifically, the BERT model is mentioned) to process this text.\n3.  **Prompting:** The extraction process is guided by a \"carefully designed prompt.\" This prompt is tailored to emphasize the specific details to be extracted; for example, if spatiotemporal information is needed from a description, the prompt will highlight these details.\n4.  **Extraction and Refinement:** By processing the text content with the language model and the guiding prompt, the Element-wise Extractor extracts the most relevant and precise information, thereby refining the metadata fields."
    },
    {
        "question": "How does FAIR Alignment standardize extracted fields into DCAT-compliant metadata through ontology guidance and semantic matching?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "To address the challenges posed by inconsistent information descriptions within FAIR principles and their varied formats, we adopt techniques such as ontology guidance and semantic matching.",
            "These methods aim to standardize each field. To establish a comprehensive data index and enhance data interoperability, we align each field by creating a dataset entry on the DataExpo website (Lu et al., 2023 ###reference_b17###) and embedding DCAT (Albertoni et al., 2023 ###reference_b3###) metadata within the page."
        ],
        "final_answer": "FAIR Alignment takes the raw metadata fields extracted by the Web Reader and applies ontology guidance and semantic matching to map each field’s value onto standard concepts and controlled vocabularies. Once each field has been semantically aligned to the appropriate ontology terms, the system automatically generates a DCAT‐compliant metadata record by embedding the standardized fields (e.g., dcat:title, dcat:identifier, dcat:temporal, etc.) into the dataset entry on the DataExpo website, ensuring machine‐readable, interoperable metadata across sites.",
        "relevant_elements": [
            "FAIR Alignment"
        ],
        "id": 531,
        "masked_question": "How does [mask1] standardize extracted fields into DCAT-compliant metadata through ontology guidance and semantic matching?",
        "masked_number": 1,
        "masked_elements": [
            "FAIR Alignment"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2408.04673v1_figure_1.png",
        "paperid": "2408.04673v1",
        "paper_path": "./papers/2408.04673v1.json",
        "figure_id": "2408.04673v1_figure_1.png",
        "caption": "Figure 1. Overview of AutoFAIR s Architecture. The DOM tree is constructed from the data webpage HTML. In Web Reader, nodes are categorized by a graph neural network to locate metadata fields, and for nodes with long text, a language model extracts the metadata. The extracted fields are then mapped according to the FAIR principles through FAIR Alignment, resulting in a FAIR-compliant metadata profile.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] refers to the **FAIR Alignment** module.\n\nThe FAIR Alignment module standardizes extracted fields into DCAT-compliant metadata through ontology guidance and semantic matching by:\n1.  **Addressing Inconsistencies:** It tackles the challenges of inconsistent information descriptions and varied formats of extracted fields among FAIR principles.\n2.  **Applying Techniques:** It employs techniques like ontology guidance and semantic matching to standardize each field.\n3.  **Aligning and Embedding:** It aligns each field by creating a dataset entry on the DataExpo website and embedding DCAT (Dataset Catalog Vocabulary) metadata within the page.\n4.  **Ensuring Machine-Readability:** This strategic approach ensures the provision of machine-readable metadata, thereby enabling unified dataset searches across multiple sites."
    },
    {
        "question": "How does combining Segmentation Layer with Regression Head improve multiscale object localization?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Segmentation Layer",
            "Regression Head"
        ],
        "id": 532,
        "masked_question": "How does combining [mask1] with Regression Head improve multiscale object localization?",
        "masked_number": 1,
        "masked_elements": [
            "Segmentation Layer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.21580v1_figure_2.png",
        "paperid": "2407.21580v1",
        "paper_path": "./papers/2407.21580v1.json",
        "figure_id": "2407.21580v1_figure_2.png",
        "caption": "Figure 2: Overview of our two-stage method for Scene Graph Generation. Objects are first detected using a hybrid detector / segmentation model. The relations are then predicted using both bounding box and segmentation mask information.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Object Pairs Selection affect effectiveness of segmentation-grounded Object Features in Relation Classification?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Object Pairs Selection",
            "Relation Classification",
            "Object Features"
        ],
        "id": 533,
        "masked_question": "How does [mask1] affect effectiveness of segmentation-grounded [mask2] in Relation Classification?",
        "masked_number": 2,
        "masked_elements": [
            "Object Pairs Selection",
            "Object Features"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.21580v1_figure_2.png",
        "paperid": "2407.21580v1",
        "paper_path": "./papers/2407.21580v1.json",
        "figure_id": "2407.21580v1_figure_2.png",
        "caption": "Figure 2: Overview of our two-stage method for Scene Graph Generation. Objects are first detected using a hybrid detector / segmentation model. The relations are then predicted using both bounding box and segmentation mask information.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What are the limitations of relying on Segmentation Layer for Ventricle & Midline Localization?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Segmentation Layer",
            "Ventricle & Midline Localization"
        ],
        "id": 534,
        "masked_question": "What are the limitations of relying on [mask1] for Ventricle & Midline Localization?",
        "masked_number": 1,
        "masked_elements": [
            "Segmentation Layer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.21580v1_figure_2.png",
        "paperid": "2407.21580v1",
        "paper_path": "./papers/2407.21580v1.json",
        "figure_id": "2407.21580v1_figure_2.png",
        "caption": "Figure 2: Overview of our two-stage method for Scene Graph Generation. Objects are first detected using a hybrid detector / segmentation model. The relations are then predicted using both bounding box and segmentation mask information.",
        "qtype": "Others",
        "response": "The provided text explains that the authors *chose* to leverage the segmentation capabilities (from the Segmentation Layer) for detecting the Ventricle System and Midline precisely because it *solves* challenges associated with them, rather than introducing limitations.\n\nSpecifically, the text states:\n*   \"Indeed, the 3D aspect ratio of the midline will heavily depend on the head s orientation, especially in the axial plane. This both can cause issues with anchor matching and bounding box regression.\"\n*   \"In contrast, depending on the swelling or the presence of blood, the ventricle system may appear as multiple fragmented objects. These would need to be detected individually, as there would be a large overlap between the bleeding with the system and the system itself, rendering an accurate object matching impossible.\"\n*   \"For these reasons, we decide to leverage Retina-UNet s segmentation capabilities by detecting both anatomies from the predicted semantic segmentation. This simple but elegant solution, can solve the previously mentioned challenged, while also ensuring"
    },
    {
        "question": "What ethical concerns arise from misclassifications during Relation Classification in clinical settings?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Relation Classification"
        ],
        "id": 535,
        "masked_question": "What ethical concerns arise from misclassifications during [mask1] in clinical settings?",
        "masked_number": 1,
        "masked_elements": [
            "Relation Classification"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.21580v1_figure_2.png",
        "paperid": "2407.21580v1",
        "paper_path": "./papers/2407.21580v1.json",
        "figure_id": "2407.21580v1_figure_2.png",
        "caption": "Figure 2: Overview of our two-stage method for Scene Graph Generation. Objects are first detected using a hybrid detector / segmentation model. The relations are then predicted using both bounding box and segmentation mask information.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What biases might Contextual Mapping introduce when modeling uncommon biomedical visual features?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Contextual Mapping"
        ],
        "id": 536,
        "masked_question": "What biases might [mask1] introduce when modeling uncommon biomedical visual features?",
        "masked_number": 1,
        "masked_elements": [
            "Contextual Mapping"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15232v1_figure_1.png",
        "paperid": "2411.15232v1",
        "paper_path": "./papers/2411.15232v1.json",
        "figure_id": "2411.15232v1_figure_1.png",
        "caption": "Figure 1: \nOverview of the BiomedCoOp framework, which combines LLM queries, learnable context tokens, and BiomedCLIP to generate multi-modal representations for biomedical tasks. The method integrates text and image features using prompt ensembling strategies, minimizes cross-entropy and semantic differences, and aligns teacher-student logits, enabling effective few-shot learning for novel biomedical categories.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What is the motivation behind cascading four Mamba heads after the ResNet backbone?",
        "relevant_section_ids": [
            "2.1"
        ],
        "relevant_context": [
            "In the following Mamba head, after going through cascaded layer normalization, linear projection (in the dimension of C), convolution (kernel size 3, stride 1), and SiLU activation, z, m, and the low-level motion descriptor are transmitted to SSMX-Corr.",
            "For each Mamba head, z is serially passed to the next head for a better feature representation, yet m and x are concurrently transmitted by each head to avoid error accumulation on the original template and raw motion."
        ],
        "final_answer": "Cascading multiple Mamba heads allows the template feature (z) to be progressively refined—each head builds on the previous one to produce a richer, more discriminative representation—while the search feature (x) and low-level motion descriptor (m) are fed into each head in parallel to prevent the original template and motion information from drifting or accumulating errors.",
        "relevant_elements": [
            "ResNet backbone",
            "Mamba head"
        ],
        "id": 540,
        "masked_question": "What is the motivation behind cascading four [mask1] after the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Mamba head",
            "ResNet backbone"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.08395v1_figure_1.png",
        "paperid": "2411.08395v1",
        "paper_path": "./papers/2411.08395v1.json",
        "figure_id": "2411.08395v1_figure_1.png",
        "caption": "Figure 1: \nStructure overview of the proposed MambaXCTrack. The ResNet backbone is cascaded with four Mamba heads. Each Mamba head has the same structure. z𝑧zitalic_z and x𝑥xitalic_x are the embedding features of template Z𝑍Zitalic_Z and search X𝑋Xitalic_X.",
        "qtype": "Design_Rationale",
        "response": "The red box highlights the \"Mamba Head\" blocks, and the blue box highlights the \"ResNet backbone\" followed by \"Proj\".\n\nAccording to the \"II-A MambaXCTrack\" section, specifically the sentence: \"For each Mamba head, **z is serially passed to the next head for a better feature representation**\", the motivation behind cascading the Mamba Heads is to progressively refine and obtain a better feature representation for the template feature `z`."
    },
    {
        "question": "What role does CIS play in preserving local pixel-wise interaction in SSMX-Corr?",
        "relevant_section_ids": [
            "2.2"
        ],
        "relevant_context": [
            "In this work, before SSMX-Corr, the CIS is adopted to enhance pixel-wise interaction between Z and X to better adapt to SSM-based cross-correlation.",
            "By performing CIS, the local pixels from template and search maps are regrouped to be adjacent, allowing the SSMX-Corr to be performed without losing local interaction and positional inductive bias."
        ],
        "final_answer": "CIS interleaves the template and search pixels—scanning them alternately—so that local template/search pixel pairs become adjacent in the SSM input sequence. This regrouping preserves the original pixel-wise interactions and positional inductive bias when SSMX-Corr performs its long-range, global modeling.",
        "relevant_elements": [
            "CIS",
            "SSMX-Corr"
        ],
        "id": 541,
        "masked_question": "What role does [mask1] play in preserving local pixel-wise interaction in SSMX-Corr?",
        "masked_number": 1,
        "masked_elements": [
            "CIS"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.08395v1_figure_1.png",
        "paperid": "2411.08395v1",
        "paper_path": "./papers/2411.08395v1.json",
        "figure_id": "2411.08395v1_figure_1.png",
        "caption": "Figure 1: \nStructure overview of the proposed MambaXCTrack. The ResNet backbone is cascaded with four Mamba heads. Each Mamba head has the same structure. z𝑧zitalic_z and x𝑥xitalic_x are the embedding features of template Z𝑍Zitalic_Z and search X𝑋Xitalic_X.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does the Mamba Head concurrently propagate template features and preserve low-level motion descriptor across stages?",
        "relevant_section_ids": [
            "2.1"
        ],
        "relevant_context": [
            "In the following Mamba head, after going through cascaded layer normalization, linear projection (in the dimension of C), convolution (kernel size 3, stride 1), and SiLU activation, Z, X, and the low-level motion descriptor m are transmitted to SSMX-Corr.",
            "For each Mamba head, Z is serially passed to the next head for a better feature representation, yet X and m are concurrently transmitted by each head to avoid error accumulation on the original template and raw motion."
        ],
        "final_answer": "Within each Mamba head, after normalizing, projecting, convolving, and activating the template (Z), search (X), and motion descriptor (m), the template embedding Z is sent forward in series through the stack of heads to refine its representation. In contrast, the search embedding X and the low-level motion descriptor m are fed in parallel into every head, ensuring that the raw motion cue and search features remain intact across stages and do not accumulate errors.",
        "relevant_elements": [
            "Mamba Head",
            "low-level motion descriptor"
        ],
        "id": 543,
        "masked_question": "How does the [mask1] concurrently propagate template features and preserve [mask2] across stages?",
        "masked_number": 2,
        "masked_elements": [
            "Mamba Head",
            "low-level motion descriptor"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.08395v1_figure_1.png",
        "paperid": "2411.08395v1",
        "paper_path": "./papers/2411.08395v1.json",
        "figure_id": "2411.08395v1_figure_1.png",
        "caption": "Figure 1: \nStructure overview of the proposed MambaXCTrack. The ResNet backbone is cascaded with four Mamba heads. Each Mamba head has the same structure. z𝑧zitalic_z and x𝑥xitalic_x are the embedding features of template Z𝑍Zitalic_Z and search X𝑋Xitalic_X.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Stable Diffusion integrate LLM-proposed replacements for object editing in synthetic data augmentation?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Stable Diffusion",
            "LLMs",
            "Synthetic Data Augmentation"
        ],
        "id": 544,
        "masked_question": "How does Stable Diffusion integrate LLM-proposed replacements for object editing in [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "Synthetic Data Augmentation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.02712v1_figure_2.png",
        "paperid": "2411.02712v1",
        "paper_path": "./papers/2411.02712v1.json",
        "figure_id": "2411.02712v1_figure_2.png",
        "caption": "Figure 2: Outline of our preference data construction and vision-guided preference learning framework. In the stage of Synthetic Data Augmentation, we utilize LVLMs, LLMs, and Stable Diffusion to manipulate images automatically. We formulate the generated samples into image- and response-contrast pairs for preference learning via our Vision-guided DPO approach.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does vision-guided DPO incorporate image-contrast and response-contrast preferences in its training objective?",
        "relevant_section_ids": [
            "3.1",
            "4",
            "4.1"
        ],
        "relevant_context": [
            "Given a response-contrast preference dataset D_r where y^w is preferred over y^l, DPO uses Bradley–Terry model (Bradley and Terry, 1952 ###reference_b3###) to derive the objective as: … Enlightened by contrast sets (Gardner et al., 2020 ###reference_b10###; Shen et al., 2023 ###reference_b34###), we construct an image-contrast dataset D_i to enhance visual understanding. With D_r and D_i, we have:",
            "In this work, we focus on mitigating hallucinations in LVLMs caused by insufficient context attention to visual information. We propose Vision-guided Direct Preference Optimization (V-DPO) to enhance visual understanding on both response- and image-contrast preference data.",
            "We integrate this term as an additional target to optimize in Eq. 1. Our result vision-enhanced reward maximization objective is then:"
        ],
        "final_answer": "Vision-guided DPO extends the standard Direct Preference Optimization framework by adding a vision-specific guidance term—derived via Classifier-Free Guidance (CFG)—directly into the reward function. This vision-enhanced reward maximization is then applied over both response-contrast pairs (D_r) and image-contrast pairs (D_i). Concretely, for every preferred versus non-preferred pair—whether the contrast lies in the textual response or in the image—the model maximizes the log-likelihood that the preferred example ranks higher, using a Bradley–Terry objective in which the reward includes the CFG-based visual guidance term.",
        "relevant_elements": [
            "vision-guided DPO",
            "image-contrast preference",
            "response-contrast preference"
        ],
        "id": 545,
        "masked_question": "How does [mask1] incorporate image-contrast and response-contrast preferences in its training objective?",
        "masked_number": 1,
        "masked_elements": [
            "vision-guided DPO"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.02712v1_figure_2.png",
        "paperid": "2411.02712v1",
        "paper_path": "./papers/2411.02712v1.json",
        "figure_id": "2411.02712v1_figure_2.png",
        "caption": "Figure 2: Outline of our preference data construction and vision-guided preference learning framework. In the stage of Synthetic Data Augmentation, we utilize LVLMs, LLMs, and Stable Diffusion to manipulate images automatically. We formulate the generated samples into image- and response-contrast pairs for preference learning via our Vision-guided DPO approach.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does image-contrast preference integrate the Bradley–Terry model differently than response-contrast preference?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "image-contrast preference",
            "response-contrast preference"
        ],
        "id": 547,
        "masked_question": "How does [mask1] integrate the Bradley–Terry model differently than response-contrast preference?",
        "masked_number": 1,
        "masked_elements": [
            "image-contrast preference"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.02712v1_figure_2.png",
        "paperid": "2411.02712v1",
        "paper_path": "./papers/2411.02712v1.json",
        "figure_id": "2411.02712v1_figure_2.png",
        "caption": "Figure 2: Outline of our preference data construction and vision-guided preference learning framework. In the stage of Synthetic Data Augmentation, we utilize LVLMs, LLMs, and Stable Diffusion to manipulate images automatically. We formulate the generated samples into image- and response-contrast pairs for preference learning via our Vision-guided DPO approach.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does K groups of points sampling relate to discrete SAM prompt encoding versus continuous mask outputs?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "We encode an arbitrary-shaped mask by using a bounding box and K points. The bounding box is expressed as <box>x1, y1, x2, y2</box>; the prompt of K points, each of which contains three values, x coordinate, y coordinate, and whether the point is on the object mask, are encoded as <point>xi, yi, vi</point>. By encoding continuous segmentation masks into discrete SAM prompts, we avoid adding any tokens or altering the model structure, while maintaining training with only text auto-regression cross-entropy loss.",
            "To provide the location supervision to LoRA, we randomly sample K groups of points in the training stage based on the object mask and then send these prompts to SAM. For every group, SAM delivers the segmentation result. We filter out the prompts with low IoUs compared to the ground-truth masks and only keep the top-K groups."
        ],
        "final_answer": "During training, the ground-truth continuous mask is converted into K sets of discrete prompts—each consisting of a bounding box plus K positive/negative points—by sampling K groups of points from the mask. These discrete prompts are fed to SAM, which generates continuous segmentation masks for each group. Finally, the K continuous masks are evaluated against the ground truth (via IoU), and the top-K prompt groups are retained. In this way, sampling K groups bridges the gap between the discrete prompt encoding needed by the language model and the continuous mask outputs produced by SAM.",
        "relevant_elements": [
            "K groups of points"
        ],
        "id": 549,
        "masked_question": "How does [mask1] sampling relate to discrete SAM prompt encoding versus continuous mask outputs?",
        "masked_number": 1,
        "masked_elements": [
            "K groups of points"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.10542v1_figure_1.png",
        "paperid": "2409.10542v1",
        "paper_path": "./papers/2409.10542v1.json",
        "figure_id": "2409.10542v1_figure_1.png",
        "caption": "Figure 1: Architecture diagram of SAM4MLLM-PPG.\n(a) The training process of PPG,\n(b) The inference process of PPG, (c) SAM as filter.",
        "qtype": "Literature_Background",
        "response": "The red-boxed area [mask1], labeled \"K groups of Points,\" refers to the **discrete** prompt points that are randomly sampled from the ground-truth mask. These discrete points, along with a bounding box, serve as the input \"prompt tokens\" for the SAM model.\n\nThe provided context explicitly states that SAM \"converts few discrete text prompt tokens (i.e., bounding box plus several points indicating whether they are inside or outside the object region) to high-quality **continuous-boundary segmentation masks**.\" It further clarifies that \"Our SAM4MLLM uses the discretized image coordinate for points,\" meaning the input points are numerically discrete.\n\nTherefore, the \"K groups of Points\" represent the **discrete prompts** that are fed into SAM. SAM then takes these discrete point prompts to produce its **continuous-boundary segmentation masks** as output, effectively bridging the gap between discrete point inputs and continuous mask outputs. This mechanism allows the method to encode continuous segmentation masks into discrete SAM prompts, avoiding complex model architecture changes or heterogeneous loss functions."
    },
    {
        "question": "How does sampling K point groups influence SAM filter effectiveness during LoRA training?",
        "relevant_section_ids": [
            "3.2",
            "4.1",
            "7"
        ],
        "relevant_context": [
            "To provide the location supervision to LoRA, we randomly sample k groups of points in the training stage based on the object mask and then send these prompts to SAM. For every group, SAM delivers the segmentation result. We filter out the prompts with low IoUs compared to the ground-truth masks and only keep the top-k groups (Fig. 1(c)).",
            "During the training data generation phase of PPG, we randomly sample K point groups within the ground truth bounding box. Each group consists of two positive points inside the ground truth mask and one negative point outside. We keep the K groups with the highest Intersection over Union (IoU) with the ground truth mask, and then randomly pick a single group from these. The chosen group of points are encoded into text using the proposed “mask as prompt” method to serve as the label for training.",
            "In Tab. 7, we provide an analysis for using SAM as our backend, where the upper-bound is the maximum IoU from multiple SAM prompts sampled using the ground-truth masks. The upper-bound is around 87.8% IoU, which is much higher than all existing methods. The predicted SAM prompts by our method achieve around 75% IoU, suggesting there is room for improvement on the MLLM side toward reaching the upper-bound quality."
        ],
        "final_answer": "By sampling K different point groups and running each through SAM, the training pipeline can compute IoUs between the SAM‐predicted masks and the ground-truth. Only the top-K groups (those whose prompts yield the highest IoUs) are kept as supervision for LoRA. In effect, a larger K provides a bigger pool of candidate prompts from which SAM can pick higher-quality ones (raising the upper-bound IoU toward ≈87.8%), while the actual predicted prompts achieve around 75% IoU. This filtering ensures that LoRA is taught using the most accurate prompt points.",
        "relevant_elements": [
            "K groups of Points",
            "SAM as filter",
            "LoRA"
        ],
        "id": 550,
        "masked_question": "How does sampling [mask1] influence SAM filter effectiveness during LoRA training?",
        "masked_number": 1,
        "masked_elements": [
            "K groups of Points"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.10542v1_figure_1.png",
        "paperid": "2409.10542v1",
        "paper_path": "./papers/2409.10542v1.json",
        "figure_id": "2409.10542v1_figure_1.png",
        "caption": "Figure 1: Architecture diagram of SAM4MLLM-PPG.\n(a) The training process of PPG,\n(b) The inference process of PPG, (c) SAM as filter.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does LoRA utilize filtered positive and negative prompt points to generate accurate location proposals?",
        "relevant_section_ids": [
            "3.2",
            "4.1"
        ],
        "relevant_context": [
            "In this method, an MLLM that can take both text-prompt and image inputs is adopted. To align the MLLM with segmentation utility, we use the parameter-efficient fine tuning technique, LoRA [20], to train the model based on some RES datasets with image-text pairs and ground-truth masks. LoRA outputs the location prompt including the bounding box b and M groups of positive and negative points {P⁺,P⁻}, as illustrated in Fig. 1(a).",
            "To provide the location supervision to LoRA, we randomly sample K groups of points (2 positive and 1 negative per group) in the training stage based on the object mask and then send these prompts to SAM. For every group, SAM delivers the segmentation result. We filter out the prompts with low IoUs compared to the ground-truth masks and only keep the top-K groups (Fig. 1(c)).",
            "During the training data generation phase of PPG, we randomly sample G point groups within the ground truth bounding box. Each group consists of two positive points inside the ground truth mask and one negative point outside. We keep the k groups with the highest Intersection over Union (IoU) with the ground truth mask, and then randomly pick a single group from these. The chosen group of points are encoded into text using the proposed “mask as prompt” method to serve as the label for training."
        ],
        "final_answer": "LoRA is trained to autoregressively predict a location prompt composed of a bounding box plus a small set of positive (inside‐mask) and negative (outside‐mask) point tokens. During training, K candidate groups of 2 positive and 1 negative point are sampled and passed through SAM; only the top‐K groups with the highest IoUs to the ground‐truth mask are retained. One of these high‐IoU groups is encoded—together with the box—into text and used as the target for LoRA’s cross‐entropy loss. At inference time, LoRA directly generates the same structured prompt (box plus points), thereby providing accurate location proposals for SAM.",
        "relevant_elements": [
            "LoRA",
            "Positive & Negative Prompt Points",
            "Location Proposal"
        ],
        "id": 551,
        "masked_question": "How does [mask1] utilize filtered positive and negative prompt points to generate accurate location proposals?",
        "masked_number": 1,
        "masked_elements": [
            "LoRA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.10542v1_figure_1.png",
        "paperid": "2409.10542v1",
        "paper_path": "./papers/2409.10542v1.json",
        "figure_id": "2409.10542v1_figure_1.png",
        "caption": "Figure 1: Architecture diagram of SAM4MLLM-PPG.\n(a) The training process of PPG,\n(b) The inference process of PPG, (c) SAM as filter.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does Social Cognition Penalty interact with the Spatial-Temporal Precognition Module during joint training?",
        "relevant_section_ids": [
            "3.2",
            "3.3",
            "4.3"
        ],
        "relevant_context": [
            "In III-B Main Policy Network (section 3.2): \"The LSTM hidden state is also used as a latent variable δ_R to connect with the auxiliary task module (see the next section).\"",
            "In III-C Spatial-Temporal Precognition Module (section 3.3): \"During training, the main policy network and these auxiliary tasks are optimized together. The total loss function is a weighted sum of the main policy loss L_main and the auxiliary loss …\"",
            "In IV-C Result Analysis (section 4.3): \"Finding 3: SCP coordinates and complements SPM, leading to a significant improvement and faster training. … With SCP, the full system achieves significant improvement … Also, … the model trained with both SPM and SCP exhibits faster convergence … SPM tasks cannot be effectively integrated without the guidance of SCP, which helps the model balance tasks and better leverage available information.\""
        ],
        "final_answer": "During joint training, the Social Cognition Penalty is incorporated into the main policy loss (L_main) while the Spatial-Temporal Precognition Module incurs its own auxiliary losses. Both parts share the same LSTM hidden representation δ_R, and the optimizer minimizes the sum of L_main (including the SCP terms) and the auxiliary losses. In practice, the SCP acts as a guiding signal that coordinates and balances the SPM’s count, position, and trajectory prediction tasks, yielding higher navigation success and faster convergence than training SPM alone.",
        "relevant_elements": [
            "Social Cognition Penalty",
            "Spatial-Temporal Precognition Module"
        ],
        "id": 552,
        "masked_question": "How does [mask1] interact with the [mask2] during joint training?",
        "masked_number": 2,
        "masked_elements": [
            "Social Cognition Penalty",
            "Spatial-Temporal Precognition Module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.13244v1_figure_2.png",
        "paperid": "2409.13244v1",
        "paper_path": "./papers/2409.13244v1.json",
        "figure_id": "2409.13244v1_figure_2.png",
        "caption": "Figure 2: Falcon Overview: The main policy network (top-right) takes Depth and GPS+Compass data as input. Its behavior is guided by the Social Cognition Penalty, which encourages socially compliant navigation and generates the main loss. During training, the output of the network s state encoder, combined with auxiliary information from the Habitat simulator, is processed by the Spatial-Temporal Precognition Module (bottom-right). Three socially-aware auxiliary tasks are then performed, producing auxiliary losses. The total loss is computed by weighting the main loss with the auxiliary losses.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How might the Social Cognition Penalty impede exploration in novel environments?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Social Cognition Penalty"
        ],
        "id": 554,
        "masked_question": "How might the [mask1] impede exploration in novel environments?",
        "masked_number": 1,
        "masked_elements": [
            "Social Cognition Penalty"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.13244v1_figure_2.png",
        "paperid": "2409.13244v1",
        "paper_path": "./papers/2409.13244v1.json",
        "figure_id": "2409.13244v1_figure_2.png",
        "caption": "Figure 2: Falcon Overview: The main policy network (top-right) takes Depth and GPS+Compass data as input. Its behavior is guided by the Social Cognition Penalty, which encourages socially compliant navigation and generates the main loss. During training, the output of the network s state encoder, combined with auxiliary information from the Habitat simulator, is processed by the Spatial-Temporal Precognition Module (bottom-right). Three socially-aware auxiliary tasks are then performed, producing auxiliary losses. The total loss is computed by weighting the main loss with the auxiliary losses.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What ethical considerations arise from encoding user emotions in the query encoding component?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "query encoding component"
        ],
        "id": 556,
        "masked_question": "What ethical considerations arise from encoding user emotions in the [mask1]?",
        "masked_number": 1,
        "masked_elements": [
            "query encoding component"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.23041v1_figure_1.png",
        "paperid": "2410.23041v1",
        "paper_path": "./papers/2410.23041v1.json",
        "figure_id": "2410.23041v1_figure_1.png",
        "caption": "Figure 1: The overview architecture of Emotional RAG framework. It contains four components: the query encoding component, the memory encoding component, the emotional retrieval component, and the response generation component. The emotional memory retrieved by Emotional RAG is sent to LLM, together with the character profile and query, to generate responses.",
        "qtype": "Others",
        "response": "The `[mask1]` refers to the \"Query encoding component.\"\n\nThe text describes the \"Query encoding component\" in detail, explaining that \"both the semantic and emotional state of the query are encoded as vectors in this component.\" It further specifies that GPT-3.5 is used to generate an 8-dimensional emotional vector for the query, representing 8 different emotional states with intensity scores.\n\nHowever, the provided text focuses on the technical implementation, evaluation, and performance of the Emotional RAG framework, specifically how it leverages emotional states for memory retrieval and response generation. It *does not* discuss any ethical considerations, challenges, or implications related to encoding user emotions or any other aspect of the system.\n\nTherefore, the question about ethical considerations arising from encoding user emotions in the Query encoding component cannot be answered from the provided context.\n\nunanswerable."
    },
    {
        "question": "How might the Ranking step introduce biases in memory fragment selection in the emotional retrieval component?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "emotional retrieval component",
            "Ranking"
        ],
        "id": 557,
        "masked_question": "How might the [mask1] step introduce biases in memory fragment selection in the emotional retrieval component?",
        "masked_number": 1,
        "masked_elements": [
            "Ranking"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.23041v1_figure_1.png",
        "paperid": "2410.23041v1",
        "paper_path": "./papers/2410.23041v1.json",
        "figure_id": "2410.23041v1_figure_1.png",
        "caption": "Figure 1: The overview architecture of Emotional RAG framework. It contains four components: the query encoding component, the memory encoding component, the emotional retrieval component, and the response generation component. The emotional memory retrieved by Emotional RAG is sent to LLM, together with the character profile and query, to generate responses.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What is the reasoning for symmetrically encoding semantics and emotion across query encoding component and memory encoding component?",
        "relevant_section_ids": [
            "1",
            "2.1",
            "2.2.1",
            "2.2.2",
            "2.2.3"
        ],
        "relevant_context": [
            "Based on the Mood-Dependent Memory theory in psychology, we propose a novel emotion-aware memory retrieval framework, termed Emotional RAG, to augment the response generation process of role-playing agents. The retrieving of memory in Emotional RAG follows the mood-congruity criterion, which means both the semantic relevance and emotional state of recalled memory are considered in the retrieval process.",
            "Query encoding component: both the semantic and emotional state of the query are encoded as vectors in this component.",
            "Memory encoding component: the memory unit stores conversation information of characters. Similar to query encoding, both the semantic and emotional state of the memory are encoded.",
            "We retrieve the memory fragments that are most similar to the user query from the memory unit of characters based on semantic similarity and emotional similarity.",
            "According to Bower’s Mood-Dependent Memory theory: events that are consistent with the character’s current emotion are easier to retrieve, we use the cosine distance between two emotion vectors to find emotionally consistent memory fragments."
        ],
        "final_answer": "Because Emotional RAG performs retrieval by jointly measuring semantic relevance and emotional congruence (the mood-congruity criterion), both the query and each memory fragment must be represented in the same semantic embedding space and the same emotional embedding space.  This symmetrical encoding makes it possible to directly compute and fuse semantic and emotional similarity scores when selecting which memories to retrieve.",
        "relevant_elements": [
            "query encoding component",
            "memory encoding component"
        ],
        "id": 558,
        "masked_question": "What is the reasoning for symmetrically encoding semantics and emotion across [mask1] and memory encoding component?",
        "masked_number": 1,
        "masked_elements": [
            "query encoding component"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.23041v1_figure_1.png",
        "paperid": "2410.23041v1",
        "paper_path": "./papers/2410.23041v1.json",
        "figure_id": "2410.23041v1_figure_1.png",
        "caption": "Figure 1: The overview architecture of Emotional RAG framework. It contains four components: the query encoding component, the memory encoding component, the emotional retrieval component, and the response generation component. The emotional memory retrieved by Emotional RAG is sent to LLM, together with the character profile and query, to generate responses.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What motivates sharing weights between dual deformation fields during auxiliary training?",
        "relevant_section_ids": [
            "4.1",
            "4.3"
        ],
        "relevant_context": [
            "Moreover, we share the weights of two deformation fields to transfer the motion knowledge from TimeFormer to mitigate the gap between the original branch and TimeFormer branch, which supports real-time rendering without TimeFormer during inference.",
            "Accounting for additional computation costs of TimeFormer, which can significantly decrease rendering speed, we force the original deformation field and the auxiliary deformation field to share weights for knowledge transferring."
        ],
        "final_answer": "They share the weights so that the motion patterns learned by the TimeFormer–augmented deformation field can be transferred to the original deformation field, allowing the TimeFormer module to be removed at inference time and thus avoiding any extra computational cost while preserving real-time rendering performance.",
        "relevant_elements": [
            "Deformation Field",
            "Shared Weight"
        ],
        "id": 560,
        "masked_question": "What motivates sharing [mask1] between dual [mask2]s during auxiliary training?",
        "masked_number": 2,
        "masked_elements": [
            "Shared Weight",
            "Deformation Field"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.11941v1_figure_2.png",
        "paperid": "2411.11941v1",
        "paper_path": "./papers/2411.11941v1.json",
        "figure_id": "2411.11941v1_figure_2.png",
        "caption": "Figure 2: The Framework of Deformable 3D Gaussians Reconstruction with TimeFormer. Existing deformable 3D Gaussians framework usually includes the canonical space and the deformation field (first row), we incorporate TimeFormer to capture cross-time relationships and explore motion patterns implicitly (second row).\nWe share weights of two deformation fields to transfer the learned motion knowledge. This allows us to exclude this Auxiliary Training Module\nduring inference.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does TimeFormer transform canonical Gaussian inputs before deformation field application?",
        "relevant_section_ids": [
            "4.1",
            "4.2"
        ],
        "relevant_context": [
            "Previous methods model motion patterns by explicitly learning temporal relationships on individual or neighboring timestamps, failing on those complex scenes containing violent movement or dynamic reflective surfaces. In contrast, we present TimeFormer to enable the deformable 3D Gaussian backbones themselves to model cross-time relationships from an implicit learning perspective. The main framework with the proposed TimeFormer is shown in Fig. 2. Our approach retains standard reconstruction modules, which include (1) 3D Gaussians in the canonical space and (2) a deformation field that applies time-variant transformation. Additionally, TimeFormer is introduced before the deformation field to extract implicit cross-time motion features for each Gaussian through a self-attention mechanism along the time dimension.",
            "As in Fig. 3, all Gaussians’s positions are made into B copies, expanded into B×N, and sampled timestamps are made into N copies, expanded into B×N. Then, we composite p_expand and t_expand together and apply position encoding function PE to extract high frequency information, as in Eq. 4.",
            "In the final stage, we use a tiny MLP to transform the last encoded features h_L into offset Δp in the linear space. We consider the output from the Cross-Temporal Encoder as a fixing residual term to the original positions to encourage a gradual, steady learning process on motion patterns."
        ],
        "final_answer": "Before passing Gaussians into the deformation field, TimeFormer first duplicates each canonical‐space Gaussian position across a small batch of sampled timestamps, concatenates these per‐timestamp copies with their time embeddings, and applies a sinusoidal position‐encoding PE. The resulting 2L‐dimensional features are fed through a multi-layer transformer encoder, whose final hidden vectors are decoded by a tiny MLP into residual offsets Δp. Those offsets are added back to the original Gaussian positions and the augmented Gaussians are then sent through the (shared) deformation field.",
        "relevant_elements": [
            "TimeFormer",
            "Deformation Field"
        ],
        "id": 562,
        "masked_question": "How does [mask1] transform canonical Gaussian inputs before deformation field application?",
        "masked_number": 1,
        "masked_elements": [
            "TimeFormer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.11941v1_figure_2.png",
        "paperid": "2411.11941v1",
        "paper_path": "./papers/2411.11941v1.json",
        "figure_id": "2411.11941v1_figure_2.png",
        "caption": "Figure 2: The Framework of Deformable 3D Gaussians Reconstruction with TimeFormer. Existing deformable 3D Gaussians framework usually includes the canonical space and the deformation field (first row), we incorporate TimeFormer to capture cross-time relationships and explore motion patterns implicitly (second row).\nWe share weights of two deformation fields to transfer the learned motion knowledge. This allows us to exclude this Auxiliary Training Module\nduring inference.",
        "qtype": "Implementation_Details",
        "response": "TimeFormer transforms canonical Gaussian inputs by first compositing them with position-encoded sampled timestamps and processing them through a Cross-Temporal Encoder. This encoder uses transformer layers with multi-head self-"
    },
    {
        "question": "How are Lc and Lt combined to optimize original and auxiliary splatted outputs?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "Then, we apply the splatting algorithm to these two groups of deformed space. We calculate the losses between rendered images and ground truth I as follows: L = L_c + λ_t L_t, where L_c and L_t represent losses of original branch and TimeFormer branch with I. We use a relatively smaller λ_t because we find it easy to overfit on the second branch with TimeFormer, causing a degradation in inference quality."
        ],
        "final_answer": "They are combined in a weighted‐sum total loss: L = L_c + λ_t L_t, where L_c is the loss on the original splatted outputs, L_t is the loss on the TimeFormer (auxiliary) splatted outputs, and λ_t is set relatively small to avoid overfitting the auxiliary branch.",
        "relevant_elements": [
            "Splatting",
            "Loss Lc",
            "Loss Lt"
        ],
        "id": 563,
        "masked_question": "How are [mask1] and [mask2] combined to optimize original and auxiliary splatted outputs?",
        "masked_number": 2,
        "masked_elements": [
            "Lc",
            "Lt"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.11941v1_figure_2.png",
        "paperid": "2411.11941v1",
        "paper_path": "./papers/2411.11941v1.json",
        "figure_id": "2411.11941v1_figure_2.png",
        "caption": "Figure 2: The Framework of Deformable 3D Gaussians Reconstruction with TimeFormer. Existing deformable 3D Gaussians framework usually includes the canonical space and the deformation field (first row), we incorporate TimeFormer to capture cross-time relationships and explore motion patterns implicitly (second row).\nWe share weights of two deformation fields to transfer the learned motion knowledge. This allows us to exclude this Auxiliary Training Module\nduring inference.",
        "qtype": "Implementation_Details",
        "response": "To answer how [mask1] and [mask2] are combined to optimize the original and auxiliary splatted outputs, we refer to the \"Shared Deformation Fields\" section of the provided context.\n\n1.  **Identify [mask1] and [mask2]:**\n    *   [mask1] (red box with $\\mathcal{L}_c$) represents the loss for the \"original branch\" (Deformed Space (I) -> Splatted Image I -> Ground Truth). The text renames this as $L_c$ in the loss equation or $\\mathcal{L}_{\\text{original}}$.\n    *   [mask2] (blue box with $\\mathcal{L}_t$) represents the loss for the \"TimeFormer branch\" or \"auxiliary branch\" (Deformed Space (II) -> Splatted Image II -> Ground Truth). The text renames this as $L_"
    },
    {
        "question": "How does Frequency-Domain Mixed Augmentation generate and apply the binary mask for mixing high-frequency and original frequency components?",
        "relevant_section_ids": [
            "3.2.1"
        ],
        "relevant_context": [
            "We define a frequency mixing function, which randomly mixes F and F_H:\n\n   F' = M ⊙ F_H + (1 - M) ⊙ F",
            "M is a matrix of the same size as F and F_H, with a randomly selected square area covering (randomly ranging from 0 to 0.5) proportion of the total area set to 1, and the rest set to 0."
        ],
        "final_answer": "Frequency-Domain Mixed Augmentation constructs a binary mask M of the same dimensions as the original and high-frequency spectra by selecting a random square region that spans between 0% and 50% of the total area and setting its entries to 1 (all other entries of M are 0). It then uses M to blend the two spectra via element-wise multiplication: F′ = M ⊙ F_H + (1 – M) ⊙ F, where F_H is the high-frequency filtered spectrum and F is the original spectrum.",
        "relevant_elements": [
            "Frequency-Domain Mixed Augmentation"
        ],
        "id": 564,
        "masked_question": "How does [mask1] generate and apply the binary mask for mixing high-frequency and original frequency components?",
        "masked_number": 1,
        "masked_elements": [
            "Frequency-Domain Mixed Augmentation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.06977v2_figure_2.png",
        "paperid": "2410.06977v2",
        "paper_path": "./papers/2410.06977v2.json",
        "figure_id": "2410.06977v2_figure_2.png",
        "caption": "Figure 2: The architecture of our proposed method, consisting of (a) Frequency-Domain Mixed Augmentation(described in Sec.3.2.1), (b) Object-Aware Dynamic Selection (described in Sec.3.2.2), (c) Feature Equilibrium Loss (described in Sec.3.3).",
        "qtype": "Implementation_Details",
        "response": "Within the Frequency-Domain Mixed Augmentation module ([mask1]):\n\n1.  **Generation of the binary mask `M`**: The binary mask `M` is generated as a matrix with the same dimensions as the frequency domain representations of the original and high-frequency images. A randomly selected square area within `M` is chosen, with its"
    },
    {
        "question": "How does Object-Aware Dynamic Selection sort and select top Z attention-based high-frequency tokens from MHSA heads?",
        "relevant_section_ids": [
            "3.2.2"
        ],
        "relevant_context": [
            "Upon reaching the final layer ℓ, we compute the attention scores a_i = \\frac{1}{M} \\sum_{h=1}^M A^{ℓ,h}_{cls,i}, serving as a quantifiable metric that reflects the average attention distribution across heads in the model’s final layer.",
            "These a_i are analyzed to dynamically select the set of high-frequency information tokens that exhibit the highest attention scores. This selection is formalized as f = γ(a) and Ψ = f[1:Z], where γ is a function that sorts scores in a set in descending order and then outputs the indices of these scores, Ψ represents the object perception token indices, and Z is a selection parameter."
        ],
        "final_answer": "Object-Aware Dynamic Selection first averages the class-to-token attention weights over all M MHSA heads in the last Transformer layer to obtain a per-patch score a_i. It then applies a sorting function γ to rank these a_i values in descending order and picks the first Z indices from the sorted list. Those top-Z tokens are treated as the high-frequency embeddings most relevant to the target.",
        "relevant_elements": [
            "Object-Aware Dynamic Selection",
            "MHSA"
        ],
        "id": 565,
        "masked_question": "How does [mask1] sort and select top Z attention-based high-frequency tokens from MHSA heads?",
        "masked_number": 1,
        "masked_elements": [
            "Object-Aware Dynamic Selection"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.06977v2_figure_2.png",
        "paperid": "2410.06977v2",
        "paper_path": "./papers/2410.06977v2.json",
        "figure_id": "2410.06977v2_figure_2.png",
        "caption": "Figure 2: The architecture of our proposed method, consisting of (a) Frequency-Domain Mixed Augmentation(described in Sec.3.2.1), (b) Object-Aware Dynamic Selection (described in Sec.3.2.2), (c) Feature Equilibrium Loss (described in Sec.3.3).",
        "qtype": "Implementation_Details",
        "response": "The object-aware dynamic selection mechanism sorts and selects top Z attention-based high-frequency tokens as follows:\n\n1.  **Compute Attention Scores:** Upon reaching the final layer `L` of the Vision Transformer, the model computes attention scores for each patch token. Specifically, `Attention_score_L_i` is derived by averaging the attention scores of the `i`-th token relative to the `[CLS]` token across all `M` attention heads in the last layer. This `Attention_score_L_i` serves as a quantifiable metric reflecting the average attention distribution, indicating which parts of the input are given higher attention by the model.\n\n2.  **Sort and Select Indices:** These computed `Attention_score_L_i` values are then analyzed. A function `f` sorts these scores in descending order and outputs the indices (`omega_p`) corresponding to the top `Z` highest attention scores. `Z` is a dynamic selection parameter (calculated as `Z_1 + Z_2`).\n\n3.  **Select High-Frequency Tokens:** Finally, using these selected object perception token indices (`omega_p`), a function `g` selects the corresponding high-frequency information tokens (`X_h_select`) from the input high-frequency tokens (`X_h`). This process ensures that only the high-frequency tokens most relevant to the object (as indicated by high attention scores) are chosen, minimizing the influence of environmental noise. The selected object-aware high-frequency embeddings, along with the class token, are then used for subsequent feature learning."
    },
    {
        "question": "How does Frequency-Domain Mixed Augmentation interact with high-frequency and original embeddings in the Vision Transformer?",
        "relevant_section_ids": [
            "3.2.1",
            "3.3"
        ],
        "relevant_context": [
            "In brief, we transform the spatial representation of an image into a frequency domain and extract high-frequency information to obtain a representation dominated by high frequencies. The frequency-domain representation of the original image is mixed with the high-frequency representation, thereby generating an augmented representation. ... The augmented high-frequency representation, denoted by X_H and serving as the input high-frequency representation, typically represents finer details and edges within the image. X_H is derived by converting the augmented frequency domain representation X' back to the spatial domain.",
            "Our model simultaneously takes visual image inputs and high-frequency augmented inputs, both of which are crucial for discriminative feature learning. The strategies we proposed above primarily guide the model to focus on high-frequency information. However, this needs to be established without compromising the learning of original visual information. Therefore, we further introduce the feature equilibrium loss to constrain the high-frequency features and visual features of the same individual from deviating excessively in the feature space."
        ],
        "final_answer": "Frequency-Domain Mixed Augmentation (FMA) first converts each input image into the frequency domain, extracts its high-frequency components, and then randomly blends those high-frequency components with the original frequency spectrum. The blended spectrum is brought back to the spatial domain to produce an augmented image X_H rich in edge and texture details. Both this high-frequency augmented image and the original image are then tokenized into patch embeddings and passed through the same Vision Transformer backbone (with shared weights). As a result, the model learns two parallel sets of embeddings—one from the raw image and one from the FMA output—which are jointly optimized (via ID and triplet losses) and kept in alignment by a feature-equilibrium loss that prevents them from drifting apart in feature space.",
        "relevant_elements": [
            "Frequency-Domain Mixed Augmentation",
            "Vision Transformer"
        ],
        "id": 566,
        "masked_question": "How does [mask1] interact with high-frequency and original embeddings in the Vision Transformer?",
        "masked_number": 1,
        "masked_elements": [
            "Frequency-Domain Mixed Augmentation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.06977v2_figure_2.png",
        "paperid": "2410.06977v2",
        "paper_path": "./papers/2410.06977v2.json",
        "figure_id": "2410.06977v2_figure_2.png",
        "caption": "Figure 2: The architecture of our proposed method, consisting of (a) Frequency-Domain Mixed Augmentation(described in Sec.3.2.1), (b) Object-Aware Dynamic Selection (described in Sec.3.2.2), (c) Feature Equilibrium Loss (described in Sec.3.3).",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Feature Equilibrium Loss balance discrepancies between global features and high-frequency features to preserve visual consistency?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Therefore, we further introduce the feature equilibrium loss to constrain the high-frequency features and visual features of the same individual from deviating excessively in the feature space.",
            "Feature equilibrium loss aggregates the differences across all selected tokens, ensuring a comprehensive measure of the discrepancy between the high-frequency and original features for each token.",
            "By minimizing L_FE, we encourage the model to preserve the essential features of the original input, while still leveraging the detailed textures and patterns enhanced in the high-frequency components, to ensure that the model learning does not overemphasize the high-frequency details at the expense of the original feature.",
            "This balance maintains visual and spatial consistency with the original feature while emphasizing high-frequency feature, thus improving the overall efficacy of feature extraction."
        ],
        "final_answer": "The Feature Equilibrium Loss computes the per-token differences between the high-frequency embeddings and the corresponding original (global) embeddings, sums these discrepancies across all selected tokens, and then minimizes this aggregate. By doing so, it prevents the high-frequency–enhanced features from drifting too far from the original visual features, ensuring that fine textures and patterns are learned without sacrificing the overall visual and spatial consistency of the image.",
        "relevant_elements": [
            "Feature Equilibrium Loss",
            "Global Features"
        ],
        "id": 567,
        "masked_question": "How does [mask1] balance discrepancies between global features and high-frequency features to preserve visual consistency?",
        "masked_number": 1,
        "masked_elements": [
            "Feature Equilibrium Loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.06977v2_figure_2.png",
        "paperid": "2410.06977v2",
        "paper_path": "./papers/2410.06977v2.json",
        "figure_id": "2410.06977v2_figure_2.png",
        "caption": "Figure 2: The architecture of our proposed method, consisting of (a) Frequency-Domain Mixed Augmentation(described in Sec.3.2.1), (b) Object-Aware Dynamic Selection (described in Sec.3.2.2), (c) Feature Equilibrium Loss (described in Sec.3.3).",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does integrating text-based environment embedding with convolutional feature encoder mirror adapter methodologies in noise-aware training?",
        "relevant_section_ids": [
            "2.1",
            "3"
        ],
        "relevant_context": [
            "Leem et al. [21] proposed to adapt the transformer-based SER model to multiple types of noises with skip connection adapters. They not only trained the SER model with multiple environments but also focused on leveraging the environmental information of the testing conditions to improve SER performance under noisy conditions.",
            "We achieve this goal by combining the text embedding with the acoustic representation, which is the output of the convolutional encoder. We apply trainable linear projection to the text embedding to match its dimension to the acoustic representation embeddings. We concatenate the projected text embedding to the acoustic representation embeddings along the time axis, then feed them into the transformer encoder."
        ],
        "final_answer": "By projecting the text-derived environment embedding to match the convolutional feature dimensions and then concatenating it alongside those features before the transformer encoder, the method effectively injects environment-specific context into the network in the same spirit as skip-connection adapters—i.e., adding test-condition information directly into intermediate representations to achieve noise-aware adaptation.",
        "relevant_elements": [
            "text-based environment embedding",
            "convolutional feature encoder"
        ],
        "id": 568,
        "masked_question": "How does integrating [mask1] with convolutional feature encoder mirror adapter methodologies in noise-aware training?",
        "masked_number": 1,
        "masked_elements": [
            "text-based environment embedding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.17716v1_figure_1.png",
        "paperid": "2407.17716v1",
        "paper_path": "./papers/2407.17716v1.json",
        "figure_id": "2407.17716v1_figure_1.png",
        "caption": "Figure 1: Our proposed text-guided environment-aware training framework. The environment representation is concatenated with the output of the convolutional feature encoder.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does pre-trained text encoder injection influence transformer encoder attention akin to contrastive pretraining methods?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "pre-trained text encoder",
            "transformer encoder"
        ],
        "id": 569,
        "masked_question": "How does [mask1] injection influence [mask2] attention akin to contrastive pretraining methods?",
        "masked_number": 2,
        "masked_elements": [
            "pre-trained text encoder",
            "transformer encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.17716v1_figure_1.png",
        "paperid": "2407.17716v1",
        "paper_path": "./papers/2407.17716v1.json",
        "figure_id": "2407.17716v1_figure_1.png",
        "caption": "Figure 1: Our proposed text-guided environment-aware training framework. The environment representation is concatenated with the output of the convolutional feature encoder.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does concatenating the environment embedding to convolutional outputs guide the transformer encoder's adaptation to noise?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "The text embedding extracted from the environmental description is combined with the acoustic representation in the SER model, allowing it to denoise the representation for the given environmental description.",
            "We achieve this goal by combining the text embedding with the acoustic representation, which is the output of the convolutional encoder. We apply trainable linear projection to the text embedding to match its dimension to the acoustic representation embeddings. We concatenate the projected text embedding to the acoustic representation embeddings along the time axis, then feed them into the transformer encoder. We update the transformer encoder and the downstream head with the concatenated embeddings."
        ],
        "final_answer": "By concatenating a trainable projection of the environment embedding to each frame of the convolutional feature outputs along the time axis, the transformer encoder receives both the noisy acoustic features and explicit information about the noise condition. This joint input guides the transformer to learn a denoising function specific to the described environment, adapting its internal representations to better filter out the noise.",
        "relevant_elements": [
            "text-based environment embedding",
            "transformer encoder"
        ],
        "id": 570,
        "masked_question": "How does concatenating the [mask1] to convolutional outputs guide the [mask2]'s adaptation to noise?",
        "masked_number": 2,
        "masked_elements": [
            "text-based environment embedding",
            "transformer encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.17716v1_figure_1.png",
        "paperid": "2407.17716v1",
        "paper_path": "./papers/2407.17716v1.json",
        "figure_id": "2407.17716v1_figure_1.png",
        "caption": "Figure 1: Our proposed text-guided environment-aware training framework. The environment representation is concatenated with the output of the convolutional feature encoder.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does average pooling shape the text-based environment embedding before its fusion with acoustic representations?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "For each text encoder, we use the same tokenizer used in its pre-training to tokenize the text description of the environment. We extract token-level text embeddings from the tokenized prompt and then apply average pooling, resulting in a single representation vector for each prompt."
        ],
        "final_answer": "Average pooling takes the sequence of token-level embeddings from the text encoder and aggregates them into a single fixed-size environment representation vector, which is then projected and concatenated with the acoustic embeddings.",
        "relevant_elements": [
            "average pooling",
            "text-based environment embedding"
        ],
        "id": 571,
        "masked_question": "How does [mask1] shape the [mask2] before its fusion with acoustic representations?",
        "masked_number": 2,
        "masked_elements": [
            "average pooling",
            "text-based environment embedding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.17716v1_figure_1.png",
        "paperid": "2407.17716v1",
        "paper_path": "./papers/2407.17716v1.json",
        "figure_id": "2407.17716v1_figure_1.png",
        "caption": "Figure 1: Our proposed text-guided environment-aware training framework. The environment representation is concatenated with the output of the convolutional feature encoder.",
        "qtype": "Experimental_Results",
        "response": "Here's a step-by-step reasoning process:\n\n1.  **Identify [mask1]**: The red box highlights \"Average pooling\".\n2.  **Identify [mask2]**: The blue box highlights \"Text-based environment embedding\".\n3.  **Locate relevant information in the text**: The \"Proposed Method\" section discusses how text descriptions are used. Specifically, the paragraph starting with \"We extract the text-based environment embedding...\" and continuing \"For each text encoder, we use the same tokenizer used in its pre-training to tokenize the text description of the environment. We extract **token-level text embeddings** from the tokenized prompt and then apply **average pooling**, resulting in a **single representation vector** for each prompt.\"\n4.  **Connect the masks to the text**:\n    *   The \"text-based environment embedding\" ([mask2]) is the overall representation derived from the text.\n    *   The text states that the pre-trained text encoder first extracts \"token-level text embeddings\".\n    *   Then, \"[mask1] Average pooling\" is applied to these \"token-level text embeddings\".\n    *   The result of this pooling is a \"single representation vector\".\n5.  **Determine the shaping effect**: The text explicitly states that average pooling \"resulting in a single representation vector for each prompt.\" This single vector"
    },
    {
        "question": "How does the cross-attention mechanism contribute to the local alignment loss based on the results?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Cross-attention",
            "Local alignment loss"
        ],
        "id": 573,
        "masked_question": "How does the [mask1] mechanism contribute to the [mask2] based on the results?",
        "masked_number": 2,
        "masked_elements": [
            "Cross-attention",
            "Local alignment loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.00609v1_figure_1.png",
        "paperid": "2411.00609v1",
        "paper_path": "./papers/2411.00609v1.json",
        "figure_id": "2411.00609v1_figure_1.png",
        "caption": "Figure 1: The Proposed MRI-Report Contrastive Learning Framework",
        "qtype": "Experimental_Results",
        "response": "The self-attention mechanism (mask1) contributes to the global image representation (mask2) by processing the output of the last convolutional module (Conv Module 4) of the 3D ResNet. It does this by calculating attention weights to create a \"new weighted image embedding,\" or a \"weighted feature map.\" This weighted feature map, which helps the model focus on relevant parts of the image, is then directly extracted and utilized as the global image representation."
    },
    {
        "question": "What alternative architectures could replace the Clinical Longformer for extracting global text representations?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "unanswerable",
        "relevant_elements": [
            "Clinical Longformer",
            "Global Text Representation"
        ],
        "id": 574,
        "masked_question": "What alternative architectures could replace the [mask1] for extracting [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Clinical Longformer",
            "Global Text Representation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.00609v1_figure_1.png",
        "paperid": "2411.00609v1",
        "paper_path": "./papers/2411.00609v1.json",
        "figure_id": "2411.00609v1_figure_1.png",
        "caption": "Figure 1: The Proposed MRI-Report Contrastive Learning Framework",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What scalability limitations could cross-attention modules introduce when aligning local image representations?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "cross-attention",
            "Local Image Representation"
        ],
        "id": 575,
        "masked_question": "What scalability limitations could [mask1] modules introduce when aligning local [mask2]s?",
        "masked_number": 2,
        "masked_elements": [
            "cross-attention",
            "Local Image Representation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.00609v1_figure_1.png",
        "paperid": "2411.00609v1",
        "paper_path": "./papers/2411.00609v1.json",
        "figure_id": "2411.00609v1_figure_1.png",
        "caption": "Figure 1: The Proposed MRI-Report Contrastive Learning Framework",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What robustness issues might global audio feature introduce when fed into Multi-scale Multi-instance Transformer?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "global audio feature",
            "Multi-scale Multi-instance Transformer"
        ],
        "id": 576,
        "masked_question": "What robustness issues might [mask1] introduce when fed into Multi-scale Multi-instance Transformer?",
        "masked_number": 1,
        "masked_elements": [
            "global audio feature"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.00486v1_figure_2.png",
        "paperid": "2409.00486v1",
        "paper_path": "./papers/2409.00486v1.json",
        "figure_id": "2409.00486v1_figure_2.png",
        "caption": "Figure 2: Illustration of the proposed Multi-scale Multi-instance Visual Sound Localization (M2VSL) framework for weakly-supervised audio-visual localization and segmentation.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might modality imbalance between multi-scale visual features and global audio feature affect Multi-scale Multi-instance Contrastive learning?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "multi-scale visual features",
            "global audio feature",
            "Multi-scale Multi-instance Contrastive"
        ],
        "id": 577,
        "masked_question": "How might modality imbalance between [mask1] and global audio feature affect Multi-scale Multi-instance Contrastive learning?",
        "masked_number": 1,
        "masked_elements": [
            "multi-scale visual features"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.00486v1_figure_2.png",
        "paperid": "2409.00486v1",
        "paper_path": "./papers/2409.00486v1.json",
        "figure_id": "2409.00486v1_figure_2.png",
        "caption": "Figure 2: Illustration of the proposed Multi-scale Multi-instance Visual Sound Localization (M2VSL) framework for weakly-supervised audio-visual localization and segmentation.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "Why apply Multi-scale Multi-instance Transformer to aggregate global audio feature with multi-scale visual features?",
        "relevant_section_ids": [
            "1",
            "3.3"
        ],
        "relevant_context": [
            "Furthermore, we introduce a unique component, the Multi-scale Multi-instance Transformer to dynamically aggregate multi-scale cross-modal representations, enhancing the standard Visual Transformer (ViT) specifically for the task of visual sound localization.",
            "The MMT module is designed to effectively aggregate multi-scale features from the raw input."
        ],
        "final_answer": "The Multi-scale Multi-instance Transformer is used in order to dynamically and effectively aggregate global audio representations together with visual features at multiple scales, thereby enabling richer cross-modal fusion and improving the accuracy of visual sound localization and segmentation.",
        "relevant_elements": [
            "Multi-scale Multi-instance Transformer",
            "global audio feature",
            "multi-scale visual features"
        ],
        "id": 578,
        "masked_question": "Why apply [mask1] to aggregate global audio feature with multi-scale visual features?",
        "masked_number": 1,
        "masked_elements": [
            "Multi-scale Multi-instance Transformer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.00486v1_figure_2.png",
        "paperid": "2409.00486v1",
        "paper_path": "./papers/2409.00486v1.json",
        "figure_id": "2409.00486v1_figure_2.png",
        "caption": "Figure 2: Illustration of the proposed Multi-scale Multi-instance Visual Sound Localization (M2VSL) framework for weakly-supervised audio-visual localization and segmentation.",
        "qtype": "Design_Rationale",
        "response": "The Multi-scale Multi-instance Transformer (MMT), highlighted by [mask1], is applied to aggregate global audio features with multi-scale visual features for the following reasons, as stated in the text:\n\n1.  **Dynamically aggregate multi-scale cross-modal representations:** The Introduction section mentions that the MMT is introduced \"to dynamically aggregate multi-scale cross-modal representations, enhancing the standard Visual Transformer (ViT) specifically for the task of visual sound localization.\" This implies it combines information from different modalities (audio and visual) and at various scales.\n2.  **Effectively aggregate multi-scale features from the raw input:** The \"Multi-scale Multi-instance Transformer\" section explicitly states, \"The MMT module is designed to effectively aggregate multi-scale features from the raw input.\" Given the inputs are multi-scale visual features and global audio features, it aggregates these to form a fused representation.\n\nIn essence, the MMT serves as a crucial component for **cross-modal fusion**, enabling the model to learn meaningful correspondences between the global audio signal and the detailed multi-scale visual information, which is essential for accurate visual sound localization and segmentation."
    },
    {
        "question": "What benefits arise from using Multi-scale Multi-instance Contrastive with both positive and negative multi-scale instances?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Addressing the modality uncertainty inherent in previous weakly-supervised semantic segmentation baselines, our approach, inspired by EZ-VSL, focuses on aligning the audio with the most closely associated multi-scale visual features. This is predicated on the understanding that most video frame locations are unrelated to the sound source and should not be aligned with the audio during training.",
            "We introduce a multi-scale multiple-instance contrastive learning objective, MMC, which seeks to align at least one location in a bag of multi-scale visual features with the corresponding audio representation in the same mini-batch, which is defined as:",
            "Furthermore, we employ a symmetric loss to differentiate negative audio bags from other audio samples in the same mini-batch, which is defined as",
            "This approach aims to learn discriminative global audio representations and multi-scale visual features, which are then used to generate updated multi-scale audio-visual features and, ultimately, the output mask using , which follows EZ-VSL (Mo & Morgado, 2022a ###reference_b26###)."
        ],
        "final_answer": "By using MMC with positive multi-scale instances, the model ensures at least one spatial location at each scale is correctly aligned with the audio, addressing modality uncertainty and avoiding spurious alignments. Incorporating negative multi-scale instances via a symmetric contrastive loss further drives the model to distinguish mismatched audio–visual pairs. Together, these positive and negative constraints produce more discriminative global audio embeddings and multi-scale visual features, leading to more accurate audio-driven mask generation under weak supervision.",
        "relevant_elements": [
            "Multi-scale Multi-instance Contrastive",
            "positive",
            "negative"
        ],
        "id": 579,
        "masked_question": "What benefits arise from using [mask1] with both [mask2] and negative multi-scale instances?",
        "masked_number": 2,
        "masked_elements": [
            "Multi-scale Multi-instance Contrastive",
            "positive"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.00486v1_figure_2.png",
        "paperid": "2409.00486v1",
        "paper_path": "./papers/2409.00486v1.json",
        "figure_id": "2409.00486v1_figure_2.png",
        "caption": "Figure 2: Illustration of the proposed Multi-scale Multi-instance Visual Sound Localization (M2VSL) framework for weakly-supervised audio-visual localization and segmentation.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What is the motivation for fusing CLIP-ViT and Pose-ViT embeddings prior to projection?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Previous works [43, 4] commonly use CLIP visual encoder [52] as the visual branch. However, since CLIP is optimized by global and coarse-grained supervision signals from image captions, it struggles to capture pose-relevant details.",
            "Differently, the pose estimation task demands precise localization of human keypoints, which encourages the visual encoder to capture fine-grained pose features.",
            "Then we concatenate the embedding output by these two encoders along the channel dimension, and apply a trainable projector layer (with projection matrix W) to align the dimension of the concatenated visual features to that of text features as F = W [F_CLIP; F_pose]."
        ],
        "final_answer": "By fusing the two embeddings, UniPose combines CLIP-ViT’s strong alignment with the text embedding space (global, coarse supervision) and Pose-ViT’s fine-grained, keypoint-focused features (precise pose details). This ensures the visual input both aligns well with language and preserves detailed pose information before projection.",
        "relevant_elements": [
            "CLIP-ViT",
            "Pose-ViT",
            "Projection Layer"
        ],
        "id": 580,
        "masked_question": "What is the motivation for fusing [mask1] and Pose-ViT embeddings prior to projection?",
        "masked_number": 1,
        "masked_elements": [
            "CLIP-ViT"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.16781v1_figure_2.png",
        "paperid": "2411.16781v1",
        "paper_path": "./papers/2411.16781v1.json",
        "figure_id": "2411.16781v1_figure_2.png",
        "caption": "Figure 2: Method overview: UniPose comprises a Pose Tokenizer, Visual Processor and a pose-aware language LLM. Combining Pose Tokens learned by pose tokenizer, Visual Embeddings from visual processor and Text Tokens from text tokenizer, UniPose enables joint modeling of pose comprehension, generation and editing within a unified visual-language backbone.",
        "qtype": "Design_Rationale",
        "response": "The motivation for fusing CLIP-ViT and Pose-ViT embeddings prior to projection is to combine their complementary strengths to achieve a comprehensive visual representation suitable for pose-relevant tasks.\n\nHere's a breakdown:\n1.  **CLIP-ViT's Limitation:** The text states that \"CLIP is optimized by global and coarse-grained supervision signals from image captions, it struggles to capture pose-relevant details.\" This means CLIP is good for general image understanding but lacks the precision needed for fine-grained human pose analysis.\n2.  **Pose-ViT's Strength:** In contrast, the paper integrates a \"pose-specific Vision Transformer [23], pretrained on the pose estimation task,\" because \"the pose estimation task demands precise localization of human keypoints, which encourages the visual encoder to capture fine-grained pose features.\"\n3.  **Fusing for Comprehensive Representation:** By concatenating the embeddings from both CLIP-ViT and Pose-ViT, the model benefits from CLIP's broader visual context and general understanding, while simultaneously gaining the fine-grained, precise, and pose-specific features provided by the Pose-ViT. This fused representation, then projected, is tailored to capture both the overall visual information and the critical pose details necessary for tasks involving human pose comprehension, generation, and editing."
    },
    {
        "question": "Why apply bidirectional attention to pose tokens while preserving causal attention for text tokens?",
        "relevant_section_ids": [
            "1",
            "3.2"
        ],
        "relevant_context": [
            "Unlike text tokens, pose tokens encode spatial joint positions without causal dependencies, making unified autoregressive modeling suboptimal.",
            "To address this, we apply causal attention to text tokens and bidirectional attention to pose tokens.",
            "However, pose tokens, which encode spatial positions of human joints, are inherently non-sequential, making traditional autoregressive generation suboptimal.",
            "Specifically, we apply causal attention to text sequence, but apply bidirectional attention within the pose token sequence."
        ],
        "final_answer": "Because pose tokens represent simultaneous, non-sequential spatial joint positions (with no inherent causal order), autoregressive (causal) attention is suboptimal for them. Bidirectional attention allows each pose token to attend to all other pose tokens and capture their spatial relationships, while preserving causal attention on text tokens maintains correct autoregressive text generation.",
        "relevant_elements": [
            "pose tokens",
            "text tokens",
            "Mixed Attention Mask"
        ],
        "id": 581,
        "masked_question": "Why apply bidirectional attention to [mask1] while preserving causal attention for text tokens?",
        "masked_number": 1,
        "masked_elements": [
            "pose tokens"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.16781v1_figure_2.png",
        "paperid": "2411.16781v1",
        "paper_path": "./papers/2411.16781v1.json",
        "figure_id": "2411.16781v1_figure_2.png",
        "caption": "Figure 2: Method overview: UniPose comprises a Pose Tokenizer, Visual Processor and a pose-aware language LLM. Combining Pose Tokens learned by pose tokenizer, Visual Embeddings from visual processor and Text Tokens from text tokenizer, UniPose enables joint modeling of pose comprehension, generation and editing within a unified visual-language backbone.",
        "qtype": "Design_Rationale",
        "response": "The content highlighted by `mask1` refers to the **Pose Tokenizer**, which generates **pose tokens**.\n\nHere's why bidirectional attention is applied to pose tokens while preserving causal attention for text tokens, according to the text:\n\n1.  **Nature of Pose Tokens:** Pose tokens encode spatial positions of human joints. Unlike text, they are **inherently non-sequential**. Traditional autoregressive (causal) generation, which processes tokens one after another, is suboptimal for such non-sequential data.\n2.  **Modeling Pose Tokens as a Whole:** To address the non-sequential nature of pose tokens, the model proposes to model \"pose tokens as a whole.\" Applying **bidirectional attention** allows each pose token within a sequence to attend to all other tokens in that same pose sequence (both preceding and succeeding), enabling a holistic understanding of the pose. This also means that during generation, all pose tokens can be predicted in a single forward pass, typically using learnable pose queries.\n3.  **Nature of Text Tokens:** Text tokens are inherently **sequential data**. Large Language Models (LLMs) are designed for autoregressive modeling with **causal attention**, meaning they generate text tokens one by one, attending only to previously generated tokens. Preserving causal attention for text tokens allows the LLM to maintain its original reasoning capabilities and effectiveness in generating sequential linguistic data.\n4.  **Overall Goal:** This \"mixed-attention mechanism\" adapts the attention strategy to the distinct internal logical relationships of pose and text tokens. It \"preserves LLM’s original reasoning capabilities while enhancing contextual pose perception, enabling more effective pose generation and"
    },
    {
        "question": "How does KAN utilize learnable activation functions to optimize Gaussian opacity and scaling predictions?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "Like MLPs, KANs employ a fully connected structure, but unlike MLPs, which use fixed activation functions, KANs utilize learnable activation functions on edges, allowing adaptive feature mapping.",
            "In opacity prediction, we applied a Tanh activation function to the KAN output and set a threshold to retain effective neural Gaussian distributions. KAN demonstrates superior stability in opacity prediction, effectively preventing the premature removal of critical Gaussian distributions due to low opacity thresholds.",
            "Through KAN’s precise scaling predictions, the model dynamically adjusts the scale of each Gaussian distribution according to the anchor feature, viewing angle, and position, allowing it to flexibly adapt to the complex geometric structures within the scene and to preserve fine textures and structural details in the reconstruction."
        ],
        "final_answer": "KAN replaces fixed activations with learnable activation functions on each network edge, enabling the model to adaptively map input features. For opacity, the KAN output passes through a Tanh activation and a threshold is applied to retain only effective Gaussians, resulting in more stable opacity estimates. For scaling, the learned activations produce precise scale values that dynamically adjust each Gaussian’s size based on anchor features, view direction, and position, preserving fine structures in the scene.",
        "relevant_elements": [
            "KAN",
            "opacity",
            "scaling"
        ],
        "id": 584,
        "masked_question": "How does [mask1] utilize learnable activation functions to optimize Gaussian opacity and scaling predictions?",
        "masked_number": 1,
        "masked_elements": [
            "KAN"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.05731v1_figure_2.png",
        "paperid": "2411.05731v1",
        "paper_path": "./papers/2411.05731v1.json",
        "figure_id": "2411.05731v1_figure_2.png",
        "caption": "Figure 2: Overview of PEP-GS",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does LEMSA modify Scaled Dot-Product Attention for local geometry-aware color decoding?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "Specifically, we first concatenate the anchor feature, the relative viewing distance and direction between the camera and the anchor point into a feature sequence. This sequence undergoes average pooling along the X and Y directions, followed by 1D convolution and custom normalization. The pooled features are then activated by a Sigmoid function to produce adaptive weights. These weights are multiplied element-wise with the original input to enhance local features, allowing for adaptive adjustment based on directional changes.",
            "After local optimization, we further capture global information by projecting the features into query (Q), key (K), and value (V) vectors. Attention weights are computed by taking the dot product between the query vector of the center Gaussian’s color and the key vectors of its neighbors, followed by a Softmax function. The final output is obtained as a weighted sum of the value vectors."
        ],
        "final_answer": "LEMSA augments the standard Scaled Dot-Product Attention with a local geometric feature enhancement stage. It first pools each Gaussian’s concatenated anchor feature and view-dependent inputs (distance and direction) along two orthogonal axes, convolves and normalizes the pooled signals, then applies a sigmoid to create adaptive weights. These weights modulate the original features to emphasize local geometry. Finally, it computes Q, K, V from these enhanced features and performs the usual dot-product attention (Q·K softmaxed, then weighted sum of V) to yield geometry-aware color decoding.",
        "relevant_elements": [
            "LEMSA",
            "Scaled Dot-Product Attention"
        ],
        "id": 586,
        "masked_question": "How does [mask1] modify Scaled Dot-Product Attention for local geometry-aware color decoding?",
        "masked_number": 1,
        "masked_elements": [
            "LEMSA"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.05731v1_figure_2.png",
        "paperid": "2411.05731v1",
        "paper_path": "./papers/2411.05731v1.json",
        "figure_id": "2411.05731v1_figure_2.png",
        "caption": "Figure 2: Overview of PEP-GS",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How can Closed-Set AVEL fusion methods evolve to support explicit Open-Vocabulary event categorization?",
        "relevant_section_ids": [
            "1",
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "Section 1: “To facilitate the recognition of various event classes, particularly those pertaining to unseen test data, we consider leveraging the zero-shot capability of recent language-based multimodal contrastive models. The language words are easily extendable and are not confined to predefined concepts (or categories for event classification). By applying contrastive learning to large-scale multimodal data pairs, the resulting embeddings can capture discriminative and accurate semantics. We opt to utilize ImageBind [14] because it establishes a joint embedding space across multiple modalities, aligning well with the studied OV-AVEL task.”",
            "Section 3.1: “To achieve open-vocabulary AVEL, we adopt a zero-shot classification paradigm similar to CLIP [38]. We send all candidate event classes (seen and unseen) to the text encoder of ImageBind to obtain the text (event category) features T. Notably, we add a special text ‘other’ that corresponds to the background class. Next, we compute the cosine similarities of audio-text and visual-text features… By scanning each row of these similarity matrices, we predict the category of each audio and visual segment. Finally, we produce an audio-visual event prediction for a segment only if both modalities agree on the same class, otherwise it is labeled as background.”",
            "Section 3.2: “During inference, the texts of both seen and unseen classes are sent to the text encoder for feature extraction. The audio and visual segments are processed by the pretrained encoders (and fine-tuned temporal layers) to extract features, and we again compute audio-text and visual-text similarities. The final event category is chosen as the one with the highest combined similarity, enabling explicit classification into arbitrary (seen or unseen) event categories.”"
        ],
        "final_answer": "Traditional closed-set AVEL fusion methods can be extended to an open-vocabulary setting by incorporating a learnable text encoder that maps arbitrary class names (both seen and unseen) into the same joint embedding space as the audio and visual features. At inference time, all candidate class labels (including novel ones) are encoded into text embeddings. The model then computes cosine similarities between each segment’s audio/visual features and these text embeddings, and determines the final event label by either enforcing modality agreement (training‐free) or by fusing their similarity scores (after fine-tuning temporal layers). This zero-shot paradigm allows the system to assign explicit, open‐vocabulary event categories rather than being restricted to a fixed closed set.",
        "relevant_elements": [
            "Closed-Set",
            "Open-Vocabulary"
        ],
        "id": 588,
        "masked_question": "How can [mask1] AVEL fusion methods evolve to support explicit [mask2] event categorization?",
        "masked_number": 2,
        "masked_elements": [
            "Closed-Set",
            "Open-Vocabulary"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.11278v1_figure_1.png",
        "paperid": "2411.11278v1",
        "paper_path": "./papers/2411.11278v1.json",
        "figure_id": "2411.11278v1_figure_1.png",
        "caption": "Figure 1:  (a) Illustration of the AVEL task, which aims to temporally localize segments containing events that are both audible and visible, and identify their categories. (b) Studies of AVEL in different settings. In contrast to previous closed-set and open-set settings, we explore a more practical open-vocabulary AVEL problem, which needs to infer explicit event categories for both seen and unseen test data (i.e., data containing classes seen and unseen during training). Each color represents a distinct event class.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How can Audio (A) and Visual (V) correspondence techniques improve AV-Event temporal boundary detection strategies?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "First, we utilize the pretrained ImageBind model discussed in Sec. 1 to extract audio and visual features. Specifically, the sampled video frame from each visual segment is sent to the image encoder of ImageBind, yielding the segment-level visual features V; similarly, each audio segment is sent to the audio encoder to extract audio features A.",
            "Next, we compute the cosine similarities of audio-text and visual-text features, denoted as S<sub>a</sub> and S<sub>v</sub>, respectively. By scanning each row of S<sub>a</sub> and S<sub>v</sub>, we can predict the category of each audio and visual segment by identifying the category with the highest cosine similarity value.",
            "The audio-visual events in target segments require that the category of the audio segment and the synchronized visual segment should be identical. Therefore, we can easily determine the final audio-visual event predictions by checking the audio and visual class consistency for each segment: if both modalities share the same event category, that segment contains an audio-visual event of that category; otherwise, it is recognized as background."
        ],
        "final_answer": "By explicitly enforcing cross-modal consistency — i.e. computing audio-text and visual-text similarities for each one-second segment and only labeling it as an AV-Event when both A and V agree on the same category — the model can filter out false positives (where only one modality signals an event) and sharply demarcate where an event starts and ends. In practice this means computing a similarity score for A→text and V→text, predicting a class for each stream, and then marking a segment as an event only if the two modality predictions match. This correspondence check naturally yields precise segment-level decisions and therefore tighter temporal boundary detection.",
        "relevant_elements": [
            "Audio (A)",
            "Visual (V)",
            "AV-Event"
        ],
        "id": 589,
        "masked_question": "How can [mask1] and [mask2] correspondence techniques improve AV-Event temporal boundary detection strategies?",
        "masked_number": 2,
        "masked_elements": [
            "Audio (A)",
            "Visual (V)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.11278v1_figure_1.png",
        "paperid": "2411.11278v1",
        "paper_path": "./papers/2411.11278v1.json",
        "figure_id": "2411.11278v1_figure_1.png",
        "caption": "Figure 1:  (a) Illustration of the AVEL task, which aims to temporally localize segments containing events that are both audible and visible, and identify their categories. (b) Studies of AVEL in different settings. In contrast to previous closed-set and open-set settings, we explore a more practical open-vocabulary AVEL problem, which needs to infer explicit event categories for both seen and unseen test data (i.e., data containing classes seen and unseen during training). Each color represents a distinct event class.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does open-vocabulary setting methodology utilize seen class knowledge to infer unseen event categories?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "To achieve open-vocabulary AVEL, we adopt a zero-shot classification paradigm similar to CLIP [38]. We send all candidate event classes (seen and unseen) to the text encoder of ImageBind to obtain the text (event category) features T.",
            "By scanning each row of S_{a2t} and S_{v2t}, we can predict the category of each audio and visual segment by identifying the category with the highest cosine similarity value.",
            "Inference. The OV-AVEL task involves handling both seen and unseen data (i.e., data with seen and unseen classes) during the inference phase. As highlighted by the yellow dotted box in Fig. 3②, the texts of both seen and unseen classes are sent to the text encoder for feature extraction. The processing of audio and visual modalities follows the same flow as in training, whereas the audio and visual segments are processed by the pretrained encoders and fine-tuned temporal layers to extract audio and visual features. Then, we can generate the probability of audio-visual events by utilizing audio-text and visual-text feature similarities as described in Eq. 2. The final prediction can be made by selecting the event category with the largest probability."
        ],
        "final_answer": "The open-vocabulary methodology first uses a pretrained multimodal backbone (ImageBind) to learn rich audio–visual representations and fine-tunes temporal layers on the seen classes. At inference time, it casts event recognition as a zero-shot classification: it embeds all candidate class names (both seen and unseen) via the text encoder, computes cosine‐similarities between these text embeddings and the audio/visual segment features, and then assigns each segment to whichever class (seen or unseen) maximizes this similarity (subject to audio–visual consistency).",
        "relevant_elements": [
            "open-vocabulary",
            "seen",
            "unseen"
        ],
        "id": 591,
        "masked_question": "How does [mask1] setting methodology utilize seen class knowledge to infer unseen event categories?",
        "masked_number": 1,
        "masked_elements": [
            "open-vocabulary"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.11278v1_figure_1.png",
        "paperid": "2411.11278v1",
        "paper_path": "./papers/2411.11278v1.json",
        "figure_id": "2411.11278v1_figure_1.png",
        "caption": "Figure 1:  (a) Illustration of the AVEL task, which aims to temporally localize segments containing events that are both audible and visible, and identify their categories. (b) Studies of AVEL in different settings. In contrast to previous closed-set and open-set settings, we explore a more practical open-vocabulary AVEL problem, which needs to infer explicit event categories for both seen and unseen test data (i.e., data containing classes seen and unseen during training). Each color represents a distinct event class.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does integrating the interpretable module in self-interpretable models influence Fidelity AUC?",
        "relevant_section_ids": [
            "2.2.2",
            "2.2.3"
        ],
        "relevant_context": [
            "Although self-interpretable methods are not designed to detect sensitive patterns for a given model, it is still interesting to see whether the models trained by self-interpretable methods are sensitive to their extracted interpretation patterns. Notably, LRI-Bern and LRI-Gaussian achieve relatively high Fidelity AUC scores. As for the remaining models, VGIB overall performs the third best but suffers from high variances on some datasets, ASAP occasionally exhibits high Fidelity AUC scores but generally lags behind, while CIGA appears ill-suited when adapted to the GDL even with significant parameter tuning.",
            "Note that one cannot directly compare post-hoc and self-interpretable methods regarding their capabilities of detecting sensitive patterns, as the models to be interpreted are revised when one applies self-interpretable methods. Nonetheless, we can still see a trend that self-interpretable methods achieving better Interpretation ROC-AUC (the metric for detecting decisive patterns) typically obtain better Fidelity AUC (the metric for detecting sensitive patterns). Moreover, as the achieved Fidelity AUC scores of some self-interpretable methods are generally comparable with those yielded by post-hoc methods, the models trained based on self-interpretable methods are also sensitive to the interpretations these methods output."
        ],
        "final_answer": "By integrating an interpretable module and retraining the backbone from scratch, self-interpretable models produce high Fidelity AUC scores. In particular, models using input-perturbation modules (LRI-Bern and LRI-Gaussian) achieve the highest Fidelity AUC among self-interpretable methods, VGIB is third best (with more variance), ASAP sometimes peaks but usually trails, and CIGA underperforms. Overall, integrating an interpretable module yields models whose sensitive patterns (measured by Fidelity AUC) remain strong and are on par with many post-hoc approaches.",
        "relevant_elements": [
            "Self-Interpretable Model",
            "Interpretable Module",
            "Fidelity AUC"
        ],
        "id": 592,
        "masked_question": "How does integrating the [mask1] in [mask2] influence Fidelity AUC?",
        "masked_number": 2,
        "masked_elements": [
            "Interpretable Module",
            "Self-Interpretable Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.00849v1_figure_1.png",
        "paperid": "2407.00849v1",
        "paper_path": "./papers/2407.00849v1.json",
        "figure_id": "2407.00849v1_figure_1.png",
        "caption": "Figure 1: Overview of GDL model interpretation and its evaluation:\nInterpretation in geometric deep learning (GDL) tasks involves identifying a subset of points Cssubscript𝐶𝑠C_{s}italic_C start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT from the input point cloud C𝐶Citalic_C. Decisive patterns are a subset of points that inherently dictate the labels of the point cloud, specified by the learning task, and their identification accuracy is measured by the alignment between Cssubscript𝐶𝑠C_{s}italic_C start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT and the true decisive patterns (Interpretation ROC-AUC). Sensitive patterns, on the other hand, are the subset of most influential points affecting the model s predictions, as specified by the model itself. The evaluation of the model s sensitivity involves assessing the changes of its predictions when Cssubscript𝐶𝑠C_{s}italic_C start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT is either added to or removed from the input (Fidelity AUC).",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What methodological limitations arise when using Fidelity AUC to evaluate Post-hoc Explainer sensitivity?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Post-hoc Explainer",
            "Fidelity AUC"
        ],
        "id": 594,
        "masked_question": "What methodological limitations arise when using [mask1] to evaluate [mask2] sensitivity?",
        "masked_number": 2,
        "masked_elements": [
            "Fidelity AUC",
            "Post-hoc Explainer"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.00849v1_figure_1.png",
        "paperid": "2407.00849v1",
        "paper_path": "./papers/2407.00849v1.json",
        "figure_id": "2407.00849v1_figure_1.png",
        "caption": "Figure 1: Overview of GDL model interpretation and its evaluation:\nInterpretation in geometric deep learning (GDL) tasks involves identifying a subset of points Cssubscript𝐶𝑠C_{s}italic_C start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT from the input point cloud C𝐶Citalic_C. Decisive patterns are a subset of points that inherently dictate the labels of the point cloud, specified by the learning task, and their identification accuracy is measured by the alignment between Cssubscript𝐶𝑠C_{s}italic_C start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT and the true decisive patterns (Interpretation ROC-AUC). Sensitive patterns, on the other hand, are the subset of most influential points affecting the model s predictions, as specified by the model itself. The evaluation of the model s sensitivity involves assessing the changes of its predictions when Cssubscript𝐶𝑠C_{s}italic_C start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT is either added to or removed from the input (Fidelity AUC).",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might the choice of Self-Interpretable Module impact Interpretation ROC-AUC fairness across datasets?",
        "relevant_section_ids": [
            "1",
            "3"
        ],
        "relevant_context": [
            "In addition, we also observe that some post-hoc methods may face instability issues, i.e., the same method may demonstrate inconsistent performance across different datasets. The performance of self-interpretable methods can be more stable but method-dependent: some self-interpretable methods can effectively identify both decisive patterns and sensitive patterns, whereas others may fail to discern either.",
            "Decisive patterns are task-specific and independent of the learning models. Self-interpretable methods can produce better and more stable interpretation results when detecting decisive patterns. Among self-interpretable methods, LRI-Gaussian often achieves the best performance."
        ],
        "final_answer": "The choice of self-interpretable module has a strong effect on the fairness of Interpretation ROC-AUC across datasets. Some modules (notably LRI-induced methods like LRI-Gaussian) yield consistently high and stable ROC-AUC scores across all tested datasets, ensuring fair and uniform interpretability performance, whereas other self-interpretable modules exhibit more variable ROC-AUCs and may unfairly favor some datasets over others.",
        "relevant_elements": [
            "Self-Interpretable Module",
            "Interpretation ROC-AUC"
        ],
        "id": 595,
        "masked_question": "How might the choice of [mask1] impact [mask2] fairness across datasets?",
        "masked_number": 2,
        "masked_elements": [
            "Self-Interpretable Module",
            "Interpretation ROC-AUC"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.00849v1_figure_1.png",
        "paperid": "2407.00849v1",
        "paper_path": "./papers/2407.00849v1.json",
        "figure_id": "2407.00849v1_figure_1.png",
        "caption": "Figure 1: Overview of GDL model interpretation and its evaluation:\nInterpretation in geometric deep learning (GDL) tasks involves identifying a subset of points Cssubscript𝐶𝑠C_{s}italic_C start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT from the input point cloud C𝐶Citalic_C. Decisive patterns are a subset of points that inherently dictate the labels of the point cloud, specified by the learning task, and their identification accuracy is measured by the alignment between Cssubscript𝐶𝑠C_{s}italic_C start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT and the true decisive patterns (Interpretation ROC-AUC). Sensitive patterns, on the other hand, are the subset of most influential points affecting the model s predictions, as specified by the model itself. The evaluation of the model s sensitivity involves assessing the changes of its predictions when Cssubscript𝐶𝑠C_{s}italic_C start_POSTSUBSCRIPT italic_s end_POSTSUBSCRIPT is either added to or removed from the input (Fidelity AUC).",
        "qtype": "Others",
        "response": "The question asks how the choice of [mask1] (Self-Interpretable Model / Self-interpretable methods) might impact [mask2] (fairness across datasets).\n\n1.  **Identify [mask1]:** The red box in the image highlights \"Self-Interpretable Model\" and \"Interpretable Module\". In the context, these are categorized under \"self-interpretable methods\".\n2.  **Identify [mask2]:** The blue box in the image is in the \"Metric\" section and is blank. The text in the \"Limitations\" section mentions \"fairness in multilabel classification [76]\" as a potential metric.\n3.  **Search for the relationship:** The \"Limitations\" section explicitly states: \"Second, in addition to the performance metrics used in this study, there exist several other metrics meaningful for evaluating the identification of the two types of patterns, such as the consistency across different backbones [31], **the fairness in multilabel classification [76]**, and the stability for perturbed counterpart [77], etc. **These are beyond our focus and may further complement this study in the future.**\"\n\nThe text clearly indicates that \"fairness\" was not a focus of this study, and therefore, the document does not provide information on how the choice of self-interpretable methods impacts fairness across datasets.\n\n**Answer:** Unanswerable."
    },
    {
        "question": "What ethical concerns emerge from co-distributed sampling in data partitioning for privacy auditing?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Data partitioning"
        ],
        "id": 596,
        "masked_question": "What ethical concerns emerge from co-distributed sampling in [mask1] for privacy auditing?",
        "masked_number": 1,
        "masked_elements": [
            "Data partitioning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.07070v2_figure_2.png",
        "paperid": "2411.07070v2",
        "paper_path": "./papers/2411.07070v2.json",
        "figure_id": "2411.07070v2_figure_2.png",
        "caption": "Figure 2: A comprehensive breakdown of the auditing framework Parsing embedded in the model fine-tuning process based on white-box MIAs, including data partitioning, property extraction, property embedding, and membership inference.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "How might weighting parameter lambda skew membership inference outcomes within property embedding?",
        "relevant_section_ids": [
            "4.3"
        ],
        "relevant_context": [
            "Separate embedding generators are employed for forward and backward properties, and these are connected via learnable parameters. The representation embedding e for a sample x is defined as:\n\n    e = Φ_align(F, B; …) ⊕ [WF e_property(F) ⊕ WB e_property(B)]⊕ λ\n\nwhere Φ_align denotes the properties alignment process, e_property represents the property embedding generator, WF and WB are the learnable parameters associated with the forward and backward embedding generators, ⊕ signifies the concatenation operation, and λ is the parameter for information weighting, thus deriving the embedding e for sample x."
        ],
        "final_answer": "Within the property‐embedding stage, λ controls how much weight is given to the forward‐property embedding versus the backward‐property embedding. By increasing λ, the model will place relatively more emphasis on one type of property (e.g. forward activations) at the expense of the other (e.g. backward gradients). This shift in the embedding space can make the subsequent membership‐inference classifier rely more heavily on whichever property is upweighted, potentially exaggerating differences for members or non‐members in that dimension and thus skewing true‐positive or false‐positive rates accordingly.",
        "relevant_elements": [
            "Property Embedding",
            "Membership Inference"
        ],
        "id": 597,
        "masked_question": "How might weighting parameter lambda skew [mask1] outcomes within [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Membership Inference",
            "Property Embedding"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.07070v2_figure_2.png",
        "paperid": "2411.07070v2",
        "paper_path": "./papers/2411.07070v2.json",
        "figure_id": "2411.07070v2_figure_2.png",
        "caption": "Figure 2: A comprehensive breakdown of the auditing framework Parsing embedded in the model fine-tuning process based on white-box MIAs, including data partitioning, property extraction, property embedding, and membership inference.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What is the rationale for using ratio α in data partitioning for audit sample selection?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Data partitioning",
            "ratio α"
        ],
        "id": 599,
        "masked_question": "What is the rationale for using [mask1] in [mask2] for audit sample selection?",
        "masked_number": 2,
        "masked_elements": [
            "ratio α",
            "Data partitioning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.07070v2_figure_2.png",
        "paperid": "2411.07070v2",
        "paper_path": "./papers/2411.07070v2.json",
        "figure_id": "2411.07070v2_figure_2.png",
        "caption": "Figure 2: A comprehensive breakdown of the auditing framework Parsing embedded in the model fine-tuning process based on white-box MIAs, including data partitioning, property extraction, property embedding, and membership inference.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "Why employ separate Variational Graph encoder and Variational Visual encoder rather than a shared encoder?",
        "relevant_section_ids": [
            "3.1.1",
            "3.1.2"
        ],
        "relevant_context": [
            "To fully leverage the graph structures of MMKGs, we devise a variational graph encoder.",
            "To highlight the information of relations, attributes, and images, we devise separate fully connected layers as multi-modal encoders to learn interim representations for each modality."
        ],
        "final_answer": "Because graph structure data and visual image data are fundamentally different modalities, the model uses a dedicated variational graph encoder (based on graph attention networks) to capture structural information and a separate variational visual encoder (based on VGG/ResNet & FC layers) to capture image information, thereby fully leveraging each modality’s unique characteristics rather than forcing them through a single shared encoder.",
        "relevant_elements": [
            "Variational Graph encoder",
            "Variational Visual encoder"
        ],
        "id": 600,
        "masked_question": "Why employ separate [mask1] and Variational Visual encoder rather than a shared encoder?",
        "masked_number": 1,
        "masked_elements": [
            "Variational Graph encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.19302v1_figure_2.png",
        "paperid": "2407.19302v1",
        "paper_path": "./papers/2407.19302v1.json",
        "figure_id": "2407.19302v1_figure_2.png",
        "caption": "Figure 2. The framework of the proposed IBMEA for the multi-modal entity alignment task.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What alternative approach could replace Time Contrastive Loss to better capture temporal dependencies?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Time Contrastive Loss"
        ],
        "id": 1712,
        "masked_question": "What alternative approach could replace [mask1] to better capture temporal dependencies?",
        "masked_number": 1,
        "masked_elements": [
            "Time Contrastive Loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.22325v2_figure_1.png",
        "paperid": "2410.22325v2",
        "paper_path": "./papers/2410.22325v2.json",
        "figure_id": "2410.22325v2_figure_1.png",
        "caption": "Figure 1: Overview. We introduce a robotic representation evaluation metric termed manipulation centricity, which exhibits a strong correlation with downstream policy performance. Accordingly, we design a new pre-training method, MCR, to learn manipulation-centric representation from large-scale robotic datasets. Comprehensive experiments on both simulations and real robot validate the superiority of our proposed representation.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates integrating time contrastive loss alongside dynamics alignment in pre-training objectives?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "Temporal contrast. We also wish the representation to encode temporal information, which has shown importance for manipulation tasks (Zhao et al., 2023 ###reference_b50###). To this end, we adopt the time‐contrastive learning objective from Nair et al. (2022 ###reference_b31###), which encourages temporally close frames in a video to be closer in the embedding space than those that are temporally distant or from different videos."
        ],
        "final_answer": "They add a time‐contrastive loss to ensure the learned representation encodes temporal information—by drawing embeddings of nearby frames closer and pushing apart those of distant frames—which has been shown to be important for manipulation tasks.",
        "relevant_elements": [
            "Time Contrastive Loss",
            "Dynamics Alignment"
        ],
        "id": 1713,
        "masked_question": "What motivates integrating [mask1] alongside dynamics alignment in pre-training objectives?",
        "masked_number": 1,
        "masked_elements": [
            "Time Contrastive Loss"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.22325v2_figure_1.png",
        "paperid": "2410.22325v2",
        "paper_path": "./papers/2410.22325v2.json",
        "figure_id": "2410.22325v2_figure_1.png",
        "caption": "Figure 1: Overview. We introduce a robotic representation evaluation metric termed manipulation centricity, which exhibits a strong correlation with downstream policy performance. Accordingly, we design a new pre-training method, MCR, to learn manipulation-centric representation from large-scale robotic datasets. Comprehensive experiments on both simulations and real robot validate the superiority of our proposed representation.",
        "qtype": "Design_Rationale",
        "response": "[mask1] refers to \"Time Contrastive Loss\".\n\n**Step-by-step reasoning:**\n1.  **Identify [mask1]:** The red box in the image highlights \"Time Contrastive Loss\".\n2.  **Locate relevant text:** Under the \"Training MCR\" section, there's a sub-section titled \"Temporal contrast,\" which describes the \"time-contrastive learning objective.\"\n3.  **Find the motivation:** The text states, \"We also wish the representation to encode temporal information, which has shown importance for manipulation tasks (Zhao et al., 2023).\" It further explains that this objective \"encourages temporally close frames in a video to be closer in the embedding space than those that are temporally distant or from different videos.\"\n\nThe motivation for integrating \"Time Contrastive Loss\" is to ensure the representation encodes temporal information, which is deemed important for manipulation tasks.\n\n**Answer:**\nThe integration of Time Contrastive Loss (referred to as \"Temporal contrast\" in the text) is motivated by the desire for the learned representation to encode **temporal information**, which has been shown to be important for manipulation tasks. This objective encourages temporally close frames in a video to be closer in the embedding space than those that are temporally distant or from different videos."
    },
    {
        "question": "Why include actor loss predicting robot actions within the MCR pre-training pipeline?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "We also integrate a behavior cloning (BC)-like actor into our pre-training framework, based on the idea that robotic representations should be predictive of expert-level behaviors in the dataset.",
            "The actor is implemented as a shallow MLP head that maps the image feature vector F to the predicted robot actions a. We use mean squared error as the objective for action prediction."
        ],
        "final_answer": "The actor loss is included so that the visual representation learns to predict the expert robot actions. By training a behavior‐cloning–style head on the learned features, the model is encouraged to encode the task‐relevant dynamics needed to reproduce expert behavior, thereby making the representation more manipulation‐centric and useful for downstream control.",
        "relevant_elements": [
            "Actor Loss",
            "MCR"
        ],
        "id": 1714,
        "masked_question": "Why include [mask1] predicting robot actions within the [mask2] pre-training pipeline?",
        "masked_number": 2,
        "masked_elements": [
            "Actor Loss",
            "MCR"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.22325v2_figure_1.png",
        "paperid": "2410.22325v2",
        "paper_path": "./papers/2410.22325v2.json",
        "figure_id": "2410.22325v2_figure_1.png",
        "caption": "Figure 1: Overview. We introduce a robotic representation evaluation metric termed manipulation centricity, which exhibits a strong correlation with downstream policy performance. Accordingly, we design a new pre-training method, MCR, to learn manipulation-centric representation from large-scale robotic datasets. Comprehensive experiments on both simulations and real robot validate the superiority of our proposed representation.",
        "qtype": "Design_Rationale",
        "response": "The \"[mask1] predicting robot actions\" (referred to as \"Action prediction\" in the text) is included within the \"[mask2] pre-training pipeline\" for the following reasons:\n\n1.  **Enhance Manipulation Centricity:** The core hypothesis is that incorporating direct knowledge of robot dynamics (like actions) into the pre-training process will enhance the \"manipulation centricity\" of the learned robotic representations. This means the representations will be more attuned to and capture features relevant to robot manipulation tasks.\n2.  **Predict Expert-Level Behaviors:** The \"Action prediction\" objective is designed to train the robotic representations to be predictive of the expert-level behaviors (i.e., robot actions) present in the large-scale robot dataset (36K Robotic Trajectories). By enabling the model to predict these 7-dimensional robot actions from image features, the learned representation is implicitly forced to encode information crucial for performing those actions.\n3.  **Leverage Robot-Specific Data:** Unlike human-object interaction datasets, robot datasets provide access to manipulator dynamics, including both proprioceptive states and actions. Integrating an action prediction objective allows the MCR framework to fully leverage this unique, robot-specific data, which was often not fully utilized in previous approaches."
    },
    {
        "question": "What motivates sequential dropout and layer normalization in time difference processing pipeline?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Subsequently, we apply dropout (srivastava2014dropout) and layer normalization (ba2016layer) to sequence Δ in order to eliminate data noise and optimize the data distribution for subsequent analysis."
        ],
        "final_answer": "The dropout and layer normalization are motivated by the need to eliminate noise in the time‐difference data and to normalize/optimize its distribution before it is fed into later model components.",
        "relevant_elements": [
            "Dropout",
            "Layer Normalization"
        ],
        "id": 1715,
        "masked_question": "What motivates sequential [mask1] and [mask2] in time difference processing pipeline?",
        "masked_number": 2,
        "masked_elements": [
            "Dropout",
            "Layer Normalization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.16182v2_figure_2.png",
        "paperid": "2409.16182v2",
        "paper_path": "./papers/2409.16182v2.json",
        "figure_id": "2409.16182v2_figure_2.png",
        "caption": "Figure 2. The overview of TiM4Rec. The overall framework of TiM4Rec, which is based on time-aware enhancement,\nenhances the performance of the SSD architecture in the domain of sequential recommendation by effectively processing the time differences in interactions between items.",
        "qtype": "Design_Rationale",
        "response": "What motivates sequential **dropout** and **layer normalization** in time difference processing pipeline?\n\n**Chain of thought:**\n1.  **Identify the masked elements:**\n    *   [mask1] corresponds to the red box in the image, which is \"Dropout\".\n    *   [mask2] corresponds to the blue box in the image, which is \"Layer Normalization\".\n2.  **Locate relevant text:** The question asks about the motivation for these operations in the \"time difference processing pipeline.\" Section \"3.2. Time Difference Processing\" in the provided text is directly relevant.\n3.  **Find the explanation:** In section \"3.2. Time Difference Processing\", it states: \"Subsequently, we apply dropout (srivastava2014dropout) and layer normalization (ba2016layer) to sequence `d` in order to eliminate data noise and optimize the data distribution for subsequent analysis.\"\n4.  **Extract the motivations:**\n    *   The motivation for **dropout** is \"to eliminate data noise\".\n    *   The motivation for **layer normalization** is \"to optimize the data distribution for subsequent analysis\".\n\n**Answer:**\nThe sequential **dropout** is applied to eliminate data noise, and **layer normalization** is applied to optimize the data distribution for subsequent analysis."
    },
    {
        "question": "What is the reasoning for gating SSD kernel output via gate residual mechanism?",
        "relevant_section_ids": [
            "3.5"
        ],
        "relevant_context": [
            "It is noteworthy that to adapt the time difference vector Δ to the feature semantic space of the next layer, gate residual (he2016deep) processing is applied to the input time difference vector Δ for the subsequent layer."
        ],
        "final_answer": "The gate‐residual mechanism is applied so that the time‐difference information (the SSD kernel’s output with time‐aware enhancements) is properly aligned and adapted into the feature semantic space required by the next layer.",
        "relevant_elements": [
            "Gate Residual",
            "SSD Kernel"
        ],
        "id": 1716,
        "masked_question": "What is the reasoning for gating [mask1] output via gate residual mechanism?",
        "masked_number": 1,
        "masked_elements": [
            "SSD Kernel"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.16182v2_figure_2.png",
        "paperid": "2409.16182v2",
        "paper_path": "./papers/2409.16182v2.json",
        "figure_id": "2409.16182v2_figure_2.png",
        "caption": "Figure 2. The overview of TiM4Rec. The overall framework of TiM4Rec, which is based on time-aware enhancement,\nenhances the performance of the SSD architecture in the domain of sequential recommendation by effectively processing the time differences in interactions between items.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does Time Difference Processing apply dropout and layer normalization to maintain temporal difference signals?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "As mentioned above, for the input interaction timestamp sequence t, we transform it into an interaction time difference sequence Δt using the following method:",
            "Subsequently, we apply dropout (srivastava2014dropout) and layer normalization (ba2016layer) to sequence Δt in order to eliminate data noise and optimize the data distribution for subsequent analysis."
        ],
        "final_answer": "After computing the time-difference sequence Δt from the raw timestamps, Time Difference Processing applies dropout to randomly zero out elements (thereby reducing noise) and then uses layer normalization to stabilize and optimize the distribution of Δt before it enters the subsequent model components.",
        "relevant_elements": [
            "Time Difference Processing",
            "Dropout",
            "Layer Normalization"
        ],
        "id": 1717,
        "masked_question": "How does [mask1] apply dropout and layer normalization to maintain temporal difference signals?",
        "masked_number": 1,
        "masked_elements": [
            "Time Difference Processing"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.16182v2_figure_2.png",
        "paperid": "2409.16182v2",
        "paper_path": "./papers/2409.16182v2.json",
        "figure_id": "2409.16182v2_figure_2.png",
        "caption": "Figure 2. The overview of TiM4Rec. The overall framework of TiM4Rec, which is based on time-aware enhancement,\nenhances the performance of the SSD architecture in the domain of sequential recommendation by effectively processing the time differences in interactions between items.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does Mask NMS resolve overlapping masks using stability_score and area overlap?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "Unlike traditional NMS, which relies on bounding box IoU, our approach calculates the overlap area between each pair of masks. If the overlap ratio, based on the smaller mask, surpasses a confidence threshold, we retain the mask with the higher score.",
            "Mi represents the area of the mask. C is the predefined confidence threshold, which was set at 0.9 in our experiment. Si is the stability_score of the ith mask output by SAM2."
        ],
        "final_answer": "Mask NMS computes the overlap area between every pair of predicted masks, normalizes that overlap by the area of the smaller mask, and if this overlap ratio exceeds a threshold C (0.9), it discards the mask with the lower stability_score (Si), keeping only the mask with the higher stability_score.",
        "relevant_elements": [
            "Mask NMS"
        ],
        "id": 1719,
        "masked_question": "How does [mask1] resolve overlapping masks using stability_score and area overlap?",
        "masked_number": 1,
        "masked_elements": [
            "Mask NMS"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.16196v1_figure_2.png",
        "paperid": "2411.16196v1",
        "paper_path": "./papers/2411.16196v1.json",
        "figure_id": "2411.16196v1_figure_2.png",
        "caption": "Figure 2: Overall framework of SDM-D. (a) Segmentation: is based on SAM2, utilizing the sam2_hiera_large weight with a 32 × 32 grid of points and no additional prompts. (b) Mask NMS: was proposed to reserve the optimal mask. (c) Description and Image Segments Encoding: OpenCLIP is used to encode the description and image segments. (d) Region-Text Matching: this is used to image regions with corresponding textual descriptions. (e) Distilling: involves transferring knowledge to smaller models that are faster and perform better. The SDM consists of sections (a), (b), (c), and (d) with pink headings, and SDM-D is a combination of SDM and section (e).",
        "qtype": "Implementation_Details",
        "response": "Mask NMS resolves overlapping masks by following these steps:\n\n1.  **Calculate Area Overlap:** For any pair of overlapping masks, it first calculates the actual overlap area between them.\n2.  **Determine Overlap Ratio:** It then calculates an \"overlap ratio\" by dividing the overlap area by the area of the *smaller* of the two masks.\n3.  **Apply Confidence Threshold:** If this overlap ratio surpasses a predefined confidence threshold (C, which is 0.9 in their experiment), it means there's significant redundancy or overlap between the two masks.\n4.  **Retain based on Stability Score:** When significant overlap is detected, the mask with the higher `stability_score` (Si) among the overlapping masks is retained, and the other (lower score) masks are suppressed.\n\nThis mechanism ensures that only the optimal mask, ideally covering a single object instance, is kept, resolving ambiguity and redundancy."
    },
    {
        "question": "How does the Distilling module handle noisy pseudo-labels to improve student generalization?",
        "relevant_section_ids": [
            "3"
        ],
        "relevant_context": [
            "Unlike traditional distillation, which typically operates at the feature or logit level using manually labeled data, our approach performs distillation at the label level via pseudo labels, significantly reducing labor costs and alleviating data scarcity.",
            "Interestingly, the inherent noise in pseudo-labels encourages students to acquire broader knowledge, enhancing their learning."
        ],
        "final_answer": "The Distilling module deliberately performs label-level distillation using the noisy pseudo-labels produced by SDM. Rather than suppressing this noise, it leverages it as a form of regularization: the imperfections in the pseudo-labels push the student to learn more diverse, robust representations, thereby improving its generalization.",
        "relevant_elements": [
            "Distilling"
        ],
        "id": 1720,
        "masked_question": "How does the [mask1] module handle noisy pseudo-labels to improve student generalization?",
        "masked_number": 1,
        "masked_elements": [
            "Distilling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.16196v1_figure_2.png",
        "paperid": "2411.16196v1",
        "paper_path": "./papers/2411.16196v1.json",
        "figure_id": "2411.16196v1_figure_2.png",
        "caption": "Figure 2: Overall framework of SDM-D. (a) Segmentation: is based on SAM2, utilizing the sam2_hiera_large weight with a 32 × 32 grid of points and no additional prompts. (b) Mask NMS: was proposed to reserve the optimal mask. (c) Description and Image Segments Encoding: OpenCLIP is used to encode the description and image segments. (d) Region-Text Matching: this is used to image regions with corresponding textual descriptions. (e) Distilling: involves transferring knowledge to smaller models that are faster and perform better. The SDM consists of sections (a), (b), (c), and (d) with pink headings, and SDM-D is a combination of SDM and section (e).",
        "qtype": "Implementation_Details",
        "response": "The [mask1] module, which represents \"Distilling\", handles noisy pseudo-labels by leveraging their inherent noise. This noise, rather than being a drawback, is explicitly stated to \"encourage students to acquire broader knowledge, enhancing their learning,\" thereby improving student generalization. The distillation process at the label level, using these pseudo-labels, allows smaller student models to learn from SDM without costly manual annotation."
    },
    {
        "question": "How does Distilling leverage pseudo labels compared to traditional teacher-student knowledge distillation?",
        "relevant_section_ids": [
            "2.3",
            "3"
        ],
        "relevant_context": [
            "In knowledge distillation, a \"teacher\" model transfers its knowledge to a smaller \"student\" model, enabling the student to achieve comparable performance while being more resource-efficient (Hinton et al., 2015 ###reference_b17###). In a typical knowledge distillation process, the student model [is trained] to mimic the output probabilities (or logits) of the teacher model, and a loss function is used to measure the gap between the student’s and teacher’s predictions.",
            "To facilitate efficient deployment on edge devices, we implement distillation. We let small, edge-deployable models (students) learn from the pseudo labels generated by SDM, bypassing the need for costly manual annotation. Unlike traditional distillation, which typically operates at the feature or logit level using manually labeled data, our approach performs distillation at the label level via pseudo labels, significantly reducing labor costs and alleviating data scarcity."
        ],
        "final_answer": "Instead of having the student mimic the teacher’s logits or intermediate features on manually labeled data, our Distilling stage uses the automatically generated pseudo labels as ground truth. In other words, we perform the teacher-student transfer at the label level with pseudo masks, eliminating the need for manual annotations and making the student training both cheaper and more robust in data-scarce settings.",
        "relevant_elements": [
            "Distilling"
        ],
        "id": 1722,
        "masked_question": "How does [mask1] leverage pseudo labels compared to traditional teacher-student knowledge distillation?",
        "masked_number": 1,
        "masked_elements": [
            "Distilling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.16196v1_figure_2.png",
        "paperid": "2411.16196v1",
        "paper_path": "./papers/2411.16196v1.json",
        "figure_id": "2411.16196v1_figure_2.png",
        "caption": "Figure 2: Overall framework of SDM-D. (a) Segmentation: is based on SAM2, utilizing the sam2_hiera_large weight with a 32 × 32 grid of points and no additional prompts. (b) Mask NMS: was proposed to reserve the optimal mask. (c) Description and Image Segments Encoding: OpenCLIP is used to encode the description and image segments. (d) Region-Text Matching: this is used to image regions with corresponding textual descriptions. (e) Distilling: involves transferring knowledge to smaller models that are faster and perform better. The SDM consists of sections (a), (b), (c), and (d) with pink headings, and SDM-D is a combination of SDM and section (e).",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "What is the role of 2D FFT operations in extending VPT beyond spatial-only prompt tuning?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Existing prompt tuning jia2022visual; han20232vpt, focusing predominantly on spatial information, can only harness the shared information embedded within the pretrained backbone, limiting their capacity to adapt effectively to novel tasks.",
            "Compared to VPT (see Fig. 1 (a)), our model (see Fig. 1 (c)) transforms partial prompts from spatial domain to frequency domain via 2D FFT (see §3.1) to consider both the spatial and frequency domain information."
        ],
        "final_answer": "The 2D FFT operations convert a subset of the learnable visual prompts from the spatial domain into the frequency domain, thereby enabling prompt tuning to incorporate both spatial and frequency information rather than relying solely on spatial cues.",
        "relevant_elements": [
            "2D FFT operations",
            "Visual Prompt Tuning"
        ],
        "id": 1723,
        "masked_question": "What is the role of [mask1] in extending VPT beyond spatial-only prompt tuning?",
        "masked_number": 1,
        "masked_elements": [
            "2D FFT operations"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.01327v2_figure_1.png",
        "paperid": "2411.01327v2",
        "paper_path": "./papers/2411.01327v2.json",
        "figure_id": "2411.01327v2_figure_1.png",
        "caption": "Figure 1: Overview of VPT v⁢s.𝑣𝑠vs.italic_v italic_s . VFPT (ours) frameworks. (a) Original Visual Prompt Tuning. (b) 2D Fast Fourier Transform operations in partial visual prompts along hidden and sequence length dimensions. (c) The overall architecture of our proposed VFPT (see §3.2).",
        "qtype": "Literature_Background",
        "response": "The masked area (highlighted by the red box), labeled \"2D FFT on Partial Prompts,\" represents the core mechanism by which Visual Fourier Prompt Tuning (VFPT) extends beyond spatial-only prompt tuning.\n\nIts role is as follows:\n1.  **Domain Transformation:** It transforms a selected portion of the learnable visual prompts from the spatial domain into the **frequency domain** by applying a 2D Fast Fourier Transform (FFT). This transformation is performed along both the sequence and hidden dimensions of the prompt embeddings (\"Hidden-wise FFT\" and \"Sequence-wise FFT\").\n2.  **Introduction of Complementary Information:** While traditional Visual Prompt Tuning (VPT) focuses predominantly on spatial information, the 2D FFT operations introduce frequency domain characteristics into the prompts. The text states that \"The frequency and spatial analysis of imagery inputs can be mutually complementary, leading to a more comprehensive feature understanding from"
    },
    {
        "question": "How do Visual Fourier Prompts leverage frequency-domain analysis compared to visual prompts?",
        "relevant_section_ids": [
            "1",
            "3.2"
        ],
        "relevant_context": [
            "By integrating frequency domain information into learnable prompt embeddings, our approach elegantly assimilates data from both spatial and frequency domains, simulating the human visual cognition.",
            "Compared to VPT (see Fig. 1(a)), our model (see Fig. 1(c)) transforms partial prompts from spatial domain to frequency domain via 2D FFT (see §3.1) to consider both the spatial and frequency domain information."
        ],
        "final_answer": "Visual Fourier Prompts apply a 2D Fast Fourier Transform to partial prompt embeddings—converting them from the spatial domain into the frequency domain—and concatenate these frequency-domain embeddings with the original spatial prompts. This lets VFPT capture and integrate both spatial and frequency-domain information, whereas standard visual prompts only operate in the spatial domain.",
        "relevant_elements": [
            "Visual Fourier Prompts",
            "Visual Prompts"
        ],
        "id": 1724,
        "masked_question": "How do [mask1] leverage frequency-domain analysis compared to visual prompts?",
        "masked_number": 1,
        "masked_elements": [
            "Visual Fourier Prompts"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.01327v2_figure_1.png",
        "paperid": "2411.01327v2",
        "paper_path": "./papers/2411.01327v2.json",
        "figure_id": "2411.01327v2_figure_1.png",
        "caption": "Figure 1: Overview of VPT v⁢s.𝑣𝑠vs.italic_v italic_s . VFPT (ours) frameworks. (a) Original Visual Prompt Tuning. (b) 2D Fast Fourier Transform operations in partial visual prompts along hidden and sequence length dimensions. (c) The overall architecture of our proposed VFPT (see §3.2).",
        "qtype": "Literature_Background",
        "response": "The content highlighted by the red box, \"[mask1],\" refers to \"Visual Fourier Prompts.\"\n\nVisual Fourier Prompts leverage frequency-domain analysis by **transforming a partial subset of the original learnable visual prompts from the spatial domain into the frequency domain using a 2D Fast Fourier Transform (FFT)**. This transformation is applied along both the sequence and hidden dimensions of the prompt embeddings.\n\nIn comparison to general \"visual prompts\" (which remain in the spatial domain and are the input to the process in original VPT), Visual Fourier Prompts are specifically designed to include frequency-domain information. This integration allows the model to capture distinguishing features from various data distributions and achieve a more comprehensive understanding by considering both spatial and frequency domain information."
    },
    {
        "question": "How does combining sequence-wise FFT and hidden-wise FFT on visual prompts enhance feature representation?",
        "relevant_section_ids": [
            "4.5"
        ],
        "relevant_context": [
            "Fourier Prompt Dimension. A fundamental distinction between VFPT and other methods is the incorporation of FFT into visual prompts. In our standard implementation, we utilize 2D FFTs across both sequence length and hidden dimensions. Here, we explore the impact of each dimension’s transformation individually. As shown in Table 5 (a), the separate Fourier transformations along each dimension appear to have similar contributions (i.e., 80.88% → 80.74% in Natural). However, the combined application of transformations across both dimensions (i.e., 2D FFTs) demonstrates a synergistic effect, yielding significant improvement in performance."
        ],
        "final_answer": "By applying FFT along both the sequence and hidden dimensions simultaneously (i.e. using a 2D FFT) the prompts capture complementary frequency‐domain information from patch relationships and channel features. This joint transformation produces a synergistic effect, substantially boosting downstream task performance compared to using either sequence‐wise or hidden‐wise FFT alone.",
        "relevant_elements": [
            "Sequence-wise FFT",
            "Hidden-wise FFT",
            "Visual Prompts"
        ],
        "id": 1725,
        "masked_question": "How does combining [mask1] and hidden-wise FFT on visual prompts enhance feature representation?",
        "masked_number": 1,
        "masked_elements": [
            "Sequence-wise FFT"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.01327v2_figure_1.png",
        "paperid": "2411.01327v2",
        "paper_path": "./papers/2411.01327v2.json",
        "figure_id": "2411.01327v2_figure_1.png",
        "caption": "Figure 1: Overview of VPT v⁢s.𝑣𝑠vs.italic_v italic_s . VFPT (ours) frameworks. (a) Original Visual Prompt Tuning. (b) 2D Fast Fourier Transform operations in partial visual prompts along hidden and sequence length dimensions. (c) The overall architecture of our proposed VFPT (see §3.2).",
        "qtype": "Experimental_Results",
        "response": "The [mask1] refers to \"Sequence-wise FFT\" as indicated by the red box in Figure 1(b).\n\nHere's the step-by-step reasoning:\n1.  **Identify [mask1]:** The red box in the image highlights \"Sequence-wise FFT\".\n2.  **Locate relevant information about Fourier Transform dimensions:** The \"Ablation Study\" section, specifically \"Fourier Prompt Dimension,\" states: \"A fundamental distinction between VFPT and other methods is the incorporation of FFT into visual prompts. In our standard implementation, we utilize 2D FFTs across both sequence length and hidden dimensions... However, the combined application of transformations across both dimensions (i.e., 2D FFTs) demonstrates a synergistic effect, yielding significant improvement in performance.\" This directly addresses the combination of \"Sequence-wise FFT\" (along sequence length) and \"hidden-wise FFT\" (along hidden dimensions).\n3.  **Identify how this combination enhances feature representation:** The \"Fourier Contribution\" section further explains: \"...our approach can be viewed as a generalization of VPT, where the Fourier components learn effective representations from the frequency domain that complement the knowledge from the spatial domain.\"\n\nTherefore, combining Sequence-wise FFT and hidden-wise FFT (as 2D FFTs) on visual prompts enhances feature representation by:\n*   Demonstrating a synergistic effect that yields significant improvement in performance.\n*   Allowing Fourier components to learn effective representations from the frequency domain that complement the knowledge derived from the spatial domain."
    },
    {
        "question": "What limitations might arise from explicit linear composition applied to Text Encoder outputs?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Text Encoder",
            "Explicit Linear Composition"
        ],
        "id": 1731,
        "masked_question": "What limitations might arise from [mask1] applied to [mask2] outputs?",
        "masked_number": 2,
        "masked_elements": [
            "Explicit Linear Composition",
            "Text Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2409.16136v1_figure_1.png",
        "paperid": "2409.16136v1",
        "paper_path": "./papers/2409.16136v1.json",
        "figure_id": "2409.16136v1_figure_1.png",
        "caption": "Figure 1: Difference between (a) open-vocabulary object detection for the fine-grained category names, (b) fine-grained open vocabulary object detection for the attribute-specific descriptions, and (c) our proposed HA-FGOVD method.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative strategies could replace LLM-Guided Attribute Word Extraction to improve efficiency?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "LLM-Guided Attribute Word Extraction"
        ],
        "id": 1732,
        "masked_question": "What alternative strategies could replace [mask1] to improve efficiency?",
        "masked_number": 1,
        "masked_elements": [
            "LLM-Guided Attribute Word Extraction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2409.16136v1_figure_1.png",
        "paperid": "2409.16136v1",
        "paper_path": "./papers/2409.16136v1.json",
        "figure_id": "2409.16136v1_figure_1.png",
        "caption": "Figure 1: Difference between (a) open-vocabulary object detection for the fine-grained category names, (b) fine-grained open vocabulary object detection for the attribute-specific descriptions, and (c) our proposed HA-FGOVD method.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates explicit linear composition of Text Features for attribute enhancement?",
        "relevant_section_ids": [
            "1",
            "3.3"
        ],
        "relevant_context": [
            "However, OVD models, either based on or proposed as large pretrained Vision-Language Models, leverage a vast array of image-text pairs enriched with attribute words. These models’ latent feature spaces can represent global text features as a linear composition of fine-grained attribute tokens [13], while these attributes not being specifically highlighted within the OVD model.",
            "In the field of multimodality, embeddings of composite concepts can often be well-approximated as linear compositional structures[13], such as . Leveraging the linear additivity of embeddings, we perform a weighted linear fusion of global text features and attribute features as two vectors, which can be mathematically represented as follows:"
        ],
        "final_answer": "The empirical finding that in multimodal embedding spaces composite concepts decompose into linear combinations of their component attribute embeddings [13] motivates the use of explicit weighted linear fusion of global text and attribute‐specific features to amplify fine-grained attribute signals.",
        "relevant_elements": [
            "Text Features",
            "Explicit Linear Composition"
        ],
        "id": 1733,
        "masked_question": "What motivates explicit linear composition of [mask1] for attribute enhancement?",
        "masked_number": 1,
        "masked_elements": [
            "Text Features"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2409.16136v1_figure_1.png",
        "paperid": "2409.16136v1",
        "paper_path": "./papers/2409.16136v1.json",
        "figure_id": "2409.16136v1_figure_1.png",
        "caption": "Figure 1: Difference between (a) open-vocabulary object detection for the fine-grained category names, (b) fine-grained open vocabulary object detection for the attribute-specific descriptions, and (c) our proposed HA-FGOVD method.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What purpose does Attribute Word Extraction serve before Feature Extraction?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "To assist the OVD models in focusing on attribute words, we employed the LLAMA2 [14] LLM to extract attribute words from the input text.",
            "Given the prompt instruction  and input text , the LLM predicts the set of  attribute words : Then the position of each attribute word is obtained by matching function with the input text :"
        ],
        "final_answer": "Attribute Word Extraction is used to identify which words in the input text are attributes (and determine their positions), so that in the subsequent Feature Extraction stage the model can mask non-attribute tokens and focus on extracting attribute-specific features.",
        "relevant_elements": [
            "Attribute Word Extraction",
            "Feature Extraction"
        ],
        "id": 1734,
        "masked_question": "What purpose does [mask1] serve before [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Attribute Word Extraction",
            "Feature Extraction"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2409.16136v1_figure_1.png",
        "paperid": "2409.16136v1",
        "paper_path": "./papers/2409.16136v1.json",
        "figure_id": "2409.16136v1_figure_1.png",
        "caption": "Figure 1: Difference between (a) open-vocabulary object detection for the fine-grained category names, (b) fine-grained open vocabulary object detection for the attribute-specific descriptions, and (c) our proposed HA-FGOVD method.",
        "qtype": "Design_Rationale",
        "response": "*   **Step 1: Identify [mask1] and [mask2].**\n    *   From the image, [mask1] is \"Attribute Word Extraction\" (red box).\n    *   From the image, [mask2] is \"Feature Extraction\" (blue box).\n\n*   **Step 2: Locate relevant sections in the text.**\n    *   Section III-A is titled \"Attribute Words Extraction.\"\n    *   Section III-B is titled \"Attribute Feature Extraction.\"\n    *   The introductory paragraph of Section III states: \"our architecture consists of three key process: Attribute Words Extraction, Attribute Feature Extraction and Attribute Feature Enhancement.\"\n\n*   **Step 3: Understand the purpose of [mask1] from the text.**\n    *   Section III-A, \"Attribute Words Extraction,\" explicitly states: \"To assist the OVD models in focusing on attribute words, we employed the LLAMA2 [14] LLM to extract attribute words from the input text.\"\n    *   It further clarifies: \"Given the prompt instruction and input text, the LLM predicts the set of attribute words... Then the position of each attribute word is obtained by matching function with the input text.\"\n\n*   **Step 4: Understand how [mask1] serves [mask2] from the text.**\n    *   Section III-B, \"Attribute Feature Extraction,\" explains how the extracted attribute words are used: \"Considering that the semantic information of attribute words depends on different contexts... in order to ensure consistency of the positional information between the global text features and attribute features, attribute features are not extracted from individual attribute words. Instead, we have highlighted attribute semantic information by retaining"
    },
    {
        "question": "Why is a separate Query Graph and Tracklet Graph employed for multi-criteria Star Graph Association?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "At frame t, we select the active tracklets from frame t–Nw+1 to t–1 as OtT, where Nw is the OGO window size (detailed in Section 5). The critical task at this stage is to correctly associate the objects in Ot with those in OtT.",
            "Thus, we firstly predict the poses of the tracklets, i.e., StTt, where StTt is based on Kalman Filter using the objects’ estimated motion velocities and historical trajectories. Then we construct a graph for both the detections Ot and the predicted poses of the tracklets, named Query Graph (QG) and Tracklet Graph (TG) respectively."
        ],
        "final_answer": "A separate Query Graph (QG) and Tracklet Graph (TG) are built so that the current detections and the predicted tracklet poses can each be encoded as structured graphs. By extracting local star subgraphs from both QG and TG, the system can then perform robust multi-criteria matching (neighborhood, spatial, and shape consistency) between detections and tracklets in dynamic, crowded, and noisy environments.",
        "relevant_elements": [
            "Query Graph",
            "Tracklet Graph"
        ],
        "id": 1735,
        "masked_question": "Why is a separate [mask1] and [mask2] employed for multi-criteria Star Graph Association?",
        "masked_number": 2,
        "masked_elements": [
            "Query Graph",
            "Tracklet Graph"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2408.09191v1_figure_1.png",
        "paperid": "2408.09191v1",
        "paper_path": "./papers/2408.09191v1.json",
        "figure_id": "2408.09191v1_figure_1.png",
        "caption": "Figure 1. Our system processes LiDAR point clouds and stereo images as inputs. The 3D detection algorithm extracts detection boxes from the point cloud, while the visual odometry front-end obtains the initial ego-motion pose. In the world frame, we construct query and tracklet graphs for detections and tracklets, respectively, and use the MSGA algorithm for association and tracking. Ego-motion, map points, and tracklets are optimized in OGO. Tracklet states for the next frame are estimated using a motion model and participate in the subsequent tracking.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What drives the two-stage OCOW and OEFW design in Object-centric Graph Optimization?",
        "relevant_section_ids": [
            "5",
            "5.1",
            "5.2"
        ],
        "relevant_context": [
            "However, this approach performs well mainly in static scenes. For tracking dynamic objects, the ego-motion errors and the object pose errors coexist, affecting the convergence speed and accuracy of the graph optimization. To enable optimization tailored for 3D tracklets, we propose a graph optimization framework named Object-centric Graph Optimization (OGO). We divide the sliding window into two parts: Object-centric Optimization Window (OCOW) and Object-Ego Fusion Window (OEFW), and two windows adopt different optimization strategies.",
            "In the object-centric optimization window, we adopt a two-stage optimization strategy (Figure 3). In the first stage, we solely utilize residuals from static environment landmarks in SLAM and ego-motion poses to estimate ego-motion. At this point, the ego motion serves as a relatively reliable initial value. Then, we fix the ego-motion and solely optimize the object poses using residuals from object detection.",
            "In OEFW, objects and tracklets have undergone sufficient multi-frame observations, possessing good initial values and low system error. Reliable observation and joint optimization can help correct cumulative errors and improve the accuracy of locating and tracking."
        ],
        "final_answer": "The two-stage OCOW and OEFW design is driven by the need to handle both ego-motion and object-pose errors in dynamic scenes: OCOW first isolates and optimizes ego-motion using static landmarks, then fixes ego-motion to optimize object poses, and OEFW waits until objects have built reliable multi-frame estimates so that ego-motion and object poses can be jointly optimized to correct cumulative errors and boost convergence and accuracy.",
        "relevant_elements": [
            "OCOW",
            "OEFW"
        ],
        "id": 1736,
        "masked_question": "What drives the two-stage [mask1] and [mask2] design in Object-centric Graph Optimization?",
        "masked_number": 2,
        "masked_elements": [
            "OCOW",
            "OEFW"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2408.09191v1_figure_1.png",
        "paperid": "2408.09191v1",
        "paper_path": "./papers/2408.09191v1.json",
        "figure_id": "2408.09191v1_figure_1.png",
        "caption": "Figure 1. Our system processes LiDAR point clouds and stereo images as inputs. The 3D detection algorithm extracts detection boxes from the point cloud, while the visual odometry front-end obtains the initial ego-motion pose. In the world frame, we construct query and tracklet graphs for detections and tracklets, respectively, and use the MSGA algorithm for association and tracking. Ego-motion, map points, and tracklets are optimized in OGO. Tracklet states for the next frame are estimated using a motion model and participate in the subsequent tracking.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "How does Temporal Context Mining integrate Motion Decoder outputs with Feature & Frame Buffer for deeper temporal modeling?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Temporal Context Mining",
            "Motion Decoder",
            "Feature & Frame Buffer"
        ],
        "id": 1741,
        "masked_question": "How does [mask1] integrate Motion Decoder outputs with Feature & Frame Buffer for deeper temporal modeling?",
        "masked_number": 1,
        "masked_elements": [
            "Temporal Context Mining"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.19402v1_figure_1.png",
        "paperid": "2407.19402v1",
        "paper_path": "./papers/2407.19402v1.json",
        "figure_id": "2407.19402v1_figure_1.png",
        "caption": "Figure 1: Overview of our proposed large neural video coding model–NVC-1B. We explore to scale up the model size motion encoder-decoder, motion entropy model, contextual encoder-decoder, contextual entropy model, and temporal context mining module. Based on our exploration results, we allocate most model parameters to the modules marked with red stars.",
        "qtype": "Literature_Background",
        "response": "The \"Temporal Context Mining\" module (mask1) integrates the decoded motion vectors (`hat{v}_t^s` and `hat{v}_t^d`) received from the Motion Decoder with the `hat{F}_{t-1}` (decoded feature of the previous frame) and `hat{H}_{t-1}` (decoded hidden state/context of the previous frame) retrieved from the Feature & Frame Buffer.\n\nBy combining these inputs, the \"Temporal Context Mining\" module is designed to make full use of the temporal correlation between frames. It processes this information to generate multi"
    },
    {
        "question": "How does Contextual Entropy build upon Motion Entropy methodologies for latent representation compression?",
        "relevant_section_ids": [
            "4.1.2",
            "4.1.4"
        ],
        "relevant_context": [
            "Based on the abovementioned M₁, M₂, M₃ models, we first increase the channel number of the motion latent representation m and associated hyperprior. Then, we scale up the model size of motion hyper-encoder, hyper-decoder, and quadtree partition-based spatial context models [32, 39] by increasing the number of intermediate feature channels.",
            "Based on M₄, M₅, M₆ models, we continue to scale up the model size of their contextual entropy models. We increase the channel number of the contextual latent representation y and associated hyperprior. In addition, we increase the channel number of intermediate features of the contextual entropy model, including the contextual hyper-encoder, hyper-decoder, and quadtree partition-based spatial context models [32, 39]."
        ],
        "final_answer": "The contextual entropy model adopts the same compression strategy as the motion entropy model—namely, it increases the channel dimensions of its latent representation and associated hyperprior, and scales up its hyper-encoder, hyper-decoder, and quadtree partition-based spatial context modules—thereby building directly on the motion entropy methodology for latent compression.",
        "relevant_elements": [
            "Contextual Entropy",
            "Motion Entropy"
        ],
        "id": 1742,
        "masked_question": "How does [mask1] build upon [mask2] methodologies for latent representation compression?",
        "masked_number": 2,
        "masked_elements": [
            "Contextual Entropy",
            "Motion Entropy"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.19402v1_figure_1.png",
        "paperid": "2407.19402v1",
        "paper_path": "./papers/2407.19402v1.json",
        "figure_id": "2407.19402v1_figure_1.png",
        "caption": "Figure 1: Overview of our proposed large neural video coding model–NVC-1B. We explore to scale up the model size motion encoder-decoder, motion entropy model, contextual encoder-decoder, contextual entropy model, and temporal context mining module. Based on our exploration results, we allocate most model parameters to the modules marked with red stars.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How can deep learning–based VI detection complement auto-refraction eye test in screening workflows?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Pathological Visual Impairment detection",
            "Auto-refraction eye test"
        ],
        "id": 1743,
        "masked_question": "How can [mask1] complement [mask2] in screening workflows?",
        "masked_number": 2,
        "masked_elements": [
            "Pathological Visual Impairment detection",
            "Auto-refraction eye test"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.20309v1_figure_1.png",
        "paperid": "2410.20309v1",
        "paper_path": "./papers/2410.20309v1.json",
        "figure_id": "2410.20309v1_figure_1.png",
        "caption": "Figure 1: Comparison of the current and proposed screening model.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does deep learning analysis of retinal photos augment slit lamp and retinal fundus examination methods?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Retinal photos + deep Learning",
            "Slit lamp & Retinal Fundus examination"
        ],
        "id": 1744,
        "masked_question": "How does deep learning analysis of [mask1] augment slit lamp and retinal fundus examination methods?",
        "masked_number": 1,
        "masked_elements": [
            "Retinal photos + deep Learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.20309v1_figure_1.png",
        "paperid": "2410.20309v1",
        "paper_path": "./papers/2410.20309v1.json",
        "figure_id": "2410.20309v1_figure_1.png",
        "caption": "Figure 1: Comparison of the current and proposed screening model.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does presenting VA testing with pinhole inform the decision to perform auto-refraction eye test?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Presenting VA Testing with Pinhole",
            "Auto-refraction eye test"
        ],
        "id": 1745,
        "masked_question": "How does presenting [mask1] inform the decision to perform auto-refraction eye test?",
        "masked_number": 1,
        "masked_elements": [
            "Presenting VA Testing with Pinhole"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.20309v1_figure_1.png",
        "paperid": "2410.20309v1",
        "paper_path": "./papers/2410.20309v1.json",
        "figure_id": "2410.20309v1_figure_1.png",
        "caption": "Figure 1: Comparison of the current and proposed screening model.",
        "qtype": "Experimental_Results",
        "response": "The content highlighted by [mask1] describes Tier 1 of the Traditional Screening Model. This tier involves initial Visual Acuity (VA) testing. If the VA is poor (<6/12), a second VA test is performed with a pinhole.\n\nThe decision to perform an auto-refraction eye test, which is part of Tier 2, is informed by the results from Tier 1. Specifically, if the Visual Acuity (VA) remains poor (<6/12) even *after* the pinhole test in Tier 1, individuals are referred to Tier 2, which then includes the auto-refraction eye test."
    },
    {
        "question": "How does retinal photos plus deep learning streamline pathological VI detection compared to slit lamp and fundus examination?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Retinal photos + deep learning",
            "Slit lamp & Retinal Fundus examination"
        ],
        "id": 1746,
        "masked_question": "How does [mask1] streamline pathological VI detection compared to slit lamp and fundus examination?",
        "masked_number": 1,
        "masked_elements": [
            "Retinal photos + deep learning"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.20309v1_figure_1.png",
        "paperid": "2410.20309v1",
        "paper_path": "./papers/2410.20309v1.json",
        "figure_id": "2410.20309v1_figure_1.png",
        "caption": "Figure 1: Comparison of the current and proposed screening model.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What limitations arise from initializing audio cross-attention weights using text cross-attention parameters?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "CROSS ATTENTION FOR AUDIO",
            "CROSS ATTENTION FOR TEXT"
        ],
        "id": 1751,
        "masked_question": "What limitations arise from initializing [mask1] weights using text cross-attention parameters?",
        "masked_number": 1,
        "masked_elements": [
            "CROSS ATTENTION FOR AUDIO"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.16564v2_figure_1.png",
        "paperid": "2407.16564v2",
        "paper_path": "./papers/2407.16564v2.json",
        "figure_id": "2407.16564v2_figure_1.png",
        "caption": "Figure 1: Our AP-Adapter is an add-on to AudioLDM2 [12].\nUsers provide an original audio to AudioMAE [13] to extract audio features, and an editing command to the text encoder.\nThe decoupled audio and text cross-attention layers of AP-Adapter contribute to the fidelity with the input audio and transferability of the editing command in the edited audio.",
        "qtype": "Others",
        "response": "The [mask1] refers to the \"CROSS ATTENTION FOR AUDIO\" component.\n\nBased on the provided text, particularly the section \"Proposed Audio Prompt Adapter\" under \"Decoupled Cross-attention Adapters\":\n\"Since during AudioLDM2 training, the text feature `c_text` is trained to mimic the LOA from AudioMAE, we initialize `W_audio_K` and `W_audio_V` respectively from `W_text_K` and `W_text_V` for all the cross-attention layers in the Unet, and find that this significantly shortens our fine-tuning process compared to random initialization.\"\n\nThe text explicitly states that this initialization strategy *shortens the fine-tuning process* and does not mention any limitations arising from it. Therefore, based on the provided context, no limitations are stated."
    },
    {
        "question": "How could biases in AudioMAE Encoder affect fairness in Edited Audio?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "AudioMAE Encoder",
            "Edited Audio"
        ],
        "id": 1752,
        "masked_question": "How could biases in [mask1] affect fairness in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "AudioMAE Encoder",
            "Edited Audio"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.16564v2_figure_1.png",
        "paperid": "2407.16564v2",
        "paper_path": "./papers/2407.16564v2.json",
        "figure_id": "2407.16564v2_figure_1.png",
        "caption": "Figure 1: Our AP-Adapter is an add-on to AudioLDM2 [12].\nUsers provide an original audio to AudioMAE [13] to extract audio features, and an editing command to the text encoder.\nThe decoupled audio and text cross-attention layers of AP-Adapter contribute to the fidelity with the input audio and transferability of the editing command in the edited audio.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What motivates initializing audio cross-attention weights with those from text cross-attention?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "Since during AudioLDM2 training, the text feature  is trained to mimic the LOA from AudioMAE, we initialize  and  respectively from  and  for all the cross-attention layers in the Unet, and find that this significantly shortens our fine-tuning process compared to random initialization."
        ],
        "final_answer": "Because the text features in AudioLDM2 were trained to mimic the audio features (LOA) from AudioMAE, copying the existing text cross-attention weights to initialize the new audio cross-attention adapters provides a good starting point and significantly speeds up fine-tuning compared to random initialization.",
        "relevant_elements": [
            "text cross-attention",
            "audio cross-attention"
        ],
        "id": 1753,
        "masked_question": "What motivates initializing [mask1] weights with those from [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "audio cross-attention",
            "text cross-attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.16564v2_figure_1.png",
        "paperid": "2407.16564v2",
        "paper_path": "./papers/2407.16564v2.json",
        "figure_id": "2407.16564v2_figure_1.png",
        "caption": "Figure 1: Our AP-Adapter is an add-on to AudioLDM2 [12].\nUsers provide an original audio to AudioMAE [13] to extract audio features, and an editing command to the text encoder.\nThe decoupled audio and text cross-attention layers of AP-Adapter contribute to the fidelity with the input audio and transferability of the editing command in the edited audio.",
        "qtype": "Design_Rationale",
        "response": "**Step 1: Identify Mask1 and Mask2 in the Diagram and Text**\n- **Mask1 (red box):** In the diagram, this corresponds to \"CROSS ATTENTION FOR AUDIO\". In the text, this is referred to as the \"decoupled audio cross-attention layer\" or its weights (α and β, specifically Q_a and K_a in the equation).\n- **Mask2 (blue box):** In the diagram, this corresponds to \"CROSS ATTENTION FOR TEXT\". In the text, this is referred to as the \"text cross-attention\" or its weights (specifically Q_t and K_t).\n\n**Step 2: Locate the Relevant Section in the Text**\nThe \"Decoupled Cross-attention Adapters\" section discusses both text and audio cross-attention layers and their initialization.\n\n**Step 3: Find the Initialization Information**\nThe relevant sentence is: \"Since during AudioLDM2 training, the text feature is trained to mimic the LOA from AudioMAE, we initialize Q_a and K_a respectively from Q_t and K_t for all the cross-attention layers in the Unet, and find that this significantly shortens our fine-tuning process compared to random initialization.\"\n\n**Step 4: Extract the Motivation**\nThe motivation for initializing the weights of `CROSS ATTENTION FOR AUDIO` (Q_a and K_a) with those from `CROSS ATTENTION FOR TEXT` (Q_t and K_t) is explicitly stated: \"Since during AudioLDM2 training, the text feature is trained to mimic the LOA from AudioMAE\".\n\n**Step 5: Articulate the Answer**\nThe text clarifies that during the original AudioLDM2 training, the text feature was trained to mimic the \"language of audio\" (LOA) produced by AudioMAE. Therefore, the cross-attention layers for text (`CROSS ATTENTION FOR TEXT`) have already learned representations that are relevant to audio information. By initializing the weights of the `CROSS ATTENTION FOR AUDIO` with these pre-learned text cross-attention weights, the fine-tuning process is significantly shortened compared to random initialization.\n\n**Answer:**\nInitializing the `CROSS ATTENTION FOR AUDIO` (mask1) weights with those from `CROSS ATTENTION FOR TEXT` (mask2) is motivated by the fact that, during AudioLDM2's original training, the text feature was trained to mimic the \"Language of Audio\" (LOA) derived from AudioMAE. This pre-alignment means the text cross-attention weights already contain relevant audio information, which in turn significantly shortens the fine-tuning process for the audio cross-attention adapters."
    },
    {
        "question": "What benefits arise from merging max-pooled and mean-pooled audio features?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "In our pilot study, we find that using the LOA directly as the condition causes nearly verbatim reconstruction, i.e., information in the input audio is mostly retained. This is undesirable as it greatly limits transferability.",
            "To address this issue, we apply a combination of max and mean pooling on the LOA, and leave the pooling rate, which we denote by λ, tunable by the user to trade off between fidelity and transferability."
        ],
        "final_answer": "By merging max-pooled and mean-pooled LOA features, the model avoids nearly verbatim reconstruction of the input audio and gains a user-tunable pooling rate that lets one trade off between preserving fidelity and enabling transferability.",
        "relevant_elements": [
            "max pool",
            "mean pool",
            "Audio Feature"
        ],
        "id": 1754,
        "masked_question": "What benefits arise from merging [mask1] and mean-pooled audio features?",
        "masked_number": 1,
        "masked_elements": [
            "max pool"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.16564v2_figure_1.png",
        "paperid": "2407.16564v2",
        "paper_path": "./papers/2407.16564v2.json",
        "figure_id": "2407.16564v2_figure_1.png",
        "caption": "Figure 1: Our AP-Adapter is an add-on to AudioLDM2 [12].\nUsers provide an original audio to AudioMAE [13] to extract audio features, and an editing command to the text encoder.\nThe decoupled audio and text cross-attention layers of AP-Adapter contribute to the fidelity with the input audio and transferability of the editing command in the edited audio.",
        "qtype": "Design_Rationale",
        "response": "The [mask1] refers to the max-pooled audio features.\n\nHere's a step-by-step reasoning:\n\n1.  **Identify [mask1]:** Looking at the diagram, the red box highlights the output of the \"MAX POOL\" operation applied to the \"Audio Feature.\" Therefore, [mask1] refers to the max-pooled audio features.\n2.  **Locate relevant section in the text:** The section \"Audio Encoder and Feature Pooling\" directly discusses the use of AudioMAE and the pooling operations.\n3.  **Find the purpose of pooling:** The text states: \"In our pilot study, we find that using the LOA directly as the condition causes nearly verbatim reconstruction, i.e., information in the input audio is mostly retained. This is undesirable as it greatly limits transferability. To address this issue, we apply a combination of max and mean pooling on the LOA, and leave the pooling rate, which we denote by , tunable by the user to trade off between fidelity and transferability.\"\n\nThe benefits of merging max-pooled and mean-pooled audio features (they are averaged together as shown in the diagram before being fed to cross-attention for audio) arise from the need to address the problem of \"nearly verbatim reconstruction\" caused by using the raw AudioMAE features (LOA) directly. By applying this combination of pooling, the model can:\n\n*   **Avoid verbatim reconstruction:** This prevents too much original audio information from being retained, which would limit the ability to significantly modify the audio.\n*   **Balance fidelity and transferability:** The pooling operation, with its tunable rate, allows for a deliberate trade-off. \"Fidelity\" here means how much the edited audio adheres to the original input audio, while \"transferability\" refers to the model's ability to apply diverse editing commands (e.g., changing timbre, genre, adding accompaniment). The pooling mechanism helps achieve a balance where the edited audio is faithful enough to the original to be recognizable, but also flexible enough to incorporate the desired edits specified by the text command."
    },
    {
        "question": "What motivates separating VLM querying into Analysis Template and Labeling Template stages?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "As shown in the bottom part of Fig. 1, we follow the procedure from RL-VLM-F to query the VLM. The querying process involves two stages: analysis and labeling.",
            "In the analysis stage, we query the VLM for detailed responses describing and comparing how well each of two images achieves the task goal.",
            "In the labeling stage, we use the VLM-generated text responses to extract a preference label between the images."
        ],
        "final_answer": "The two-stage process is used to first elicit rich, detailed comparative reasoning from the vision-language model (Analysis Template), and then to distill that reasoning into a simple, unambiguous preference label (Labeling Template). This decoupling ensures that the model has fully described and contrasted the image pair before producing a concise, reliable preference signal.",
        "relevant_elements": [
            "Analysis Template",
            "Labeling Template"
        ],
        "id": 1755,
        "masked_question": "What motivates separating [mask1] into [mask2] stages?",
        "masked_number": 2,
        "masked_elements": [
            "VLM querying",
            "Analysis Template",
            "Labeling Template"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.05273v1_figure_1.png",
        "paperid": "2411.05273v1",
        "paper_path": "./papers/2411.05273v1.json",
        "figure_id": "2411.05273v1_figure_1.png",
        "caption": "Figure 1: Top: Our system, Offline RL-VLM-F, combines RL-VLM-F [1] with offline RL for effective policy learning from unlabeled datasets. Given an unlabeled dataset without rewards, it first samples observation pairs, and queries a Vision Language Model for preferences given a text description of the task. Using the preference labels, it then learns a reward model via preference-based reward learning. The learned reward model is utilized to label the entire offline dataset. Finally, it performs offline RL with the labeled dataset to learn a policy that solves the task. Bottom: we follow the same VLM querying process as in RL-VLM-F [1]. It consists of two stages: the first is an analysis stage that asks the VLM to analyze and compare the two images; the second is the labeling stage, where the VLM generates the preference labels based on its own analysis from the first stage and the task description.",
        "qtype": "Design_Rationale",
        "response": "**Chain of Thought:**\n\n1.  **Identify [mask1] and [mask2]:**\n    *   [mask1] refers to the \"VLM Querying Process,\" which is the entire red-boxed section at the bottom of Figure 1.\n    *   [mask2] refers to the \"Analysis Template,\" which is the blue-boxed section within the \"VLM Querying Process.\"\n\n2.  **Locate relevant text in the Context:**\n    *   The \"IV-A Reward labeling of the offline dataset\" section, specifically the \"Query VLM\" subsection, details the VLM querying process.\n    *   The \"Caption\" for Figure 1 also provides a summary of the two stages.\n\n3.  **Analyze the description of the two stages:**\n    *   From the \"Query VLM\" subsection: \"The querying process involves two stages: analysis and labeling. In the analysis stage, we query the VLM for detailed responses describing and comparing how well each of two images achieves the task goal. In the labeling stage, we use the VLM-generated text responses to extract a preference label between the images. Specifically, we ask the VLM to generate a preference label ..., based on its own response from the analysis stage.\"\n    *   From the Caption: \"It consists of two stages: the first is an analysis stage that asks the VLM to analyze and compare the two images; the second is the labeling stage, where the VLM generates the preference labels based on its own analysis from the first stage and the task description.\"\n\n4.  **Infer the motivation for separation:**\n    *   The \"analysis stage\" is for the VLM to produce \"detailed responses describing and comparing how well each of two images achieves the task goal.\""
    },
    {
        "question": "Why sample observation pairs from the unlabeled dataset for Vision Language Model preferences?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "We query a VLM to generate a preference dataset from the given offline dataset.",
            "Sample Observations: We begin by randomly sampling pairs of image observations from the offline dataset. The sampled image observation pairs, together with the text description of the task goal, are input to the VLM."
        ],
        "final_answer": "Observation pairs are sampled so that each pair can be presented to the Vision–Language Model (VLM) along with the task description, allowing the VLM to provide preference labels. These preference annotations over the sampled image pairs form the preference dataset used to train the reward model.",
        "relevant_elements": [
            "Sampled Obs. Pair",
            "Unlabeled Dataset",
            "Vision Language Model"
        ],
        "id": 1756,
        "masked_question": "Why [mask1] from the [mask2] for Vision Language Model preferences?",
        "masked_number": 2,
        "masked_elements": [
            "Sampled Obs. Pair",
            "Unlabeled Dataset"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.05273v1_figure_1.png",
        "paperid": "2411.05273v1",
        "paper_path": "./papers/2411.05273v1.json",
        "figure_id": "2411.05273v1_figure_1.png",
        "caption": "Figure 1: Top: Our system, Offline RL-VLM-F, combines RL-VLM-F [1] with offline RL for effective policy learning from unlabeled datasets. Given an unlabeled dataset without rewards, it first samples observation pairs, and queries a Vision Language Model for preferences given a text description of the task. Using the preference labels, it then learns a reward model via preference-based reward learning. The learned reward model is utilized to label the entire offline dataset. Finally, it performs offline RL with the labeled dataset to learn a policy that solves the task. Bottom: we follow the same VLM querying process as in RL-VLM-F [1]. It consists of two stages: the first is an analysis stage that asks the VLM to analyze and compare the two images; the second is the labeling stage, where the VLM generates the preference labels based on its own analysis from the first stage and the task description.",
        "qtype": "Design_Rationale",
        "response": "The system, Offline RL-VLM-F, starts with an **Unlabeled Dataset (s, a, s')** (represented by `mask2`), which lacks rewards. To learn a reward model and ultimately label this dataset, the system needs to acquire preference labels.\n\nThe **sampled observation pairs (s, a, s') and task description** (represented by `mask1`) are directly extracted or derived from this unlabeled dataset. Specifically:\n1.  **Sampling Observations:** The text states, \"We begin by randomly sampling pairs of image observations from the offline dataset.\" This means the images presented in `mask1` are sourced directly from the `mask2`.\n2.  **Input to VLM:** These \"sampled image observation pairs, together with the text description of the task goal, are input to the VLM"
    },
    {
        "question": "How does the Labeling Template transform Vision Language Model responses into discrete preference labels?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "As shown in the bottom part of Fig. 1, we follow the procedure from RL-VLM-F to query the VLM. The querying process involves two stages: analysis and labeling.",
            "In the labeling stage, we use the VLM-generated text responses to extract a preference label between the images. Specifically, we ask the VLM to generate a preference label y, where 0 indicates the first image is better, 1 indicates the second image is better, and -1 indicates no discernible differences, based on its own response from the analysis stage."
        ],
        "final_answer": "The Labeling Template appends to the VLM’s analysis a direct question—\"Is the goal better achieved in Image 1 or Image 2? Reply a single line of 0 if Image 1 is better, 1 if Image 2 is better, and -1 if unsure or no difference.\" This forces the VLM to output exactly one of the discrete labels {0, 1, –1}, which are then used as preference labels.",
        "relevant_elements": [
            "Labeling Template",
            "Vision Language Model"
        ],
        "id": 1757,
        "masked_question": "How does the [mask1] transform Vision Language Model responses into discrete preference labels?",
        "masked_number": 1,
        "masked_elements": [
            "Labeling Template"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.05273v1_figure_1.png",
        "paperid": "2411.05273v1",
        "paper_path": "./papers/2411.05273v1.json",
        "figure_id": "2411.05273v1_figure_1.png",
        "caption": "Figure 1: Top: Our system, Offline RL-VLM-F, combines RL-VLM-F [1] with offline RL for effective policy learning from unlabeled datasets. Given an unlabeled dataset without rewards, it first samples observation pairs, and queries a Vision Language Model for preferences given a text description of the task. Using the preference labels, it then learns a reward model via preference-based reward learning. The learned reward model is utilized to label the entire offline dataset. Finally, it performs offline RL with the labeled dataset to learn a policy that solves the task. Bottom: we follow the same VLM querying process as in RL-VLM-F [1]. It consists of two stages: the first is an analysis stage that asks the VLM to analyze and compare the two images; the second is the labeling stage, where the VLM generates the preference labels based on its own analysis from the first stage and the task description.",
        "qtype": "Implementation_Details",
        "response": "The [mask1], which is the \"Labeling Template,\" transforms Vision Language Model (VLM) responses into discrete preference labels by serving as a prompt for the VLM.\n\nHere's the step-by-step process:\n1.  **Input:** The Labeling Template takes the VLM's detailed response from the preceding \"Analysis Template\" stage as input. This VLM response contains the VLM's analysis and comparison of how well two given images achieve the task goal.\n2.  **Prompt:** The template then provides a specific prompt to the VLM. This prompt reiterates the questions from the analysis template and includes the VLM's prior detailed response. Crucially, it then explicitly asks: \"Is the goal better achieved in Image 1 or Image 2? Reply a single line of 0 if the goal is better achieved in Image 1, or 1 if it is better achieved in Image 2. Reply -1 if the text is unsure or there is no difference.\"\n3.  **Output:** Based on this specific instruction and its own internal analysis (provided as text in the prompt), the VLM outputs a single discrete numerical value (0, 1, or -1), which serves as the \"Preference Label.\"\n    *   `0` indicates Image 1 is preferred/better.\n    *   `1` indicates Image 2 is preferred/better.\n    *   `-1` indicates no discernible difference or the VLM is unsure.\n\nIn essence, the Labeling Template \"distills\" the VLM's rich textual analysis into a concise, quantifiable preference by directly instructing the VLM on how to format its final preference output."
    },
    {
        "question": "How does the Reward Model integrate preference labels to estimate transition rewards via preference-based learning?",
        "relevant_section_ids": [
            "3",
            "4.1"
        ],
        "relevant_context": [
            "Our work builds upon preference‐based RL, in which a reward function is learned from preference labels over the agent’s behaviors [32,33]. … Given a parameterized reward function r_θ over the states, we follow the standard Bradley–Terry model [34] to compute the preference probability of a pair of segments … Given a dataset of preferences D, preference‐based RL algorithms optimize the reward function r_θ by minimizing the following loss: (Eq. 2).",
            "Preference‐based reward learning: Using the stored preference labels, we follow the Bradley–Terry model as in Eq. 1 and learn a reward model using the loss in Eq. 2. The reward model is trained until it converges on the entire set of stored preference labels."
        ],
        "final_answer": "The Reward Model treats each VLM‐generated preference over two transitions as a training label, and fits a parameterized reward function r_θ so that higher‐scoring transitions are more likely under the Bradley–Terry preference model. Concretely, for each labeled pair (σ₁, σ₂, y), it computes P(σ₁≻σ₂)=exp(Σr_θ(σ₁))/[exp(Σr_θ(σ₁))+exp(Σr_θ(σ₂))], then minimizes the cross‐entropy loss (Eq. 2) between P and the observed label y. In this way, the learned r_θ assigns scalar rewards to individual transitions so that their summed values correctly predict the VLM’s preferences.",
        "relevant_elements": [
            "Reward Model",
            "Preference Label"
        ],
        "id": 1758,
        "masked_question": "How does the [mask1] integrate [mask2] to estimate transition rewards via preference-based learning?",
        "masked_number": 2,
        "masked_elements": [
            "Reward Model",
            "Preference Label"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.05273v1_figure_1.png",
        "paperid": "2411.05273v1",
        "paper_path": "./papers/2411.05273v1.json",
        "figure_id": "2411.05273v1_figure_1.png",
        "caption": "Figure 1: Top: Our system, Offline RL-VLM-F, combines RL-VLM-F [1] with offline RL for effective policy learning from unlabeled datasets. Given an unlabeled dataset without rewards, it first samples observation pairs, and queries a Vision Language Model for preferences given a text description of the task. Using the preference labels, it then learns a reward model via preference-based reward learning. The learned reward model is utilized to label the entire offline dataset. Finally, it performs offline RL with the labeled dataset to learn a policy that solves the task. Bottom: we follow the same VLM querying process as in RL-VLM-F [1]. It consists of two stages: the first is an analysis stage that asks the VLM to analyze and compare the two images; the second is the labeling stage, where the VLM generates the preference labels based on its own analysis from the first stage and the task description.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] (Reward Model) integrates the [mask2] (Preference Label) through a process called preference-based reward learning.\n\nHere's the step-by-step integration:\n1.  **VLM Querying and Preference Label Generation:** Pairs of observed images (from an unlabeled dataset) and a task description are fed into a Vision Language Model (VLM). The VLM, through an analysis and labeling stage, generates a \"Preference Label\" for each sampled pair. This label indicates which image in the pair is preferred (0 or 1) or if they are incomparable (-1) in terms of achieving the task goal. These generated preference labels form a dataset.\n2.  **Reward Model Learning:** The \"Reward Model\" is a parameterized reward function that needs to be learned.\n3.  **Bradley-Terry Model Application:** The system uses the Bradley-Terry model (Eq."
    },
    {
        "question": "How does Questions module ensure unbiased answer defaults for Yes/No and Choice formats?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "The format section specifies the format of the generated questions to streamline our further question collection from the LLM outputs. It differs for each question type to suit its structure. For Yes/No questions, the LLM is required to generate questions with an unbiased answer of ‘No’, which makes it easier to generate test oracles for this question type.",
            "Similarly, for Choice questions, the options must include all specified social groups plus an additional option, and the unbiased answer must always be the last option."
        ],
        "final_answer": "In the Questions module, prompts for Yes/No questions explicitly instruct the LLM to frame questions whose correct (unbiased) answer is always “No,” and prompts for Choice questions require listing all sensitive‐attribute groups plus one extra option, placing that extra option last so that the unbiased default choice is consistently the final option.",
        "relevant_elements": [
            "Questions",
            "Yes/No",
            "Choice"
        ],
        "id": 1759,
        "masked_question": "How does [mask1] module ensure unbiased answer defaults for [mask2] and Choice formats?",
        "masked_number": 2,
        "masked_elements": [
            "Questions",
            "Yes/No"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.00585v1_figure_2.png",
        "paperid": "2411.00585v1",
        "paper_path": "./papers/2411.00585v1.json",
        "figure_id": "2411.00585v1_figure_2.png",
        "caption": "Figure 2. Overview of BiasLens.",
        "qtype": "Implementation_Details",
        "response": "The [mask1] module, which is the Question Generation component, ensures unbiased answer defaults for [mask2] (Yes/No questions) and Choice formats by imposing specific rules during question generation.\n\nFor **[mask2] (Yes/No questions)**, the format section of the prompt instructs the LLM to generate questions such that the unbiased answer is always 'No'.\nFor **Choice questions**, the format section specifies that the options provided must include all specified social groups plus an additional option, and the unbiased answer must always be the last option in the list of choices."
    },
    {
        "question": "How do Judges evaluate open-ended Why responses to detect nuanced biases?",
        "relevant_section_ids": [
            "3.4"
        ],
        "relevant_context": [
            "To address these issues, we use an LLM-based approach to identify biased responses. For each response, we enlist three LLMs as judges to evaluate whether the response is biased. The prompt provided to each judge is shown in Figure 6. We apply the majority vote principle to determine the final decision: if two or more of the three LLM judges identify bias, the response is considered biased.",
            "Since we ask each Why question three times to the LLM under test, we receive three separate responses. Each of these responses is evaluated by three LLM judges, resulting in a decision for each one. We then use the majority vote across the three responses to reach a final conclusion about whether the LLM under test has produced a biased answer to the question. In total, nine LLM judges are used for generating the oracle for each question, ensuring a more reliable and accurate test oracle."
        ],
        "final_answer": "For open-ended Why questions, BiasLens uses an LLM-based test oracle: each individual response is fed to three LLM judges (using a specialized prompt, see Figure 6), and if at least two judges flag it as biased, that response is marked biased. Since each Why question is asked three times, all three responses are independently judged by three LLMs each, and a second majority vote over these three per-question decisions yields the final bias determination.",
        "relevant_elements": [
            "Why",
            "Judges"
        ],
        "id": 1760,
        "masked_question": "How do [mask1] evaluate open-ended [mask2] responses to detect nuanced biases?",
        "masked_number": 2,
        "masked_elements": [
            "Judges",
            "Why"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.00585v1_figure_2.png",
        "paperid": "2411.00585v1",
        "paper_path": "./papers/2411.00585v1.json",
        "figure_id": "2411.00585v1_figure_2.png",
        "caption": "Figure 2. Overview of BiasLens.",
        "qtype": "Implementation_Details",
        "response": "*   **Step 1: Identify [mask1].** The red box in the image highlights \"Judges\". According to the text in Section 3.1 and 3.4, these \"Judges\" are a set of LLMs (specifically, GPT4o-mini is mentioned for evaluation).\n*   **Step 2: Identify [mask2].** The blue box in the image highlights \"Why\" under \"Questions\". This refers to \"Why questions\", which are described in the text as \"open-ended and seek explanations\".\n*   **Step 3: Find how [mask1] evaluates [mask2] responses.**\n    *   Section 3.1, under \"Automatic test oracle generation\", states: \"for Why questions, we use a set of LLMs as judges to assess whether the collected answers exhibit bias.\"\n    *   Section 3.4, under \"LLM-Based Test Oracle for Why Questions\", provides detailed information:\n        *   For each response to a Why question, \"three LLMs as judges\" are enlisted to evaluate if the response is biased.\n        *   \"We apply the majority vote principle to determine the final decision: if two or more of the three LLM judges identify bias, the response is considered biased.\"\n        *   The LLM under test is prompted three times for each Why question, resulting in three separate responses.\n        *   Each of"
    },
    {
        "question": "How do roles from 11 attribute axes inform multi-format question generation strategies?",
        "relevant_section_ids": [
            "3.1",
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "BiasLens is an automatic LLM-based pipeline specifically designed for fairness testing of LLMs during role-playing. From the SE perspective, a typical fairness testing workflow involves two key steps: test input generation and test oracle generation (Chen et al., 2024). As shown in Figure 2, we present BiasLens from the two steps. 1) Automatic test input generation: This step aims to automatically generate inputs that can elicit biased responses from LLMs. Since our goal is to conduct fairness testing during role-playing, we first use an LLM to generate roles that have the potential to induce bias (i.e., role generation). For each role, we then generate questions that are likely to provoke biased responses from the LLMs assuming these roles (i.e., question generation). In line with previous work (Wan et al., 2023b), our pipeline produces three common types of questions: Yes/No questions, Choice questions, and Why questions.",
            "The role generation component utilizes GPT-4o (gpt, 2024a), one of the state-of-the-art general-purpose LLMs, to generate social roles that may exhibit potential biases or discriminatory behaviors. To generate roles that cover a wide spectrum of social groups, we use a comprehensive set of 11 demographic attributes derived from the work of Wan et al. (Wan et al., 2023b). These attributes were identified based on existing datasets containing over 150,000 annotated social media posts, with the assumption that using these attributes would allow for the generation of diverse and representative social groups. For each attribute, we prompt GPT-4o to list 50 social groups associated with it that may have a higher likelihood of discriminating against others.",
            "For each role, the question generation component utilizes GPT-4o to generate questions aimed at eliciting responses that may reveal the role’s discrimination and biases. Following previous research (Wan et al., 2023b), we generate three common types of questions: Yes/No questions, Choice questions, and Why questions."
        ],
        "final_answer": "BiasLens first uses GPT-4o to generate a diverse set of social roles by sampling 50 groups from each of 11 demographic attributes (the ‘attribute axes’). Each generated role then becomes the basis for automated question generation: GPT-4o produces three formats of bias-triggering queries—Yes/No questions, Choice questions, and open-ended Why questions—using tailored prompts (including task descriptions, examples, requirements, and format rules) so as to comprehensively probe for discriminatory responses when LLMs assume those roles.",
        "relevant_elements": [
            "Roles from 11 attribute axes",
            "Question Generation"
        ],
        "id": 1762,
        "masked_question": "How do [mask1] inform multi-format question generation strategies?",
        "masked_number": 1,
        "masked_elements": [
            "Roles from 11 attribute axes"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.00585v1_figure_2.png",
        "paperid": "2411.00585v1",
        "paper_path": "./papers/2411.00585v1.json",
        "figure_id": "2411.00585v1_figure_2.png",
        "caption": "Figure 2. Overview of BiasLens.",
        "qtype": "Literature_Background",
        "response": "\"Roles from 11 attribute axes\" inform multi-format question generation strategies by providing the specific social contexts and potential biases for which questions are to be formulated.\n\nHere's how this works according to the text and image:\n1.  **Role Generation (from 11 attribute axes):** The BiasLens framework first generates social roles using GPT-4o, drawing from 11 demographic attributes (e.g., gender, occupation, race). These roles are specifically designed to have a \"higher likelihood of discriminating against others\" or to \"exhibit potential biases.\"\n2.  **Question Generation \"for each role\":** Once a role is generated, the question generation component (also using GPT-4o) creates three types of questions: Yes/No, Choice, and Why questions. The crucial connection is that these questions are \"aimed at eliciting responses that may reveal the role’s discrimination and biases.\" This means the content of the questions is directly influenced by and tailored to the specific role generated from the 11 attribute axes. For instance, if a generated role is \"a sexist employer,\" the questions would be designed to provoke sexist responses from an LLM embodying that role, across the Yes/No, Choice, and Why formats.\n\nIn essence, the roles generated from the 11 attribute axes act as the *subject* or *persona* for which targeted, bias-revealing questions are subsequently created across different formats."
    },
    {
        "question": "How does Inversion transform images into latent noise for DiffPNG segmentation?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Real images from the PNG dataset must be converted into latent noise, a process typically handled by the DDPM [20], which introduces noise to generate latent variables. Unfortunately, the randomness of these variables impedes accurate image reconstruction during the reverse process, making them unsuitable for feature extraction.",
            "To maintain consistency in reconstruction, we employ the Null-text Inversion [46], with DDIM inversion as its core, ensuring the reconstructed images closely match the originals and remain relevant to their descriptions. This allows the latent noise to be effectively used for further segmentation tasks.",
            "Given T sampling steps, DDIM inversion outputs noise latent z_T, Null-text inversion outputs latent z*, the initial T-step noisy latent z_T^0 is equal to z*. To prevent a significant change in the reconstructed image, we minimize Null-text inversion loss for time t as: L_inv = ||ε_t - ε_θ(z_t^0, t, φ_uncond)||^2.",
            "After N iterations optimization for unconditional embedding at time t, we update the inverted noisy latent by z_t^0 = f(z_t, φ_uncond, t), where f maps z_t, φ_uncond, and t to z_t^0. The denoising U-Net can perceive a more accurate attention map from conditional input."
        ],
        "final_answer": "DiffPNG first maps real images into the diffusion model’s latent space using a two‐step inversion procedure. Instead of directly adding random DDPM noise, it applies DDIM inversion and then runs Null-text Inversion to derive a noise latent (denoted z*). Concretely, DDIM inversion produces an initial noisy latent z_T, Null-text Inversion refines this to z*, and this z* becomes the starting noisy latent z_T^0. The model then minimizes a reconstruction loss with respect to an unconditional text embedding and iteratively updates z_T^0 via a learned function f(z_t, φ_uncond, t). The result is a consistent latent noise representation of the original image that the U-Net can use for accurate attention-based segmentation.",
        "relevant_elements": [
            "Inversion",
            "DiffPNG"
        ],
        "id": 1767,
        "masked_question": "How does [mask1] transform images into latent noise for DiffPNG segmentation?",
        "masked_number": 1,
        "masked_elements": [
            "Inversion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.05352v1_figure_1.png",
        "paperid": "2407.05352v1",
        "paper_path": "./papers/2407.05352v1.json",
        "figure_id": "2407.05352v1_figure_1.png",
        "caption": "Figure 1: A comparison between the previous fully-supervised PNG paradigm with our proposed Zero-Shot Diffusion-based Paradigm. Motivated by the strong image-text alignment of text-to-image diffusion models, we employ these generative models in our PNG task through a zero-shot manner. This is aimed at exploring the ability of diffusion models to perform phrase-level grounding.",
        "qtype": "Experimental_Results",
        "response": "The [mask1] box refers to the \"Inversion\" module in the diagram.\n\nBased on the \"Feature Extraction\" section, specifically \"Visual Modality\":\n1.  The goal is to convert real images from the PNG dataset into latent noise.\n2.  While DDPM typically handles this by introducing noise, its randomness impedes accurate image reconstruction.\n3.  To overcome this and maintain consistency in reconstruction, the model employs **Null-text Inversion**.\n4.  **DDIM inversion** serves as the core of this Null-text Inversion process.\n\nTherefore, the \"Inversion\" module ([mask1]) transforms images into latent noise by employing **Null-text Inversion, with DDIM inversion as its core**. This process ensures that the reconstructed images closely match the originals and remain relevant to their descriptions, making the latent noise effectively usable for subsequent segmentation tasks within DiffPNG."
    },
    {
        "question": "How does Pixel Phrase Matching combine Image Encoder features and phrase kernels for mask generation?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Pixel Phrase Matching",
            "Image Encoder",
            "Phrase Kernel"
        ],
        "id": 1768,
        "masked_question": "How does [mask1] combine Image Encoder features and phrase kernels for mask generation?",
        "masked_number": 1,
        "masked_elements": [
            "Pixel Phrase Matching"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.05352v1_figure_1.png",
        "paperid": "2407.05352v1",
        "paper_path": "./papers/2407.05352v1.json",
        "figure_id": "2407.05352v1_figure_1.png",
        "caption": "Figure 1: A comparison between the previous fully-supervised PNG paradigm with our proposed Zero-Shot Diffusion-based Paradigm. Motivated by the strong image-text alignment of text-to-image diffusion models, we employ these generative models in our PNG task through a zero-shot manner. This is aimed at exploring the ability of diffusion models to perform phrase-level grounding.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What are the limitations of relying on inversion quality for downstream DiffPNG localization steps?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "Real images from the PNG dataset must be converted into latent noise, a process typically handled by the DDPM [20], which introduces noise to generate latent variables. Unfortunately, the randomness of these variables impedes accurate image reconstruction during the reverse process, making them unsuitable for feature extraction."
        ],
        "final_answer": "Because DiffPNG depends on inverting real images into latent noise, any randomness or errors introduced during that inversion will degrade the quality of the reconstructed image. In turn, this leads to unreliable attention maps and poor localization of noun phrases downstream.",
        "relevant_elements": [
            "Inversion",
            "DiffPNG"
        ],
        "id": 1769,
        "masked_question": "What are the limitations of relying on [mask1] quality for downstream DiffPNG localization steps?",
        "masked_number": 1,
        "masked_elements": [
            "Inversion"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.05352v1_figure_1.png",
        "paperid": "2407.05352v1",
        "paper_path": "./papers/2407.05352v1.json",
        "figure_id": "2407.05352v1_figure_1.png",
        "caption": "Figure 1: A comparison between the previous fully-supervised PNG paradigm with our proposed Zero-Shot Diffusion-based Paradigm. Motivated by the strong image-text alignment of text-to-image diffusion models, we employ these generative models in our PNG task through a zero-shot manner. This is aimed at exploring the ability of diffusion models to perform phrase-level grounding.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What alternative approaches could mitigate biases in frozen Text Encoder and Phrase Kernel representations?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Text Encoder",
            "Phrase Kernel"
        ],
        "id": 1770,
        "masked_question": "What alternative approaches could mitigate biases in frozen [mask1] and Phrase Kernel representations?",
        "masked_number": 1,
        "masked_elements": [
            "Text Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.05352v1_figure_1.png",
        "paperid": "2407.05352v1",
        "paper_path": "./papers/2407.05352v1.json",
        "figure_id": "2407.05352v1_figure_1.png",
        "caption": "Figure 1: A comparison between the previous fully-supervised PNG paradigm with our proposed Zero-Shot Diffusion-based Paradigm. Motivated by the strong image-text alignment of text-to-image diffusion models, we employ these generative models in our PNG task through a zero-shot manner. This is aimed at exploring the ability of diffusion models to perform phrase-level grounding.",
        "qtype": "Others",
        "response": "unanswerable."
    },
    {
        "question": "What limitations stem from quantization codebook size selection on capturing diverse semantics?",
        "relevant_section_ids": [
            "5"
        ],
        "relevant_context": [
            "As shown in Tab. 5, an incorrect choice of codebook size can result in the codes failing to learn distinct semantic concepts or capturing irrelevant details."
        ],
        "final_answer": "If the codebook size is chosen poorly, the quantized codes may fail to learn distinct semantic concepts or may instead capture irrelevant details, undermining the model’s ability to represent diverse semantics.",
        "relevant_elements": [
            "codebook",
            "quantization"
        ],
        "id": 1771,
        "masked_question": "What limitations stem from quantization [mask1] size selection on capturing diverse semantics?",
        "masked_number": 1,
        "masked_elements": [
            "codebook"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.01801v2_figure_1.png",
        "paperid": "2411.01801v2",
        "paper_path": "./papers/2411.01801v2.json",
        "figure_id": "2411.01801v2_figure_1.png",
        "caption": "Figure 1: \nThe overall pipeline of our framework. A top-down pathway is introduced into slot attention to utilize top-down information. The pathway consists of two parts: bootstrapping top-down knowledge and exploiting them. Firstly, semantic information is bootstrapped from slot attention outputs by mapping slots to discrete codes from a learned codebook through vector quantization. Secondly, slot attention is modulated using these codes and its attention maps, transforming it into a self-modulating module. Inner activations are modulated across channels with codes and across space with centered attention maps. Slot attention is then repeated with these modulated activations, yielding more representative slots.",
        "qtype": "Others",
        "response": "The limitations stemming from quantization size selection on capturing diverse semantics are that an incorrect choice of codebook size can result in the codes failing to learn distinct semantic concepts or capturing irrelevant details."
    },
    {
        "question": "What ethical concerns arise from using discrete codebook semantics to modulate slot attention in surveillance imagery?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "codebook",
            "slot attention"
        ],
        "id": 1772,
        "masked_question": "What ethical concerns arise from using discrete [mask1] semantics to modulate [mask2] in surveillance imagery?",
        "masked_number": 2,
        "masked_elements": [
            "codebook",
            "slot attention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.01801v2_figure_1.png",
        "paperid": "2411.01801v2",
        "paper_path": "./papers/2411.01801v2.json",
        "figure_id": "2411.01801v2_figure_1.png",
        "caption": "Figure 1: \nThe overall pipeline of our framework. A top-down pathway is introduced into slot attention to utilize top-down information. The pathway consists of two parts: bootstrapping top-down knowledge and exploiting them. Firstly, semantic information is bootstrapped from slot attention outputs by mapping slots to discrete codes from a learned codebook through vector quantization. Secondly, slot attention is modulated using these codes and its attention maps, transforming it into a self-modulating module. Inner activations are modulated across channels with codes and across space with centered attention maps. Slot attention is then repeated with these modulated activations, yielding more representative slots.",
        "qtype": "Others",
        "response": "The provided text discusses the technical aspects of an Object-Centric Learning (OCL) framework, including a method for incorporating top-down information into slot attention by using discrete semantic codes from a learned codebook to modulate feature processing. The text describes the methodology, experimental setup, and performance metrics across various datasets (MOVI-C, MOVI-E, PASCAL VOC, MS COCO).\n\nHowever, the context does not discuss any ethical concerns, biases, or potential misuse cases related to the application of this technology in \"surveillance imagery\" or any other domain. The paper focuses solely on the technical improvements and evaluation of the proposed model.\n\nTherefore, the question cannot be answered based on the provided context.\n\nUnanswerable."
    },
    {
        "question": "Why quantize slots via codebook before MLP-driven channel modulation?",
        "relevant_section_ids": [
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "Firstly, we extract the “what” information from the slots s using Vector Quantization (VQ), which maps each slot to one of the semantic concepts learned throughout training. Specifically, each slot s_i is mapped to the nearest code in a finite codebook E with size K. The mapped code z_i is considered a top-down semantic cue for the slot s_i. During training, the codebook learns to store distinct semantic patterns recurring within the dataset by quantizing continuous slot embeddings into a limited number of discrete embeddings. Thereby, each code can act as automatically discovered top-down semantic information. (Sec. 3.2)",
            "For predicting channel-wise modulation vector γ_k, quantized slot z_k is used, which tells us “what” the object appearing in the image is. The channel-wise scaling is designed to enforce the model to focus on certain feature subspaces closely correlated to the semantic concept identified. (Sec. 3.3)"
        ],
        "final_answer": "The slots are vector-quantized into discrete codes so that each slot is converted into a stable semantic cue (‘what’ the object is). Feeding these discrete codes to the MLP lets it produce channel‐wise modulation factors specifically tuned to the discovered semantic class, ensuring the model focuses on feature channels most relevant to that object concept.",
        "relevant_elements": [
            "Quantization",
            "Channel Modulation",
            "MLP"
        ],
        "id": 1773,
        "masked_question": "Why [mask1] slots via codebook before MLP-driven channel modulation?",
        "masked_number": 1,
        "masked_elements": [
            "Quantization"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.01801v2_figure_1.png",
        "paperid": "2411.01801v2",
        "paper_path": "./papers/2411.01801v2.json",
        "figure_id": "2411.01801v2_figure_1.png",
        "caption": "Figure 1: \nThe overall pipeline of our framework. A top-down pathway is introduced into slot attention to utilize top-down information. The pathway consists of two parts: bootstrapping top-down knowledge and exploiting them. Firstly, semantic information is bootstrapped from slot attention outputs by mapping slots to discrete codes from a learned codebook through vector quantization. Secondly, slot attention is modulated using these codes and its attention maps, transforming it into a self-modulating module. Inner activations are modulated across channels with codes and across space with centered attention maps. Slot attention is then repeated with these modulated activations, yielding more representative slots.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What is the motivation behind integrating Edge Model and Segment Model for microstructural feature extraction?",
        "relevant_section_ids": [
            "1"
        ],
        "relevant_context": [
            "We develop a comprehensive research model that spans from image analysis to microstructural characterization and material performance.",
            "Addressing the specific characteristics in metallographic images, this paper introduces a multitask automated image segmentation model within the realm of computer science. The model includes a deep learning–based multi-stage metallographic grain boundary detection model and a second-phase extraction model.",
            "For the second-phase metallographic images, a deep learning–based multiscale fusion segmentation model is utilized to extract the microstructure of the second phase. Subsequently, the average size of Mg alloy grains and the average area and equivalent circular diameter of the second phase are computed based on the extracted grain boundaries and microstructure."
        ],
        "final_answer": "The Edge Model (grain boundary detector) and the Segment Model (second-phase extractor) are integrated so that all critical microstructural features – both grain boundaries for measuring grain size and dispersed second-phase particles for measuring area fraction and particle size – can be automatically and accurately extracted in one unified framework. This comprehensive feature extraction is essential for linking microstructure to Vickers hardness in Mg-Gd alloys.",
        "relevant_elements": [
            "Edge Model",
            "Segment Model"
        ],
        "id": 1775,
        "masked_question": "What is the motivation behind integrating [mask1] and Segment Model for microstructural feature extraction?",
        "masked_number": 1,
        "masked_elements": [
            "Edge Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.20402v1_figure_1.png",
        "paperid": "2410.20402v1",
        "paper_path": "./papers/2410.20402v1.json",
        "figure_id": "2410.20402v1_figure_1.png",
        "caption": "Figure 1: Overall framework of this study (revealing the relationship between material images, material microstructure, and material properties).",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What is the motivation behind combining Experiments Data and Literatures Data for model generalization?",
        "relevant_section_ids": [
            "2.1"
        ],
        "relevant_context": [
            "Furthermore, to compensate for the lack of experimental data and improve the model performance, we collected microstructural images and performance data of Mg-Gd alloys with different Gd contents from relevant literature to supplement our dataset."
        ],
        "final_answer": "They combine experimental data with literature data in order to overcome the scarcity of their own experimental images and measurements and thus enrich the training set, which in turn improves the model’s performance and generalization capability.",
        "relevant_elements": [
            "Experiments Data",
            "Literatures Data"
        ],
        "id": 1776,
        "masked_question": "What is the motivation behind combining [mask1] and Literatures Data for model generalization?",
        "masked_number": 1,
        "masked_elements": [
            "Experiments Data"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.20402v1_figure_1.png",
        "paperid": "2410.20402v1",
        "paper_path": "./papers/2410.20402v1.json",
        "figure_id": "2410.20402v1_figure_1.png",
        "caption": "Figure 1: Overall framework of this study (revealing the relationship between material images, material microstructure, and material properties).",
        "qtype": "Design_Rationale",
        "response": "To answer the question about the motivation behind combining \"Experiments Data\" and \"Literatures Data\" for model generalization, let's refer to the provided text:\n\n1.  The text states: \"we built a performance prediction dataset that includes both experimental data and relevant literature data.\" This confirms the combination.\n2.  Regarding the experimental data, it describes the detailed process for obtaining Mg-2.1Gd alloy samples and their microstructure images. However, it also mentions challenges during sample preparation, hinting at potential limitations or sparsity in the exclusively experimental dataset.\n3.  Crucially, it explicitly states the reason for including literature data: \"Furthermore, **to compensate for the lack of experimental data and improve the model performance**, we collected microstructural images and performance data of Mg-Gd alloys with different Gd contents from relevant literature to supplement our dataset.\"\n\nTherefore, the motivation behind combining \"Experiments Data\" and \"Literatures Data\" is to **compensate for the lack of experimental data** and **improve the overall model performance**, which directly contributes to better model generalization by providing a larger and more diverse dataset to train the models."
    },
    {
        "question": "How does the Edge Model handle multi-scale feature extraction to generate the Grain Result map?",
        "relevant_section_ids": [
            "2.2.1"
        ],
        "relevant_context": [
            "The architecture of the model consists of three stages, where each stage captures image features at different scales by incorporating the three pixel-wise difference methods.",
            "Additionally, to further optimize the feature maps, a multi-scale adaptive feature refinement module (MSAFR) is connected after the last residual block of each stage. This module is primarily composed of three main layers: the Compact Part Convolution Module (CPCM), which uses convolution kernels of various sizes and dilation rates to enrich multi-scale edge information, and the Large Kernel Attention (LKA) module, which combines depth-wise and dilated convolutions followed by a 1×1 convolution to fuse local and global features.",
            "Each stage further reduces the feature volume to a single-channel map through a 1×1 convolutional layer, which is then interpolated to the original size and passed through a Sigmoid function. The final edge map (Grain Result) is obtained by concatenating these three single-channel maps, applying further convolution, and a final Sigmoid activation."
        ],
        "final_answer": "The Edge Model is built as a three-stage network where each stage uses three different pixel-wise difference convolutions (CPDC, APDC, RPDC) to extract edge features at fine to coarse scales. After each stage, a Multi-Scale Adaptive Feature Refinement (MSAFR) module—comprising a multi-kernel, multi-dilation Compact Part Convolution Module (CPCM) and a Large Kernel Attention (LKA) block—further refines these features. Finally, each stage’s output is reduced to a single channel, upsampled, sigmoid-activated, and the three maps are concatenated and convolved to produce the final Grain Result edge map.",
        "relevant_elements": [
            "Edge Model",
            "Grain Result"
        ],
        "id": 1777,
        "masked_question": "How does the [mask1] handle multi-scale feature extraction to generate the Grain Result map?",
        "masked_number": 1,
        "masked_elements": [
            "Edge Model"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.20402v1_figure_1.png",
        "paperid": "2410.20402v1",
        "paper_path": "./papers/2410.20402v1.json",
        "figure_id": "2410.20402v1_figure_1.png",
        "caption": "Figure 1: Overall framework of this study (revealing the relationship between material images, material microstructure, and material properties).",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the Regression Model utilize Feature Information to fuse composition and microstructural features?",
        "relevant_section_ids": [
            "2.4"
        ],
        "relevant_context": [
            "In this study, we use the atomic percentage of Gd, grain size, second phase area fraction, and second phase particle size as input features, with Vickers hardness as the output feature.",
            "First, the linear mapping layer of the encoder converts the input 4-dimensional features (including Gd atomic percentage, grain size, second-phase area fraction, and second-phase particle size) into a 64-dimensional high-level feature representation. Then, the self-attention mechanism is used to weight these features, where the Q, K, and V feature vectors are utilized for self-attention calculation.",
            "Through the multi-head attention mechanism (with 4 attention heads), the model is able to capture diverse features from different perspectives within the data, integrating composition and microstructural information into a unified representation, which is then decoded by a fully-connected layer to predict Vickers hardness."
        ],
        "final_answer": "The regression model first concatenates composition (Gd atomic percentage) and microstructural measurements (grain size, second-phase area fraction, second-phase particle size) into a four-dimensional feature vector. This vector is linearly mapped to a 64-dimensional space, then passed through a multi-layer Transformer encoder that uses self-attention (with 4 heads) to learn and weight interactions among all features. Finally, a fully connected decoder converts the fused high-dimensional representation into the predicted Vickers hardness.",
        "relevant_elements": [
            "Regression Model",
            "Feature Information"
        ],
        "id": 1778,
        "masked_question": "How does the [mask1] utilize [mask2] to fuse composition and microstructural features?",
        "masked_number": 2,
        "masked_elements": [
            "Regression Model",
            "Feature Information"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.20402v1_figure_1.png",
        "paperid": "2410.20402v1",
        "paper_path": "./papers/2410.20402v1.json",
        "figure_id": "2410.20402v1_figure_1.png",
        "caption": "Figure 1: Overall framework of this study (revealing the relationship between material images, material microstructure, and material properties).",
        "qtype": "Implementation_Details",
        "response": "The [mask1] (Regression Model, which includes Decision Trees, Random Forests, Vgg16, and MLP) utilizes [mask2] (Feature Information comprising Gd atomic percentage, grain size, second phase area, and second phase size) by taking these features as **combined input parameters**.\n\nSpecifically, as stated in the \"Performance Evaluation\" section: \"In this study, we use the atomic percentage of Gd, grain size, second phase area fraction, and second phase particle size as input features, with Vickers hardness as the output feature.\"\n\nTherefore, the models within [mask1] are trained on this multi-dimensional input, where 'at%' represents the compositional feature and 'Grain Size', 'Second Phase Area', and 'Second Phase Size' represent the microstructural features. By feeding all these parameters simultaneously into the regression models, the framework effectively fuses the composition and microstructural characteristics to predict material performance."
    },
    {
        "question": "How does Image-Level Intervention adjust attention weights to enhance global visual information?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "According to the trusted activation A_trusted and the untrusted activation A_untrusted obtained from all sample pairs, we can calculate the following activation shift vector Δ that encourages the model to pay more attention to visual information, as follows: (equation for Δ).",
            "Next, we train a binary classifier f_image using M sample pairs for each head to detect which heads encode Image-Level information, specifically those that can better distinguish the differences between pairs of trusted and untrusted samples. We then apply activation interventions to these selected heads: ˜A_{l,h} = A_{l,h} + λ·I[h ∈ S_image]·Δ_{l,h}, where I[h ∈ S_image] is 1 if head h was selected by the classifier and 0 otherwise, and λ controls the intervention intensity."
        ],
        "final_answer": "Image-Level Intervention first computes an activation shift vector Δ by averaging the difference between attention activations on unblurred (trusted) and blurred (untrusted) images. It then trains a head-wise binary classifier to select those heads that most strongly encode overall visual content. During the forward pass, it adds the scaled shift vector (λ·Δ) to the activations of only these selected heads, thereby boosting their attention weights on the global visual input.",
        "relevant_elements": [
            "Image-Level Intervention"
        ],
        "id": 1779,
        "masked_question": "How does [mask1] adjust attention weights to enhance global visual information?",
        "masked_number": 1,
        "masked_elements": [
            "Image-Level Intervention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15268v1_figure_1.png",
        "paperid": "2411.15268v1",
        "paper_path": "./papers/2411.15268v1.json",
        "figure_id": "2411.15268v1_figure_1.png",
        "caption": "Figure 1: Comparison between Contrastive Decoding (top) and our proposed ICT (bottom). In the top example, Contrastive Decoding indiscriminately removes both beneficial and detrimental language priors, leading to hallucinations. In contrast, our approach enhances the model’s attention to visual details while preserving useful language priors, allowing it to correctly identify and describe objects in the image.",
        "qtype": "Implementation_Details",
        "response": "The [mask1], referring to \"Image-Level Intervention,\" adjusts attention weights to enhance global visual information by first identifying attention heads associated with overall image information. It does this by creating \"trusted\" data (original image with a question) and \"untrusted\" data (noisy, blurred image with the same question).\n\n1.  **Calculate Activation Shift Vector (`delta_A`):** It extracts attention activations from both trusted (`A_t`) and untrusted (`A_u`) data for each attention head. An \"activation shift vector\" (`delta_A = A_t - A_u`) is computed by subtracting the activations of untrusted data from trusted data. This vector represents the desired shift to prioritize visual information.\n2.  **Identify Relevant Heads:** A binary classifier is trained to identify specific attention heads that primarily encode image-level information by their ability to distinguish between trusted and untrusted samples.\n3.  **Apply Targeted Intervention:** The calculated `delta_A` is then added to the activation of these **selected attention heads**, scaled by an intervention intensity (`alpha`). This direct modification of the attention activation `head_i` (`head_i = head_i + delta_A * I(psi(delta_A_i) == 1) * alpha`) effectively adjusts their weights to increase the model's focus on overall visual input and reduce over-reliance on language priors.\n\nBy applying this activation intervention, the model's trustworthiness at the visual level is enhanced, prompting it to pay greater attention to global visual information."
    },
    {
        "question": "How does Object-Level Intervention modulate attention to emphasize fine-grained object details?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "Using both the original image I and the partially blurred image I_b^o, we construct trusted and untrusted data pairs for each sample: (I, Q) and (I_b^o, Q) and analyze the attention activation values across H heads, allowing us to compute an Object-Level activation shift vector δ^{(O)}.",
            "A binary classifier g_O is then trained to identify heads that effectively distinguish trusted from untrusted object-focused samples. Interventions are subsequently applied to the selected heads as follows: h^{l}_i(t) ← h^{l}_i(t) + α · I[g_O(Δ^{(O)},·)] · δ^{(O)}, where α controls the intervention intensity."
        ],
        "final_answer": "Object-Level Intervention first identifies which attention heads encode fine-grained object information by comparing activations on the original image versus a version with the object region locally blurred. It computes an activation shift vector δ^{(O)} that captures how those heads should change to focus on object details, trains a small classifier g_O to pick out those heads, and then, during the forward pass, adds a scaled version of δ^{(O)} to the activations of only the selected heads. This targeted additive shift boosts those heads’ responses to the object region, thereby emphasizing fine-grained object details in the model’s attention.",
        "relevant_elements": [
            "Object-Level Intervention"
        ],
        "id": 1780,
        "masked_question": "How does [mask1] modulate attention to emphasize fine-grained object details?",
        "masked_number": 1,
        "masked_elements": [
            "Object-Level Intervention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15268v1_figure_1.png",
        "paperid": "2411.15268v1",
        "paper_path": "./papers/2411.15268v1.json",
        "figure_id": "2411.15268v1_figure_1.png",
        "caption": "Figure 1: Comparison between Contrastive Decoding (top) and our proposed ICT (bottom). In the top example, Contrastive Decoding indiscriminately removes both beneficial and detrimental language priors, leading to hallucinations. In contrast, our approach enhances the model’s attention to visual details while preserving useful language priors, allowing it to correctly identify and describe objects in the image.",
        "qtype": "Implementation_Details",
        "response": "The \"Object-Level Intervention\" (referred to as [mask1] in the diagram) modulates attention to emphasize fine-grained object details by following these steps:\n\n1.  **Creating Paired Data:** It uses an original image (trusted data) and a locally blurred version of the image (untrusted data), where Gaussian noise has been selectively added only to specific object regions identified by Grounding DINO.\n2.  **Calculating Activation Shift:** It analyzes the attention activation values from all heads when processing both the trusted and untrusted object-focused data pairs. This analysis is used to compute an \"Object-Level activation shift vector\" ($\\Delta_{obj}$). This vector essentially represents the difference in activation when an object's details are present versus when they are obscured.\n3.  **Identifying Relevant Heads:** A binary classifier is trained to identify specific attention heads that are effective at distinguishing between the trusted (original object details) and untrusted (blurred object details) samples. These are the heads that are sensitive to the presence of fine-grained object information.\n4.  **Applying Targeted Intervention:** Finally, the calculated activation shift vector ($\\Delta_{obj}$) is applied as an intervention to these *selected* attention heads. This intervention directly modifies the activation of these heads, effectively increasing the model's focus on and sensitivity to the detailed visual information within the objects, thereby encouraging the model to pay more attention to image details and fine-grained object information."
    },
    {
        "question": "How does Image-Level Intervention differ from Contrastive Decoding’s reliance on blurred input contrast?",
        "relevant_section_ids": [
            "1",
            "4.1"
        ],
        "relevant_context": [
            "Contrastive decoding: This method alleviates hallucinations without requiring additional training. It induces hallucinations by applying transformations such as blurring, rotation, or cropping to the original visual input. During the decoding stage, tokens associated with these induced hallucinations are penalized, thus mitigating the influence of language priors [43, 107, 10, 14, 81, 69, 86, 36, 63]. However, methods such as VCD often indiscriminately eliminate all language priors, including those that may be beneficial.",
            "This [Image-Level] module aims to identify the attention heads associated with overall image information and to apply targeted interventions to these heads. This approach enhances the model’s focus on visual input while diminishing the influence of language priors.",
            "We progressively add Gaussian noise following the forward diffusion process to obtain the final blurred image. Finally, we construct a modified dataset to obtain Image-Level intervention vectors. ... We then train a binary classifier for each head to detect which heads encode Image-Level information... We then apply activation interventions to these selected heads... After using [the interventions] on heads that encode image information, the model enhances the trustworthiness of the visual level, places greater attention on visual information, thus mitigates the impact of overly strong language priors."
        ],
        "final_answer": "Contrastive decoding uses blurred (or otherwise transformed) images at inference-time to penalize certain tokens during the decoding stage—thereby indiscriminately weakening all language priors when contrastive scores drop. In contrast, Image-Level Intervention also uses blurred versions of the image but only as a means to compute \"activation shift\" vectors offline. Those shifts are then applied during the forward pass to a carefully selected subset of attention heads, strengthening visual attention without removing beneficial language priors and without any extra decoding-time penalty or latency.",
        "relevant_elements": [
            "Image-Level Intervention",
            "Contrastive Decoding"
        ],
        "id": 1781,
        "masked_question": "How does [mask1] differ from Contrastive Decoding’s reliance on blurred input contrast?",
        "masked_number": 1,
        "masked_elements": [
            "Image-Level Intervention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15268v1_figure_1.png",
        "paperid": "2411.15268v1",
        "paper_path": "./papers/2411.15268v1.json",
        "figure_id": "2411.15268v1_figure_1.png",
        "caption": "Figure 1: Comparison between Contrastive Decoding (top) and our proposed ICT (bottom). In the top example, Contrastive Decoding indiscriminately removes both beneficial and detrimental language priors, leading to hallucinations. In contrast, our approach enhances the model’s attention to visual details while preserving useful language priors, allowing it to correctly identify and describe objects in the image.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does Object-Level Intervention extend prior analyses of attention heads’ granularity?",
        "relevant_section_ids": [
            "1",
            "4.2"
        ],
        "relevant_context": [
            "According to prior research [80, 19, 8], which has shown that different heads in the multi-head attention mechanism encode information at varying levels of granularity, we train binary classifiers for each head to determine which heads encode overall visual information and which capture detailed visual features.",
            "After enhancing the model’s trustworthiness at the Image-Level, a more fine-grained, Object-Level intervention becomes necessary to increase the model’s attention to image details, thereby reducing hallucinations caused by the omission of fine details.",
            "We use Grounding DINO [57] to identify the area of object O in image I. Gaussian noise is then added selectively to this object region ... Using both the original image I and the partially blurred image I'', we construct trusted and untrusted data pairs for each sample ... A binary classifier f^O is then trained to identify heads that effectively distinguish trusted from untrusted object-focused samples. Interventions are subsequently applied to the selected heads."
        ],
        "final_answer": "Prior work identified attention heads that encode either overall (coarse) image information or more detailed visual features. Object-Level Intervention builds on this by pushing the granularity analysis even further: it isolates heads that respond specifically to the fine-grained, object-region details. This is done by selectively blurring the target object region, measuring how each head’s activation shifts, training a per-head classifier to detect object-level signals, and then intervening on those heads to enhance focus on object-specific visual cues.",
        "relevant_elements": [
            "Object-Level Intervention",
            "attention heads"
        ],
        "id": 1782,
        "masked_question": "How does [mask1] extend prior analyses of attention heads’ granularity?",
        "masked_number": 1,
        "masked_elements": [
            "Object-Level Intervention"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.15268v1_figure_1.png",
        "paperid": "2411.15268v1",
        "paper_path": "./papers/2411.15268v1.json",
        "figure_id": "2411.15268v1_figure_1.png",
        "caption": "Figure 1: Comparison between Contrastive Decoding (top) and our proposed ICT (bottom). In the top example, Contrastive Decoding indiscriminately removes both beneficial and detrimental language priors, leading to hallucinations. In contrast, our approach enhances the model’s attention to visual details while preserving useful language priors, allowing it to correctly identify and describe objects in the image.",
        "qtype": "Literature_Background",
        "response": "Prior analyses have shown that different attention heads in the multi-head attention mechanism encode information at varying levels of granularity.\n\nThe **Object-Level Intervention** extends these prior analyses by:\n1.  **Identifying specific heads responsible for fine-grained object details:** Building upon the understanding that different heads have varying granularities, the authors train binary classifiers to explicitly identify heads that effectively distinguish between trusted (original image) and untrusted (image with localized noise on specific object regions) object-focused samples. This pinpoints the heads that capture detailed visual features related to objects.\n2.  **Targeted Intervention"
    },
    {
        "question": "How does cross-modal ranking consistency augment gene-image contrastive loss relative to traditional contrastive learning?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "The InfoNCE loss ensures local alignment between image and gene features from the same tissue spot, but it does not address global alignment, which is essential for achieving more accurate and consistent cross-modal correspondences. Directly aligning distances between features from distant tissue spots is not practical, as long-range feature relationships may not be reliable. (Section 3.2)",
            "Instead, we propose that the relative ranking of distances between features is more robust and can provide a more trustworthy basis for alignment. To leverage this idea, we introduce the Cross-Modal Ranking Consistency Loss. This loss function encourages the model to learn image representations while maintaining the relative similarity ordering of gene features across tissue spots. By focusing on the ranking of distances rather than exact alignments, the ranking loss facilitates a more reliable and robust global alignment. It complements the local alignment achieved by InfoNCE, while also capturing long-range interactions between features from different tissue spots. (Section 3.2)"
        ],
        "final_answer": "While the gene–image contrastive loss (InfoNCE) enforces only local, spot‐wise alignment (pulling matched image–gene pairs together and pushing unmatched pairs apart), the cross‐modal ranking consistency loss adds a global alignment constraint.  Instead of matching exact similarity values across distant spots—which can be noisy—it enforces that the relative order of similarities between any given spot and all others is consistent in both the gene and image feature spaces.  This ranking‐based constraint complements the local pull‐and‐push of contrastive learning by capturing robust, long‐range relationships and ensuring that the similarity rankings in one modality are faithfully reflected in the other.",
        "relevant_elements": [
            "cross-modal ranking consistency",
            "gene-image contrastive loss"
        ],
        "id": 1783,
        "masked_question": "How does [mask1] augment gene-image contrastive loss relative to traditional contrastive learning?",
        "masked_number": 1,
        "masked_elements": [
            "cross-modal ranking consistency"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.15076v1_figure_2.png",
        "paperid": "2411.15076v1",
        "paper_path": "./papers/2411.15076v1.json",
        "figure_id": "2411.15076v1_figure_2.png",
        "caption": "Figure 2: Overview of our RankbyGene framework. The framework begins with WSI Tiling, where WSIs are divided into tiles, each paired with a gene profile. In the feature extraction part, weak and strong augmentations of the image tiles are processed through a teacher encoder and student encoder, while a gene encoder extracts features from the gene profile. The feature alignment stage ensures that weakly and strongly augmented image features are aligned through intra-modal distillation loss and the image and gene features are aligned using gene-image contrastive loss. Meanwhile, our proposed cross-modal ranking consistency loss maintains consistent similarity ranking orders across two modalities.",
        "qtype": "Literature_Background",
        "response": "The [mask1] refers to the **Cross-Model Ranking Consistency Loss**.\n\nHere's how it augments the gene-image contrastive loss:\n\n1.  **Gene-Image Contrastive Loss (InfoNCE)** primarily ensures **local alignment**. It pulls image and gene features from the same spot closer together and pushes features from different spots apart. This addresses the similarity of *individual* matched pairs.\n\n2.  **Cross-Modal Ranking Consistency Loss** addresses the limitation of InfoNCE by providing **global alignment** and robustness. While InfoNCE ensures that positive pairs are close and negative pairs are far, it doesn't explicitly regulate the *relative ordering* of similarities among different spots. The ranking consistency loss:\n    *   Ensures that the **relative ranking of distances (or similarities)** between features is consistent across both the image and gene modalities. For example, if a specific gene profile is more similar to gene profile A than to gene profile B, its corresponding image patch should also be more similar to image patch A than to image patch B.\n    *   **Complements the local alignment** of InfoNCE by capturing **long-range interactions** between features from different tissue spots.\n    *   Promotes a **more comprehensive and stable cross-modal alignment**, improving both local and global correspondences by focusing on the *order* of similarities rather than just the absolute distances when dealing with distant spots."
    },
    {
        "question": "How does intra-modal distillation between teacher encoder and student encoder extend conventional self-supervised distillation?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "In our framework, we employ a teacher–student network architecture to achieve robust feature representations across differently augmented instances of the same pathology image, drawing on recent advances in self-supervised knowledge distillation for single-modality representation learning [11, 52].",
            "In this setup, the weakly augmented image is processed through the teacher encoder, while the strongly augmented version passes through the student encoder. The weights of the teacher encoder are incrementally updated using an Exponential Moving Average (EMA) of the student encoder’s weights, which helps stabilize the training. This strategy ensures that the student gradually learns stable features over time.",
            "To enforce the consistency between the representations of the two augmented versions, we introduce the Image Consistency Loss: L_distil = 1/N ∑ₙ ‖iₙʷ - iₙˢ‖². Minimizing this loss encourages the image encoder to learn representations resilient to such variations and potential disruptions from gene expression data characteristics, such as high dimensionality, sparsity, noise, and missing values."
        ],
        "final_answer": "Instead of distilling knowledge between different modalities or tasks, our intra-modal distillation applies a classic teacher–student setup purely within the image modality to stabilize the gene-guided alignment. We feed a weakly augmented patch into the teacher encoder and a strongly augmented patch into the student encoder, update the teacher by EMA of the student weights, and then use an image-consistency (distillation) loss to pull the two outputs together. This extends conventional self-supervised distillation by enforcing cross-augmentation consistency in the context of multi-modal alignment, making the learned image features more invariant to augmentation and robust to noise in the gene data.",
        "relevant_elements": [
            "intra-modal distillation",
            "teacher encoder",
            "student encoder"
        ],
        "id": 1784,
        "masked_question": "How does [mask1] between teacher encoder and student encoder extend conventional self-supervised distillation?",
        "masked_number": 1,
        "masked_elements": [
            "intra-modal distillation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.15076v1_figure_2.png",
        "paperid": "2411.15076v1",
        "paper_path": "./papers/2411.15076v1.json",
        "figure_id": "2411.15076v1_figure_2.png",
        "caption": "Figure 2: Overview of our RankbyGene framework. The framework begins with WSI Tiling, where WSIs are divided into tiles, each paired with a gene profile. In the feature extraction part, weak and strong augmentations of the image tiles are processed through a teacher encoder and student encoder, while a gene encoder extracts features from the gene profile. The feature alignment stage ensures that weakly and strongly augmented image features are aligned through intra-modal distillation loss and the image and gene features are aligned using gene-image contrastive loss. Meanwhile, our proposed cross-modal ranking consistency loss maintains consistent similarity ranking orders across two modalities.",
        "qtype": "Literature_Background",
        "response": "The Intra-model Distillation, specifically the Image Consistency Loss (`L_distil`), extends conventional self-supervised distillation by not only encouraging the image encoder to learn robust representations across different augmentations of the same pathology image but also by doing so with a specific goal related to the multi-modal context.\n\nHere's the breakdown:\n1.  **Conventional Self-Supervised Distillation:** The method employs a standard teacher-student network architecture where the weakly augmented image is processed by the teacher encoder and the strongly augmented version by the student encoder. The teacher's weights are updated using an Exponential Moving Average (EMA) of the student's weights. The distillation loss (Image Consistency Loss `L_distil`) enforces consistency between the features extracted by the teacher and student from their respective augmented inputs. This is a common practice to learn stable and invariant features.\n\n2.  **The Extension:** The key extension lies in the explicit purpose and context of this distillation within the broader framework. As stated in the text, \"Minimizing this loss encourages the image encoder to learn representations resilient to such variations and potential disruptions from gene expression data characteristics, such as high dimensionality, sparsity, noise, and missing values.\"\n    Therefore, while the mechanism itself is conventional self-supervised distillation, its application and objective are tailored to ensure that the learned image features are not only robust to image-specific augmentations but also stable and resilient to the potential challenges (e.g., noise, sparsity, high dimensionality) posed by their subsequent alignment with gene expression data in the shared latent space."
    },
    {
        "question": "How does intra-modal distillation complement gene-image contrastive loss in aligning multimodal features?",
        "relevant_section_ids": [
            "3.1",
            "3.3"
        ],
        "relevant_context": [
            "Section 3.1: InfoNCE encourages the model to pull positive pairs (image and gene features from the same spot) closer in the shared latent space while pushing apart negative pairs (image and gene features from different spots). This loss penalizes unmatched pairs by reducing their similarity while increasing the similarity between matched gene-image pairs.",
            "Section 3.3: To enhance stability and invariance in feature embeddings produced by the patch encoder, we apply both weak and strong augmentations to simulate the typical variability found in pathology images. To enforce the consistency between the representations of the two augmented versions, we introduce the Image Consistency Loss: … Minimizing this loss encourages the image encoder to learn representations resilient to such variations and potential disruptions from gene expression data characteristics, such as high dimensionality, sparsity, noise, and missing values."
        ],
        "final_answer": "The gene-image contrastive loss aligns image and gene representations by pulling true pairs together and pushing mismatched pairs apart in a shared space. Intra-modal distillation complements this by enforcing consistency within the image modality itself: a teacher-student setup with weak and strong augmentations and an image consistency loss makes image features stable and invariant to perturbations. This robustness in the image encoder’s embeddings strengthens and stabilizes the cross-modal alignment achieved by the contrastive loss.",
        "relevant_elements": [
            "Intra-Modal Distillation",
            "Gene-Image Contrastive"
        ],
        "id": 1785,
        "masked_question": "How does [mask1] complement gene-image contrastive loss in aligning multimodal features?",
        "masked_number": 1,
        "masked_elements": [
            "Intra-Modal Distillation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.15076v1_figure_2.png",
        "paperid": "2411.15076v1",
        "paper_path": "./papers/2411.15076v1.json",
        "figure_id": "2411.15076v1_figure_2.png",
        "caption": "Figure 2: Overview of our RankbyGene framework. The framework begins with WSI Tiling, where WSIs are divided into tiles, each paired with a gene profile. In the feature extraction part, weak and strong augmentations of the image tiles are processed through a teacher encoder and student encoder, while a gene encoder extracts features from the gene profile. The feature alignment stage ensures that weakly and strongly augmented image features are aligned through intra-modal distillation loss and the image and gene features are aligned using gene-image contrastive loss. Meanwhile, our proposed cross-modal ranking consistency loss maintains consistent similarity ranking orders across two modalities.",
        "qtype": "Experimental_Results",
        "response": "The [mask1], labeled as \"Cross-Modal Ranking Consistency Loss\", complements the gene-image contrastive loss by addressing global alignment and long-range interactions between multimodal features.\n\nHere's a step-by-step breakdown:\n\n1.  **Gene-Image Contrastive Loss (InfoNCE):** As the text explains, this loss primarily ensures **local alignment**. It works by pulling positive pairs (image and gene features from the *same* tissue spot) closer in the shared latent space while pushing apart negative pairs (image and gene features from *different* spots). This means it focuses on direct, spot-wise correspondences.\n\n2.  **Cross-Modal Ranking Consistency Loss ([mask1]):** The text explicitly states that while InfoNCE handles local alignment, \"it does not address global alignment\". [mask1] fills this gap. It complements the gene-image contrastive loss by:\n    *   **Ensuring Global Alignment:** It encourages the model to maintain the *relative ranking of similarity* across different tissue spots in both the image and gene feature spaces. This means if spot A is more similar to spot B than to spot C in the gene feature space, the image feature space should reflect a similar relative ordering.\n    *   **Capturing Long-Range Interactions:** Instead of focusing on exact distances, it leverages the robustness of relative rankings, which is more effective for aligning relationships between features from distant tissue spots.\n\nIn essence, the gene-image contrastive loss ensures individual image and gene features for the same spot are close (local alignment), while the cross-modal ranking consistency loss ensures that the *relationships* between these features are consistently ranked across modalities (global alignment). Together, they provide"
    },
    {
        "question": "How does WSI tiling affect the reliability of cross-modal ranking consistency?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "WSI Tiling",
            "Cross-Modal Ranking Consistency"
        ],
        "id": 1786,
        "masked_question": "How does [mask1] affect the reliability of cross-modal ranking consistency?",
        "masked_number": 1,
        "masked_elements": [
            "WSI Tiling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.15076v1_figure_2.png",
        "paperid": "2411.15076v1",
        "paper_path": "./papers/2411.15076v1.json",
        "figure_id": "2411.15076v1_figure_2.png",
        "caption": "Figure 2: Overview of our RankbyGene framework. The framework begins with WSI Tiling, where WSIs are divided into tiles, each paired with a gene profile. In the feature extraction part, weak and strong augmentations of the image tiles are processed through a teacher encoder and student encoder, while a gene encoder extracts features from the gene profile. The feature alignment stage ensures that weakly and strongly augmented image features are aligned through intra-modal distillation loss and the image and gene features are aligned using gene-image contrastive loss. Meanwhile, our proposed cross-modal ranking consistency loss maintains consistent similarity ranking orders across two modalities.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does integrating the ODE solver in temporal operation mitigate error accumulation across extrapolation steps?",
        "relevant_section_ids": [
            "4.2"
        ],
        "relevant_context": [
            "Temporal Operation. After obtaining the dynamic state derivative, \\(\\dot U\\), the subsequent state \\(U\\) can be computed through numerical integration over different time spans. Due to the numerical instability associated with first-order explicit methods like the Euler method (Gottlieb et al., 2001; Fatunla, 2014), we adopt the neural ordinary differential equation approach (Neural ODE (Chen et al., 2018)), which employs the Runge–Kutta time-stepping strategy to enhance stability.",
            "The computed state \\(U\\) is then recursively fed back into the network as the input for the subsequent time step, continuing this process until the final time step is reached."
        ],
        "final_answer": "By replacing a simple first-order integrator with a Neural ODE that uses higher-order Runge–Kutta time stepping, PAPM achieves much more stable step-to-step integration. This higher-order, more accurate ODE solver keeps per-step errors small and prevents them from compounding rapidly over many extrapolation steps.",
        "relevant_elements": [
            "ODE solver",
            "Temporal operation"
        ],
        "id": 1787,
        "masked_question": "How does integrating the [mask1] in [mask2] mitigate error accumulation across extrapolation steps?",
        "masked_number": 2,
        "masked_elements": [
            "ODE solver",
            "Temporal operation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2407.05232v1_figure_1.png",
        "paperid": "2407.05232v1",
        "paper_path": "./papers/2407.05232v1.json",
        "figure_id": "2407.05232v1_figure_1.png",
        "caption": "Figure 1: Overview of the PAPM s pipeline. The model takes the multiple conditions of process systems for time extrapolation and outputs solutions at an arbitrary time point. The core is the temporal-spatial stepping module (TSSM) (𝑼t=i→𝑼t=i+1)→superscript𝑼𝑡𝑖superscript𝑼𝑡𝑖1(\\bm{U}^{t=i}\\rightarrow\\bm{U}^{t=i+1})( bold_italic_U start_POSTSUPERSCRIPT italic_t = italic_i end_POSTSUPERSCRIPT → bold_italic_U start_POSTSUPERSCRIPT italic_t = italic_i + 1 end_POSTSUPERSCRIPT ). Spatially, a structure-preserved operation aligns with the specific equation characteristics of different process systems. Temporally, it utilizes a continuous-time modeling framework through an ODE solver.",
        "qtype": "Experimental_Results",
        "response": "Integrating the **ODE solver** (mask1) within the **Temporal-spatial stepping module** (mask2) mitigates error accumulation across extrapolation steps by enhancing numerical stability.\n\nSpecifically, the \"Temporal Operation\" section explains that:\n1.  After deriving the dynamic state derivative, the subsequent state is computed through numerical integration over different time spans.\n2.  To address \"numerical instability associated with first-order explicit methods like the Euler method,\" the model adopts a **neural ordinary differential equation (Neural ODE) approach**.\n3.  This Neural ODE approach employs the **Runge–Kutta time-stepping strategy to enhance stability**.\n\nBy using a more stable integration strategy like Runge-Kutta (via Neural ODE), the errors introduced at each temporal step are minimized and prevented from compounding significantly, thus mitigating the accumulation of errors over long periods of time extrapolation. The computed state is then recursively fed back for the subsequent time step, and the stability of the ODE solver ensures robust long-term predictions."
    },
    {
        "question": "How does structure-preserved spatial operation enforce conservation and constitutive relations under varying boundary and source inputs?",
        "relevant_section_ids": [
            "4.1"
        ],
        "relevant_context": [
            "Aligning with the general form of Eq. 1 and Eq. 2, there are four elements corresponding to Diffusive Flows (DF), Convective Flows (CF), Internal Source Term (IST), and External Source Term (EST) in PAPM’s structure diagram, as illustrated in Fig. 2.",
            "1) Embedding BCs. Using the given boundary conditions, the physical quantity \\(U\\) is updated, yielding \\(\\tilde U\\). A padding strategy is employed to integrate four different boundary conditions in four different directions into PAPM.",
            "2) Diffusive Flows (DF). Using \\(\\tilde U\\) and coefficients \\(c\\), we represent the directionless diffusive flow. The diffusion flow and its gradient are obtained as \\(J_D\\) and \\(\\nabla\\cdot J_D\\) via a symmetric gradient operator, respectively.",
            "3) Convective Flows (CF). The pattern \\(\\mathrm{sign}(\\tilde U)\\) is derived from \\(\\tilde U\\). Once the sign is determined, its direction indicates the flow direction, enabling computation of \\(J_C^+\\) and \\(J_C^-\\) through a directional gradient operator.",
            "4) Internal Source Term (IST) & External Source Term (EST). Generally, IST and EST present a complex interplay between physical quantities \\(\\tilde U\\) and external inputs \\(F\\). Often, this part in real systems doesn’t have a clear physics-based relation, prompting the use of NNs to capture this intricate relationship.",
            "5) ODE solver. From DF, CF, IST, and EST, the dynamic \\(\\partial U/\\partial t\\) are derived. By doing so, Eq. 1 can be reduced to an ODE, and the ODE solver is used to approximate the evolving state as \\(U^{t+1}\\)."
        ],
        "final_answer": "The spatial operator in PAPM explicitly preserves the conservation law and constitutive relations by decomposing the PDE into four physics-informed modules. First, boundary conditions are embedded via a padding scheme that updates the field \\(U\\) to \\(\\tilde U\\) under arbitrary boundary inputs. Next, diffusive fluxes \\(J_D\\) and their divergence \\(\\nabla\\cdot J_D\\) are computed from \\(\\tilde U\\) and known coefficients using a symmetric gradient operator, enforcing constitutive diffusion. Convection is handled by extracting the sign of \\(\\tilde U\\) and applying a directional gradient to form convective fluxes \\(J_C^+\\) and \\(J_C^-\\), ensuring mass-flux conservation. Internal and external source effects are then learned via neural networks to capture complex source–state interactions. Finally, these four terms are combined as \\(\\partial U/\\partial t = -\\nabla\\cdot(J_C + J_D) + IST + EST\\), and an ODE solver integrates this in time. This structured decomposition guarantees that, regardless of varying boundary or source inputs, the model always respects the underlying conservation and constitutive relations.",
        "relevant_elements": [
            "Structure-preserved spatial operation",
            "Boundary conditions",
            "External sources"
        ],
        "id": 1788,
        "masked_question": "How does [mask1] enforce conservation and constitutive relations under varying boundary and source inputs?",
        "masked_number": 1,
        "masked_elements": [
            "Structure-preserved spatial operation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2407.05232v1_figure_1.png",
        "paperid": "2407.05232v1",
        "paper_path": "./papers/2407.05232v1.json",
        "figure_id": "2407.05232v1_figure_1.png",
        "caption": "Figure 1: Overview of the PAPM s pipeline. The model takes the multiple conditions of process systems for time extrapolation and outputs solutions at an arbitrary time point. The core is the temporal-spatial stepping module (TSSM) (𝑼t=i→𝑼t=i+1)→superscript𝑼𝑡𝑖superscript𝑼𝑡𝑖1(\\bm{U}^{t=i}\\rightarrow\\bm{U}^{t=i+1})( bold_italic_U start_POSTSUPERSCRIPT italic_t = italic_i end_POSTSUPERSCRIPT → bold_italic_U start_POSTSUPERSCRIPT italic_t = italic_i + 1 end_POSTSUPERSCRIPT ). Spatially, a structure-preserved operation aligns with the specific equation characteristics of different process systems. Temporally, it utilizes a continuous-time modeling framework through an ODE solver.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What are the limitations of the ODE solver during long-range time extrapolation for complex dynamics?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "ODE solver",
            "Time extrapolation"
        ],
        "id": 1789,
        "masked_question": "What are the limitations of the [mask1] during long-range time extrapolation for complex dynamics?",
        "masked_number": 1,
        "masked_elements": [
            "ODE solver"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2407.05232v1_figure_1.png",
        "paperid": "2407.05232v1",
        "paper_path": "./papers/2407.05232v1.json",
        "figure_id": "2407.05232v1_figure_1.png",
        "caption": "Figure 1: Overview of the PAPM s pipeline. The model takes the multiple conditions of process systems for time extrapolation and outputs solutions at an arbitrary time point. The core is the temporal-spatial stepping module (TSSM) (𝑼t=i→𝑼t=i+1)→superscript𝑼𝑡𝑖superscript𝑼𝑡𝑖1(\\bm{U}^{t=i}\\rightarrow\\bm{U}^{t=i+1})( bold_italic_U start_POSTSUPERSCRIPT italic_t = italic_i end_POSTSUPERSCRIPT → bold_italic_U start_POSTSUPERSCRIPT italic_t = italic_i + 1 end_POSTSUPERSCRIPT ). Spatially, a structure-preserved operation aligns with the specific equation characteristics of different process systems. Temporally, it utilizes a continuous-time modeling framework through an ODE solver.",
        "qtype": "Others",
        "response": "unanswerable."
    },
    {
        "question": "Could neural difference schemes augment the temporal-spatial stepping module to reduce reliance on the ODE solver?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "temporal-spatial stepping module",
            "ODE solver"
        ],
        "id": 1790,
        "masked_question": "Could neural difference schemes augment the [mask1] to reduce reliance on the ODE solver?",
        "masked_number": 1,
        "masked_elements": [
            "temporal-spatial stepping module"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2407.05232v1_figure_1.png",
        "paperid": "2407.05232v1",
        "paper_path": "./papers/2407.05232v1.json",
        "figure_id": "2407.05232v1_figure_1.png",
        "caption": "Figure 1: Overview of the PAPM s pipeline. The model takes the multiple conditions of process systems for time extrapolation and outputs solutions at an arbitrary time point. The core is the temporal-spatial stepping module (TSSM) (𝑼t=i→𝑼t=i+1)→superscript𝑼𝑡𝑖superscript𝑼𝑡𝑖1(\\bm{U}^{t=i}\\rightarrow\\bm{U}^{t=i+1})( bold_italic_U start_POSTSUPERSCRIPT italic_t = italic_i end_POSTSUPERSCRIPT → bold_italic_U start_POSTSUPERSCRIPT italic_t = italic_i + 1 end_POSTSUPERSCRIPT ). Spatially, a structure-preserved operation aligns with the specific equation characteristics of different process systems. Temporally, it utilizes a continuous-time modeling framework through an ODE solver.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What ethical risks occur when integrating Unknown Concept Adapters through Concept Complement Strategy without clinical annotations?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Concept Complement Strategy",
            "Unknown Concept Adapters"
        ],
        "id": 1792,
        "masked_question": "What ethical risks occur when integrating [mask1] through Concept Complement Strategy without clinical annotations?",
        "masked_number": 1,
        "masked_elements": [
            "Unknown Concept Adapters"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.15446v1_figure_1.png",
        "paperid": "2410.15446v1",
        "paper_path": "./papers/2410.15446v1.json",
        "figure_id": "2410.15446v1_figure_1.png",
        "caption": "Figure 1: The Framework of Concept Complement Bottleneck Model. The input images are delivered to the image encoder to obtain the fundamental features, then different concept adapters extract specific concept features. Next, CCBM calculates the visual-text cross-attention score between textual known concepts/unknown concept embeddings and concept visual features. Finally, these concepts attention scores are aggregated to be passed through the decision layer for final disease diagnosis.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "Why adopt Multi-Head Cross-Attention for visual-text concept scoring instead of direct feature aggregation?",
        "relevant_section_ids": [
            "1",
            "3.2"
        ],
        "relevant_context": [
            "most of existing concept-based methods use the same image features for concepts without considering the differences among concepts. On the visual level, simpler concepts are easier to capture, but in general, simple concepts contribute less to model decisions, especially for samples that are difficult to diagnose. Therefore, it is unfair to directly use the same feature encoded by an image encoder to calculate concept scores.",
            "we configure a concept adapter for each concept to encode the most relevant part of the corresponding concept from the basic image feature. We also leverage Multi-Head Cross-Attention (MHCA) to calculate concept scores in their own channels to support fair concept learning and provide a flexible structure to help concept discovery.",
            "According to the setting of the concept adapters, we can not average these attention as final features to calculate concept scores by a FCL but need to aggregate them in another way to get concept scores independently. Specifically, we can get the attention A^i for the i-th concept. Furthermore, we need to calculate the concept scores based on these attention weights. Different from the previous bottleneck models who directly use a FCL to project the common feature to get the concept scores, we could calculate these concept scores independently by any score calculation module based on their specific concept features."
        ],
        "final_answer": "The model uses Multi-Head Cross-Attention so that each concept is scored independently in its own channel, leveraging concept-specific visual features and textual embeddings. This avoids the unfairness of applying a single shared feature to all concepts and enables ‘fair concept learning’ by focusing attention on the most relevant image regions per concept, rather than direct aggregation through one global feature.",
        "relevant_elements": [
            "Multi-Head Cross-Attention",
            "Aggregation"
        ],
        "id": 1794,
        "masked_question": "Why adopt [mask1] for visual-text concept scoring instead of direct feature [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Multi-Head Cross-Attention",
            "Aggregation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.15446v1_figure_1.png",
        "paperid": "2410.15446v1",
        "paper_path": "./papers/2410.15446v1.json",
        "figure_id": "2410.15446v1_figure_1.png",
        "caption": "Figure 1: The Framework of Concept Complement Bottleneck Model. The input images are delivered to the image encoder to obtain the fundamental features, then different concept adapters extract specific concept features. Next, CCBM calculates the visual-text cross-attention score between textual known concepts/unknown concept embeddings and concept visual features. Finally, these concepts attention scores are aggregated to be passed through the decision layer for final disease diagnosis.",
        "qtype": "Design_Rationale",
        "response": null
    },
    {
        "question": "What rationale underlies using Coordinate Transform to convert trajectory planning information into a trajectory image?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "In our proposed pipeline, it is transformed from Cartesian coordinates to image space coordinates by using perspective projection transformation after translation and rotation operations.",
            "In addition, the points on the image space coordinate system are connected and lines are drawn as a trajectory image, which has a same angle of view as a front camera image."
        ],
        "final_answer": "The Coordinate Transform projects the planned future trajectory (given in real‐world Cartesian coordinates) into the same image plane and viewpoint as the front camera. By applying translation, rotation, and perspective‐projection to the trajectory, then drawing it as colored lines in image space, the system produces a trajectory image whose spatial layout aligns directly with the camera view. This alignment makes it easy for the visual encoder to fuse the camera image and trajectory information.",
        "relevant_elements": [
            "Coordinate Transform",
            "trajectory planning information",
            "trajectory image"
        ],
        "id": 1795,
        "masked_question": "What rationale underlies using [mask1] to convert [mask2] into a trajectory image?",
        "masked_number": 2,
        "masked_elements": [
            "Coordinate Transform",
            "trajectory planning information"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.09971v1_figure_1.png",
        "paperid": "2411.09971v1",
        "paper_path": "./papers/2411.09971v1.json",
        "figure_id": "2411.09971v1_figure_1.png",
        "caption": "Figure 1: Pipeline of our proposed method. In order to improve accountability of an ego-vehicle action, trajectory planning information is embedded as a trajectory image and combined to a camera image in a Image-Trajectory Encoder.",
        "qtype": "Design_Rationale",
        "response": "The **Coordinate Transform** ([mask1]) is used to convert the **Trajectory Planning Information** ([mask2]) into a trajectory image because the original trajectory planning information consists of spatial coordinates in a Cartesian coordinate system. By applying perspective projection transformation (after translation and rotation operations), these Cartesian coordinates are converted into image space coordinates. This process allows for the creation of a trajectory image that has the *same angle of view as the front camera image*.\n\nThe underlying rationale is to:\n1.  **Transform abstract spatial coordinates into a visual format:** This makes the trajectory information visually interpretable and compatible with image processing"
    },
    {
        "question": "What advantage arises from fusing camera image and trajectory image in the Image-Trajectory Encoder?",
        "relevant_section_ids": [
            "3.3.2",
            "3.3.3"
        ],
        "relevant_context": [
            "In the overlaid method, a trajectory image is overlaid on a front camera image. The overlaid image is input to an image encoder and combined features of the visual information and the trajectory planning information are extracted. This method intends to clarify the spatial relations between the camera image and the trajectory.",
            "In the cross-attention method, the features of the visual information are input to the layers as queries, whereas the features of the trajectory planning information are as keys and values. As a result, both features interact with one another and the fused features are acquired."
        ],
        "final_answer": "Fusing the camera image and the trajectory image clarifies the spatial relationship between the vehicle’s planned path and its visual surroundings, and enables the two feature streams to interact so that a joint, fused representation of both visual context and trajectory planning is obtained.",
        "relevant_elements": [
            "camera image",
            "trajectory image",
            "Image-Trajectory Encoder"
        ],
        "id": 1796,
        "masked_question": "What advantage arises from fusing [mask1] and trajectory image in the Image-Trajectory Encoder?",
        "masked_number": 1,
        "masked_elements": [
            "camera image"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.09971v1_figure_1.png",
        "paperid": "2411.09971v1",
        "paper_path": "./papers/2411.09971v1.json",
        "figure_id": "2411.09971v1_figure_1.png",
        "caption": "Figure 1: Pipeline of our proposed method. In order to improve accountability of an ego-vehicle action, trajectory planning information is embedded as a trajectory image and combined to a camera image in a Image-Trajectory Encoder.",
        "qtype": "Design_Rationale",
        "response": "The original image indicates that [mask1] refers to the Camera Image.\n\nThe relevant section in the text is \"Image-Trajectory Encoder\" (3.3):\n*   \"It is important how to connect trajectory planning information with visual information of a front camera image.\" This states the general purpose of the encoder.\n*   The \"Overlaid\" method (3.3.2) explicitly addresses the fusion: \"In the overlaid method, a trajectory image is overlaid on a front camera image."
    },
    {
        "question": "What operations does Coordinate Transform perform on trajectory planning information to generate the trajectory image?",
        "relevant_section_ids": [
            "3.2"
        ],
        "relevant_context": [
            "However, in our proposed pipeline, it is transformed from Cartesian coordinates to image space coordinates by using perspective projection transformation after translation and rotation operations.",
            "In addition, the points on the image space coordinate system are connected and lines are drawn as a trajectory image, which has a same angle of view as a front camera image."
        ],
        "final_answer": "Coordinate Transform first applies translation and rotation to the planned trajectory coordinates, then performs a perspective projection to map them into image‐space coordinates. Finally, it connects the projected points and draws colored lines (matching the camera’s view) to form the trajectory image.",
        "relevant_elements": [
            "Coordinate Transform",
            "Trajectory Planning Information",
            "Trajectory Image"
        ],
        "id": 1797,
        "masked_question": "What operations does [mask1] perform on trajectory planning information to generate the trajectory image?",
        "masked_number": 1,
        "masked_elements": [
            "Coordinate Transform"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.09971v1_figure_1.png",
        "paperid": "2411.09971v1",
        "paper_path": "./papers/2411.09971v1.json",
        "figure_id": "2411.09971v1_figure_1.png",
        "caption": "Figure 1: Pipeline of our proposed method. In order to improve accountability of an ego-vehicle action, trajectory planning information is embedded as a trajectory image and combined to a camera image in a Image-Trajectory Encoder.",
        "qtype": "Implementation_Details",
        "response": "The module highlighted by [mask1], labeled \"Coordinate Transform\", performs the following operations on the trajectory planning information to generate the trajectory image:\n\n1.  **Translation and Rotation Operations:** It first applies translation and rotation to the Cartesian coordinates of the trajectory planning information (future trajectory, road boundaries, and lane lines).\n2.  **Perspective Projection Transformation:** After translation and rotation, it transforms these coordinates from Cartesian space to image space using perspective projection transformation.\n3.  **Connecting Points and Drawing Lines:** The transformed points in the image space are then connected, and lines are drawn to form the trajectory image.\n4.  **Color Coding:** These lines are drawn with specific colors: yellow for road boundaries, blue for lane lines, and the trajectory line's color changes based on velocity (red for fast, green for slow) to retain velocity information."
    },
    {
        "question": "How does the Image-Trajectory Encoder fuse features from the Camera Image and Trajectory Image?",
        "relevant_section_ids": [
            "3.3",
            "3.3.1",
            "3.3.2",
            "3.3.3"
        ],
        "relevant_context": [
            "It is important how to connect trajectory planning information with visual information of a front camera image. Here we consider three types of architecture for Image-Trajectory Encoders as shown in Fig. 2.",
            "This architecture has two image encoders, which are based on BLIP-2. One extracts features from an front camera image, and the other does from an trajectory image. The two pairs of the features are concatenated and output.",
            "In the overlaid method, a trajectory image is overlaid on a front camera image. The overlaid image is input to a image encoder and combined features of the visual information and the trajectory planning information are extracted.",
            "This method extracts features from two image encoders as well as the concatenated, but the way to fuse features of a front camera image and a trajectory image is different. There are cross-attention layers in this architecture. The features of the visual information are input to the layers as queries, whereas the features of the trajectory planning information are as keys and values. As a result, the both features interact with one another and the fused features are acquired."
        ],
        "final_answer": "The Image-Trajectory Encoder fuses camera and trajectory information in one of three ways: (1) Concatenated – two separate BLIP-2 encoders extract features from the camera image and trajectory image, then their feature queries are concatenated. (2) Overlaid – the trajectory image is overlaid on the camera image and a single encoder extracts combined features. (3) Cross-attention – two encoders extract features separately, then cross-attention layers fuse them by using camera features as queries and trajectory features as keys and values.",
        "relevant_elements": [
            "Image-Trajectory Encoder",
            "Camera Image",
            "Trajectory Image"
        ],
        "id": 1798,
        "masked_question": "How does the [mask1] fuse features from the Camera Image and Trajectory Image?",
        "masked_number": 1,
        "masked_elements": [
            "Image-Trajectory Encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.09971v1_figure_1.png",
        "paperid": "2411.09971v1",
        "paper_path": "./papers/2411.09971v1.json",
        "figure_id": "2411.09971v1_figure_1.png",
        "caption": "Figure 1: Pipeline of our proposed method. In order to improve accountability of an ego-vehicle action, trajectory planning information is embedded as a trajectory image and combined to a camera image in a Image-Trajectory Encoder.",
        "qtype": "Implementation_Details",
        "response": "The Image-Trajectory Encoder, as described in the context, can fuse features from the Camera Image and Trajectory Image using three different architectures:\n\n1.  **Concatenated:** Features are extracted independently from the front camera image and the trajectory image using two separate image encoders. These extracted features are then concatenated to form the fused output.\n2.  **Overlaid:** The trajectory image is directly overlaid onto the front camera image, creating a single combined image. This overlaid image is then input to a single image encoder, which extracts combined features.\n3.  **Cross-attention:** Features are extracted from both the camera image and the trajectory image using two separate image encoders."
    },
    {
        "question": "How does the planner agent utilize memory and external guidance during observation to inform subtask decomposition?",
        "relevant_section_ids": [
            "3.1",
            "3.3"
        ],
        "relevant_context": [
            "The planner agent is equipped with advanced observation, reasoning, and memory capabilities, allowing it to accurately interpret user requirements and intelligently decompose them into detailed subtasks. (Section 3.1)",
            "During task execution, the planner agent continuously monitors progress, formulates and adjusts subtasks based on real‐time conditions, and guides the worker agent in its execution. As the worker agent completes tasks and reports the results, the planner agent updates its memory to optimize future task management, iterating until the entire task is completed and the final result is returned to the user. (Section 3.1)",
            "After the user uploads the Shapefile and task instructions, the system initializes the planner’s work environment, which records task progress, current task status, and the planner’s memory state, including information about previously executed tasks. (Section 3.3)",
            "In each loop, the planner first observes the current task state and determines whether the task has been completed. If the task is not complete, the planner generates a new sub‐task and assigns it to the worker for execution. (Section 3.3)"
        ],
        "final_answer": "At the start of each planning cycle, the planner “observes” by looking both at its internal memory (which holds past subtasks, progress markers, and results returned by the worker) and at any new external guidance (for example, the original user instructions or real-time feedback from in-flight subtasks).  By combining what it has stored in memory with the latest signals from its environment, the planner decides what still needs to be done and then breaks that remaining work down into the next concrete subtask to send to the worker.",
        "relevant_elements": [
            "planner agent",
            "memory",
            "external guidance"
        ],
        "id": 1799,
        "masked_question": "How does the planner agent utilize [mask1] and external guidance during observation to inform subtask decomposition?",
        "masked_number": 1,
        "masked_elements": [
            "memory"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.12376v2_figure_1.png",
        "paperid": "2410.12376v2",
        "paper_path": "./papers/2410.12376v2.json",
        "figure_id": "2410.12376v2_figure_1.png",
        "caption": "Figure 1: ShapefileGPT consists of a planner agent and a worker agent. The planner agent interprets user queries and decomposes them into subtasks, while the worker agent executes these subtasks by selecting appropriate functions from a predefined function library to perform Shapefile-related operations.",
        "qtype": "Implementation_Details",
        "response": null
    },
    {
        "question": "How does the worker agent’s subtask working loop leverage API documentation to generate accurate function parameters?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "This environment consists of the function library and the provided API documentation. The function library provides the names and functional descriptions of each API, guiding the worker in selecting the most suitable one. The API documentation details the parameter rules for each API, ensuring the worker correctly configures the necessary parameters for API calls.",
            "Each cycle of the working loop encompasses the entire process, from selecting an API to executing it. After receiving a task, the worker selects the appropriate API based on the documentation and generates a function call with the correct parameters."
        ],
        "final_answer": "In each iteration of its working loop, the worker agent first chooses which API to call by consulting the function library and then retrieves the corresponding API documentation to see the exact parameter names, types and rules. Armed with this parameter schema plus information about the current Shapefile (e.g. field names, geometry type), it constructs and populates the function call with correctly formatted arguments, ensuring accurate execution.",
        "relevant_elements": [
            "worker agent",
            "subtask working loop",
            "API documentation"
        ],
        "id": 1800,
        "masked_question": "How does the [mask1]’s [mask2] leverage API documentation to generate accurate function parameters?",
        "masked_number": 2,
        "masked_elements": [
            "worker agent",
            "subtask working loop"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.12376v2_figure_1.png",
        "paperid": "2410.12376v2",
        "paper_path": "./papers/2410.12376v2.json",
        "figure_id": "2410.12376v2_figure_1.png",
        "caption": "Figure 1: ShapefileGPT consists of a planner agent and a worker agent. The planner agent interprets user queries and decomposes them into subtasks, while the worker agent executes these subtasks by selecting appropriate functions from a predefined function library to perform Shapefile-related operations.",
        "qtype": "Implementation_Details",
        "response": "The Worker's SubTask Working Loop leverages API documentation to generate accurate function parameters as follows:\n\n1.  **Access to Documentation:** The Worker Agent's environment includes the API documentation, which details the parameter rules for each available API function.\n2.  **Parameter Rule Guidance:** Specifically, the API documentation outlines the necessary parameter definitions, types, usage, and examples for each function.\n3.  **Correct Configuration:** Upon receiving a subtask, the worker agent uses these detailed parameter rules from the documentation to correctly configure and generate the necessary parameters for the chosen API function.\n4.  **Data Understanding for Accuracy:** Additionally, the worker's environment provides descriptive information about the Shapefile being processed (e.g., geometry type, field names, attribute table information). The worker utilizes this understanding in conjunction with the API documentation to prevent errors, such as referencing non-existent columns or fields, thereby ensuring both task accuracy and reliability in parameter generation."
    },
    {
        "question": "How does the Worker’s function library integration reflect tool-augmented LLM frameworks?",
        "relevant_section_ids": [
            "2",
            "3.2",
            "3.3"
        ],
        "relevant_context": [
            "Tool-augmented Large Language Models enable LLMs to connect with external tools, effectively overcoming inherent limitations. By integrating resources such as search engines for external knowledge access and calculators to enhance mathematical capabilities, LLMs can also be utilized for repetitive daily tasks [27, 28, 29].",
            "We enable LLMs to execute actual Shapefile tasks through function calling. Function Calling is a mechanism that enhances interaction between LLMs and external programs, enabling the model to invoke predefined functions while generating text. This mechanism enables the execution of complex tasks by allowing LLMs to not only generate natural language but also interact with external programs, databases, and APIs.",
            "Upon receiving a task from the planner, the worker initiates execution within its environment. This environment consists of the function library and the provided API documentation. The function library provides the names and functional descriptions of each API, guiding the worker in selecting the most suitable one."
        ],
        "final_answer": "The Worker’s integration of a dedicated function library and accompanying API documentation mirrors the tool-augmented LLM paradigm by giving the model direct access to a suite of external, specialized procedures. In practice, the Worker consults the library to choose and invoke predefined functions—just as tool-augmented LLMs call calculators or web search APIs—thereby extending the model’s capabilities from pure text generation to precise, real-world Shapefile operations.",
        "relevant_elements": [
            "Worker",
            "Function Library"
        ],
        "id": 1802,
        "masked_question": "How does the [mask1]'s [mask2] integration reflect tool-augmented LLM frameworks?",
        "masked_number": 2,
        "masked_elements": [
            "Worker",
            "Function Library"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.12376v2_figure_1.png",
        "paperid": "2410.12376v2",
        "paper_path": "./papers/2410.12376v2.json",
        "figure_id": "2410.12376v2_figure_1.png",
        "caption": "Figure 1: ShapefileGPT consists of a planner agent and a worker agent. The planner agent interprets user queries and decomposes them into subtasks, while the worker agent executes these subtasks by selecting appropriate functions from a predefined function library to perform Shapefile-related operations.",
        "qtype": "Literature_Background",
        "response": "The **Worker's** **Function Library** integration reflects tool-augmented LLM frameworks by directly embodying the concept of enabling a Large Language Model (LLM) to overcome its inherent limitations and perform specialized tasks by interacting with external tools.\n\nHere's a breakdown:\n\n1.  **Tool-Augmentation Principle:** As stated in the \"Tool-augmented Large Language Models\" section, these frameworks \"enable LLMs to connect with external tools, effectively overcoming"
    },
    {
        "question": "How do Tetris-like Kernels enhance local detail extraction compared to CNN branch receptive fields?",
        "relevant_section_ids": [
            "2.1",
            "3.2"
        ],
        "relevant_context": [
            "Despite these advancements, CNNs’ limited local receptive fields hinder their ability to capture fine-grained structures fully, and increasing network depth often leads to feature loss, compromising detail preservation. Our MAGA framework addresses these limitations by integrating local and global receptive fields: MAGA employs Tetris-inspired convolutional kernels to optimize local pattern alignment, while its global receptive field enables the seamless integration of local features into a unified, coherent structure. (Section 2.1)",
            "Sparse convolutions, which compute only on non-zero locations, allow these branches to form diverse local patterns—similar to Tetris-like kernel shapes. This design enables MAGA to align effectively with different local structures, ensuring optimal correspondence with fine morphological details. The multi-branch setup enables the extraction of a variety of local patterns, which together capture intricate details otherwise missed by global-only representations. (Section 3.2)"
        ],
        "final_answer": "Standard CNN branches rely on fixed local receptive fields that struggle to fully capture intricate structures and often lose detail when the network is deepened. In contrast, MAGA’s Tetris-like kernels use multiple sparse‐convolution branches with varied, shape-adapted kernels to form a diverse collection of local patterns. By aligning these Tetris-shaped kernels with fine morphological structures and then normalizing and reweighting their responses, MAGA more precisely extracts and emphasizes fine details that conventional CNN receptive fields would miss.",
        "relevant_elements": [
            "Tetris-like Kernels",
            "CNN branch"
        ],
        "id": 1803,
        "masked_question": "How do [mask1] enhance local detail extraction compared to CNN branch receptive fields?",
        "masked_number": 1,
        "masked_elements": [
            "Tetris-like Kernels"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2411.10251v1_figure_1.png",
        "paperid": "2411.10251v1",
        "paper_path": "./papers/2411.10251v1.json",
        "figure_id": "2411.10251v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed MAGA-based matting architecture. The framework input consists of the image combined with a grayscale trimap. A vision encoder, based on MAGA, extracts advanced semantics, while a simple CNN branch captures hierarchical low-level features, providing appearance cues. The advanced semantics are then progressively upsampled and fused with hierarchical low-level features through context fusion, ultimately producing a high-quality alpha matte.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does mapping Query (Local) onto Key (Global) adapt standard self-attention for morphological detail preservation?",
        "relevant_section_ids": [
            "3.1",
            "3.2"
        ],
        "relevant_context": [
            "These enriched query embeddings are then projected onto global key embeddings, allowing MAGA to contextualize local details within the broader global framework. (Section 3.1)",
            "Mapping Q′ onto K allows MAGA to situate the enriched local morphology within the global structure, giving each local detail its spatial and contextual significance in relation to the overall image. (Section 3.2)"
        ],
        "final_answer": "By projecting the locally enriched query embeddings onto the original global key embeddings, MAGA replaces the standard query–key interaction with one that explicitly aligns fine morphological structures with their place in the full image context. This ensures each detailed local feature is weighted and positioned correctly within the global representation, preserving delicate shapes and boundaries during attention computation.",
        "relevant_elements": [
            "Query (Local)",
            "Key (Global)"
        ],
        "id": 1804,
        "masked_question": "How does mapping [mask1] onto [mask2] adapt standard self-attention for morphological detail preservation?",
        "masked_number": 2,
        "masked_elements": [
            "Query (Local)",
            "Key (Global)"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2411.10251v1_figure_1.png",
        "paperid": "2411.10251v1",
        "paper_path": "./papers/2411.10251v1.json",
        "figure_id": "2411.10251v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed MAGA-based matting architecture. The framework input consists of the image combined with a grayscale trimap. A vision encoder, based on MAGA, extracts advanced semantics, while a simple CNN branch captures hierarchical low-level features, providing appearance cues. The advanced semantics are then progressively upsampled and fused with hierarchical low-level features through context fusion, ultimately producing a high-quality alpha matte.",
        "qtype": "Literature_Background",
        "response": null
    },
    {
        "question": "How does the CNN branch complement MAGA-based vision encoder during progressive context fusion?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "Simultaneously, a CNN branch captures low-level feature maps at three scales (H/2 × W/2, H/4 × W/4, and H/8 × W/8), providing detailed appearance cues.",
            "The advanced semantics extracted by MAGA (at scale H/16 × W/16) are progressively upsampled and fused with these multi-scale low-level cues, producing a refined alpha matte output with preserved fine details and structural coherence."
        ],
        "final_answer": "The CNN branch extracts multi-scale low-level appearance features (at H/2, H/4, and H/8 resolutions) and these detailed cues are progressively fused with the upsampled high-level semantics from the MAGA encoder, yielding a refined alpha matte that preserves fine structures and overall coherence.",
        "relevant_elements": [
            "CNN branch",
            "MAGA-based vision encoder",
            "context fusion"
        ],
        "id": 1805,
        "masked_question": "How does the [mask1] complement [mask2] during progressive context fusion?",
        "masked_number": 2,
        "masked_elements": [
            "CNN branch",
            "MAGA-based vision encoder"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2411.10251v1_figure_1.png",
        "paperid": "2411.10251v1",
        "paper_path": "./papers/2411.10251v1.json",
        "figure_id": "2411.10251v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed MAGA-based matting architecture. The framework input consists of the image combined with a grayscale trimap. A vision encoder, based on MAGA, extracts advanced semantics, while a simple CNN branch captures hierarchical low-level features, providing appearance cues. The advanced semantics are then progressively upsampled and fused with hierarchical low-level features through context fusion, ultimately producing a high-quality alpha matte.",
        "qtype": "Experimental_Results",
        "response": "During progressive context fusion, the [mask1] (CNN branch) complements the [mask2] (Morpho-Aware Global Attention or MAGA) by providing **hierarchical low-level feature maps at multi-scales (H/2 × W/2, H/4 × W/4, and H/8 × W/8), which capture detailed appearance cues**.\n\nSpecifically:\n1.  **[mask2] (MAGA)** processes the input (Image & Trimap) to extract \"advanced semantics\" and enhances focus on local morphological details while situating them within the global context, producing a feature map at a coarse scale (H/16 × W/16).\n2.  **[mask1] (CNN branch)** simultaneously captures \"low-level feature maps\" at finer scales (H/2 × W/2, H/4 × W/4, and H/8 × W/8), providing crucial \"detailed appearance cues.\"\n3.  During context fusion, the \"advanced semantics extracted by MAGA\" are \"progressively upsampled and fused with these multi-scale low-level cues\" from the CNN branch. This fusion combines MAGA's high-level semantic understanding and morpho-aware global context with the CNN's fine-grained, multi-scale appearance details.\n\nTherefore, the CNN branch ([mask1]) provides the necessary high-resolution spatial details and appearance information to refine the alpha matte, ensuring \"preserved fine details and structural coherence\" that might be lost by MAGA's lower-resolution global semantics, thus complementing MAGA's high-level understanding."
    },
    {
        "question": "How does progressive upsampling facilitate integration of advanced semantics with low-level features?",
        "relevant_section_ids": [
            "3.1"
        ],
        "relevant_context": [
            "Simultaneously, a CNN branch captures low-level feature maps at three scales (H/2 × W/2, H/4 × W/4, and H/8 × W/8), providing detailed appearance cues.",
            "The advanced semantics extracted by MAGA (at scale H/16 × W/16) are progressively upsampled and fused with these multi-scale low-level cues, producing a refined alpha matte output with preserved fine details and structural coherence."
        ],
        "final_answer": "By gradually increasing the resolution of the MAGA‐derived semantic features (from H/16×W/16 up to the scales of the low-level CNN maps), progressive upsampling brings high-level context into correspondence with fine appearance cues. At each stage, the upsampled semantics and the matching low-level features are fused, yielding a coherent representation that preserves both global structure and local detail.",
        "relevant_elements": [
            "progressive upsampling",
            "advanced semantics",
            "low-level features"
        ],
        "id": 1806,
        "masked_question": "How does [mask1] facilitate integration of advanced semantics with low-level features?",
        "masked_number": 1,
        "masked_elements": [
            "progressive upsampling"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2411.10251v1_figure_1.png",
        "paperid": "2411.10251v1",
        "paper_path": "./papers/2411.10251v1.json",
        "figure_id": "2411.10251v1_figure_1.png",
        "caption": "Figure 1: Overview of the proposed MAGA-based matting architecture. The framework input consists of the image combined with a grayscale trimap. A vision encoder, based on MAGA, extracts advanced semantics, while a simple CNN branch captures hierarchical low-level features, providing appearance cues. The advanced semantics are then progressively upsampled and fused with hierarchical low-level features through context fusion, ultimately producing a high-quality alpha matte.",
        "qtype": "Experimental_Results",
        "response": "[mask1] depicts the multi-scale fusion mechanism of the framework. It facilitates the integration of advanced semantics with low-level features through a process of progressive upsampling and context fusion.\n\nHere's a step-by-step explanation:\n1.  **Input of Advanced Semantics:** The advanced semantic features extracted by the Morpho-Aware Global Attention (MAGA) mechanism are fed into the system at the coarsest scale (H/16 × W/16). These features carry global context and fine-grained local structures.\n2.  "
    },
    {
        "question": "How does SpatialSonic leverage spatial-aware control to reduce error accumulation compared to two-stage pipelines?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "SpatialSonic",
            "Spatial-Aware Control"
        ],
        "id": 1807,
        "masked_question": "How does [mask1] leverage spatial-aware control to reduce error accumulation compared to two-stage pipelines?",
        "masked_number": 1,
        "masked_elements": [
            "SpatialSonic"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.10676v1_figure_1.png",
        "paperid": "2410.10676v1",
        "paper_path": "./papers/2410.10676v1.json",
        "figure_id": "2410.10676v1_figure_1.png",
        "caption": "Figure 1: Our SpatialSonic, as a one-stage model, alleviates the problem of error accumulation in a two-stage model and facilitates control with end-to-end finetuning in a one-stage model. Moreover, our spatially enhanced system supports spatial audio generation from text and image, as well as interactive actions.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "How does BEWO-1M dataset integration facilitate unified text and image-driven spatial audio generation in SpatialSonic?",
        "relevant_section_ids": [
            "3",
            "4.4"
        ],
        "relevant_context": [
            "We propose BEWO-1M, a large-scale stereo audio dataset with spatial captions, as the first to the best of our knowledge. BEWO-1M consists of audio-caption pairs and audio-image pairs.",
            "Initially, the T2A model is trained using the BEWO-1M dataset. On top of this T2A model, it is fine-tuned using the spatial-aware image encoder to develop the I2A model."
        ],
        "final_answer": "By providing both audio–text and audio–image supervision, BEWO-1M lets SpatialSonic first train its diffusion backbone on text–audio pairs (T2A) and then fine-tune the same model with spatial-aware visual embeddings on image–audio pairs (I2A). This two-stage use of BEWO-1M unifies text-driven and image-driven spatial audio generation in a single network.",
        "relevant_elements": [
            "BEWO-1M Dataset",
            "SpatialSonic"
        ],
        "id": 1808,
        "masked_question": "How does [mask1] dataset integration facilitate unified text and image-driven spatial audio generation in [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "BEWO-1M Dataset",
            "SpatialSonic"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/1_2410.10676v1_figure_1.png",
        "paperid": "2410.10676v1",
        "paper_path": "./papers/2410.10676v1.json",
        "figure_id": "2410.10676v1_figure_1.png",
        "caption": "Figure 1: Our SpatialSonic, as a one-stage model, alleviates the problem of error accumulation in a two-stage model and facilitates control with end-to-end finetuning in a one-stage model. Moreover, our spatially enhanced system supports spatial audio generation from text and image, as well as interactive actions.",
        "qtype": "Experimental_Results",
        "response": null
    },
    {
        "question": "What are the limitations of the Spatial-Aware Control when integrated with Latent Diffusion Model for stereo audio?",
        "relevant_section_ids": [
            "1",
            "4.2",
            "4.3"
        ],
        "relevant_context": [
            "Then, we identify that due to the lack of explicit spatial guidance, simply finetuning the existing model with BEWO-1M still fails in precise T2A and I2A tasks.",
            "Popular I2A model (Sheffer and Adi, 2023  [74]) using CLIP (Ramesh et al., 2022  [71]) focuses on aligning the global abstract semantics rather than its positional and relational context.",
            "When text and image embedding are used directly as conditions, there is still a large dispersity in Fig. 3 (c). Therefore, it is crucial to design a model that effectively supports precise generation using both text and images."
        ],
        "final_answer": "Integrating naive spatial‐aware control (i.e. concatenating image regions or CLIP embeddings) into a latent diffusion model yields high variability (“large dispersity”) in where sounds are placed and repeatedly fails to generate precise spatialized stereo (T2A and I2A) because these global embeddings lack explicit, continuous positional guidance.",
        "relevant_elements": [
            "Spatial-Aware Control",
            "Latent Diffusion Model"
        ],
        "id": 1809,
        "masked_question": "What are the limitations of the [mask1] when integrated with Latent Diffusion Model for stereo audio?",
        "masked_number": 1,
        "masked_elements": [
            "Spatial-Aware Control"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/2_2410.10676v1_figure_1.png",
        "paperid": "2410.10676v1",
        "paper_path": "./papers/2410.10676v1.json",
        "figure_id": "2410.10676v1_figure_1.png",
        "caption": "Figure 1: Our SpatialSonic, as a one-stage model, alleviates the problem of error accumulation in a two-stage model and facilitates control with end-to-end finetuning in a one-stage model. Moreover, our spatially enhanced system supports spatial audio generation from text and image, as well as interactive actions.",
        "qtype": "Others",
        "response": null
    },
    {
        "question": "What ethical concerns arise from using Conditional Filter or Simulation without real-world audio for spatial guidance?",
        "relevant_section_ids": [],
        "relevant_context": [],
        "final_answer": "Unanswerable",
        "relevant_elements": [
            "Conditional Filter",
            "Simulation"
        ],
        "id": 1810,
        "masked_question": "What ethical concerns arise from using [mask1] or [mask2] without real-world audio for spatial guidance?",
        "masked_number": 2,
        "masked_elements": [
            "Conditional Filter",
            "Simulation"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/3_2410.10676v1_figure_1.png",
        "paperid": "2410.10676v1",
        "paper_path": "./papers/2410.10676v1.json",
        "figure_id": "2410.10676v1_figure_1.png",
        "caption": "Figure 1: Our SpatialSonic, as a one-stage model, alleviates the problem of error accumulation in a two-stage model and facilitates control with end-to-end finetuning in a one-stage model. Moreover, our spatially enhanced system supports spatial audio generation from text and image, as well as interactive actions.",
        "qtype": "Others",
        "response": "The provided context thoroughly explains the technical aspects, limitations (computational costs, error accumulation, low quality), and solutions related to \"Conditional Filter\" and \"Simulation\" for spatial audio generation, particularly in the \"Previous Two-Stage Generation\" approach. It also details the creation of the BEWO-1M dataset using simulations. However, the text *does not raise any ethical concerns* regarding the use of these methods *without real-world audio for spatial guidance*. The discussion centers on performance, data scale, and model control, not ethical implications.\n\nTherefore, the question is unanswerable based on the provided context."
    },
    {
        "question": "What drawbacks might the Conditional Discriminator introduce when adversarially matching gesture distributions with the Generator?",
        "relevant_section_ids": [
            "3.3"
        ],
        "relevant_context": [
            "Although the conditional GAN based on control signals seems to reasonably address the large stride and small step count of high-speed sampling, the purely implicit adversarial learning for the connected p(z_{t-1},z_t|c) is statistically inefficient, particularly when p is a high-dimensional redundant representation (which is often the case in human body sequences).",
            "Furthermore, we observe that after the adversarial process of the conditional GAN, the generator often produces gestures with artifacts. We speculate that this is because the purely implicit matching constraint on the joint distribution cannot provide geometric constraints for the gestures."
        ],
        "final_answer": "Relying solely on the Conditional Discriminator’s implicit joint-distribution matching can be statistically inefficient for high-dimensional, redundant gesture data and tends to produce artifacts in the generated motions due to the lack of explicit geometric constraints.",
        "relevant_elements": [
            "Conditional Discriminator",
            "Generator"
        ],
        "id": 1811,
        "masked_question": "What drawbacks might the [mask1] introduce when adversarially matching gesture distributions with the [mask2]?",
        "masked_number": 2,
        "masked_elements": [
            "Conditional Discriminator",
            "Generator"
        ],
        "figure_path": "/home/yz979/project/chengye/missqa/final_data/annotated_images/0_2410.20359v2_figure_2.png",
        "paperid": "2410.20359v2",
        "paper_path": "./papers/2410.20359v2.json",
        "figure_id": "2410.20359v2_figure_2.png",
        "caption": "Figure 2: Network architecture. During training, we introduce a GAN structure based on conditional denoising diffusion to capture the complex distribution of gesture sequences in a multi-step process, enabling larger sampling step sizes. During inference, we use large step sizes and fewer steps for sampling, according to the input audio control signal, to achieve fast, high-quality gesture sequences, thus supporting real-time tasks.",
        "qtype": "Others",
        "response": "The Conditional Discriminator (mask1), when adversarially matching gesture distributions with the Generator (mask2), introduces several drawbacks due to its purely implicit adversarial learning approach:\n\n1.  **Statistical Inefficiency:** This approach is statistically inefficient, particularly when dealing with high-dimensional and redundant representations, which is common for human body sequences.\n2.  **Performance Decline:** It can lead to a sharp decline in the performance of the model on complex data distributions.\n3.  **Artifacts in Generated Gestures:** A major issue is that the generator often produces gestures with artifacts even after the adversarial training process. This is because the implicit matching constraint on the joint distribution, facilitated by the discriminator, cannot provide explicit geometric constraints for the gestures."
    }
]